// version: 0.16.0
// date: Thu May 09 2019 16:35:44 GMT+0100 (Western European Summer Time)
// licence: 
/**
* Copyright 2016 PT Inovação e Sistemas SA
* Copyright 2016 INESC-ID
* Copyright 2016 QUOBIS NETWORKS SL
* Copyright 2016 FRAUNHOFER-GESELLSCHAFT ZUR FOERDERUNG DER ANGEWANDTEN FORSCHUNG E.V
* Copyright 2016 ORANGE SA
* Copyright 2016 Deutsche Telekom AG
* Copyright 2016 Apizee
* Copyright 2016 TECHNISCHE UNIVERSITAT BERLIN
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
**/


// version: 0.16.0
// date: Thu May 09 2019 16:35:44 GMT+0100 (Western European Summer Time)
// licence: 
/**
* Copyright 2016 PT Inovação e Sistemas SA
* Copyright 2016 INESC-ID
* Copyright 2016 QUOBIS NETWORKS SL
* Copyright 2016 FRAUNHOFER-GESELLSCHAFT ZUR FOERDERUNG DER ANGEWANDTEN FORSCHUNG E.V
* Copyright 2016 ORANGE SA
* Copyright 2016 Deutsche Telekom AG
* Copyright 2016 Apizee
* Copyright 2016 TECHNISCHE UNIVERSITAT BERLIN
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
**/


!function(e,n){"object"==typeof exports&&"object"==typeof module?module.exports=n():"function"==typeof define&&define.amd?define("Runtime",[],n):"object"==typeof exports?exports.Runtime=n():e.Runtime=n()}(window,function(){return function(e){var n={};function t(c){if(n[c])return n[c].exports;var g=n[c]={i:c,l:!1,exports:{}};return e[c].call(g.exports,g,g.exports,t),g.l=!0,g.exports}return t.m=e,t.c=n,t.d=function(e,n,c){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:c})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var c=Object.create(null);if(t.r(c),Object.defineProperty(c,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var g in e)t.d(c,g,function(n){return e[n]}.bind(null,g));return c},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="",t(t.s=124)}([function(module,exports,__webpack_require__){eval('var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\n* loglevel - https://github.com/pimterry/loglevel\n*\n* Copyright (c) 2013 Tim Perry\n* Licensed under the MIT license.\n*/\n(function (root, definition) {\n    "use strict";\n    if (true) {\n        !(__WEBPACK_AMD_DEFINE_FACTORY__ = (definition),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === \'function\' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    } else {}\n}(this, function () {\n    "use strict";\n\n    // Slightly dubious tricks to cut down minimized file size\n    var noop = function() {};\n    var undefinedType = "undefined";\n\n    var logMethods = [\n        "trace",\n        "debug",\n        "info",\n        "warn",\n        "error"\n    ];\n\n    // Cross-browser bind equivalent that works at least back to IE6\n    function bindMethod(obj, methodName) {\n        var method = obj[methodName];\n        if (typeof method.bind === \'function\') {\n            return method.bind(obj);\n        } else {\n            try {\n                return Function.prototype.bind.call(method, obj);\n            } catch (e) {\n                // Missing bind shim or IE8 + Modernizr, fallback to wrapping\n                return function() {\n                    return Function.prototype.apply.apply(method, [obj, arguments]);\n                };\n            }\n        }\n    }\n\n    // Build the best logging method possible for this env\n    // Wherever possible we want to bind, not wrap, to preserve stack traces\n    function realMethod(methodName) {\n        if (methodName === \'debug\') {\n            methodName = \'log\';\n        }\n\n        if (typeof console === undefinedType) {\n            return false; // No method possible, for now - fixed later by enableLoggingWhenConsoleArrives\n        } else if (console[methodName] !== undefined) {\n            return bindMethod(console, methodName);\n        } else if (console.log !== undefined) {\n            return bindMethod(console, \'log\');\n        } else {\n            return noop;\n        }\n    }\n\n    // These private functions always need `this` to be set properly\n\n    function replaceLoggingMethods(level, loggerName) {\n        /*jshint validthis:true */\n        for (var i = 0; i < logMethods.length; i++) {\n            var methodName = logMethods[i];\n            this[methodName] = (i < level) ?\n                noop :\n                this.methodFactory(methodName, level, loggerName);\n        }\n\n        // Define log.log as an alias for log.debug\n        this.log = this.debug;\n    }\n\n    // In old IE versions, the console isn\'t present until you first open it.\n    // We build realMethod() replacements here that regenerate logging methods\n    function enableLoggingWhenConsoleArrives(methodName, level, loggerName) {\n        return function () {\n            if (typeof console !== undefinedType) {\n                replaceLoggingMethods.call(this, level, loggerName);\n                this[methodName].apply(this, arguments);\n            }\n        };\n    }\n\n    // By default, we use closely bound real methods wherever possible, and\n    // otherwise we wait for a console to appear, and then try again.\n    function defaultMethodFactory(methodName, level, loggerName) {\n        /*jshint validthis:true */\n        return realMethod(methodName) ||\n               enableLoggingWhenConsoleArrives.apply(this, arguments);\n    }\n\n    function Logger(name, defaultLevel, factory) {\n      var self = this;\n      var currentLevel;\n      var storageKey = "loglevel";\n      if (name) {\n        storageKey += ":" + name;\n      }\n\n      function persistLevelIfPossible(levelNum) {\n          var levelName = (logMethods[levelNum] || \'silent\').toUpperCase();\n\n          if (typeof window === undefinedType) return;\n\n          // Use localStorage if available\n          try {\n              window.localStorage[storageKey] = levelName;\n              return;\n          } catch (ignore) {}\n\n          // Use session cookie as fallback\n          try {\n              window.document.cookie =\n                encodeURIComponent(storageKey) + "=" + levelName + ";";\n          } catch (ignore) {}\n      }\n\n      function getPersistedLevel() {\n          var storedLevel;\n\n          if (typeof window === undefinedType) return;\n\n          try {\n              storedLevel = window.localStorage[storageKey];\n          } catch (ignore) {}\n\n          // Fallback to cookies if local storage gives us nothing\n          if (typeof storedLevel === undefinedType) {\n              try {\n                  var cookie = window.document.cookie;\n                  var location = cookie.indexOf(\n                      encodeURIComponent(storageKey) + "=");\n                  if (location !== -1) {\n                      storedLevel = /^([^;]+)/.exec(cookie.slice(location))[1];\n                  }\n              } catch (ignore) {}\n          }\n\n          // If the stored level is not valid, treat it as if nothing was stored.\n          if (self.levels[storedLevel] === undefined) {\n              storedLevel = undefined;\n          }\n\n          return storedLevel;\n      }\n\n      /*\n       *\n       * Public logger API - see https://github.com/pimterry/loglevel for details\n       *\n       */\n\n      self.name = name;\n\n      self.levels = { "TRACE": 0, "DEBUG": 1, "INFO": 2, "WARN": 3,\n          "ERROR": 4, "SILENT": 5};\n\n      self.methodFactory = factory || defaultMethodFactory;\n\n      self.getLevel = function () {\n          return currentLevel;\n      };\n\n      self.setLevel = function (level, persist) {\n          if (typeof level === "string" && self.levels[level.toUpperCase()] !== undefined) {\n              level = self.levels[level.toUpperCase()];\n          }\n          if (typeof level === "number" && level >= 0 && level <= self.levels.SILENT) {\n              currentLevel = level;\n              if (persist !== false) {  // defaults to true\n                  persistLevelIfPossible(level);\n              }\n              replaceLoggingMethods.call(self, level, name);\n              if (typeof console === undefinedType && level < self.levels.SILENT) {\n                  return "No console available for logging";\n              }\n          } else {\n              throw "log.setLevel() called with invalid level: " + level;\n          }\n      };\n\n      self.setDefaultLevel = function (level) {\n          if (!getPersistedLevel()) {\n              self.setLevel(level, false);\n          }\n      };\n\n      self.enableAll = function(persist) {\n          self.setLevel(self.levels.TRACE, persist);\n      };\n\n      self.disableAll = function(persist) {\n          self.setLevel(self.levels.SILENT, persist);\n      };\n\n      // Initialize with the right level\n      var initialLevel = getPersistedLevel();\n      if (initialLevel == null) {\n          initialLevel = defaultLevel == null ? "WARN" : defaultLevel;\n      }\n      self.setLevel(initialLevel, false);\n    }\n\n    /*\n     *\n     * Top-level API\n     *\n     */\n\n    var defaultLogger = new Logger();\n\n    var _loggersByName = {};\n    defaultLogger.getLogger = function getLogger(name) {\n        if (typeof name !== "string" || name === "") {\n          throw new TypeError("You must supply a name when creating a logger.");\n        }\n\n        var logger = _loggersByName[name];\n        if (!logger) {\n          logger = _loggersByName[name] = new Logger(\n            name, defaultLogger.getLevel(), defaultLogger.methodFactory);\n        }\n        return logger;\n    };\n\n    // Grab the current global log variable in case of overwrite\n    var _log = (typeof window !== undefinedType) ? window.log : undefined;\n    defaultLogger.noConflict = function() {\n        if (typeof window !== undefinedType &&\n               window.log === defaultLogger) {\n            window.log = _log;\n        }\n\n        return defaultLogger;\n    };\n\n    defaultLogger.getLoggers = function getLoggers() {\n        return _loggersByName;\n    };\n\n    return defaultLogger;\n}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///0\n')},function(module,exports,__webpack_require__){eval("var global = __webpack_require__(2);\nvar core = __webpack_require__(8);\nvar hide = __webpack_require__(15);\nvar redefine = __webpack_require__(12);\nvar ctx = __webpack_require__(18);\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE];\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});\n  var key, own, out, exp;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    // export native or passed\n    out = (own ? target : source)[key];\n    // bind timers to global for call from export context\n    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // extend global\n    if (target) redefine(target, key, out, type & $export.U);\n    // export\n    if (exports[key] != out) hide(exports, key, exp);\n    if (IS_PROTO && expProto[key] != out) expProto[key] = out;\n  }\n};\nglobal.core = core;\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nmodule.exports = $export;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL1tuYW1lXS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2V4cG9ydC5qcz81Y2ExIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBnbG9iYWwgPSByZXF1aXJlKCcuL19nbG9iYWwnKTtcbnZhciBjb3JlID0gcmVxdWlyZSgnLi9fY29yZScpO1xudmFyIGhpZGUgPSByZXF1aXJlKCcuL19oaWRlJyk7XG52YXIgcmVkZWZpbmUgPSByZXF1aXJlKCcuL19yZWRlZmluZScpO1xudmFyIGN0eCA9IHJlcXVpcmUoJy4vX2N0eCcpO1xudmFyIFBST1RPVFlQRSA9ICdwcm90b3R5cGUnO1xuXG52YXIgJGV4cG9ydCA9IGZ1bmN0aW9uICh0eXBlLCBuYW1lLCBzb3VyY2UpIHtcbiAgdmFyIElTX0ZPUkNFRCA9IHR5cGUgJiAkZXhwb3J0LkY7XG4gIHZhciBJU19HTE9CQUwgPSB0eXBlICYgJGV4cG9ydC5HO1xuICB2YXIgSVNfU1RBVElDID0gdHlwZSAmICRleHBvcnQuUztcbiAgdmFyIElTX1BST1RPID0gdHlwZSAmICRleHBvcnQuUDtcbiAgdmFyIElTX0JJTkQgPSB0eXBlICYgJGV4cG9ydC5CO1xuICB2YXIgdGFyZ2V0ID0gSVNfR0xPQkFMID8gZ2xvYmFsIDogSVNfU1RBVElDID8gZ2xvYmFsW25hbWVdIHx8IChnbG9iYWxbbmFtZV0gPSB7fSkgOiAoZ2xvYmFsW25hbWVdIHx8IHt9KVtQUk9UT1RZUEVdO1xuICB2YXIgZXhwb3J0cyA9IElTX0dMT0JBTCA/IGNvcmUgOiBjb3JlW25hbWVdIHx8IChjb3JlW25hbWVdID0ge30pO1xuICB2YXIgZXhwUHJvdG8gPSBleHBvcnRzW1BST1RPVFlQRV0gfHwgKGV4cG9ydHNbUFJPVE9UWVBFXSA9IHt9KTtcbiAgdmFyIGtleSwgb3duLCBvdXQsIGV4cDtcbiAgaWYgKElTX0dMT0JBTCkgc291cmNlID0gbmFtZTtcbiAgZm9yIChrZXkgaW4gc291cmNlKSB7XG4gICAgLy8gY29udGFpbnMgaW4gbmF0aXZlXG4gICAgb3duID0gIUlTX0ZPUkNFRCAmJiB0YXJnZXQgJiYgdGFyZ2V0W2tleV0gIT09IHVuZGVmaW5lZDtcbiAgICAvLyBleHBvcnQgbmF0aXZlIG9yIHBhc3NlZFxuICAgIG91dCA9IChvd24gPyB0YXJnZXQgOiBzb3VyY2UpW2tleV07XG4gICAgLy8gYmluZCB0aW1lcnMgdG8gZ2xvYmFsIGZvciBjYWxsIGZyb20gZXhwb3J0IGNvbnRleHRcbiAgICBleHAgPSBJU19CSU5EICYmIG93biA/IGN0eChvdXQsIGdsb2JhbCkgOiBJU19QUk9UTyAmJiB0eXBlb2Ygb3V0ID09ICdmdW5jdGlvbicgPyBjdHgoRnVuY3Rpb24uY2FsbCwgb3V0KSA6IG91dDtcbiAgICAvLyBleHRlbmQgZ2xvYmFsXG4gICAgaWYgKHRhcmdldCkgcmVkZWZpbmUodGFyZ2V0LCBrZXksIG91dCwgdHlwZSAmICRleHBvcnQuVSk7XG4gICAgLy8gZXhwb3J0XG4gICAgaWYgKGV4cG9ydHNba2V5XSAhPSBvdXQpIGhpZGUoZXhwb3J0cywga2V5LCBleHApO1xuICAgIGlmIChJU19QUk9UTyAmJiBleHBQcm90b1trZXldICE9IG91dCkgZXhwUHJvdG9ba2V5XSA9IG91dDtcbiAgfVxufTtcbmdsb2JhbC5jb3JlID0gY29yZTtcbi8vIHR5cGUgYml0bWFwXG4kZXhwb3J0LkYgPSAxOyAgIC8vIGZvcmNlZFxuJGV4cG9ydC5HID0gMjsgICAvLyBnbG9iYWxcbiRleHBvcnQuUyA9IDQ7ICAgLy8gc3RhdGljXG4kZXhwb3J0LlAgPSA4OyAgIC8vIHByb3RvXG4kZXhwb3J0LkIgPSAxNjsgIC8vIGJpbmRcbiRleHBvcnQuVyA9IDMyOyAgLy8gd3JhcFxuJGV4cG9ydC5VID0gNjQ7ICAvLyBzYWZlXG4kZXhwb3J0LlIgPSAxMjg7IC8vIHJlYWwgcHJvdG8gbWV0aG9kIGZvciBgbGlicmFyeWBcbm1vZHVsZS5leHBvcnRzID0gJGV4cG9ydDtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///1\n")},function(module,exports){eval("// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL1tuYW1lXS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2dsb2JhbC5qcz83NzI2Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGh0dHBzOi8vZ2l0aHViLmNvbS96bG9pcm9jay9jb3JlLWpzL2lzc3Vlcy84NiNpc3N1ZWNvbW1lbnQtMTE1NzU5MDI4XG52YXIgZ2xvYmFsID0gbW9kdWxlLmV4cG9ydHMgPSB0eXBlb2Ygd2luZG93ICE9ICd1bmRlZmluZWQnICYmIHdpbmRvdy5NYXRoID09IE1hdGhcbiAgPyB3aW5kb3cgOiB0eXBlb2Ygc2VsZiAhPSAndW5kZWZpbmVkJyAmJiBzZWxmLk1hdGggPT0gTWF0aCA/IHNlbGZcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLW5ldy1mdW5jXG4gIDogRnVuY3Rpb24oJ3JldHVybiB0aGlzJykoKTtcbmlmICh0eXBlb2YgX19nID09ICdudW1iZXInKSBfX2cgPSBnbG9iYWw7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tdW5kZWZcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///2\n")},function(module,exports){eval("module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL1tuYW1lXS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2ZhaWxzLmpzPzc5ZTUiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoZXhlYykge1xuICB0cnkge1xuICAgIHJldHVybiAhIWV4ZWMoKTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIHJldHVybiB0cnVlO1xuICB9XG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///3\n")},function(module,exports,__webpack_require__){eval("var isObject = __webpack_require__(5);\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL1tuYW1lXS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2FuLW9iamVjdC5qcz9jYjdjIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQpIHtcbiAgaWYgKCFpc09iamVjdChpdCkpIHRocm93IFR5cGVFcnJvcihpdCArICcgaXMgbm90IGFuIG9iamVjdCEnKTtcbiAgcmV0dXJuIGl0O1xufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///4\n")},function(module,exports){eval("module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL1tuYW1lXS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2lzLW9iamVjdC5qcz9kM2Y0Il0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIHJldHVybiB0eXBlb2YgaXQgPT09ICdvYmplY3QnID8gaXQgIT09IG51bGwgOiB0eXBlb2YgaXQgPT09ICdmdW5jdGlvbic7XG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///5\n")},function(module,exports,__webpack_require__){eval("var store = __webpack_require__(49)('wks');\nvar uid = __webpack_require__(30);\nvar Symbol = __webpack_require__(2).Symbol;\nvar USE_SYMBOL = typeof Symbol == 'function';\n\nvar $exports = module.exports = function (name) {\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n};\n\n$exports.store = store;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL1tuYW1lXS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3drcy5qcz8yYjRjIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBzdG9yZSA9IHJlcXVpcmUoJy4vX3NoYXJlZCcpKCd3a3MnKTtcbnZhciB1aWQgPSByZXF1aXJlKCcuL191aWQnKTtcbnZhciBTeW1ib2wgPSByZXF1aXJlKCcuL19nbG9iYWwnKS5TeW1ib2w7XG52YXIgVVNFX1NZTUJPTCA9IHR5cGVvZiBTeW1ib2wgPT0gJ2Z1bmN0aW9uJztcblxudmFyICRleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobmFtZSkge1xuICByZXR1cm4gc3RvcmVbbmFtZV0gfHwgKHN0b3JlW25hbWVdID1cbiAgICBVU0VfU1lNQk9MICYmIFN5bWJvbFtuYW1lXSB8fCAoVVNFX1NZTUJPTCA/IFN5bWJvbCA6IHVpZCkoJ1N5bWJvbC4nICsgbmFtZSkpO1xufTtcblxuJGV4cG9ydHMuc3RvcmUgPSBzdG9yZTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///6\n")},function(module,exports,__webpack_require__){eval("// 7.1.15 ToLength\nvar toInteger = __webpack_require__(20);\nvar min = Math.min;\nmodule.exports = function (it) {\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL1tuYW1lXS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3RvLWxlbmd0aC5qcz85ZGVmIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIDcuMS4xNSBUb0xlbmd0aFxudmFyIHRvSW50ZWdlciA9IHJlcXVpcmUoJy4vX3RvLWludGVnZXInKTtcbnZhciBtaW4gPSBNYXRoLm1pbjtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIHJldHVybiBpdCA+IDAgPyBtaW4odG9JbnRlZ2VyKGl0KSwgMHgxZmZmZmZmZmZmZmZmZikgOiAwOyAvLyBwb3coMiwgNTMpIC0gMSA9PSA5MDA3MTk5MjU0NzQwOTkxXG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///7\n")},function(module,exports){eval("var core = module.exports = { version: '2.6.5' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL1tuYW1lXS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2NvcmUuanM/ODM3OCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgY29yZSA9IG1vZHVsZS5leHBvcnRzID0geyB2ZXJzaW9uOiAnMi42LjUnIH07XG5pZiAodHlwZW9mIF9fZSA9PSAnbnVtYmVyJykgX19lID0gY29yZTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby11bmRlZlxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///8\n")},function(module,exports,__webpack_require__){eval("var anObject = __webpack_require__(4);\nvar IE8_DOM_DEFINE = __webpack_require__(91);\nvar toPrimitive = __webpack_require__(27);\nvar dP = Object.defineProperty;\n\nexports.f = __webpack_require__(10) ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL1tuYW1lXS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX29iamVjdC1kcC5qcz84NmNjIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpO1xudmFyIElFOF9ET01fREVGSU5FID0gcmVxdWlyZSgnLi9faWU4LWRvbS1kZWZpbmUnKTtcbnZhciB0b1ByaW1pdGl2ZSA9IHJlcXVpcmUoJy4vX3RvLXByaW1pdGl2ZScpO1xudmFyIGRQID0gT2JqZWN0LmRlZmluZVByb3BlcnR5O1xuXG5leHBvcnRzLmYgPSByZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpID8gT2JqZWN0LmRlZmluZVByb3BlcnR5IDogZnVuY3Rpb24gZGVmaW5lUHJvcGVydHkoTywgUCwgQXR0cmlidXRlcykge1xuICBhbk9iamVjdChPKTtcbiAgUCA9IHRvUHJpbWl0aXZlKFAsIHRydWUpO1xuICBhbk9iamVjdChBdHRyaWJ1dGVzKTtcbiAgaWYgKElFOF9ET01fREVGSU5FKSB0cnkge1xuICAgIHJldHVybiBkUChPLCBQLCBBdHRyaWJ1dGVzKTtcbiAgfSBjYXRjaCAoZSkgeyAvKiBlbXB0eSAqLyB9XG4gIGlmICgnZ2V0JyBpbiBBdHRyaWJ1dGVzIHx8ICdzZXQnIGluIEF0dHJpYnV0ZXMpIHRocm93IFR5cGVFcnJvcignQWNjZXNzb3JzIG5vdCBzdXBwb3J0ZWQhJyk7XG4gIGlmICgndmFsdWUnIGluIEF0dHJpYnV0ZXMpIE9bUF0gPSBBdHRyaWJ1dGVzLnZhbHVlO1xuICByZXR1cm4gTztcbn07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///9\n")},function(module,exports,__webpack_require__){eval("// Thank's IE8 for his funny defineProperty\nmodule.exports = !__webpack_require__(3)(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19kZXNjcmlwdG9ycy5qcz85ZTFlIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIFRoYW5rJ3MgSUU4IGZvciBoaXMgZnVubnkgZGVmaW5lUHJvcGVydHlcbm1vZHVsZS5leHBvcnRzID0gIXJlcXVpcmUoJy4vX2ZhaWxzJykoZnVuY3Rpb24gKCkge1xuICByZXR1cm4gT2JqZWN0LmRlZmluZVByb3BlcnR5KHt9LCAnYScsIHsgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiA3OyB9IH0pLmEgIT0gNztcbn0pO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///10\n")},function(module,exports,__webpack_require__){eval("// 7.1.13 ToObject(argument)\nvar defined = __webpack_require__(25);\nmodule.exports = function (it) {\n  return Object(defined(it));\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL190by1vYmplY3QuanM/NGJmOCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyA3LjEuMTMgVG9PYmplY3QoYXJndW1lbnQpXG52YXIgZGVmaW5lZCA9IHJlcXVpcmUoJy4vX2RlZmluZWQnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIHJldHVybiBPYmplY3QoZGVmaW5lZChpdCkpO1xufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///11\n")},function(module,exports,__webpack_require__){eval("var global = __webpack_require__(2);\nvar hide = __webpack_require__(15);\nvar has = __webpack_require__(14);\nvar SRC = __webpack_require__(30)('src');\nvar $toString = __webpack_require__(129);\nvar TO_STRING = 'toString';\nvar TPL = ('' + $toString).split(TO_STRING);\n\n__webpack_require__(8).inspectSource = function (it) {\n  return $toString.call(it);\n};\n\n(module.exports = function (O, key, val, safe) {\n  var isFunction = typeof val == 'function';\n  if (isFunction) has(val, 'name') || hide(val, 'name', key);\n  if (O[key] === val) return;\n  if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));\n  if (O === global) {\n    O[key] = val;\n  } else if (!safe) {\n    delete O[key];\n    hide(O, key, val);\n  } else if (O[key]) {\n    O[key] = val;\n  } else {\n    hide(O, key, val);\n  }\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n})(Function.prototype, TO_STRING, function toString() {\n  return typeof this == 'function' && this[SRC] || $toString.call(this);\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTIuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19yZWRlZmluZS5qcz8yYWJhIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBnbG9iYWwgPSByZXF1aXJlKCcuL19nbG9iYWwnKTtcbnZhciBoaWRlID0gcmVxdWlyZSgnLi9faGlkZScpO1xudmFyIGhhcyA9IHJlcXVpcmUoJy4vX2hhcycpO1xudmFyIFNSQyA9IHJlcXVpcmUoJy4vX3VpZCcpKCdzcmMnKTtcbnZhciAkdG9TdHJpbmcgPSByZXF1aXJlKCcuL19mdW5jdGlvbi10by1zdHJpbmcnKTtcbnZhciBUT19TVFJJTkcgPSAndG9TdHJpbmcnO1xudmFyIFRQTCA9ICgnJyArICR0b1N0cmluZykuc3BsaXQoVE9fU1RSSU5HKTtcblxucmVxdWlyZSgnLi9fY29yZScpLmluc3BlY3RTb3VyY2UgPSBmdW5jdGlvbiAoaXQpIHtcbiAgcmV0dXJuICR0b1N0cmluZy5jYWxsKGl0KTtcbn07XG5cbihtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChPLCBrZXksIHZhbCwgc2FmZSkge1xuICB2YXIgaXNGdW5jdGlvbiA9IHR5cGVvZiB2YWwgPT0gJ2Z1bmN0aW9uJztcbiAgaWYgKGlzRnVuY3Rpb24pIGhhcyh2YWwsICduYW1lJykgfHwgaGlkZSh2YWwsICduYW1lJywga2V5KTtcbiAgaWYgKE9ba2V5XSA9PT0gdmFsKSByZXR1cm47XG4gIGlmIChpc0Z1bmN0aW9uKSBoYXModmFsLCBTUkMpIHx8IGhpZGUodmFsLCBTUkMsIE9ba2V5XSA/ICcnICsgT1trZXldIDogVFBMLmpvaW4oU3RyaW5nKGtleSkpKTtcbiAgaWYgKE8gPT09IGdsb2JhbCkge1xuICAgIE9ba2V5XSA9IHZhbDtcbiAgfSBlbHNlIGlmICghc2FmZSkge1xuICAgIGRlbGV0ZSBPW2tleV07XG4gICAgaGlkZShPLCBrZXksIHZhbCk7XG4gIH0gZWxzZSBpZiAoT1trZXldKSB7XG4gICAgT1trZXldID0gdmFsO1xuICB9IGVsc2Uge1xuICAgIGhpZGUoTywga2V5LCB2YWwpO1xuICB9XG4vLyBhZGQgZmFrZSBGdW5jdGlvbiN0b1N0cmluZyBmb3IgY29ycmVjdCB3b3JrIHdyYXBwZWQgbWV0aG9kcyAvIGNvbnN0cnVjdG9ycyB3aXRoIG1ldGhvZHMgbGlrZSBMb0Rhc2ggaXNOYXRpdmVcbn0pKEZ1bmN0aW9uLnByb3RvdHlwZSwgVE9fU1RSSU5HLCBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgcmV0dXJuIHR5cGVvZiB0aGlzID09ICdmdW5jdGlvbicgJiYgdGhpc1tTUkNdIHx8ICR0b1N0cmluZy5jYWxsKHRoaXMpO1xufSk7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///12\n")},function(module,exports,__webpack_require__){eval("var $export = __webpack_require__(1);\nvar fails = __webpack_require__(3);\nvar defined = __webpack_require__(25);\nvar quot = /\"/g;\n// B.2.3.2.1 CreateHTML(string, tag, attribute, value)\nvar createHTML = function (string, tag, attribute, value) {\n  var S = String(defined(string));\n  var p1 = '<' + tag;\n  if (attribute !== '') p1 += ' ' + attribute + '=\"' + String(value).replace(quot, '&quot;') + '\"';\n  return p1 + '>' + S + '</' + tag + '>';\n};\nmodule.exports = function (NAME, exec) {\n  var O = {};\n  O[NAME] = exec(createHTML);\n  $export($export.P + $export.F * fails(function () {\n    var test = ''[NAME]('\"');\n    return test !== test.toLowerCase() || test.split('\"').length > 3;\n  }), 'String', O);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19zdHJpbmctaHRtbC5qcz8zODZiIl0sInNvdXJjZXNDb250ZW50IjpbInZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgZmFpbHMgPSByZXF1aXJlKCcuL19mYWlscycpO1xudmFyIGRlZmluZWQgPSByZXF1aXJlKCcuL19kZWZpbmVkJyk7XG52YXIgcXVvdCA9IC9cIi9nO1xuLy8gQi4yLjMuMi4xIENyZWF0ZUhUTUwoc3RyaW5nLCB0YWcsIGF0dHJpYnV0ZSwgdmFsdWUpXG52YXIgY3JlYXRlSFRNTCA9IGZ1bmN0aW9uIChzdHJpbmcsIHRhZywgYXR0cmlidXRlLCB2YWx1ZSkge1xuICB2YXIgUyA9IFN0cmluZyhkZWZpbmVkKHN0cmluZykpO1xuICB2YXIgcDEgPSAnPCcgKyB0YWc7XG4gIGlmIChhdHRyaWJ1dGUgIT09ICcnKSBwMSArPSAnICcgKyBhdHRyaWJ1dGUgKyAnPVwiJyArIFN0cmluZyh2YWx1ZSkucmVwbGFjZShxdW90LCAnJnF1b3Q7JykgKyAnXCInO1xuICByZXR1cm4gcDEgKyAnPicgKyBTICsgJzwvJyArIHRhZyArICc+Jztcbn07XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChOQU1FLCBleGVjKSB7XG4gIHZhciBPID0ge307XG4gIE9bTkFNRV0gPSBleGVjKGNyZWF0ZUhUTUwpO1xuICAkZXhwb3J0KCRleHBvcnQuUCArICRleHBvcnQuRiAqIGZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgdGVzdCA9ICcnW05BTUVdKCdcIicpO1xuICAgIHJldHVybiB0ZXN0ICE9PSB0ZXN0LnRvTG93ZXJDYXNlKCkgfHwgdGVzdC5zcGxpdCgnXCInKS5sZW5ndGggPiAzO1xuICB9KSwgJ1N0cmluZycsIE8pO1xufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///13\n")},function(module,exports){eval("var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTQuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19oYXMuanM/NjlhOCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgaGFzT3duUHJvcGVydHkgPSB7fS5oYXNPd25Qcm9wZXJ0eTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0LCBrZXkpIHtcbiAgcmV0dXJuIGhhc093blByb3BlcnR5LmNhbGwoaXQsIGtleSk7XG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///14\n")},function(module,exports,__webpack_require__){eval("var dP = __webpack_require__(9);\nvar createDesc = __webpack_require__(29);\nmodule.exports = __webpack_require__(10) ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19oaWRlLmpzPzMyZTkiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGRQID0gcmVxdWlyZSgnLi9fb2JqZWN0LWRwJyk7XG52YXIgY3JlYXRlRGVzYyA9IHJlcXVpcmUoJy4vX3Byb3BlcnR5LWRlc2MnKTtcbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9fZGVzY3JpcHRvcnMnKSA/IGZ1bmN0aW9uIChvYmplY3QsIGtleSwgdmFsdWUpIHtcbiAgcmV0dXJuIGRQLmYob2JqZWN0LCBrZXksIGNyZWF0ZURlc2MoMSwgdmFsdWUpKTtcbn0gOiBmdW5jdGlvbiAob2JqZWN0LCBrZXksIHZhbHVlKSB7XG4gIG9iamVjdFtrZXldID0gdmFsdWU7XG4gIHJldHVybiBvYmplY3Q7XG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///15\n")},function(module,exports,__webpack_require__){eval("// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = __webpack_require__(45);\nvar defined = __webpack_require__(25);\nmodule.exports = function (it) {\n  return IObject(defined(it));\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTYuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL190by1pb2JqZWN0LmpzPzY4MjEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gdG8gaW5kZXhlZCBvYmplY3QsIHRvT2JqZWN0IHdpdGggZmFsbGJhY2sgZm9yIG5vbi1hcnJheS1saWtlIEVTMyBzdHJpbmdzXG52YXIgSU9iamVjdCA9IHJlcXVpcmUoJy4vX2lvYmplY3QnKTtcbnZhciBkZWZpbmVkID0gcmVxdWlyZSgnLi9fZGVmaW5lZCcpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQpIHtcbiAgcmV0dXJuIElPYmplY3QoZGVmaW5lZChpdCkpO1xufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///16\n")},function(module,exports,__webpack_require__){"use strict";eval("\nvar fails = __webpack_require__(3);\n\nmodule.exports = function (method, arg) {\n  return !!method && fails(function () {\n    // eslint-disable-next-line no-useless-call\n    arg ? method.call(null, function () { /* empty */ }, 1) : method.call(null);\n  });\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTcuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19zdHJpY3QtbWV0aG9kLmpzPzJmMjEiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xudmFyIGZhaWxzID0gcmVxdWlyZSgnLi9fZmFpbHMnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobWV0aG9kLCBhcmcpIHtcbiAgcmV0dXJuICEhbWV0aG9kICYmIGZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdXNlbGVzcy1jYWxsXG4gICAgYXJnID8gbWV0aG9kLmNhbGwobnVsbCwgZnVuY3Rpb24gKCkgeyAvKiBlbXB0eSAqLyB9LCAxKSA6IG1ldGhvZC5jYWxsKG51bGwpO1xuICB9KTtcbn07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///17\n")},function(module,exports,__webpack_require__){eval("// optional / simple context binding\nvar aFunction = __webpack_require__(19);\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTguanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19jdHguanM/OWI0MyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBvcHRpb25hbCAvIHNpbXBsZSBjb250ZXh0IGJpbmRpbmdcbnZhciBhRnVuY3Rpb24gPSByZXF1aXJlKCcuL19hLWZ1bmN0aW9uJyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChmbiwgdGhhdCwgbGVuZ3RoKSB7XG4gIGFGdW5jdGlvbihmbik7XG4gIGlmICh0aGF0ID09PSB1bmRlZmluZWQpIHJldHVybiBmbjtcbiAgc3dpdGNoIChsZW5ndGgpIHtcbiAgICBjYXNlIDE6IHJldHVybiBmdW5jdGlvbiAoYSkge1xuICAgICAgcmV0dXJuIGZuLmNhbGwodGhhdCwgYSk7XG4gICAgfTtcbiAgICBjYXNlIDI6IHJldHVybiBmdW5jdGlvbiAoYSwgYikge1xuICAgICAgcmV0dXJuIGZuLmNhbGwodGhhdCwgYSwgYik7XG4gICAgfTtcbiAgICBjYXNlIDM6IHJldHVybiBmdW5jdGlvbiAoYSwgYiwgYykge1xuICAgICAgcmV0dXJuIGZuLmNhbGwodGhhdCwgYSwgYiwgYyk7XG4gICAgfTtcbiAgfVxuICByZXR1cm4gZnVuY3Rpb24gKC8qIC4uLmFyZ3MgKi8pIHtcbiAgICByZXR1cm4gZm4uYXBwbHkodGhhdCwgYXJndW1lbnRzKTtcbiAgfTtcbn07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///18\n")},function(module,exports){eval("module.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTkuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19hLWZ1bmN0aW9uLmpzP2Q4ZTgiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQpIHtcbiAgaWYgKHR5cGVvZiBpdCAhPSAnZnVuY3Rpb24nKSB0aHJvdyBUeXBlRXJyb3IoaXQgKyAnIGlzIG5vdCBhIGZ1bmN0aW9uIScpO1xuICByZXR1cm4gaXQ7XG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///19\n")},function(module,exports){eval("// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL190by1pbnRlZ2VyLmpzPzQ1ODgiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gNy4xLjQgVG9JbnRlZ2VyXG52YXIgY2VpbCA9IE1hdGguY2VpbDtcbnZhciBmbG9vciA9IE1hdGguZmxvb3I7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICByZXR1cm4gaXNOYU4oaXQgPSAraXQpID8gMCA6IChpdCA+IDAgPyBmbG9vciA6IGNlaWwpKGl0KTtcbn07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///20\n")},function(module,exports,__webpack_require__){eval("var pIE = __webpack_require__(46);\nvar createDesc = __webpack_require__(29);\nvar toIObject = __webpack_require__(16);\nvar toPrimitive = __webpack_require__(27);\nvar has = __webpack_require__(14);\nvar IE8_DOM_DEFINE = __webpack_require__(91);\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nexports.f = __webpack_require__(10) ? gOPD : function getOwnPropertyDescriptor(O, P) {\n  O = toIObject(O);\n  P = toPrimitive(P, true);\n  if (IE8_DOM_DEFINE) try {\n    return gOPD(O, P);\n  } catch (e) { /* empty */ }\n  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19vYmplY3QtZ29wZC5qcz8xMWU5Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBwSUUgPSByZXF1aXJlKCcuL19vYmplY3QtcGllJyk7XG52YXIgY3JlYXRlRGVzYyA9IHJlcXVpcmUoJy4vX3Byb3BlcnR5LWRlc2MnKTtcbnZhciB0b0lPYmplY3QgPSByZXF1aXJlKCcuL190by1pb2JqZWN0Jyk7XG52YXIgdG9QcmltaXRpdmUgPSByZXF1aXJlKCcuL190by1wcmltaXRpdmUnKTtcbnZhciBoYXMgPSByZXF1aXJlKCcuL19oYXMnKTtcbnZhciBJRThfRE9NX0RFRklORSA9IHJlcXVpcmUoJy4vX2llOC1kb20tZGVmaW5lJyk7XG52YXIgZ09QRCA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7XG5cbmV4cG9ydHMuZiA9IHJlcXVpcmUoJy4vX2Rlc2NyaXB0b3JzJykgPyBnT1BEIDogZnVuY3Rpb24gZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKE8sIFApIHtcbiAgTyA9IHRvSU9iamVjdChPKTtcbiAgUCA9IHRvUHJpbWl0aXZlKFAsIHRydWUpO1xuICBpZiAoSUU4X0RPTV9ERUZJTkUpIHRyeSB7XG4gICAgcmV0dXJuIGdPUEQoTywgUCk7XG4gIH0gY2F0Y2ggKGUpIHsgLyogZW1wdHkgKi8gfVxuICBpZiAoaGFzKE8sIFApKSByZXR1cm4gY3JlYXRlRGVzYyghcElFLmYuY2FsbChPLCBQKSwgT1tQXSk7XG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///21\n")},function(module,exports,__webpack_require__){eval("// most Object methods by ES6 should accept primitives\nvar $export = __webpack_require__(1);\nvar core = __webpack_require__(8);\nvar fails = __webpack_require__(3);\nmodule.exports = function (KEY, exec) {\n  var fn = (core.Object || {})[KEY] || Object[KEY];\n  var exp = {};\n  exp[KEY] = exec(fn);\n  $export($export.S + $export.F * fails(function () { fn(1); }), 'Object', exp);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjIuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19vYmplY3Qtc2FwLmpzPzVlZGEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gbW9zdCBPYmplY3QgbWV0aG9kcyBieSBFUzYgc2hvdWxkIGFjY2VwdCBwcmltaXRpdmVzXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIGNvcmUgPSByZXF1aXJlKCcuL19jb3JlJyk7XG52YXIgZmFpbHMgPSByZXF1aXJlKCcuL19mYWlscycpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoS0VZLCBleGVjKSB7XG4gIHZhciBmbiA9IChjb3JlLk9iamVjdCB8fCB7fSlbS0VZXSB8fCBPYmplY3RbS0VZXTtcbiAgdmFyIGV4cCA9IHt9O1xuICBleHBbS0VZXSA9IGV4ZWMoZm4pO1xuICAkZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqIGZhaWxzKGZ1bmN0aW9uICgpIHsgZm4oMSk7IH0pLCAnT2JqZWN0JywgZXhwKTtcbn07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///22\n")},function(module,exports,__webpack_require__){eval("// 0 -> Array#forEach\n// 1 -> Array#map\n// 2 -> Array#filter\n// 3 -> Array#some\n// 4 -> Array#every\n// 5 -> Array#find\n// 6 -> Array#findIndex\nvar ctx = __webpack_require__(18);\nvar IObject = __webpack_require__(45);\nvar toObject = __webpack_require__(11);\nvar toLength = __webpack_require__(7);\nvar asc = __webpack_require__(107);\nmodule.exports = function (TYPE, $create) {\n  var IS_MAP = TYPE == 1;\n  var IS_FILTER = TYPE == 2;\n  var IS_SOME = TYPE == 3;\n  var IS_EVERY = TYPE == 4;\n  var IS_FIND_INDEX = TYPE == 6;\n  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\n  var create = $create || asc;\n  return function ($this, callbackfn, that) {\n    var O = toObject($this);\n    var self = IObject(O);\n    var f = ctx(callbackfn, that, 3);\n    var length = toLength(self.length);\n    var index = 0;\n    var result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;\n    var val, res;\n    for (;length > index; index++) if (NO_HOLES || index in self) {\n      val = self[index];\n      res = f(val, index, O);\n      if (TYPE) {\n        if (IS_MAP) result[index] = res;   // map\n        else if (res) switch (TYPE) {\n          case 3: return true;             // some\n          case 5: return val;              // find\n          case 6: return index;            // findIndex\n          case 2: result.push(val);        // filter\n        } else if (IS_EVERY) return false; // every\n      }\n    }\n    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;\n  };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19hcnJheS1tZXRob2RzLmpzPzBhNDkiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gMCAtPiBBcnJheSNmb3JFYWNoXG4vLyAxIC0+IEFycmF5I21hcFxuLy8gMiAtPiBBcnJheSNmaWx0ZXJcbi8vIDMgLT4gQXJyYXkjc29tZVxuLy8gNCAtPiBBcnJheSNldmVyeVxuLy8gNSAtPiBBcnJheSNmaW5kXG4vLyA2IC0+IEFycmF5I2ZpbmRJbmRleFxudmFyIGN0eCA9IHJlcXVpcmUoJy4vX2N0eCcpO1xudmFyIElPYmplY3QgPSByZXF1aXJlKCcuL19pb2JqZWN0Jyk7XG52YXIgdG9PYmplY3QgPSByZXF1aXJlKCcuL190by1vYmplY3QnKTtcbnZhciB0b0xlbmd0aCA9IHJlcXVpcmUoJy4vX3RvLWxlbmd0aCcpO1xudmFyIGFzYyA9IHJlcXVpcmUoJy4vX2FycmF5LXNwZWNpZXMtY3JlYXRlJyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChUWVBFLCAkY3JlYXRlKSB7XG4gIHZhciBJU19NQVAgPSBUWVBFID09IDE7XG4gIHZhciBJU19GSUxURVIgPSBUWVBFID09IDI7XG4gIHZhciBJU19TT01FID0gVFlQRSA9PSAzO1xuICB2YXIgSVNfRVZFUlkgPSBUWVBFID09IDQ7XG4gIHZhciBJU19GSU5EX0lOREVYID0gVFlQRSA9PSA2O1xuICB2YXIgTk9fSE9MRVMgPSBUWVBFID09IDUgfHwgSVNfRklORF9JTkRFWDtcbiAgdmFyIGNyZWF0ZSA9ICRjcmVhdGUgfHwgYXNjO1xuICByZXR1cm4gZnVuY3Rpb24gKCR0aGlzLCBjYWxsYmFja2ZuLCB0aGF0KSB7XG4gICAgdmFyIE8gPSB0b09iamVjdCgkdGhpcyk7XG4gICAgdmFyIHNlbGYgPSBJT2JqZWN0KE8pO1xuICAgIHZhciBmID0gY3R4KGNhbGxiYWNrZm4sIHRoYXQsIDMpO1xuICAgIHZhciBsZW5ndGggPSB0b0xlbmd0aChzZWxmLmxlbmd0aCk7XG4gICAgdmFyIGluZGV4ID0gMDtcbiAgICB2YXIgcmVzdWx0ID0gSVNfTUFQID8gY3JlYXRlKCR0aGlzLCBsZW5ndGgpIDogSVNfRklMVEVSID8gY3JlYXRlKCR0aGlzLCAwKSA6IHVuZGVmaW5lZDtcbiAgICB2YXIgdmFsLCByZXM7XG4gICAgZm9yICg7bGVuZ3RoID4gaW5kZXg7IGluZGV4KyspIGlmIChOT19IT0xFUyB8fCBpbmRleCBpbiBzZWxmKSB7XG4gICAgICB2YWwgPSBzZWxmW2luZGV4XTtcbiAgICAgIHJlcyA9IGYodmFsLCBpbmRleCwgTyk7XG4gICAgICBpZiAoVFlQRSkge1xuICAgICAgICBpZiAoSVNfTUFQKSByZXN1bHRbaW5kZXhdID0gcmVzOyAgIC8vIG1hcFxuICAgICAgICBlbHNlIGlmIChyZXMpIHN3aXRjaCAoVFlQRSkge1xuICAgICAgICAgIGNhc2UgMzogcmV0dXJuIHRydWU7ICAgICAgICAgICAgIC8vIHNvbWVcbiAgICAgICAgICBjYXNlIDU6IHJldHVybiB2YWw7ICAgICAgICAgICAgICAvLyBmaW5kXG4gICAgICAgICAgY2FzZSA2OiByZXR1cm4gaW5kZXg7ICAgICAgICAgICAgLy8gZmluZEluZGV4XG4gICAgICAgICAgY2FzZSAyOiByZXN1bHQucHVzaCh2YWwpOyAgICAgICAgLy8gZmlsdGVyXG4gICAgICAgIH0gZWxzZSBpZiAoSVNfRVZFUlkpIHJldHVybiBmYWxzZTsgLy8gZXZlcnlcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIElTX0ZJTkRfSU5ERVggPyAtMSA6IElTX1NPTUUgfHwgSVNfRVZFUlkgPyBJU19FVkVSWSA6IHJlc3VsdDtcbiAgfTtcbn07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///23\n")},function(module,exports){eval("var toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjQuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19jb2YuanM/MmQ5NSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgdG9TdHJpbmcgPSB7fS50b1N0cmluZztcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQpIHtcbiAgcmV0dXJuIHRvU3RyaW5nLmNhbGwoaXQpLnNsaWNlKDgsIC0xKTtcbn07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///24\n")},function(module,exports){eval('// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError("Can\'t call method on  " + it);\n  return it;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19kZWZpbmVkLmpzP2JlMTMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gNy4yLjEgUmVxdWlyZU9iamVjdENvZXJjaWJsZShhcmd1bWVudClcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIGlmIChpdCA9PSB1bmRlZmluZWQpIHRocm93IFR5cGVFcnJvcihcIkNhbid0IGNhbGwgbWV0aG9kIG9uICBcIiArIGl0KTtcbiAgcmV0dXJuIGl0O1xufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///25\n')},function(module,exports,__webpack_require__){"use strict";eval("\nif (__webpack_require__(10)) {\n  var LIBRARY = __webpack_require__(31);\n  var global = __webpack_require__(2);\n  var fails = __webpack_require__(3);\n  var $export = __webpack_require__(1);\n  var $typed = __webpack_require__(60);\n  var $buffer = __webpack_require__(85);\n  var ctx = __webpack_require__(18);\n  var anInstance = __webpack_require__(43);\n  var propertyDesc = __webpack_require__(29);\n  var hide = __webpack_require__(15);\n  var redefineAll = __webpack_require__(44);\n  var toInteger = __webpack_require__(20);\n  var toLength = __webpack_require__(7);\n  var toIndex = __webpack_require__(118);\n  var toAbsoluteIndex = __webpack_require__(33);\n  var toPrimitive = __webpack_require__(27);\n  var has = __webpack_require__(14);\n  var classof = __webpack_require__(47);\n  var isObject = __webpack_require__(5);\n  var toObject = __webpack_require__(11);\n  var isArrayIter = __webpack_require__(77);\n  var create = __webpack_require__(34);\n  var getPrototypeOf = __webpack_require__(36);\n  var gOPN = __webpack_require__(35).f;\n  var getIterFn = __webpack_require__(79);\n  var uid = __webpack_require__(30);\n  var wks = __webpack_require__(6);\n  var createArrayMethod = __webpack_require__(23);\n  var createArrayIncludes = __webpack_require__(50);\n  var speciesConstructor = __webpack_require__(48);\n  var ArrayIterators = __webpack_require__(81);\n  var Iterators = __webpack_require__(41);\n  var $iterDetect = __webpack_require__(53);\n  var setSpecies = __webpack_require__(42);\n  var arrayFill = __webpack_require__(80);\n  var arrayCopyWithin = __webpack_require__(109);\n  var $DP = __webpack_require__(9);\n  var $GOPD = __webpack_require__(21);\n  var dP = $DP.f;\n  var gOPD = $GOPD.f;\n  var RangeError = global.RangeError;\n  var TypeError = global.TypeError;\n  var Uint8Array = global.Uint8Array;\n  var ARRAY_BUFFER = 'ArrayBuffer';\n  var SHARED_BUFFER = 'Shared' + ARRAY_BUFFER;\n  var BYTES_PER_ELEMENT = 'BYTES_PER_ELEMENT';\n  var PROTOTYPE = 'prototype';\n  var ArrayProto = Array[PROTOTYPE];\n  var $ArrayBuffer = $buffer.ArrayBuffer;\n  var $DataView = $buffer.DataView;\n  var arrayForEach = createArrayMethod(0);\n  var arrayFilter = createArrayMethod(2);\n  var arraySome = createArrayMethod(3);\n  var arrayEvery = createArrayMethod(4);\n  var arrayFind = createArrayMethod(5);\n  var arrayFindIndex = createArrayMethod(6);\n  var arrayIncludes = createArrayIncludes(true);\n  var arrayIndexOf = createArrayIncludes(false);\n  var arrayValues = ArrayIterators.values;\n  var arrayKeys = ArrayIterators.keys;\n  var arrayEntries = ArrayIterators.entries;\n  var arrayLastIndexOf = ArrayProto.lastIndexOf;\n  var arrayReduce = ArrayProto.reduce;\n  var arrayReduceRight = ArrayProto.reduceRight;\n  var arrayJoin = ArrayProto.join;\n  var arraySort = ArrayProto.sort;\n  var arraySlice = ArrayProto.slice;\n  var arrayToString = ArrayProto.toString;\n  var arrayToLocaleString = ArrayProto.toLocaleString;\n  var ITERATOR = wks('iterator');\n  var TAG = wks('toStringTag');\n  var TYPED_CONSTRUCTOR = uid('typed_constructor');\n  var DEF_CONSTRUCTOR = uid('def_constructor');\n  var ALL_CONSTRUCTORS = $typed.CONSTR;\n  var TYPED_ARRAY = $typed.TYPED;\n  var VIEW = $typed.VIEW;\n  var WRONG_LENGTH = 'Wrong length!';\n\n  var $map = createArrayMethod(1, function (O, length) {\n    return allocate(speciesConstructor(O, O[DEF_CONSTRUCTOR]), length);\n  });\n\n  var LITTLE_ENDIAN = fails(function () {\n    // eslint-disable-next-line no-undef\n    return new Uint8Array(new Uint16Array([1]).buffer)[0] === 1;\n  });\n\n  var FORCED_SET = !!Uint8Array && !!Uint8Array[PROTOTYPE].set && fails(function () {\n    new Uint8Array(1).set({});\n  });\n\n  var toOffset = function (it, BYTES) {\n    var offset = toInteger(it);\n    if (offset < 0 || offset % BYTES) throw RangeError('Wrong offset!');\n    return offset;\n  };\n\n  var validate = function (it) {\n    if (isObject(it) && TYPED_ARRAY in it) return it;\n    throw TypeError(it + ' is not a typed array!');\n  };\n\n  var allocate = function (C, length) {\n    if (!(isObject(C) && TYPED_CONSTRUCTOR in C)) {\n      throw TypeError('It is not a typed array constructor!');\n    } return new C(length);\n  };\n\n  var speciesFromList = function (O, list) {\n    return fromList(speciesConstructor(O, O[DEF_CONSTRUCTOR]), list);\n  };\n\n  var fromList = function (C, list) {\n    var index = 0;\n    var length = list.length;\n    var result = allocate(C, length);\n    while (length > index) result[index] = list[index++];\n    return result;\n  };\n\n  var addGetter = function (it, key, internal) {\n    dP(it, key, { get: function () { return this._d[internal]; } });\n  };\n\n  var $from = function from(source /* , mapfn, thisArg */) {\n    var O = toObject(source);\n    var aLen = arguments.length;\n    var mapfn = aLen > 1 ? arguments[1] : undefined;\n    var mapping = mapfn !== undefined;\n    var iterFn = getIterFn(O);\n    var i, length, values, result, step, iterator;\n    if (iterFn != undefined && !isArrayIter(iterFn)) {\n      for (iterator = iterFn.call(O), values = [], i = 0; !(step = iterator.next()).done; i++) {\n        values.push(step.value);\n      } O = values;\n    }\n    if (mapping && aLen > 2) mapfn = ctx(mapfn, arguments[2], 2);\n    for (i = 0, length = toLength(O.length), result = allocate(this, length); length > i; i++) {\n      result[i] = mapping ? mapfn(O[i], i) : O[i];\n    }\n    return result;\n  };\n\n  var $of = function of(/* ...items */) {\n    var index = 0;\n    var length = arguments.length;\n    var result = allocate(this, length);\n    while (length > index) result[index] = arguments[index++];\n    return result;\n  };\n\n  // iOS Safari 6.x fails here\n  var TO_LOCALE_BUG = !!Uint8Array && fails(function () { arrayToLocaleString.call(new Uint8Array(1)); });\n\n  var $toLocaleString = function toLocaleString() {\n    return arrayToLocaleString.apply(TO_LOCALE_BUG ? arraySlice.call(validate(this)) : validate(this), arguments);\n  };\n\n  var proto = {\n    copyWithin: function copyWithin(target, start /* , end */) {\n      return arrayCopyWithin.call(validate(this), target, start, arguments.length > 2 ? arguments[2] : undefined);\n    },\n    every: function every(callbackfn /* , thisArg */) {\n      return arrayEvery(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    fill: function fill(value /* , start, end */) { // eslint-disable-line no-unused-vars\n      return arrayFill.apply(validate(this), arguments);\n    },\n    filter: function filter(callbackfn /* , thisArg */) {\n      return speciesFromList(this, arrayFilter(validate(this), callbackfn,\n        arguments.length > 1 ? arguments[1] : undefined));\n    },\n    find: function find(predicate /* , thisArg */) {\n      return arrayFind(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    findIndex: function findIndex(predicate /* , thisArg */) {\n      return arrayFindIndex(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    forEach: function forEach(callbackfn /* , thisArg */) {\n      arrayForEach(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    indexOf: function indexOf(searchElement /* , fromIndex */) {\n      return arrayIndexOf(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    includes: function includes(searchElement /* , fromIndex */) {\n      return arrayIncludes(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    join: function join(separator) { // eslint-disable-line no-unused-vars\n      return arrayJoin.apply(validate(this), arguments);\n    },\n    lastIndexOf: function lastIndexOf(searchElement /* , fromIndex */) { // eslint-disable-line no-unused-vars\n      return arrayLastIndexOf.apply(validate(this), arguments);\n    },\n    map: function map(mapfn /* , thisArg */) {\n      return $map(validate(this), mapfn, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    reduce: function reduce(callbackfn /* , initialValue */) { // eslint-disable-line no-unused-vars\n      return arrayReduce.apply(validate(this), arguments);\n    },\n    reduceRight: function reduceRight(callbackfn /* , initialValue */) { // eslint-disable-line no-unused-vars\n      return arrayReduceRight.apply(validate(this), arguments);\n    },\n    reverse: function reverse() {\n      var that = this;\n      var length = validate(that).length;\n      var middle = Math.floor(length / 2);\n      var index = 0;\n      var value;\n      while (index < middle) {\n        value = that[index];\n        that[index++] = that[--length];\n        that[length] = value;\n      } return that;\n    },\n    some: function some(callbackfn /* , thisArg */) {\n      return arraySome(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    sort: function sort(comparefn) {\n      return arraySort.call(validate(this), comparefn);\n    },\n    subarray: function subarray(begin, end) {\n      var O = validate(this);\n      var length = O.length;\n      var $begin = toAbsoluteIndex(begin, length);\n      return new (speciesConstructor(O, O[DEF_CONSTRUCTOR]))(\n        O.buffer,\n        O.byteOffset + $begin * O.BYTES_PER_ELEMENT,\n        toLength((end === undefined ? length : toAbsoluteIndex(end, length)) - $begin)\n      );\n    }\n  };\n\n  var $slice = function slice(start, end) {\n    return speciesFromList(this, arraySlice.call(validate(this), start, end));\n  };\n\n  var $set = function set(arrayLike /* , offset */) {\n    validate(this);\n    var offset = toOffset(arguments[1], 1);\n    var length = this.length;\n    var src = toObject(arrayLike);\n    var len = toLength(src.length);\n    var index = 0;\n    if (len + offset > length) throw RangeError(WRONG_LENGTH);\n    while (index < len) this[offset + index] = src[index++];\n  };\n\n  var $iterators = {\n    entries: function entries() {\n      return arrayEntries.call(validate(this));\n    },\n    keys: function keys() {\n      return arrayKeys.call(validate(this));\n    },\n    values: function values() {\n      return arrayValues.call(validate(this));\n    }\n  };\n\n  var isTAIndex = function (target, key) {\n    return isObject(target)\n      && target[TYPED_ARRAY]\n      && typeof key != 'symbol'\n      && key in target\n      && String(+key) == String(key);\n  };\n  var $getDesc = function getOwnPropertyDescriptor(target, key) {\n    return isTAIndex(target, key = toPrimitive(key, true))\n      ? propertyDesc(2, target[key])\n      : gOPD(target, key);\n  };\n  var $setDesc = function defineProperty(target, key, desc) {\n    if (isTAIndex(target, key = toPrimitive(key, true))\n      && isObject(desc)\n      && has(desc, 'value')\n      && !has(desc, 'get')\n      && !has(desc, 'set')\n      // TODO: add validation descriptor w/o calling accessors\n      && !desc.configurable\n      && (!has(desc, 'writable') || desc.writable)\n      && (!has(desc, 'enumerable') || desc.enumerable)\n    ) {\n      target[key] = desc.value;\n      return target;\n    } return dP(target, key, desc);\n  };\n\n  if (!ALL_CONSTRUCTORS) {\n    $GOPD.f = $getDesc;\n    $DP.f = $setDesc;\n  }\n\n  $export($export.S + $export.F * !ALL_CONSTRUCTORS, 'Object', {\n    getOwnPropertyDescriptor: $getDesc,\n    defineProperty: $setDesc\n  });\n\n  if (fails(function () { arrayToString.call({}); })) {\n    arrayToString = arrayToLocaleString = function toString() {\n      return arrayJoin.call(this);\n    };\n  }\n\n  var $TypedArrayPrototype$ = redefineAll({}, proto);\n  redefineAll($TypedArrayPrototype$, $iterators);\n  hide($TypedArrayPrototype$, ITERATOR, $iterators.values);\n  redefineAll($TypedArrayPrototype$, {\n    slice: $slice,\n    set: $set,\n    constructor: function () { /* noop */ },\n    toString: arrayToString,\n    toLocaleString: $toLocaleString\n  });\n  addGetter($TypedArrayPrototype$, 'buffer', 'b');\n  addGetter($TypedArrayPrototype$, 'byteOffset', 'o');\n  addGetter($TypedArrayPrototype$, 'byteLength', 'l');\n  addGetter($TypedArrayPrototype$, 'length', 'e');\n  dP($TypedArrayPrototype$, TAG, {\n    get: function () { return this[TYPED_ARRAY]; }\n  });\n\n  // eslint-disable-next-line max-statements\n  module.exports = function (KEY, BYTES, wrapper, CLAMPED) {\n    CLAMPED = !!CLAMPED;\n    var NAME = KEY + (CLAMPED ? 'Clamped' : '') + 'Array';\n    var GETTER = 'get' + KEY;\n    var SETTER = 'set' + KEY;\n    var TypedArray = global[NAME];\n    var Base = TypedArray || {};\n    var TAC = TypedArray && getPrototypeOf(TypedArray);\n    var FORCED = !TypedArray || !$typed.ABV;\n    var O = {};\n    var TypedArrayPrototype = TypedArray && TypedArray[PROTOTYPE];\n    var getter = function (that, index) {\n      var data = that._d;\n      return data.v[GETTER](index * BYTES + data.o, LITTLE_ENDIAN);\n    };\n    var setter = function (that, index, value) {\n      var data = that._d;\n      if (CLAMPED) value = (value = Math.round(value)) < 0 ? 0 : value > 0xff ? 0xff : value & 0xff;\n      data.v[SETTER](index * BYTES + data.o, value, LITTLE_ENDIAN);\n    };\n    var addElement = function (that, index) {\n      dP(that, index, {\n        get: function () {\n          return getter(this, index);\n        },\n        set: function (value) {\n          return setter(this, index, value);\n        },\n        enumerable: true\n      });\n    };\n    if (FORCED) {\n      TypedArray = wrapper(function (that, data, $offset, $length) {\n        anInstance(that, TypedArray, NAME, '_d');\n        var index = 0;\n        var offset = 0;\n        var buffer, byteLength, length, klass;\n        if (!isObject(data)) {\n          length = toIndex(data);\n          byteLength = length * BYTES;\n          buffer = new $ArrayBuffer(byteLength);\n        } else if (data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER) {\n          buffer = data;\n          offset = toOffset($offset, BYTES);\n          var $len = data.byteLength;\n          if ($length === undefined) {\n            if ($len % BYTES) throw RangeError(WRONG_LENGTH);\n            byteLength = $len - offset;\n            if (byteLength < 0) throw RangeError(WRONG_LENGTH);\n          } else {\n            byteLength = toLength($length) * BYTES;\n            if (byteLength + offset > $len) throw RangeError(WRONG_LENGTH);\n          }\n          length = byteLength / BYTES;\n        } else if (TYPED_ARRAY in data) {\n          return fromList(TypedArray, data);\n        } else {\n          return $from.call(TypedArray, data);\n        }\n        hide(that, '_d', {\n          b: buffer,\n          o: offset,\n          l: byteLength,\n          e: length,\n          v: new $DataView(buffer)\n        });\n        while (index < length) addElement(that, index++);\n      });\n      TypedArrayPrototype = TypedArray[PROTOTYPE] = create($TypedArrayPrototype$);\n      hide(TypedArrayPrototype, 'constructor', TypedArray);\n    } else if (!fails(function () {\n      TypedArray(1);\n    }) || !fails(function () {\n      new TypedArray(-1); // eslint-disable-line no-new\n    }) || !$iterDetect(function (iter) {\n      new TypedArray(); // eslint-disable-line no-new\n      new TypedArray(null); // eslint-disable-line no-new\n      new TypedArray(1.5); // eslint-disable-line no-new\n      new TypedArray(iter); // eslint-disable-line no-new\n    }, true)) {\n      TypedArray = wrapper(function (that, data, $offset, $length) {\n        anInstance(that, TypedArray, NAME);\n        var klass;\n        // `ws` module bug, temporarily remove validation length for Uint8Array\n        // https://github.com/websockets/ws/pull/645\n        if (!isObject(data)) return new Base(toIndex(data));\n        if (data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER) {\n          return $length !== undefined\n            ? new Base(data, toOffset($offset, BYTES), $length)\n            : $offset !== undefined\n              ? new Base(data, toOffset($offset, BYTES))\n              : new Base(data);\n        }\n        if (TYPED_ARRAY in data) return fromList(TypedArray, data);\n        return $from.call(TypedArray, data);\n      });\n      arrayForEach(TAC !== Function.prototype ? gOPN(Base).concat(gOPN(TAC)) : gOPN(Base), function (key) {\n        if (!(key in TypedArray)) hide(TypedArray, key, Base[key]);\n      });\n      TypedArray[PROTOTYPE] = TypedArrayPrototype;\n      if (!LIBRARY) TypedArrayPrototype.constructor = TypedArray;\n    }\n    var $nativeIterator = TypedArrayPrototype[ITERATOR];\n    var CORRECT_ITER_NAME = !!$nativeIterator\n      && ($nativeIterator.name == 'values' || $nativeIterator.name == undefined);\n    var $iterator = $iterators.values;\n    hide(TypedArray, TYPED_CONSTRUCTOR, true);\n    hide(TypedArrayPrototype, TYPED_ARRAY, NAME);\n    hide(TypedArrayPrototype, VIEW, true);\n    hide(TypedArrayPrototype, DEF_CONSTRUCTOR, TypedArray);\n\n    if (CLAMPED ? new TypedArray(1)[TAG] != NAME : !(TAG in TypedArrayPrototype)) {\n      dP(TypedArrayPrototype, TAG, {\n        get: function () { return NAME; }\n      });\n    }\n\n    O[NAME] = TypedArray;\n\n    $export($export.G + $export.W + $export.F * (TypedArray != Base), O);\n\n    $export($export.S, NAME, {\n      BYTES_PER_ELEMENT: BYTES\n    });\n\n    $export($export.S + $export.F * fails(function () { Base.of.call(TypedArray, 1); }), NAME, {\n      from: $from,\n      of: $of\n    });\n\n    if (!(BYTES_PER_ELEMENT in TypedArrayPrototype)) hide(TypedArrayPrototype, BYTES_PER_ELEMENT, BYTES);\n\n    $export($export.P, NAME, proto);\n\n    setSpecies(NAME);\n\n    $export($export.P + $export.F * FORCED_SET, NAME, { set: $set });\n\n    $export($export.P + $export.F * !CORRECT_ITER_NAME, NAME, $iterators);\n\n    if (!LIBRARY && TypedArrayPrototype.toString != arrayToString) TypedArrayPrototype.toString = arrayToString;\n\n    $export($export.P + $export.F * fails(function () {\n      new TypedArray(1).slice();\n    }), NAME, { slice: $slice });\n\n    $export($export.P + $export.F * (fails(function () {\n      return [1, 2].toLocaleString() != new TypedArray([1, 2]).toLocaleString();\n    }) || !fails(function () {\n      TypedArrayPrototype.toLocaleString.call([1, 2]);\n    })), NAME, { toLocaleString: $toLocaleString });\n\n    Iterators[NAME] = CORRECT_ITER_NAME ? $nativeIterator : $iterator;\n    if (!LIBRARY && !CORRECT_ITER_NAME) hide(TypedArrayPrototype, ITERATOR, $iterator);\n  };\n} else module.exports = function () { /* empty */ };\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///26\n")},function(module,exports,__webpack_require__){eval("// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = __webpack_require__(5);\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjcuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL190by1wcmltaXRpdmUuanM/NmE5OSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyA3LjEuMSBUb1ByaW1pdGl2ZShpbnB1dCBbLCBQcmVmZXJyZWRUeXBlXSlcbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xuLy8gaW5zdGVhZCBvZiB0aGUgRVM2IHNwZWMgdmVyc2lvbiwgd2UgZGlkbid0IGltcGxlbWVudCBAQHRvUHJpbWl0aXZlIGNhc2Vcbi8vIGFuZCB0aGUgc2Vjb25kIGFyZ3VtZW50IC0gZmxhZyAtIHByZWZlcnJlZCB0eXBlIGlzIGEgc3RyaW5nXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCwgUykge1xuICBpZiAoIWlzT2JqZWN0KGl0KSkgcmV0dXJuIGl0O1xuICB2YXIgZm4sIHZhbDtcbiAgaWYgKFMgJiYgdHlwZW9mIChmbiA9IGl0LnRvU3RyaW5nKSA9PSAnZnVuY3Rpb24nICYmICFpc09iamVjdCh2YWwgPSBmbi5jYWxsKGl0KSkpIHJldHVybiB2YWw7XG4gIGlmICh0eXBlb2YgKGZuID0gaXQudmFsdWVPZikgPT0gJ2Z1bmN0aW9uJyAmJiAhaXNPYmplY3QodmFsID0gZm4uY2FsbChpdCkpKSByZXR1cm4gdmFsO1xuICBpZiAoIVMgJiYgdHlwZW9mIChmbiA9IGl0LnRvU3RyaW5nKSA9PSAnZnVuY3Rpb24nICYmICFpc09iamVjdCh2YWwgPSBmbi5jYWxsKGl0KSkpIHJldHVybiB2YWw7XG4gIHRocm93IFR5cGVFcnJvcihcIkNhbid0IGNvbnZlcnQgb2JqZWN0IHRvIHByaW1pdGl2ZSB2YWx1ZVwiKTtcbn07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///27\n")},function(module,exports,__webpack_require__){eval("var META = __webpack_require__(30)('meta');\nvar isObject = __webpack_require__(5);\nvar has = __webpack_require__(14);\nvar setDesc = __webpack_require__(9).f;\nvar id = 0;\nvar isExtensible = Object.isExtensible || function () {\n  return true;\n};\nvar FREEZE = !__webpack_require__(3)(function () {\n  return isExtensible(Object.preventExtensions({}));\n});\nvar setMeta = function (it) {\n  setDesc(it, META, { value: {\n    i: 'O' + ++id, // object ID\n    w: {}          // weak collections IDs\n  } });\n};\nvar fastKey = function (it, create) {\n  // return primitive with prefix\n  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n  if (!has(it, META)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return 'F';\n    // not necessary to add metadata\n    if (!create) return 'E';\n    // add missing metadata\n    setMeta(it);\n  // return object ID\n  } return it[META].i;\n};\nvar getWeak = function (it, create) {\n  if (!has(it, META)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return true;\n    // not necessary to add metadata\n    if (!create) return false;\n    // add missing metadata\n    setMeta(it);\n  // return hash weak collections IDs\n  } return it[META].w;\n};\n// add metadata on freeze-family methods calling\nvar onFreeze = function (it) {\n  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);\n  return it;\n};\nvar meta = module.exports = {\n  KEY: META,\n  NEED: false,\n  fastKey: fastKey,\n  getWeak: getWeak,\n  onFreeze: onFreeze\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjguanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19tZXRhLmpzPzY3YWIiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIE1FVEEgPSByZXF1aXJlKCcuL191aWQnKSgnbWV0YScpO1xudmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7XG52YXIgaGFzID0gcmVxdWlyZSgnLi9faGFzJyk7XG52YXIgc2V0RGVzYyA9IHJlcXVpcmUoJy4vX29iamVjdC1kcCcpLmY7XG52YXIgaWQgPSAwO1xudmFyIGlzRXh0ZW5zaWJsZSA9IE9iamVjdC5pc0V4dGVuc2libGUgfHwgZnVuY3Rpb24gKCkge1xuICByZXR1cm4gdHJ1ZTtcbn07XG52YXIgRlJFRVpFID0gIXJlcXVpcmUoJy4vX2ZhaWxzJykoZnVuY3Rpb24gKCkge1xuICByZXR1cm4gaXNFeHRlbnNpYmxlKE9iamVjdC5wcmV2ZW50RXh0ZW5zaW9ucyh7fSkpO1xufSk7XG52YXIgc2V0TWV0YSA9IGZ1bmN0aW9uIChpdCkge1xuICBzZXREZXNjKGl0LCBNRVRBLCB7IHZhbHVlOiB7XG4gICAgaTogJ08nICsgKytpZCwgLy8gb2JqZWN0IElEXG4gICAgdzoge30gICAgICAgICAgLy8gd2VhayBjb2xsZWN0aW9ucyBJRHNcbiAgfSB9KTtcbn07XG52YXIgZmFzdEtleSA9IGZ1bmN0aW9uIChpdCwgY3JlYXRlKSB7XG4gIC8vIHJldHVybiBwcmltaXRpdmUgd2l0aCBwcmVmaXhcbiAgaWYgKCFpc09iamVjdChpdCkpIHJldHVybiB0eXBlb2YgaXQgPT0gJ3N5bWJvbCcgPyBpdCA6ICh0eXBlb2YgaXQgPT0gJ3N0cmluZycgPyAnUycgOiAnUCcpICsgaXQ7XG4gIGlmICghaGFzKGl0LCBNRVRBKSkge1xuICAgIC8vIGNhbid0IHNldCBtZXRhZGF0YSB0byB1bmNhdWdodCBmcm96ZW4gb2JqZWN0XG4gICAgaWYgKCFpc0V4dGVuc2libGUoaXQpKSByZXR1cm4gJ0YnO1xuICAgIC8vIG5vdCBuZWNlc3NhcnkgdG8gYWRkIG1ldGFkYXRhXG4gICAgaWYgKCFjcmVhdGUpIHJldHVybiAnRSc7XG4gICAgLy8gYWRkIG1pc3NpbmcgbWV0YWRhdGFcbiAgICBzZXRNZXRhKGl0KTtcbiAgLy8gcmV0dXJuIG9iamVjdCBJRFxuICB9IHJldHVybiBpdFtNRVRBXS5pO1xufTtcbnZhciBnZXRXZWFrID0gZnVuY3Rpb24gKGl0LCBjcmVhdGUpIHtcbiAgaWYgKCFoYXMoaXQsIE1FVEEpKSB7XG4gICAgLy8gY2FuJ3Qgc2V0IG1ldGFkYXRhIHRvIHVuY2F1Z2h0IGZyb3plbiBvYmplY3RcbiAgICBpZiAoIWlzRXh0ZW5zaWJsZShpdCkpIHJldHVybiB0cnVlO1xuICAgIC8vIG5vdCBuZWNlc3NhcnkgdG8gYWRkIG1ldGFkYXRhXG4gICAgaWYgKCFjcmVhdGUpIHJldHVybiBmYWxzZTtcbiAgICAvLyBhZGQgbWlzc2luZyBtZXRhZGF0YVxuICAgIHNldE1ldGEoaXQpO1xuICAvLyByZXR1cm4gaGFzaCB3ZWFrIGNvbGxlY3Rpb25zIElEc1xuICB9IHJldHVybiBpdFtNRVRBXS53O1xufTtcbi8vIGFkZCBtZXRhZGF0YSBvbiBmcmVlemUtZmFtaWx5IG1ldGhvZHMgY2FsbGluZ1xudmFyIG9uRnJlZXplID0gZnVuY3Rpb24gKGl0KSB7XG4gIGlmIChGUkVFWkUgJiYgbWV0YS5ORUVEICYmIGlzRXh0ZW5zaWJsZShpdCkgJiYgIWhhcyhpdCwgTUVUQSkpIHNldE1ldGEoaXQpO1xuICByZXR1cm4gaXQ7XG59O1xudmFyIG1ldGEgPSBtb2R1bGUuZXhwb3J0cyA9IHtcbiAgS0VZOiBNRVRBLFxuICBORUVEOiBmYWxzZSxcbiAgZmFzdEtleTogZmFzdEtleSxcbiAgZ2V0V2VhazogZ2V0V2VhayxcbiAgb25GcmVlemU6IG9uRnJlZXplXG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///28\n")},function(module,exports){eval("module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjkuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19wcm9wZXJ0eS1kZXNjLmpzPzQ2MzAiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoYml0bWFwLCB2YWx1ZSkge1xuICByZXR1cm4ge1xuICAgIGVudW1lcmFibGU6ICEoYml0bWFwICYgMSksXG4gICAgY29uZmlndXJhYmxlOiAhKGJpdG1hcCAmIDIpLFxuICAgIHdyaXRhYmxlOiAhKGJpdG1hcCAmIDQpLFxuICAgIHZhbHVlOiB2YWx1ZVxuICB9O1xufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///29\n")},function(module,exports){eval("var id = 0;\nvar px = Math.random();\nmodule.exports = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL191aWQuanM/Y2E1YSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgaWQgPSAwO1xudmFyIHB4ID0gTWF0aC5yYW5kb20oKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGtleSkge1xuICByZXR1cm4gJ1N5bWJvbCgnLmNvbmNhdChrZXkgPT09IHVuZGVmaW5lZCA/ICcnIDoga2V5LCAnKV8nLCAoKytpZCArIHB4KS50b1N0cmluZygzNikpO1xufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///30\n")},function(module,exports){eval("module.exports = false;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19saWJyYXJ5LmpzPzJkMDAiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBmYWxzZTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///31\n")},function(module,exports,__webpack_require__){eval("// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys = __webpack_require__(93);\nvar enumBugKeys = __webpack_require__(64);\n\nmodule.exports = Object.keys || function keys(O) {\n  return $keys(O, enumBugKeys);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzIuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19vYmplY3Qta2V5cy5qcz8wZDU4Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIDE5LjEuMi4xNCAvIDE1LjIuMy4xNCBPYmplY3Qua2V5cyhPKVxudmFyICRrZXlzID0gcmVxdWlyZSgnLi9fb2JqZWN0LWtleXMtaW50ZXJuYWwnKTtcbnZhciBlbnVtQnVnS2V5cyA9IHJlcXVpcmUoJy4vX2VudW0tYnVnLWtleXMnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBPYmplY3Qua2V5cyB8fCBmdW5jdGlvbiBrZXlzKE8pIHtcbiAgcmV0dXJuICRrZXlzKE8sIGVudW1CdWdLZXlzKTtcbn07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///32\n")},function(module,exports,__webpack_require__){eval("var toInteger = __webpack_require__(20);\nvar max = Math.max;\nvar min = Math.min;\nmodule.exports = function (index, length) {\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL190by1hYnNvbHV0ZS1pbmRleC5qcz83N2YxIl0sInNvdXJjZXNDb250ZW50IjpbInZhciB0b0ludGVnZXIgPSByZXF1aXJlKCcuL190by1pbnRlZ2VyJyk7XG52YXIgbWF4ID0gTWF0aC5tYXg7XG52YXIgbWluID0gTWF0aC5taW47XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpbmRleCwgbGVuZ3RoKSB7XG4gIGluZGV4ID0gdG9JbnRlZ2VyKGluZGV4KTtcbiAgcmV0dXJuIGluZGV4IDwgMCA/IG1heChpbmRleCArIGxlbmd0aCwgMCkgOiBtaW4oaW5kZXgsIGxlbmd0aCk7XG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///33\n")},function(module,exports,__webpack_require__){eval("// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\nvar anObject = __webpack_require__(4);\nvar dPs = __webpack_require__(94);\nvar enumBugKeys = __webpack_require__(64);\nvar IE_PROTO = __webpack_require__(63)('IE_PROTO');\nvar Empty = function () { /* empty */ };\nvar PROTOTYPE = 'prototype';\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar createDict = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = __webpack_require__(61)('iframe');\n  var i = enumBugKeys.length;\n  var lt = '<';\n  var gt = '>';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  __webpack_require__(65).appendChild(iframe);\n  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n  // createDict = iframe.contentWindow.Object;\n  // html.removeChild(iframe);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  createDict = iframeDocument.F;\n  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];\n  return createDict();\n};\n\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = createDict();\n  return Properties === undefined ? result : dPs(result, Properties);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzQuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19vYmplY3QtY3JlYXRlLmpzPzJhZWIiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gMTkuMS4yLjIgLyAxNS4yLjMuNSBPYmplY3QuY3JlYXRlKE8gWywgUHJvcGVydGllc10pXG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbnZhciBkUHMgPSByZXF1aXJlKCcuL19vYmplY3QtZHBzJyk7XG52YXIgZW51bUJ1Z0tleXMgPSByZXF1aXJlKCcuL19lbnVtLWJ1Zy1rZXlzJyk7XG52YXIgSUVfUFJPVE8gPSByZXF1aXJlKCcuL19zaGFyZWQta2V5JykoJ0lFX1BST1RPJyk7XG52YXIgRW1wdHkgPSBmdW5jdGlvbiAoKSB7IC8qIGVtcHR5ICovIH07XG52YXIgUFJPVE9UWVBFID0gJ3Byb3RvdHlwZSc7XG5cbi8vIENyZWF0ZSBvYmplY3Qgd2l0aCBmYWtlIGBudWxsYCBwcm90b3R5cGU6IHVzZSBpZnJhbWUgT2JqZWN0IHdpdGggY2xlYXJlZCBwcm90b3R5cGVcbnZhciBjcmVhdGVEaWN0ID0gZnVuY3Rpb24gKCkge1xuICAvLyBUaHJhc2gsIHdhc3RlIGFuZCBzb2RvbXk6IElFIEdDIGJ1Z1xuICB2YXIgaWZyYW1lID0gcmVxdWlyZSgnLi9fZG9tLWNyZWF0ZScpKCdpZnJhbWUnKTtcbiAgdmFyIGkgPSBlbnVtQnVnS2V5cy5sZW5ndGg7XG4gIHZhciBsdCA9ICc8JztcbiAgdmFyIGd0ID0gJz4nO1xuICB2YXIgaWZyYW1lRG9jdW1lbnQ7XG4gIGlmcmFtZS5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuICByZXF1aXJlKCcuL19odG1sJykuYXBwZW5kQ2hpbGQoaWZyYW1lKTtcbiAgaWZyYW1lLnNyYyA9ICdqYXZhc2NyaXB0Oic7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tc2NyaXB0LXVybFxuICAvLyBjcmVhdGVEaWN0ID0gaWZyYW1lLmNvbnRlbnRXaW5kb3cuT2JqZWN0O1xuICAvLyBodG1sLnJlbW92ZUNoaWxkKGlmcmFtZSk7XG4gIGlmcmFtZURvY3VtZW50ID0gaWZyYW1lLmNvbnRlbnRXaW5kb3cuZG9jdW1lbnQ7XG4gIGlmcmFtZURvY3VtZW50Lm9wZW4oKTtcbiAgaWZyYW1lRG9jdW1lbnQud3JpdGUobHQgKyAnc2NyaXB0JyArIGd0ICsgJ2RvY3VtZW50LkY9T2JqZWN0JyArIGx0ICsgJy9zY3JpcHQnICsgZ3QpO1xuICBpZnJhbWVEb2N1bWVudC5jbG9zZSgpO1xuICBjcmVhdGVEaWN0ID0gaWZyYW1lRG9jdW1lbnQuRjtcbiAgd2hpbGUgKGktLSkgZGVsZXRlIGNyZWF0ZURpY3RbUFJPVE9UWVBFXVtlbnVtQnVnS2V5c1tpXV07XG4gIHJldHVybiBjcmVhdGVEaWN0KCk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IE9iamVjdC5jcmVhdGUgfHwgZnVuY3Rpb24gY3JlYXRlKE8sIFByb3BlcnRpZXMpIHtcbiAgdmFyIHJlc3VsdDtcbiAgaWYgKE8gIT09IG51bGwpIHtcbiAgICBFbXB0eVtQUk9UT1RZUEVdID0gYW5PYmplY3QoTyk7XG4gICAgcmVzdWx0ID0gbmV3IEVtcHR5KCk7XG4gICAgRW1wdHlbUFJPVE9UWVBFXSA9IG51bGw7XG4gICAgLy8gYWRkIFwiX19wcm90b19fXCIgZm9yIE9iamVjdC5nZXRQcm90b3R5cGVPZiBwb2x5ZmlsbFxuICAgIHJlc3VsdFtJRV9QUk9UT10gPSBPO1xuICB9IGVsc2UgcmVzdWx0ID0gY3JlYXRlRGljdCgpO1xuICByZXR1cm4gUHJvcGVydGllcyA9PT0gdW5kZWZpbmVkID8gcmVzdWx0IDogZFBzKHJlc3VsdCwgUHJvcGVydGllcyk7XG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///34\n")},function(module,exports,__webpack_require__){eval("// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)\nvar $keys = __webpack_require__(93);\nvar hiddenKeys = __webpack_require__(64).concat('length', 'prototype');\n\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return $keys(O, hiddenKeys);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19vYmplY3QtZ29wbi5qcz85MDkzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIDE5LjEuMi43IC8gMTUuMi4zLjQgT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMoTylcbnZhciAka2V5cyA9IHJlcXVpcmUoJy4vX29iamVjdC1rZXlzLWludGVybmFsJyk7XG52YXIgaGlkZGVuS2V5cyA9IHJlcXVpcmUoJy4vX2VudW0tYnVnLWtleXMnKS5jb25jYXQoJ2xlbmd0aCcsICdwcm90b3R5cGUnKTtcblxuZXhwb3J0cy5mID0gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMgfHwgZnVuY3Rpb24gZ2V0T3duUHJvcGVydHlOYW1lcyhPKSB7XG4gIHJldHVybiAka2V5cyhPLCBoaWRkZW5LZXlzKTtcbn07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///35\n")},function(module,exports,__webpack_require__){eval("// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\nvar has = __webpack_require__(14);\nvar toObject = __webpack_require__(11);\nvar IE_PROTO = __webpack_require__(63)('IE_PROTO');\nvar ObjectProto = Object.prototype;\n\nmodule.exports = Object.getPrototypeOf || function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectProto : null;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzYuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19vYmplY3QtZ3BvLmpzPzM4ZmQiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gMTkuMS4yLjkgLyAxNS4yLjMuMiBPYmplY3QuZ2V0UHJvdG90eXBlT2YoTylcbnZhciBoYXMgPSByZXF1aXJlKCcuL19oYXMnKTtcbnZhciB0b09iamVjdCA9IHJlcXVpcmUoJy4vX3RvLW9iamVjdCcpO1xudmFyIElFX1BST1RPID0gcmVxdWlyZSgnLi9fc2hhcmVkLWtleScpKCdJRV9QUk9UTycpO1xudmFyIE9iamVjdFByb3RvID0gT2JqZWN0LnByb3RvdHlwZTtcblxubW9kdWxlLmV4cG9ydHMgPSBPYmplY3QuZ2V0UHJvdG90eXBlT2YgfHwgZnVuY3Rpb24gKE8pIHtcbiAgTyA9IHRvT2JqZWN0KE8pO1xuICBpZiAoaGFzKE8sIElFX1BST1RPKSkgcmV0dXJuIE9bSUVfUFJPVE9dO1xuICBpZiAodHlwZW9mIE8uY29uc3RydWN0b3IgPT0gJ2Z1bmN0aW9uJyAmJiBPIGluc3RhbmNlb2YgTy5jb25zdHJ1Y3Rvcikge1xuICAgIHJldHVybiBPLmNvbnN0cnVjdG9yLnByb3RvdHlwZTtcbiAgfSByZXR1cm4gTyBpbnN0YW5jZW9mIE9iamVjdCA/IE9iamVjdFByb3RvIDogbnVsbDtcbn07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///36\n")},function(module,exports,__webpack_require__){eval("// 22.1.3.31 Array.prototype[@@unscopables]\nvar UNSCOPABLES = __webpack_require__(6)('unscopables');\nvar ArrayProto = Array.prototype;\nif (ArrayProto[UNSCOPABLES] == undefined) __webpack_require__(15)(ArrayProto, UNSCOPABLES, {});\nmodule.exports = function (key) {\n  ArrayProto[UNSCOPABLES][key] = true;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzcuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19hZGQtdG8tdW5zY29wYWJsZXMuanM/OWM2YyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyAyMi4xLjMuMzEgQXJyYXkucHJvdG90eXBlW0BAdW5zY29wYWJsZXNdXG52YXIgVU5TQ09QQUJMRVMgPSByZXF1aXJlKCcuL193a3MnKSgndW5zY29wYWJsZXMnKTtcbnZhciBBcnJheVByb3RvID0gQXJyYXkucHJvdG90eXBlO1xuaWYgKEFycmF5UHJvdG9bVU5TQ09QQUJMRVNdID09IHVuZGVmaW5lZCkgcmVxdWlyZSgnLi9faGlkZScpKEFycmF5UHJvdG8sIFVOU0NPUEFCTEVTLCB7fSk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChrZXkpIHtcbiAgQXJyYXlQcm90b1tVTlNDT1BBQkxFU11ba2V5XSA9IHRydWU7XG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///37\n")},function(module,exports,__webpack_require__){eval("var isObject = __webpack_require__(5);\nmodule.exports = function (it, TYPE) {\n  if (!isObject(it) || it._t !== TYPE) throw TypeError('Incompatible receiver, ' + TYPE + ' required!');\n  return it;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzguanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL192YWxpZGF0ZS1jb2xsZWN0aW9uLmpzP2IzOWEiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCwgVFlQRSkge1xuICBpZiAoIWlzT2JqZWN0KGl0KSB8fCBpdC5fdCAhPT0gVFlQRSkgdGhyb3cgVHlwZUVycm9yKCdJbmNvbXBhdGlibGUgcmVjZWl2ZXIsICcgKyBUWVBFICsgJyByZXF1aXJlZCEnKTtcbiAgcmV0dXJuIGl0O1xufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///38\n")},function(module,exports,__webpack_require__){eval("var def = __webpack_require__(9).f;\nvar has = __webpack_require__(14);\nvar TAG = __webpack_require__(6)('toStringTag');\n\nmodule.exports = function (it, tag, stat) {\n  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzkuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19zZXQtdG8tc3RyaW5nLXRhZy5qcz83ZjIwIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBkZWYgPSByZXF1aXJlKCcuL19vYmplY3QtZHAnKS5mO1xudmFyIGhhcyA9IHJlcXVpcmUoJy4vX2hhcycpO1xudmFyIFRBRyA9IHJlcXVpcmUoJy4vX3drcycpKCd0b1N0cmluZ1RhZycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCwgdGFnLCBzdGF0KSB7XG4gIGlmIChpdCAmJiAhaGFzKGl0ID0gc3RhdCA/IGl0IDogaXQucHJvdG90eXBlLCBUQUcpKSBkZWYoaXQsIFRBRywgeyBjb25maWd1cmFibGU6IHRydWUsIHZhbHVlOiB0YWcgfSk7XG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///39\n")},function(module,exports,__webpack_require__){eval("var $export = __webpack_require__(1);\nvar defined = __webpack_require__(25);\nvar fails = __webpack_require__(3);\nvar spaces = __webpack_require__(67);\nvar space = '[' + spaces + ']';\nvar non = '\\u200b\\u0085';\nvar ltrim = RegExp('^' + space + space + '*');\nvar rtrim = RegExp(space + space + '*$');\n\nvar exporter = function (KEY, exec, ALIAS) {\n  var exp = {};\n  var FORCE = fails(function () {\n    return !!spaces[KEY]() || non[KEY]() != non;\n  });\n  var fn = exp[KEY] = FORCE ? exec(trim) : spaces[KEY];\n  if (ALIAS) exp[ALIAS] = fn;\n  $export($export.P + $export.F * FORCE, 'String', exp);\n};\n\n// 1 -> String#trimLeft\n// 2 -> String#trimRight\n// 3 -> String#trim\nvar trim = exporter.trim = function (string, TYPE) {\n  string = String(defined(string));\n  if (TYPE & 1) string = string.replace(ltrim, '');\n  if (TYPE & 2) string = string.replace(rtrim, '');\n  return string;\n};\n\nmodule.exports = exporter;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19zdHJpbmctdHJpbS5qcz9hYTc3Il0sInNvdXJjZXNDb250ZW50IjpbInZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgZGVmaW5lZCA9IHJlcXVpcmUoJy4vX2RlZmluZWQnKTtcbnZhciBmYWlscyA9IHJlcXVpcmUoJy4vX2ZhaWxzJyk7XG52YXIgc3BhY2VzID0gcmVxdWlyZSgnLi9fc3RyaW5nLXdzJyk7XG52YXIgc3BhY2UgPSAnWycgKyBzcGFjZXMgKyAnXSc7XG52YXIgbm9uID0gJ1xcdTIwMGJcXHUwMDg1JztcbnZhciBsdHJpbSA9IFJlZ0V4cCgnXicgKyBzcGFjZSArIHNwYWNlICsgJyonKTtcbnZhciBydHJpbSA9IFJlZ0V4cChzcGFjZSArIHNwYWNlICsgJyokJyk7XG5cbnZhciBleHBvcnRlciA9IGZ1bmN0aW9uIChLRVksIGV4ZWMsIEFMSUFTKSB7XG4gIHZhciBleHAgPSB7fTtcbiAgdmFyIEZPUkNFID0gZmFpbHMoZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiAhIXNwYWNlc1tLRVldKCkgfHwgbm9uW0tFWV0oKSAhPSBub247XG4gIH0pO1xuICB2YXIgZm4gPSBleHBbS0VZXSA9IEZPUkNFID8gZXhlYyh0cmltKSA6IHNwYWNlc1tLRVldO1xuICBpZiAoQUxJQVMpIGV4cFtBTElBU10gPSBmbjtcbiAgJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LkYgKiBGT1JDRSwgJ1N0cmluZycsIGV4cCk7XG59O1xuXG4vLyAxIC0+IFN0cmluZyN0cmltTGVmdFxuLy8gMiAtPiBTdHJpbmcjdHJpbVJpZ2h0XG4vLyAzIC0+IFN0cmluZyN0cmltXG52YXIgdHJpbSA9IGV4cG9ydGVyLnRyaW0gPSBmdW5jdGlvbiAoc3RyaW5nLCBUWVBFKSB7XG4gIHN0cmluZyA9IFN0cmluZyhkZWZpbmVkKHN0cmluZykpO1xuICBpZiAoVFlQRSAmIDEpIHN0cmluZyA9IHN0cmluZy5yZXBsYWNlKGx0cmltLCAnJyk7XG4gIGlmIChUWVBFICYgMikgc3RyaW5nID0gc3RyaW5nLnJlcGxhY2UocnRyaW0sICcnKTtcbiAgcmV0dXJuIHN0cmluZztcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0ZXI7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///40\n")},function(module,exports){eval("module.exports = {};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19pdGVyYXRvcnMuanM/ODRmMiJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHt9O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///41\n")},function(module,exports,__webpack_require__){"use strict";eval("\nvar global = __webpack_require__(2);\nvar dP = __webpack_require__(9);\nvar DESCRIPTORS = __webpack_require__(10);\nvar SPECIES = __webpack_require__(6)('species');\n\nmodule.exports = function (KEY) {\n  var C = global[KEY];\n  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {\n    configurable: true,\n    get: function () { return this; }\n  });\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDIuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19zZXQtc3BlY2llcy5qcz83YTU2Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcbnZhciBnbG9iYWwgPSByZXF1aXJlKCcuL19nbG9iYWwnKTtcbnZhciBkUCA9IHJlcXVpcmUoJy4vX29iamVjdC1kcCcpO1xudmFyIERFU0NSSVBUT1JTID0gcmVxdWlyZSgnLi9fZGVzY3JpcHRvcnMnKTtcbnZhciBTUEVDSUVTID0gcmVxdWlyZSgnLi9fd2tzJykoJ3NwZWNpZXMnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoS0VZKSB7XG4gIHZhciBDID0gZ2xvYmFsW0tFWV07XG4gIGlmIChERVNDUklQVE9SUyAmJiBDICYmICFDW1NQRUNJRVNdKSBkUC5mKEMsIFNQRUNJRVMsIHtcbiAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiB0aGlzOyB9XG4gIH0pO1xufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///42\n")},function(module,exports){eval("module.exports = function (it, Constructor, name, forbiddenField) {\n  if (!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)) {\n    throw TypeError(name + ': incorrect invocation!');\n  } return it;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19hbi1pbnN0YW5jZS5qcz9mNjA1Il0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0LCBDb25zdHJ1Y3RvciwgbmFtZSwgZm9yYmlkZGVuRmllbGQpIHtcbiAgaWYgKCEoaXQgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikgfHwgKGZvcmJpZGRlbkZpZWxkICE9PSB1bmRlZmluZWQgJiYgZm9yYmlkZGVuRmllbGQgaW4gaXQpKSB7XG4gICAgdGhyb3cgVHlwZUVycm9yKG5hbWUgKyAnOiBpbmNvcnJlY3QgaW52b2NhdGlvbiEnKTtcbiAgfSByZXR1cm4gaXQ7XG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///43\n")},function(module,exports,__webpack_require__){eval("var redefine = __webpack_require__(12);\nmodule.exports = function (target, src, safe) {\n  for (var key in src) redefine(target, key, src[key], safe);\n  return target;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDQuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19yZWRlZmluZS1hbGwuanM/ZGNiYyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgcmVkZWZpbmUgPSByZXF1aXJlKCcuL19yZWRlZmluZScpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAodGFyZ2V0LCBzcmMsIHNhZmUpIHtcbiAgZm9yICh2YXIga2V5IGluIHNyYykgcmVkZWZpbmUodGFyZ2V0LCBrZXksIHNyY1trZXldLCBzYWZlKTtcbiAgcmV0dXJuIHRhcmdldDtcbn07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///44\n")},function(module,exports,__webpack_require__){eval("// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = __webpack_require__(24);\n// eslint-disable-next-line no-prototype-builtins\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19pb2JqZWN0LmpzPzYyNmEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZmFsbGJhY2sgZm9yIG5vbi1hcnJheS1saWtlIEVTMyBhbmQgbm9uLWVudW1lcmFibGUgb2xkIFY4IHN0cmluZ3NcbnZhciBjb2YgPSByZXF1aXJlKCcuL19jb2YnKTtcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wcm90b3R5cGUtYnVpbHRpbnNcbm1vZHVsZS5leHBvcnRzID0gT2JqZWN0KCd6JykucHJvcGVydHlJc0VudW1lcmFibGUoMCkgPyBPYmplY3QgOiBmdW5jdGlvbiAoaXQpIHtcbiAgcmV0dXJuIGNvZihpdCkgPT0gJ1N0cmluZycgPyBpdC5zcGxpdCgnJykgOiBPYmplY3QoaXQpO1xufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///45\n")},function(module,exports){eval("exports.f = {}.propertyIsEnumerable;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDYuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19vYmplY3QtcGllLmpzPzUyYTciXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0cy5mID0ge30ucHJvcGVydHlJc0VudW1lcmFibGU7XG4iXSwibWFwcGluZ3MiOiJBQUFBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///46\n")},function(module,exports,__webpack_require__){eval("// getting tag from 19.1.3.6 Object.prototype.toString()\nvar cof = __webpack_require__(24);\nvar TAG = __webpack_require__(6)('toStringTag');\n// ES3 wrong here\nvar ARG = cof(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (e) { /* empty */ }\n};\n\nmodule.exports = function (it) {\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T\n    // builtinTag case\n    : ARG ? cof(O)\n    // ES3 arguments fallback\n    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDcuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19jbGFzc29mLmpzPzIzYzYiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZ2V0dGluZyB0YWcgZnJvbSAxOS4xLjMuNiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nKClcbnZhciBjb2YgPSByZXF1aXJlKCcuL19jb2YnKTtcbnZhciBUQUcgPSByZXF1aXJlKCcuL193a3MnKSgndG9TdHJpbmdUYWcnKTtcbi8vIEVTMyB3cm9uZyBoZXJlXG52YXIgQVJHID0gY29mKGZ1bmN0aW9uICgpIHsgcmV0dXJuIGFyZ3VtZW50czsgfSgpKSA9PSAnQXJndW1lbnRzJztcblxuLy8gZmFsbGJhY2sgZm9yIElFMTEgU2NyaXB0IEFjY2VzcyBEZW5pZWQgZXJyb3JcbnZhciB0cnlHZXQgPSBmdW5jdGlvbiAoaXQsIGtleSkge1xuICB0cnkge1xuICAgIHJldHVybiBpdFtrZXldO1xuICB9IGNhdGNoIChlKSB7IC8qIGVtcHR5ICovIH1cbn07XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIHZhciBPLCBULCBCO1xuICByZXR1cm4gaXQgPT09IHVuZGVmaW5lZCA/ICdVbmRlZmluZWQnIDogaXQgPT09IG51bGwgPyAnTnVsbCdcbiAgICAvLyBAQHRvU3RyaW5nVGFnIGNhc2VcbiAgICA6IHR5cGVvZiAoVCA9IHRyeUdldChPID0gT2JqZWN0KGl0KSwgVEFHKSkgPT0gJ3N0cmluZycgPyBUXG4gICAgLy8gYnVpbHRpblRhZyBjYXNlXG4gICAgOiBBUkcgPyBjb2YoTylcbiAgICAvLyBFUzMgYXJndW1lbnRzIGZhbGxiYWNrXG4gICAgOiAoQiA9IGNvZihPKSkgPT0gJ09iamVjdCcgJiYgdHlwZW9mIE8uY2FsbGVlID09ICdmdW5jdGlvbicgPyAnQXJndW1lbnRzJyA6IEI7XG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///47\n")},function(module,exports,__webpack_require__){eval("// 7.3.20 SpeciesConstructor(O, defaultConstructor)\nvar anObject = __webpack_require__(4);\nvar aFunction = __webpack_require__(19);\nvar SPECIES = __webpack_require__(6)('species');\nmodule.exports = function (O, D) {\n  var C = anObject(O).constructor;\n  var S;\n  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDguanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19zcGVjaWVzLWNvbnN0cnVjdG9yLmpzP2ViZDYiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gNy4zLjIwIFNwZWNpZXNDb25zdHJ1Y3RvcihPLCBkZWZhdWx0Q29uc3RydWN0b3IpXG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbnZhciBhRnVuY3Rpb24gPSByZXF1aXJlKCcuL19hLWZ1bmN0aW9uJyk7XG52YXIgU1BFQ0lFUyA9IHJlcXVpcmUoJy4vX3drcycpKCdzcGVjaWVzJyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChPLCBEKSB7XG4gIHZhciBDID0gYW5PYmplY3QoTykuY29uc3RydWN0b3I7XG4gIHZhciBTO1xuICByZXR1cm4gQyA9PT0gdW5kZWZpbmVkIHx8IChTID0gYW5PYmplY3QoQylbU1BFQ0lFU10pID09IHVuZGVmaW5lZCA/IEQgOiBhRnVuY3Rpb24oUyk7XG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///48\n")},function(module,exports,__webpack_require__){eval("var core = __webpack_require__(8);\nvar global = __webpack_require__(2);\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || (global[SHARED] = {});\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: core.version,\n  mode: __webpack_require__(31) ? 'pure' : 'global',\n  copyright: '© 2019 Denis Pushkarev (zloirock.ru)'\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDkuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19zaGFyZWQuanM/NTUzNyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgY29yZSA9IHJlcXVpcmUoJy4vX2NvcmUnKTtcbnZhciBnbG9iYWwgPSByZXF1aXJlKCcuL19nbG9iYWwnKTtcbnZhciBTSEFSRUQgPSAnX19jb3JlLWpzX3NoYXJlZF9fJztcbnZhciBzdG9yZSA9IGdsb2JhbFtTSEFSRURdIHx8IChnbG9iYWxbU0hBUkVEXSA9IHt9KTtcblxuKG1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGtleSwgdmFsdWUpIHtcbiAgcmV0dXJuIHN0b3JlW2tleV0gfHwgKHN0b3JlW2tleV0gPSB2YWx1ZSAhPT0gdW5kZWZpbmVkID8gdmFsdWUgOiB7fSk7XG59KSgndmVyc2lvbnMnLCBbXSkucHVzaCh7XG4gIHZlcnNpb246IGNvcmUudmVyc2lvbixcbiAgbW9kZTogcmVxdWlyZSgnLi9fbGlicmFyeScpID8gJ3B1cmUnIDogJ2dsb2JhbCcsXG4gIGNvcHlyaWdodDogJ8KpIDIwMTkgRGVuaXMgUHVzaGthcmV2ICh6bG9pcm9jay5ydSknXG59KTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///49\n")},function(module,exports,__webpack_require__){eval("// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = __webpack_require__(16);\nvar toLength = __webpack_require__(7);\nvar toAbsoluteIndex = __webpack_require__(33);\nmodule.exports = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {\n      if (O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19hcnJheS1pbmNsdWRlcy5qcz9jMzY2Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGZhbHNlIC0+IEFycmF5I2luZGV4T2Zcbi8vIHRydWUgIC0+IEFycmF5I2luY2x1ZGVzXG52YXIgdG9JT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8taW9iamVjdCcpO1xudmFyIHRvTGVuZ3RoID0gcmVxdWlyZSgnLi9fdG8tbGVuZ3RoJyk7XG52YXIgdG9BYnNvbHV0ZUluZGV4ID0gcmVxdWlyZSgnLi9fdG8tYWJzb2x1dGUtaW5kZXgnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKElTX0lOQ0xVREVTKSB7XG4gIHJldHVybiBmdW5jdGlvbiAoJHRoaXMsIGVsLCBmcm9tSW5kZXgpIHtcbiAgICB2YXIgTyA9IHRvSU9iamVjdCgkdGhpcyk7XG4gICAgdmFyIGxlbmd0aCA9IHRvTGVuZ3RoKE8ubGVuZ3RoKTtcbiAgICB2YXIgaW5kZXggPSB0b0Fic29sdXRlSW5kZXgoZnJvbUluZGV4LCBsZW5ndGgpO1xuICAgIHZhciB2YWx1ZTtcbiAgICAvLyBBcnJheSNpbmNsdWRlcyB1c2VzIFNhbWVWYWx1ZVplcm8gZXF1YWxpdHkgYWxnb3JpdGhtXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXNlbGYtY29tcGFyZVxuICAgIGlmIChJU19JTkNMVURFUyAmJiBlbCAhPSBlbCkgd2hpbGUgKGxlbmd0aCA+IGluZGV4KSB7XG4gICAgICB2YWx1ZSA9IE9baW5kZXgrK107XG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tc2VsZi1jb21wYXJlXG4gICAgICBpZiAodmFsdWUgIT0gdmFsdWUpIHJldHVybiB0cnVlO1xuICAgIC8vIEFycmF5I2luZGV4T2YgaWdub3JlcyBob2xlcywgQXJyYXkjaW5jbHVkZXMgLSBub3RcbiAgICB9IGVsc2UgZm9yICg7bGVuZ3RoID4gaW5kZXg7IGluZGV4KyspIGlmIChJU19JTkNMVURFUyB8fCBpbmRleCBpbiBPKSB7XG4gICAgICBpZiAoT1tpbmRleF0gPT09IGVsKSByZXR1cm4gSVNfSU5DTFVERVMgfHwgaW5kZXggfHwgMDtcbiAgICB9IHJldHVybiAhSVNfSU5DTFVERVMgJiYgLTE7XG4gIH07XG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///50\n")},function(module,exports){eval("exports.f = Object.getOwnPropertySymbols;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19vYmplY3QtZ29wcy5qcz8yNjIxIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydHMuZiA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHM7XG4iXSwibWFwcGluZ3MiOiJBQUFBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///51\n")},function(module,exports,__webpack_require__){eval("// 7.2.2 IsArray(argument)\nvar cof = __webpack_require__(24);\nmodule.exports = Array.isArray || function isArray(arg) {\n  return cof(arg) == 'Array';\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTIuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19pcy1hcnJheS5qcz8xMTY5Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIDcuMi4yIElzQXJyYXkoYXJndW1lbnQpXG52YXIgY29mID0gcmVxdWlyZSgnLi9fY29mJyk7XG5tb2R1bGUuZXhwb3J0cyA9IEFycmF5LmlzQXJyYXkgfHwgZnVuY3Rpb24gaXNBcnJheShhcmcpIHtcbiAgcmV0dXJuIGNvZihhcmcpID09ICdBcnJheSc7XG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///52\n")},function(module,exports,__webpack_require__){eval("var ITERATOR = __webpack_require__(6)('iterator');\nvar SAFE_CLOSING = false;\n\ntry {\n  var riter = [7][ITERATOR]();\n  riter['return'] = function () { SAFE_CLOSING = true; };\n  // eslint-disable-next-line no-throw-literal\n  Array.from(riter, function () { throw 2; });\n} catch (e) { /* empty */ }\n\nmodule.exports = function (exec, skipClosing) {\n  if (!skipClosing && !SAFE_CLOSING) return false;\n  var safe = false;\n  try {\n    var arr = [7];\n    var iter = arr[ITERATOR]();\n    iter.next = function () { return { done: safe = true }; };\n    arr[ITERATOR] = function () { return iter; };\n    exec(arr);\n  } catch (e) { /* empty */ }\n  return safe;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19pdGVyLWRldGVjdC5qcz81Y2M1Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBJVEVSQVRPUiA9IHJlcXVpcmUoJy4vX3drcycpKCdpdGVyYXRvcicpO1xudmFyIFNBRkVfQ0xPU0lORyA9IGZhbHNlO1xuXG50cnkge1xuICB2YXIgcml0ZXIgPSBbN11bSVRFUkFUT1JdKCk7XG4gIHJpdGVyWydyZXR1cm4nXSA9IGZ1bmN0aW9uICgpIHsgU0FGRV9DTE9TSU5HID0gdHJ1ZTsgfTtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXRocm93LWxpdGVyYWxcbiAgQXJyYXkuZnJvbShyaXRlciwgZnVuY3Rpb24gKCkgeyB0aHJvdyAyOyB9KTtcbn0gY2F0Y2ggKGUpIHsgLyogZW1wdHkgKi8gfVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChleGVjLCBza2lwQ2xvc2luZykge1xuICBpZiAoIXNraXBDbG9zaW5nICYmICFTQUZFX0NMT1NJTkcpIHJldHVybiBmYWxzZTtcbiAgdmFyIHNhZmUgPSBmYWxzZTtcbiAgdHJ5IHtcbiAgICB2YXIgYXJyID0gWzddO1xuICAgIHZhciBpdGVyID0gYXJyW0lURVJBVE9SXSgpO1xuICAgIGl0ZXIubmV4dCA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHsgZG9uZTogc2FmZSA9IHRydWUgfTsgfTtcbiAgICBhcnJbSVRFUkFUT1JdID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gaXRlcjsgfTtcbiAgICBleGVjKGFycik7XG4gIH0gY2F0Y2ggKGUpIHsgLyogZW1wdHkgKi8gfVxuICByZXR1cm4gc2FmZTtcbn07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///53\n")},function(module,exports,__webpack_require__){"use strict";eval("\n// 21.2.5.3 get RegExp.prototype.flags\nvar anObject = __webpack_require__(4);\nmodule.exports = function () {\n  var that = anObject(this);\n  var result = '';\n  if (that.global) result += 'g';\n  if (that.ignoreCase) result += 'i';\n  if (that.multiline) result += 'm';\n  if (that.unicode) result += 'u';\n  if (that.sticky) result += 'y';\n  return result;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTQuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19mbGFncy5qcz8wYmZiIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0Jztcbi8vIDIxLjIuNS4zIGdldCBSZWdFeHAucHJvdG90eXBlLmZsYWdzXG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKCkge1xuICB2YXIgdGhhdCA9IGFuT2JqZWN0KHRoaXMpO1xuICB2YXIgcmVzdWx0ID0gJyc7XG4gIGlmICh0aGF0Lmdsb2JhbCkgcmVzdWx0ICs9ICdnJztcbiAgaWYgKHRoYXQuaWdub3JlQ2FzZSkgcmVzdWx0ICs9ICdpJztcbiAgaWYgKHRoYXQubXVsdGlsaW5lKSByZXN1bHQgKz0gJ20nO1xuICBpZiAodGhhdC51bmljb2RlKSByZXN1bHQgKz0gJ3UnO1xuICBpZiAodGhhdC5zdGlja3kpIHJlc3VsdCArPSAneSc7XG4gIHJldHVybiByZXN1bHQ7XG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///54\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nvar classof = __webpack_require__(47);\nvar builtinExec = RegExp.prototype.exec;\n\n // `RegExpExec` abstract operation\n// https://tc39.github.io/ecma262/#sec-regexpexec\nmodule.exports = function (R, S) {\n  var exec = R.exec;\n  if (typeof exec === 'function') {\n    var result = exec.call(R, S);\n    if (typeof result !== 'object') {\n      throw new TypeError('RegExp exec method returned something other than an Object or null');\n    }\n    return result;\n  }\n  if (classof(R) !== 'RegExp') {\n    throw new TypeError('RegExp#exec called on incompatible receiver');\n  }\n  return builtinExec.call(R, S);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19yZWdleHAtZXhlYy1hYnN0cmFjdC5qcz81ZjFiIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIGNsYXNzb2YgPSByZXF1aXJlKCcuL19jbGFzc29mJyk7XG52YXIgYnVpbHRpbkV4ZWMgPSBSZWdFeHAucHJvdG90eXBlLmV4ZWM7XG5cbiAvLyBgUmVnRXhwRXhlY2AgYWJzdHJhY3Qgb3BlcmF0aW9uXG4vLyBodHRwczovL3RjMzkuZ2l0aHViLmlvL2VjbWEyNjIvI3NlYy1yZWdleHBleGVjXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChSLCBTKSB7XG4gIHZhciBleGVjID0gUi5leGVjO1xuICBpZiAodHlwZW9mIGV4ZWMgPT09ICdmdW5jdGlvbicpIHtcbiAgICB2YXIgcmVzdWx0ID0gZXhlYy5jYWxsKFIsIFMpO1xuICAgIGlmICh0eXBlb2YgcmVzdWx0ICE9PSAnb2JqZWN0Jykge1xuICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignUmVnRXhwIGV4ZWMgbWV0aG9kIHJldHVybmVkIHNvbWV0aGluZyBvdGhlciB0aGFuIGFuIE9iamVjdCBvciBudWxsJyk7XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG4gIH1cbiAgaWYgKGNsYXNzb2YoUikgIT09ICdSZWdFeHAnKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignUmVnRXhwI2V4ZWMgY2FsbGVkIG9uIGluY29tcGF0aWJsZSByZWNlaXZlcicpO1xuICB9XG4gIHJldHVybiBidWlsdGluRXhlYy5jYWxsKFIsIFMpO1xufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///55\n")},function(module,exports,__webpack_require__){"use strict";eval("\n__webpack_require__(111);\nvar redefine = __webpack_require__(12);\nvar hide = __webpack_require__(15);\nvar fails = __webpack_require__(3);\nvar defined = __webpack_require__(25);\nvar wks = __webpack_require__(6);\nvar regexpExec = __webpack_require__(82);\n\nvar SPECIES = wks('species');\n\nvar REPLACE_SUPPORTS_NAMED_GROUPS = !fails(function () {\n  // #replace needs built-in support for named groups.\n  // #match works fine because it just return the exec results, even if it has\n  // a \"grops\" property.\n  var re = /./;\n  re.exec = function () {\n    var result = [];\n    result.groups = { a: '7' };\n    return result;\n  };\n  return ''.replace(re, '$<a>') !== '7';\n});\n\nvar SPLIT_WORKS_WITH_OVERWRITTEN_EXEC = (function () {\n  // Chrome 51 has a buggy \"split\" implementation when RegExp#exec !== nativeExec\n  var re = /(?:)/;\n  var originalExec = re.exec;\n  re.exec = function () { return originalExec.apply(this, arguments); };\n  var result = 'ab'.split(re);\n  return result.length === 2 && result[0] === 'a' && result[1] === 'b';\n})();\n\nmodule.exports = function (KEY, length, exec) {\n  var SYMBOL = wks(KEY);\n\n  var DELEGATES_TO_SYMBOL = !fails(function () {\n    // String methods call symbol-named RegEp methods\n    var O = {};\n    O[SYMBOL] = function () { return 7; };\n    return ''[KEY](O) != 7;\n  });\n\n  var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL ? !fails(function () {\n    // Symbol-named RegExp methods call .exec\n    var execCalled = false;\n    var re = /a/;\n    re.exec = function () { execCalled = true; return null; };\n    if (KEY === 'split') {\n      // RegExp[@@split] doesn't call the regex's exec method, but first creates\n      // a new one. We need to return the patched regex when creating the new one.\n      re.constructor = {};\n      re.constructor[SPECIES] = function () { return re; };\n    }\n    re[SYMBOL]('');\n    return !execCalled;\n  }) : undefined;\n\n  if (\n    !DELEGATES_TO_SYMBOL ||\n    !DELEGATES_TO_EXEC ||\n    (KEY === 'replace' && !REPLACE_SUPPORTS_NAMED_GROUPS) ||\n    (KEY === 'split' && !SPLIT_WORKS_WITH_OVERWRITTEN_EXEC)\n  ) {\n    var nativeRegExpMethod = /./[SYMBOL];\n    var fns = exec(\n      defined,\n      SYMBOL,\n      ''[KEY],\n      function maybeCallNative(nativeMethod, regexp, str, arg2, forceStringMethod) {\n        if (regexp.exec === regexpExec) {\n          if (DELEGATES_TO_SYMBOL && !forceStringMethod) {\n            // The native String method already delegates to @@method (this\n            // polyfilled function), leasing to infinite recursion.\n            // We avoid it by directly calling the native @@method method.\n            return { done: true, value: nativeRegExpMethod.call(regexp, str, arg2) };\n          }\n          return { done: true, value: nativeMethod.call(str, regexp, arg2) };\n        }\n        return { done: false };\n      }\n    );\n    var strfn = fns[0];\n    var rxfn = fns[1];\n\n    redefine(String.prototype, KEY, strfn);\n    hide(RegExp.prototype, SYMBOL, length == 2\n      // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)\n      // 21.2.5.11 RegExp.prototype[@@split](string, limit)\n      ? function (string, arg) { return rxfn.call(string, this, arg); }\n      // 21.2.5.6 RegExp.prototype[@@match](string)\n      // 21.2.5.9 RegExp.prototype[@@search](string)\n      : function (string) { return rxfn.call(string, this); }\n    );\n  }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTYuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19maXgtcmUtd2tzLmpzPzIxNGYiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xucmVxdWlyZSgnLi9lczYucmVnZXhwLmV4ZWMnKTtcbnZhciByZWRlZmluZSA9IHJlcXVpcmUoJy4vX3JlZGVmaW5lJyk7XG52YXIgaGlkZSA9IHJlcXVpcmUoJy4vX2hpZGUnKTtcbnZhciBmYWlscyA9IHJlcXVpcmUoJy4vX2ZhaWxzJyk7XG52YXIgZGVmaW5lZCA9IHJlcXVpcmUoJy4vX2RlZmluZWQnKTtcbnZhciB3a3MgPSByZXF1aXJlKCcuL193a3MnKTtcbnZhciByZWdleHBFeGVjID0gcmVxdWlyZSgnLi9fcmVnZXhwLWV4ZWMnKTtcblxudmFyIFNQRUNJRVMgPSB3a3MoJ3NwZWNpZXMnKTtcblxudmFyIFJFUExBQ0VfU1VQUE9SVFNfTkFNRURfR1JPVVBTID0gIWZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgLy8gI3JlcGxhY2UgbmVlZHMgYnVpbHQtaW4gc3VwcG9ydCBmb3IgbmFtZWQgZ3JvdXBzLlxuICAvLyAjbWF0Y2ggd29ya3MgZmluZSBiZWNhdXNlIGl0IGp1c3QgcmV0dXJuIHRoZSBleGVjIHJlc3VsdHMsIGV2ZW4gaWYgaXQgaGFzXG4gIC8vIGEgXCJncm9wc1wiIHByb3BlcnR5LlxuICB2YXIgcmUgPSAvLi87XG4gIHJlLmV4ZWMgPSBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIHJlc3VsdCA9IFtdO1xuICAgIHJlc3VsdC5ncm91cHMgPSB7IGE6ICc3JyB9O1xuICAgIHJldHVybiByZXN1bHQ7XG4gIH07XG4gIHJldHVybiAnJy5yZXBsYWNlKHJlLCAnJDxhPicpICE9PSAnNyc7XG59KTtcblxudmFyIFNQTElUX1dPUktTX1dJVEhfT1ZFUldSSVRURU5fRVhFQyA9IChmdW5jdGlvbiAoKSB7XG4gIC8vIENocm9tZSA1MSBoYXMgYSBidWdneSBcInNwbGl0XCIgaW1wbGVtZW50YXRpb24gd2hlbiBSZWdFeHAjZXhlYyAhPT0gbmF0aXZlRXhlY1xuICB2YXIgcmUgPSAvKD86KS87XG4gIHZhciBvcmlnaW5hbEV4ZWMgPSByZS5leGVjO1xuICByZS5leGVjID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gb3JpZ2luYWxFeGVjLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7IH07XG4gIHZhciByZXN1bHQgPSAnYWInLnNwbGl0KHJlKTtcbiAgcmV0dXJuIHJlc3VsdC5sZW5ndGggPT09IDIgJiYgcmVzdWx0WzBdID09PSAnYScgJiYgcmVzdWx0WzFdID09PSAnYic7XG59KSgpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChLRVksIGxlbmd0aCwgZXhlYykge1xuICB2YXIgU1lNQk9MID0gd2tzKEtFWSk7XG5cbiAgdmFyIERFTEVHQVRFU19UT19TWU1CT0wgPSAhZmFpbHMoZnVuY3Rpb24gKCkge1xuICAgIC8vIFN0cmluZyBtZXRob2RzIGNhbGwgc3ltYm9sLW5hbWVkIFJlZ0VwIG1ldGhvZHNcbiAgICB2YXIgTyA9IHt9O1xuICAgIE9bU1lNQk9MXSA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIDc7IH07XG4gICAgcmV0dXJuICcnW0tFWV0oTykgIT0gNztcbiAgfSk7XG5cbiAgdmFyIERFTEVHQVRFU19UT19FWEVDID0gREVMRUdBVEVTX1RPX1NZTUJPTCA/ICFmYWlscyhmdW5jdGlvbiAoKSB7XG4gICAgLy8gU3ltYm9sLW5hbWVkIFJlZ0V4cCBtZXRob2RzIGNhbGwgLmV4ZWNcbiAgICB2YXIgZXhlY0NhbGxlZCA9IGZhbHNlO1xuICAgIHZhciByZSA9IC9hLztcbiAgICByZS5leGVjID0gZnVuY3Rpb24gKCkgeyBleGVjQ2FsbGVkID0gdHJ1ZTsgcmV0dXJuIG51bGw7IH07XG4gICAgaWYgKEtFWSA9PT0gJ3NwbGl0Jykge1xuICAgICAgLy8gUmVnRXhwW0BAc3BsaXRdIGRvZXNuJ3QgY2FsbCB0aGUgcmVnZXgncyBleGVjIG1ldGhvZCwgYnV0IGZpcnN0IGNyZWF0ZXNcbiAgICAgIC8vIGEgbmV3IG9uZS4gV2UgbmVlZCB0byByZXR1cm4gdGhlIHBhdGNoZWQgcmVnZXggd2hlbiBjcmVhdGluZyB0aGUgbmV3IG9uZS5cbiAgICAgIHJlLmNvbnN0cnVjdG9yID0ge307XG4gICAgICByZS5jb25zdHJ1Y3RvcltTUEVDSUVTXSA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHJlOyB9O1xuICAgIH1cbiAgICByZVtTWU1CT0xdKCcnKTtcbiAgICByZXR1cm4gIWV4ZWNDYWxsZWQ7XG4gIH0pIDogdW5kZWZpbmVkO1xuXG4gIGlmIChcbiAgICAhREVMRUdBVEVTX1RPX1NZTUJPTCB8fFxuICAgICFERUxFR0FURVNfVE9fRVhFQyB8fFxuICAgIChLRVkgPT09ICdyZXBsYWNlJyAmJiAhUkVQTEFDRV9TVVBQT1JUU19OQU1FRF9HUk9VUFMpIHx8XG4gICAgKEtFWSA9PT0gJ3NwbGl0JyAmJiAhU1BMSVRfV09SS1NfV0lUSF9PVkVSV1JJVFRFTl9FWEVDKVxuICApIHtcbiAgICB2YXIgbmF0aXZlUmVnRXhwTWV0aG9kID0gLy4vW1NZTUJPTF07XG4gICAgdmFyIGZucyA9IGV4ZWMoXG4gICAgICBkZWZpbmVkLFxuICAgICAgU1lNQk9MLFxuICAgICAgJydbS0VZXSxcbiAgICAgIGZ1bmN0aW9uIG1heWJlQ2FsbE5hdGl2ZShuYXRpdmVNZXRob2QsIHJlZ2V4cCwgc3RyLCBhcmcyLCBmb3JjZVN0cmluZ01ldGhvZCkge1xuICAgICAgICBpZiAocmVnZXhwLmV4ZWMgPT09IHJlZ2V4cEV4ZWMpIHtcbiAgICAgICAgICBpZiAoREVMRUdBVEVTX1RPX1NZTUJPTCAmJiAhZm9yY2VTdHJpbmdNZXRob2QpIHtcbiAgICAgICAgICAgIC8vIFRoZSBuYXRpdmUgU3RyaW5nIG1ldGhvZCBhbHJlYWR5IGRlbGVnYXRlcyB0byBAQG1ldGhvZCAodGhpc1xuICAgICAgICAgICAgLy8gcG9seWZpbGxlZCBmdW5jdGlvbiksIGxlYXNpbmcgdG8gaW5maW5pdGUgcmVjdXJzaW9uLlxuICAgICAgICAgICAgLy8gV2UgYXZvaWQgaXQgYnkgZGlyZWN0bHkgY2FsbGluZyB0aGUgbmF0aXZlIEBAbWV0aG9kIG1ldGhvZC5cbiAgICAgICAgICAgIHJldHVybiB7IGRvbmU6IHRydWUsIHZhbHVlOiBuYXRpdmVSZWdFeHBNZXRob2QuY2FsbChyZWdleHAsIHN0ciwgYXJnMikgfTtcbiAgICAgICAgICB9XG4gICAgICAgICAgcmV0dXJuIHsgZG9uZTogdHJ1ZSwgdmFsdWU6IG5hdGl2ZU1ldGhvZC5jYWxsKHN0ciwgcmVnZXhwLCBhcmcyKSB9O1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB7IGRvbmU6IGZhbHNlIH07XG4gICAgICB9XG4gICAgKTtcbiAgICB2YXIgc3RyZm4gPSBmbnNbMF07XG4gICAgdmFyIHJ4Zm4gPSBmbnNbMV07XG5cbiAgICByZWRlZmluZShTdHJpbmcucHJvdG90eXBlLCBLRVksIHN0cmZuKTtcbiAgICBoaWRlKFJlZ0V4cC5wcm90b3R5cGUsIFNZTUJPTCwgbGVuZ3RoID09IDJcbiAgICAgIC8vIDIxLjIuNS44IFJlZ0V4cC5wcm90b3R5cGVbQEByZXBsYWNlXShzdHJpbmcsIHJlcGxhY2VWYWx1ZSlcbiAgICAgIC8vIDIxLjIuNS4xMSBSZWdFeHAucHJvdG90eXBlW0BAc3BsaXRdKHN0cmluZywgbGltaXQpXG4gICAgICA/IGZ1bmN0aW9uIChzdHJpbmcsIGFyZykgeyByZXR1cm4gcnhmbi5jYWxsKHN0cmluZywgdGhpcywgYXJnKTsgfVxuICAgICAgLy8gMjEuMi41LjYgUmVnRXhwLnByb3RvdHlwZVtAQG1hdGNoXShzdHJpbmcpXG4gICAgICAvLyAyMS4yLjUuOSBSZWdFeHAucHJvdG90eXBlW0BAc2VhcmNoXShzdHJpbmcpXG4gICAgICA6IGZ1bmN0aW9uIChzdHJpbmcpIHsgcmV0dXJuIHJ4Zm4uY2FsbChzdHJpbmcsIHRoaXMpOyB9XG4gICAgKTtcbiAgfVxufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///56\n")},function(module,exports,__webpack_require__){eval("var ctx = __webpack_require__(18);\nvar call = __webpack_require__(106);\nvar isArrayIter = __webpack_require__(77);\nvar anObject = __webpack_require__(4);\nvar toLength = __webpack_require__(7);\nvar getIterFn = __webpack_require__(79);\nvar BREAK = {};\nvar RETURN = {};\nvar exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {\n  var iterFn = ITERATOR ? function () { return iterable; } : getIterFn(iterable);\n  var f = ctx(fn, that, entries ? 2 : 1);\n  var index = 0;\n  var length, step, iterator, result;\n  if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');\n  // fast case for arrays with default iterator\n  if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {\n    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);\n    if (result === BREAK || result === RETURN) return result;\n  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {\n    result = call(iterator, f, step.value, entries);\n    if (result === BREAK || result === RETURN) return result;\n  }\n};\nexports.BREAK = BREAK;\nexports.RETURN = RETURN;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTcuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19mb3Itb2YuanM/NGE1OSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgY3R4ID0gcmVxdWlyZSgnLi9fY3R4Jyk7XG52YXIgY2FsbCA9IHJlcXVpcmUoJy4vX2l0ZXItY2FsbCcpO1xudmFyIGlzQXJyYXlJdGVyID0gcmVxdWlyZSgnLi9faXMtYXJyYXktaXRlcicpO1xudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG52YXIgdG9MZW5ndGggPSByZXF1aXJlKCcuL190by1sZW5ndGgnKTtcbnZhciBnZXRJdGVyRm4gPSByZXF1aXJlKCcuL2NvcmUuZ2V0LWl0ZXJhdG9yLW1ldGhvZCcpO1xudmFyIEJSRUFLID0ge307XG52YXIgUkVUVVJOID0ge307XG52YXIgZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0ZXJhYmxlLCBlbnRyaWVzLCBmbiwgdGhhdCwgSVRFUkFUT1IpIHtcbiAgdmFyIGl0ZXJGbiA9IElURVJBVE9SID8gZnVuY3Rpb24gKCkgeyByZXR1cm4gaXRlcmFibGU7IH0gOiBnZXRJdGVyRm4oaXRlcmFibGUpO1xuICB2YXIgZiA9IGN0eChmbiwgdGhhdCwgZW50cmllcyA/IDIgOiAxKTtcbiAgdmFyIGluZGV4ID0gMDtcbiAgdmFyIGxlbmd0aCwgc3RlcCwgaXRlcmF0b3IsIHJlc3VsdDtcbiAgaWYgKHR5cGVvZiBpdGVyRm4gIT0gJ2Z1bmN0aW9uJykgdGhyb3cgVHlwZUVycm9yKGl0ZXJhYmxlICsgJyBpcyBub3QgaXRlcmFibGUhJyk7XG4gIC8vIGZhc3QgY2FzZSBmb3IgYXJyYXlzIHdpdGggZGVmYXVsdCBpdGVyYXRvclxuICBpZiAoaXNBcnJheUl0ZXIoaXRlckZuKSkgZm9yIChsZW5ndGggPSB0b0xlbmd0aChpdGVyYWJsZS5sZW5ndGgpOyBsZW5ndGggPiBpbmRleDsgaW5kZXgrKykge1xuICAgIHJlc3VsdCA9IGVudHJpZXMgPyBmKGFuT2JqZWN0KHN0ZXAgPSBpdGVyYWJsZVtpbmRleF0pWzBdLCBzdGVwWzFdKSA6IGYoaXRlcmFibGVbaW5kZXhdKTtcbiAgICBpZiAocmVzdWx0ID09PSBCUkVBSyB8fCByZXN1bHQgPT09IFJFVFVSTikgcmV0dXJuIHJlc3VsdDtcbiAgfSBlbHNlIGZvciAoaXRlcmF0b3IgPSBpdGVyRm4uY2FsbChpdGVyYWJsZSk7ICEoc3RlcCA9IGl0ZXJhdG9yLm5leHQoKSkuZG9uZTspIHtcbiAgICByZXN1bHQgPSBjYWxsKGl0ZXJhdG9yLCBmLCBzdGVwLnZhbHVlLCBlbnRyaWVzKTtcbiAgICBpZiAocmVzdWx0ID09PSBCUkVBSyB8fCByZXN1bHQgPT09IFJFVFVSTikgcmV0dXJuIHJlc3VsdDtcbiAgfVxufTtcbmV4cG9ydHMuQlJFQUsgPSBCUkVBSztcbmV4cG9ydHMuUkVUVVJOID0gUkVUVVJOO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///57\n")},function(module,exports,__webpack_require__){eval("var global = __webpack_require__(2);\nvar navigator = global.navigator;\n\nmodule.exports = navigator && navigator.userAgent || '';\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTguanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL191c2VyLWFnZW50LmpzP2EyNWYiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpO1xudmFyIG5hdmlnYXRvciA9IGdsb2JhbC5uYXZpZ2F0b3I7XG5cbm1vZHVsZS5leHBvcnRzID0gbmF2aWdhdG9yICYmIG5hdmlnYXRvci51c2VyQWdlbnQgfHwgJyc7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///58\n")},function(module,exports,__webpack_require__){"use strict";eval("\nvar global = __webpack_require__(2);\nvar $export = __webpack_require__(1);\nvar redefine = __webpack_require__(12);\nvar redefineAll = __webpack_require__(44);\nvar meta = __webpack_require__(28);\nvar forOf = __webpack_require__(57);\nvar anInstance = __webpack_require__(43);\nvar isObject = __webpack_require__(5);\nvar fails = __webpack_require__(3);\nvar $iterDetect = __webpack_require__(53);\nvar setToStringTag = __webpack_require__(39);\nvar inheritIfRequired = __webpack_require__(68);\n\nmodule.exports = function (NAME, wrapper, methods, common, IS_MAP, IS_WEAK) {\n  var Base = global[NAME];\n  var C = Base;\n  var ADDER = IS_MAP ? 'set' : 'add';\n  var proto = C && C.prototype;\n  var O = {};\n  var fixMethod = function (KEY) {\n    var fn = proto[KEY];\n    redefine(proto, KEY,\n      KEY == 'delete' ? function (a) {\n        return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);\n      } : KEY == 'has' ? function has(a) {\n        return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);\n      } : KEY == 'get' ? function get(a) {\n        return IS_WEAK && !isObject(a) ? undefined : fn.call(this, a === 0 ? 0 : a);\n      } : KEY == 'add' ? function add(a) { fn.call(this, a === 0 ? 0 : a); return this; }\n        : function set(a, b) { fn.call(this, a === 0 ? 0 : a, b); return this; }\n    );\n  };\n  if (typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function () {\n    new C().entries().next();\n  }))) {\n    // create collection constructor\n    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);\n    redefineAll(C.prototype, methods);\n    meta.NEED = true;\n  } else {\n    var instance = new C();\n    // early implementations not supports chaining\n    var HASNT_CHAINING = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance;\n    // V8 ~  Chromium 40- weak-collections throws on primitives, but should return false\n    var THROWS_ON_PRIMITIVES = fails(function () { instance.has(1); });\n    // most early implementations doesn't supports iterables, most modern - not close it correctly\n    var ACCEPT_ITERABLES = $iterDetect(function (iter) { new C(iter); }); // eslint-disable-line no-new\n    // for early implementations -0 and +0 not the same\n    var BUGGY_ZERO = !IS_WEAK && fails(function () {\n      // V8 ~ Chromium 42- fails only with 5+ elements\n      var $instance = new C();\n      var index = 5;\n      while (index--) $instance[ADDER](index, index);\n      return !$instance.has(-0);\n    });\n    if (!ACCEPT_ITERABLES) {\n      C = wrapper(function (target, iterable) {\n        anInstance(target, C, NAME);\n        var that = inheritIfRequired(new Base(), target, C);\n        if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);\n        return that;\n      });\n      C.prototype = proto;\n      proto.constructor = C;\n    }\n    if (THROWS_ON_PRIMITIVES || BUGGY_ZERO) {\n      fixMethod('delete');\n      fixMethod('has');\n      IS_MAP && fixMethod('get');\n    }\n    if (BUGGY_ZERO || HASNT_CHAINING) fixMethod(ADDER);\n    // weak collections should not contains .clear method\n    if (IS_WEAK && proto.clear) delete proto.clear;\n  }\n\n  setToStringTag(C, NAME);\n\n  O[NAME] = C;\n  $export($export.G + $export.W + $export.F * (C != Base), O);\n\n  if (!IS_WEAK) common.setStrong(C, NAME, IS_MAP);\n\n  return C;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTkuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19jb2xsZWN0aW9uLmpzP2UwYjgiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xudmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpO1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciByZWRlZmluZSA9IHJlcXVpcmUoJy4vX3JlZGVmaW5lJyk7XG52YXIgcmVkZWZpbmVBbGwgPSByZXF1aXJlKCcuL19yZWRlZmluZS1hbGwnKTtcbnZhciBtZXRhID0gcmVxdWlyZSgnLi9fbWV0YScpO1xudmFyIGZvck9mID0gcmVxdWlyZSgnLi9fZm9yLW9mJyk7XG52YXIgYW5JbnN0YW5jZSA9IHJlcXVpcmUoJy4vX2FuLWluc3RhbmNlJyk7XG52YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKTtcbnZhciBmYWlscyA9IHJlcXVpcmUoJy4vX2ZhaWxzJyk7XG52YXIgJGl0ZXJEZXRlY3QgPSByZXF1aXJlKCcuL19pdGVyLWRldGVjdCcpO1xudmFyIHNldFRvU3RyaW5nVGFnID0gcmVxdWlyZSgnLi9fc2V0LXRvLXN0cmluZy10YWcnKTtcbnZhciBpbmhlcml0SWZSZXF1aXJlZCA9IHJlcXVpcmUoJy4vX2luaGVyaXQtaWYtcmVxdWlyZWQnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoTkFNRSwgd3JhcHBlciwgbWV0aG9kcywgY29tbW9uLCBJU19NQVAsIElTX1dFQUspIHtcbiAgdmFyIEJhc2UgPSBnbG9iYWxbTkFNRV07XG4gIHZhciBDID0gQmFzZTtcbiAgdmFyIEFEREVSID0gSVNfTUFQID8gJ3NldCcgOiAnYWRkJztcbiAgdmFyIHByb3RvID0gQyAmJiBDLnByb3RvdHlwZTtcbiAgdmFyIE8gPSB7fTtcbiAgdmFyIGZpeE1ldGhvZCA9IGZ1bmN0aW9uIChLRVkpIHtcbiAgICB2YXIgZm4gPSBwcm90b1tLRVldO1xuICAgIHJlZGVmaW5lKHByb3RvLCBLRVksXG4gICAgICBLRVkgPT0gJ2RlbGV0ZScgPyBmdW5jdGlvbiAoYSkge1xuICAgICAgICByZXR1cm4gSVNfV0VBSyAmJiAhaXNPYmplY3QoYSkgPyBmYWxzZSA6IGZuLmNhbGwodGhpcywgYSA9PT0gMCA/IDAgOiBhKTtcbiAgICAgIH0gOiBLRVkgPT0gJ2hhcycgPyBmdW5jdGlvbiBoYXMoYSkge1xuICAgICAgICByZXR1cm4gSVNfV0VBSyAmJiAhaXNPYmplY3QoYSkgPyBmYWxzZSA6IGZuLmNhbGwodGhpcywgYSA9PT0gMCA/IDAgOiBhKTtcbiAgICAgIH0gOiBLRVkgPT0gJ2dldCcgPyBmdW5jdGlvbiBnZXQoYSkge1xuICAgICAgICByZXR1cm4gSVNfV0VBSyAmJiAhaXNPYmplY3QoYSkgPyB1bmRlZmluZWQgOiBmbi5jYWxsKHRoaXMsIGEgPT09IDAgPyAwIDogYSk7XG4gICAgICB9IDogS0VZID09ICdhZGQnID8gZnVuY3Rpb24gYWRkKGEpIHsgZm4uY2FsbCh0aGlzLCBhID09PSAwID8gMCA6IGEpOyByZXR1cm4gdGhpczsgfVxuICAgICAgICA6IGZ1bmN0aW9uIHNldChhLCBiKSB7IGZuLmNhbGwodGhpcywgYSA9PT0gMCA/IDAgOiBhLCBiKTsgcmV0dXJuIHRoaXM7IH1cbiAgICApO1xuICB9O1xuICBpZiAodHlwZW9mIEMgIT0gJ2Z1bmN0aW9uJyB8fCAhKElTX1dFQUsgfHwgcHJvdG8uZm9yRWFjaCAmJiAhZmFpbHMoZnVuY3Rpb24gKCkge1xuICAgIG5ldyBDKCkuZW50cmllcygpLm5leHQoKTtcbiAgfSkpKSB7XG4gICAgLy8gY3JlYXRlIGNvbGxlY3Rpb24gY29uc3RydWN0b3JcbiAgICBDID0gY29tbW9uLmdldENvbnN0cnVjdG9yKHdyYXBwZXIsIE5BTUUsIElTX01BUCwgQURERVIpO1xuICAgIHJlZGVmaW5lQWxsKEMucHJvdG90eXBlLCBtZXRob2RzKTtcbiAgICBtZXRhLk5FRUQgPSB0cnVlO1xuICB9IGVsc2Uge1xuICAgIHZhciBpbnN0YW5jZSA9IG5ldyBDKCk7XG4gICAgLy8gZWFybHkgaW1wbGVtZW50YXRpb25zIG5vdCBzdXBwb3J0cyBjaGFpbmluZ1xuICAgIHZhciBIQVNOVF9DSEFJTklORyA9IGluc3RhbmNlW0FEREVSXShJU19XRUFLID8ge30gOiAtMCwgMSkgIT0gaW5zdGFuY2U7XG4gICAgLy8gVjggfiAgQ2hyb21pdW0gNDAtIHdlYWstY29sbGVjdGlvbnMgdGhyb3dzIG9uIHByaW1pdGl2ZXMsIGJ1dCBzaG91bGQgcmV0dXJuIGZhbHNlXG4gICAgdmFyIFRIUk9XU19PTl9QUklNSVRJVkVTID0gZmFpbHMoZnVuY3Rpb24gKCkgeyBpbnN0YW5jZS5oYXMoMSk7IH0pO1xuICAgIC8vIG1vc3QgZWFybHkgaW1wbGVtZW50YXRpb25zIGRvZXNuJ3Qgc3VwcG9ydHMgaXRlcmFibGVzLCBtb3N0IG1vZGVybiAtIG5vdCBjbG9zZSBpdCBjb3JyZWN0bHlcbiAgICB2YXIgQUNDRVBUX0lURVJBQkxFUyA9ICRpdGVyRGV0ZWN0KGZ1bmN0aW9uIChpdGVyKSB7IG5ldyBDKGl0ZXIpOyB9KTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1uZXdcbiAgICAvLyBmb3IgZWFybHkgaW1wbGVtZW50YXRpb25zIC0wIGFuZCArMCBub3QgdGhlIHNhbWVcbiAgICB2YXIgQlVHR1lfWkVSTyA9ICFJU19XRUFLICYmIGZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgICAgIC8vIFY4IH4gQ2hyb21pdW0gNDItIGZhaWxzIG9ubHkgd2l0aCA1KyBlbGVtZW50c1xuICAgICAgdmFyICRpbnN0YW5jZSA9IG5ldyBDKCk7XG4gICAgICB2YXIgaW5kZXggPSA1O1xuICAgICAgd2hpbGUgKGluZGV4LS0pICRpbnN0YW5jZVtBRERFUl0oaW5kZXgsIGluZGV4KTtcbiAgICAgIHJldHVybiAhJGluc3RhbmNlLmhhcygtMCk7XG4gICAgfSk7XG4gICAgaWYgKCFBQ0NFUFRfSVRFUkFCTEVTKSB7XG4gICAgICBDID0gd3JhcHBlcihmdW5jdGlvbiAodGFyZ2V0LCBpdGVyYWJsZSkge1xuICAgICAgICBhbkluc3RhbmNlKHRhcmdldCwgQywgTkFNRSk7XG4gICAgICAgIHZhciB0aGF0ID0gaW5oZXJpdElmUmVxdWlyZWQobmV3IEJhc2UoKSwgdGFyZ2V0LCBDKTtcbiAgICAgICAgaWYgKGl0ZXJhYmxlICE9IHVuZGVmaW5lZCkgZm9yT2YoaXRlcmFibGUsIElTX01BUCwgdGhhdFtBRERFUl0sIHRoYXQpO1xuICAgICAgICByZXR1cm4gdGhhdDtcbiAgICAgIH0pO1xuICAgICAgQy5wcm90b3R5cGUgPSBwcm90bztcbiAgICAgIHByb3RvLmNvbnN0cnVjdG9yID0gQztcbiAgICB9XG4gICAgaWYgKFRIUk9XU19PTl9QUklNSVRJVkVTIHx8IEJVR0dZX1pFUk8pIHtcbiAgICAgIGZpeE1ldGhvZCgnZGVsZXRlJyk7XG4gICAgICBmaXhNZXRob2QoJ2hhcycpO1xuICAgICAgSVNfTUFQICYmIGZpeE1ldGhvZCgnZ2V0Jyk7XG4gICAgfVxuICAgIGlmIChCVUdHWV9aRVJPIHx8IEhBU05UX0NIQUlOSU5HKSBmaXhNZXRob2QoQURERVIpO1xuICAgIC8vIHdlYWsgY29sbGVjdGlvbnMgc2hvdWxkIG5vdCBjb250YWlucyAuY2xlYXIgbWV0aG9kXG4gICAgaWYgKElTX1dFQUsgJiYgcHJvdG8uY2xlYXIpIGRlbGV0ZSBwcm90by5jbGVhcjtcbiAgfVxuXG4gIHNldFRvU3RyaW5nVGFnKEMsIE5BTUUpO1xuXG4gIE9bTkFNRV0gPSBDO1xuICAkZXhwb3J0KCRleHBvcnQuRyArICRleHBvcnQuVyArICRleHBvcnQuRiAqIChDICE9IEJhc2UpLCBPKTtcblxuICBpZiAoIUlTX1dFQUspIGNvbW1vbi5zZXRTdHJvbmcoQywgTkFNRSwgSVNfTUFQKTtcblxuICByZXR1cm4gQztcbn07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///59\n")},function(module,exports,__webpack_require__){eval("var global = __webpack_require__(2);\nvar hide = __webpack_require__(15);\nvar uid = __webpack_require__(30);\nvar TYPED = uid('typed_array');\nvar VIEW = uid('view');\nvar ABV = !!(global.ArrayBuffer && global.DataView);\nvar CONSTR = ABV;\nvar i = 0;\nvar l = 9;\nvar Typed;\n\nvar TypedArrayConstructors = (\n  'Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array'\n).split(',');\n\nwhile (i < l) {\n  if (Typed = global[TypedArrayConstructors[i++]]) {\n    hide(Typed.prototype, TYPED, true);\n    hide(Typed.prototype, VIEW, true);\n  } else CONSTR = false;\n}\n\nmodule.exports = {\n  ABV: ABV,\n  CONSTR: CONSTR,\n  TYPED: TYPED,\n  VIEW: VIEW\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL190eXBlZC5qcz8wZjg4Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBnbG9iYWwgPSByZXF1aXJlKCcuL19nbG9iYWwnKTtcbnZhciBoaWRlID0gcmVxdWlyZSgnLi9faGlkZScpO1xudmFyIHVpZCA9IHJlcXVpcmUoJy4vX3VpZCcpO1xudmFyIFRZUEVEID0gdWlkKCd0eXBlZF9hcnJheScpO1xudmFyIFZJRVcgPSB1aWQoJ3ZpZXcnKTtcbnZhciBBQlYgPSAhIShnbG9iYWwuQXJyYXlCdWZmZXIgJiYgZ2xvYmFsLkRhdGFWaWV3KTtcbnZhciBDT05TVFIgPSBBQlY7XG52YXIgaSA9IDA7XG52YXIgbCA9IDk7XG52YXIgVHlwZWQ7XG5cbnZhciBUeXBlZEFycmF5Q29uc3RydWN0b3JzID0gKFxuICAnSW50OEFycmF5LFVpbnQ4QXJyYXksVWludDhDbGFtcGVkQXJyYXksSW50MTZBcnJheSxVaW50MTZBcnJheSxJbnQzMkFycmF5LFVpbnQzMkFycmF5LEZsb2F0MzJBcnJheSxGbG9hdDY0QXJyYXknXG4pLnNwbGl0KCcsJyk7XG5cbndoaWxlIChpIDwgbCkge1xuICBpZiAoVHlwZWQgPSBnbG9iYWxbVHlwZWRBcnJheUNvbnN0cnVjdG9yc1tpKytdXSkge1xuICAgIGhpZGUoVHlwZWQucHJvdG90eXBlLCBUWVBFRCwgdHJ1ZSk7XG4gICAgaGlkZShUeXBlZC5wcm90b3R5cGUsIFZJRVcsIHRydWUpO1xuICB9IGVsc2UgQ09OU1RSID0gZmFsc2U7XG59XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBBQlY6IEFCVixcbiAgQ09OU1RSOiBDT05TVFIsXG4gIFRZUEVEOiBUWVBFRCxcbiAgVklFVzogVklFV1xufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///60\n")},function(module,exports,__webpack_require__){eval("var isObject = __webpack_require__(5);\nvar document = __webpack_require__(2).document;\n// typeof document.createElement is 'object' in old IE\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19kb20tY3JlYXRlLmpzPzIzMGUiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7XG52YXIgZG9jdW1lbnQgPSByZXF1aXJlKCcuL19nbG9iYWwnKS5kb2N1bWVudDtcbi8vIHR5cGVvZiBkb2N1bWVudC5jcmVhdGVFbGVtZW50IGlzICdvYmplY3QnIGluIG9sZCBJRVxudmFyIGlzID0gaXNPYmplY3QoZG9jdW1lbnQpICYmIGlzT2JqZWN0KGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQpIHtcbiAgcmV0dXJuIGlzID8gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChpdCkgOiB7fTtcbn07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///61\n")},function(module,exports,__webpack_require__){eval("exports.f = __webpack_require__(6);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjIuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL193a3MtZXh0LmpzPzM3YzgiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0cy5mID0gcmVxdWlyZSgnLi9fd2tzJyk7XG4iXSwibWFwcGluZ3MiOiJBQUFBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///62\n")},function(module,exports,__webpack_require__){eval("var shared = __webpack_require__(49)('keys');\nvar uid = __webpack_require__(30);\nmodule.exports = function (key) {\n  return shared[key] || (shared[key] = uid(key));\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19zaGFyZWQta2V5LmpzPzYxM2IiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIHNoYXJlZCA9IHJlcXVpcmUoJy4vX3NoYXJlZCcpKCdrZXlzJyk7XG52YXIgdWlkID0gcmVxdWlyZSgnLi9fdWlkJyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChrZXkpIHtcbiAgcmV0dXJuIHNoYXJlZFtrZXldIHx8IChzaGFyZWRba2V5XSA9IHVpZChrZXkpKTtcbn07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///63\n")},function(module,exports){eval("// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjQuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19lbnVtLWJ1Zy1rZXlzLmpzP2UxMWUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gSUUgOC0gZG9uJ3QgZW51bSBidWcga2V5c1xubW9kdWxlLmV4cG9ydHMgPSAoXG4gICdjb25zdHJ1Y3RvcixoYXNPd25Qcm9wZXJ0eSxpc1Byb3RvdHlwZU9mLHByb3BlcnR5SXNFbnVtZXJhYmxlLHRvTG9jYWxlU3RyaW5nLHRvU3RyaW5nLHZhbHVlT2YnXG4pLnNwbGl0KCcsJyk7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///64\n")},function(module,exports,__webpack_require__){eval("var document = __webpack_require__(2).document;\nmodule.exports = document && document.documentElement;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19odG1sLmpzP2ZhYjIiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGRvY3VtZW50ID0gcmVxdWlyZSgnLi9fZ2xvYmFsJykuZG9jdW1lbnQ7XG5tb2R1bGUuZXhwb3J0cyA9IGRvY3VtZW50ICYmIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudDtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///65\n")},function(module,exports,__webpack_require__){eval("// Works with __proto__ only. Old v8 can't work with null proto objects.\n/* eslint-disable no-proto */\nvar isObject = __webpack_require__(5);\nvar anObject = __webpack_require__(4);\nvar check = function (O, proto) {\n  anObject(O);\n  if (!isObject(proto) && proto !== null) throw TypeError(proto + \": can't set as prototype!\");\n};\nmodule.exports = {\n  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line\n    function (test, buggy, set) {\n      try {\n        set = __webpack_require__(18)(Function.call, __webpack_require__(21).f(Object.prototype, '__proto__').set, 2);\n        set(test, []);\n        buggy = !(test instanceof Array);\n      } catch (e) { buggy = true; }\n      return function setPrototypeOf(O, proto) {\n        check(O, proto);\n        if (buggy) O.__proto__ = proto;\n        else set(O, proto);\n        return O;\n      };\n    }({}, false) : undefined),\n  check: check\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjYuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19zZXQtcHJvdG8uanM/OGI5NyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBXb3JrcyB3aXRoIF9fcHJvdG9fXyBvbmx5LiBPbGQgdjggY2FuJ3Qgd29yayB3aXRoIG51bGwgcHJvdG8gb2JqZWN0cy5cbi8qIGVzbGludC1kaXNhYmxlIG5vLXByb3RvICovXG52YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKTtcbnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpO1xudmFyIGNoZWNrID0gZnVuY3Rpb24gKE8sIHByb3RvKSB7XG4gIGFuT2JqZWN0KE8pO1xuICBpZiAoIWlzT2JqZWN0KHByb3RvKSAmJiBwcm90byAhPT0gbnVsbCkgdGhyb3cgVHlwZUVycm9yKHByb3RvICsgXCI6IGNhbid0IHNldCBhcyBwcm90b3R5cGUhXCIpO1xufTtcbm1vZHVsZS5leHBvcnRzID0ge1xuICBzZXQ6IE9iamVjdC5zZXRQcm90b3R5cGVPZiB8fCAoJ19fcHJvdG9fXycgaW4ge30gPyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lXG4gICAgZnVuY3Rpb24gKHRlc3QsIGJ1Z2d5LCBzZXQpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIHNldCA9IHJlcXVpcmUoJy4vX2N0eCcpKEZ1bmN0aW9uLmNhbGwsIHJlcXVpcmUoJy4vX29iamVjdC1nb3BkJykuZihPYmplY3QucHJvdG90eXBlLCAnX19wcm90b19fJykuc2V0LCAyKTtcbiAgICAgICAgc2V0KHRlc3QsIFtdKTtcbiAgICAgICAgYnVnZ3kgPSAhKHRlc3QgaW5zdGFuY2VvZiBBcnJheSk7XG4gICAgICB9IGNhdGNoIChlKSB7IGJ1Z2d5ID0gdHJ1ZTsgfVxuICAgICAgcmV0dXJuIGZ1bmN0aW9uIHNldFByb3RvdHlwZU9mKE8sIHByb3RvKSB7XG4gICAgICAgIGNoZWNrKE8sIHByb3RvKTtcbiAgICAgICAgaWYgKGJ1Z2d5KSBPLl9fcHJvdG9fXyA9IHByb3RvO1xuICAgICAgICBlbHNlIHNldChPLCBwcm90byk7XG4gICAgICAgIHJldHVybiBPO1xuICAgICAgfTtcbiAgICB9KHt9LCBmYWxzZSkgOiB1bmRlZmluZWQpLFxuICBjaGVjazogY2hlY2tcbn07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///66\n")},function(module,exports){eval("module.exports = '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' +\n  '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF';\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjcuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19zdHJpbmctd3MuanM/ZmRlZiJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9ICdcXHgwOVxceDBBXFx4MEJcXHgwQ1xceDBEXFx4MjBcXHhBMFxcdTE2ODBcXHUxODBFXFx1MjAwMFxcdTIwMDFcXHUyMDAyXFx1MjAwMycgK1xuICAnXFx1MjAwNFxcdTIwMDVcXHUyMDA2XFx1MjAwN1xcdTIwMDhcXHUyMDA5XFx1MjAwQVxcdTIwMkZcXHUyMDVGXFx1MzAwMFxcdTIwMjhcXHUyMDI5XFx1RkVGRic7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///67\n")},function(module,exports,__webpack_require__){eval("var isObject = __webpack_require__(5);\nvar setPrototypeOf = __webpack_require__(66).set;\nmodule.exports = function (that, target, C) {\n  var S = target.constructor;\n  var P;\n  if (S !== C && typeof S == 'function' && (P = S.prototype) !== C.prototype && isObject(P) && setPrototypeOf) {\n    setPrototypeOf(that, P);\n  } return that;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjguanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19pbmhlcml0LWlmLXJlcXVpcmVkLmpzPzVkYmMiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7XG52YXIgc2V0UHJvdG90eXBlT2YgPSByZXF1aXJlKCcuL19zZXQtcHJvdG8nKS5zZXQ7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICh0aGF0LCB0YXJnZXQsIEMpIHtcbiAgdmFyIFMgPSB0YXJnZXQuY29uc3RydWN0b3I7XG4gIHZhciBQO1xuICBpZiAoUyAhPT0gQyAmJiB0eXBlb2YgUyA9PSAnZnVuY3Rpb24nICYmIChQID0gUy5wcm90b3R5cGUpICE9PSBDLnByb3RvdHlwZSAmJiBpc09iamVjdChQKSAmJiBzZXRQcm90b3R5cGVPZikge1xuICAgIHNldFByb3RvdHlwZU9mKHRoYXQsIFApO1xuICB9IHJldHVybiB0aGF0O1xufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///68\n")},function(module,exports,__webpack_require__){"use strict";eval("\nvar toInteger = __webpack_require__(20);\nvar defined = __webpack_require__(25);\n\nmodule.exports = function repeat(count) {\n  var str = String(defined(this));\n  var res = '';\n  var n = toInteger(count);\n  if (n < 0 || n == Infinity) throw RangeError(\"Count can't be negative\");\n  for (;n > 0; (n >>>= 1) && (str += str)) if (n & 1) res += str;\n  return res;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjkuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19zdHJpbmctcmVwZWF0LmpzPzk3NDQiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xudmFyIHRvSW50ZWdlciA9IHJlcXVpcmUoJy4vX3RvLWludGVnZXInKTtcbnZhciBkZWZpbmVkID0gcmVxdWlyZSgnLi9fZGVmaW5lZCcpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIHJlcGVhdChjb3VudCkge1xuICB2YXIgc3RyID0gU3RyaW5nKGRlZmluZWQodGhpcykpO1xuICB2YXIgcmVzID0gJyc7XG4gIHZhciBuID0gdG9JbnRlZ2VyKGNvdW50KTtcbiAgaWYgKG4gPCAwIHx8IG4gPT0gSW5maW5pdHkpIHRocm93IFJhbmdlRXJyb3IoXCJDb3VudCBjYW4ndCBiZSBuZWdhdGl2ZVwiKTtcbiAgZm9yICg7biA+IDA7IChuID4+Pj0gMSkgJiYgKHN0ciArPSBzdHIpKSBpZiAobiAmIDEpIHJlcyArPSBzdHI7XG4gIHJldHVybiByZXM7XG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///69\n")},function(module,exports){eval("// 20.2.2.28 Math.sign(x)\nmodule.exports = Math.sign || function sign(x) {\n  // eslint-disable-next-line no-self-compare\n  return (x = +x) == 0 || x != x ? x : x < 0 ? -1 : 1;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19tYXRoLXNpZ24uanM/OTZmYiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyAyMC4yLjIuMjggTWF0aC5zaWduKHgpXG5tb2R1bGUuZXhwb3J0cyA9IE1hdGguc2lnbiB8fCBmdW5jdGlvbiBzaWduKHgpIHtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXNlbGYtY29tcGFyZVxuICByZXR1cm4gKHggPSAreCkgPT0gMCB8fCB4ICE9IHggPyB4IDogeCA8IDAgPyAtMSA6IDE7XG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///70\n")},function(module,exports){eval("// 20.2.2.14 Math.expm1(x)\nvar $expm1 = Math.expm1;\nmodule.exports = (!$expm1\n  // Old FF bug\n  || $expm1(10) > 22025.465794806719 || $expm1(10) < 22025.4657948067165168\n  // Tor Browser bug\n  || $expm1(-2e-17) != -2e-17\n) ? function expm1(x) {\n  return (x = +x) == 0 ? x : x > -1e-6 && x < 1e-6 ? x + x * x / 2 : Math.exp(x) - 1;\n} : $expm1;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19tYXRoLWV4cG0xLmpzPzJkNWMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gMjAuMi4yLjE0IE1hdGguZXhwbTEoeClcbnZhciAkZXhwbTEgPSBNYXRoLmV4cG0xO1xubW9kdWxlLmV4cG9ydHMgPSAoISRleHBtMVxuICAvLyBPbGQgRkYgYnVnXG4gIHx8ICRleHBtMSgxMCkgPiAyMjAyNS40NjU3OTQ4MDY3MTkgfHwgJGV4cG0xKDEwKSA8IDIyMDI1LjQ2NTc5NDgwNjcxNjUxNjhcbiAgLy8gVG9yIEJyb3dzZXIgYnVnXG4gIHx8ICRleHBtMSgtMmUtMTcpICE9IC0yZS0xN1xuKSA/IGZ1bmN0aW9uIGV4cG0xKHgpIHtcbiAgcmV0dXJuICh4ID0gK3gpID09IDAgPyB4IDogeCA+IC0xZS02ICYmIHggPCAxZS02ID8geCArIHggKiB4IC8gMiA6IE1hdGguZXhwKHgpIC0gMTtcbn0gOiAkZXhwbTE7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///71\n")},function(module,exports,__webpack_require__){eval("var toInteger = __webpack_require__(20);\nvar defined = __webpack_require__(25);\n// true  -> String#at\n// false -> String#codePointAt\nmodule.exports = function (TO_STRING) {\n  return function (that, pos) {\n    var s = String(defined(that));\n    var i = toInteger(pos);\n    var l = s.length;\n    var a, b;\n    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n      ? TO_STRING ? s.charAt(i) : a\n      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzIuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19zdHJpbmctYXQuanM/MDJmNCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgdG9JbnRlZ2VyID0gcmVxdWlyZSgnLi9fdG8taW50ZWdlcicpO1xudmFyIGRlZmluZWQgPSByZXF1aXJlKCcuL19kZWZpbmVkJyk7XG4vLyB0cnVlICAtPiBTdHJpbmcjYXRcbi8vIGZhbHNlIC0+IFN0cmluZyNjb2RlUG9pbnRBdFxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoVE9fU1RSSU5HKSB7XG4gIHJldHVybiBmdW5jdGlvbiAodGhhdCwgcG9zKSB7XG4gICAgdmFyIHMgPSBTdHJpbmcoZGVmaW5lZCh0aGF0KSk7XG4gICAgdmFyIGkgPSB0b0ludGVnZXIocG9zKTtcbiAgICB2YXIgbCA9IHMubGVuZ3RoO1xuICAgIHZhciBhLCBiO1xuICAgIGlmIChpIDwgMCB8fCBpID49IGwpIHJldHVybiBUT19TVFJJTkcgPyAnJyA6IHVuZGVmaW5lZDtcbiAgICBhID0gcy5jaGFyQ29kZUF0KGkpO1xuICAgIHJldHVybiBhIDwgMHhkODAwIHx8IGEgPiAweGRiZmYgfHwgaSArIDEgPT09IGwgfHwgKGIgPSBzLmNoYXJDb2RlQXQoaSArIDEpKSA8IDB4ZGMwMCB8fCBiID4gMHhkZmZmXG4gICAgICA/IFRPX1NUUklORyA/IHMuY2hhckF0KGkpIDogYVxuICAgICAgOiBUT19TVFJJTkcgPyBzLnNsaWNlKGksIGkgKyAyKSA6IChhIC0gMHhkODAwIDw8IDEwKSArIChiIC0gMHhkYzAwKSArIDB4MTAwMDA7XG4gIH07XG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///72\n")},function(module,exports,__webpack_require__){"use strict";eval("\nvar LIBRARY = __webpack_require__(31);\nvar $export = __webpack_require__(1);\nvar redefine = __webpack_require__(12);\nvar hide = __webpack_require__(15);\nvar Iterators = __webpack_require__(41);\nvar $iterCreate = __webpack_require__(105);\nvar setToStringTag = __webpack_require__(39);\nvar getPrototypeOf = __webpack_require__(36);\nvar ITERATOR = __webpack_require__(6)('iterator');\nvar BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`\nvar FF_ITERATOR = '@@iterator';\nvar KEYS = 'keys';\nvar VALUES = 'values';\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function (kind) {\n    if (!BUGGY && kind in proto) return proto[kind];\n    switch (kind) {\n      case KEYS: return function keys() { return new Constructor(this, kind); };\n      case VALUES: return function values() { return new Constructor(this, kind); };\n    } return function entries() { return new Constructor(this, kind); };\n  };\n  var TAG = NAME + ' Iterator';\n  var DEF_VALUES = DEFAULT == VALUES;\n  var VALUES_BUG = false;\n  var proto = Base.prototype;\n  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n  var $default = $native || getMethod(DEFAULT);\n  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n  var methods, key, IteratorPrototype;\n  // Fix native\n  if ($anyNative) {\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));\n    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n      // Set @@toStringTag to native iterators\n      setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\n    VALUES_BUG = true;\n    $default = function values() { return $native.call(this); };\n  }\n  // Define iterator\n  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG] = returnThis;\n  if (DEFAULT) {\n    methods = {\n      values: DEF_VALUES ? $default : getMethod(VALUES),\n      keys: IS_SET ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if (FORCED) for (key in methods) {\n      if (!(key in proto)) redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19pdGVyLWRlZmluZS5qcz8wMWY5Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcbnZhciBMSUJSQVJZID0gcmVxdWlyZSgnLi9fbGlicmFyeScpO1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciByZWRlZmluZSA9IHJlcXVpcmUoJy4vX3JlZGVmaW5lJyk7XG52YXIgaGlkZSA9IHJlcXVpcmUoJy4vX2hpZGUnKTtcbnZhciBJdGVyYXRvcnMgPSByZXF1aXJlKCcuL19pdGVyYXRvcnMnKTtcbnZhciAkaXRlckNyZWF0ZSA9IHJlcXVpcmUoJy4vX2l0ZXItY3JlYXRlJyk7XG52YXIgc2V0VG9TdHJpbmdUYWcgPSByZXF1aXJlKCcuL19zZXQtdG8tc3RyaW5nLXRhZycpO1xudmFyIGdldFByb3RvdHlwZU9mID0gcmVxdWlyZSgnLi9fb2JqZWN0LWdwbycpO1xudmFyIElURVJBVE9SID0gcmVxdWlyZSgnLi9fd2tzJykoJ2l0ZXJhdG9yJyk7XG52YXIgQlVHR1kgPSAhKFtdLmtleXMgJiYgJ25leHQnIGluIFtdLmtleXMoKSk7IC8vIFNhZmFyaSBoYXMgYnVnZ3kgaXRlcmF0b3JzIHcvbyBgbmV4dGBcbnZhciBGRl9JVEVSQVRPUiA9ICdAQGl0ZXJhdG9yJztcbnZhciBLRVlTID0gJ2tleXMnO1xudmFyIFZBTFVFUyA9ICd2YWx1ZXMnO1xuXG52YXIgcmV0dXJuVGhpcyA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHRoaXM7IH07XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKEJhc2UsIE5BTUUsIENvbnN0cnVjdG9yLCBuZXh0LCBERUZBVUxULCBJU19TRVQsIEZPUkNFRCkge1xuICAkaXRlckNyZWF0ZShDb25zdHJ1Y3RvciwgTkFNRSwgbmV4dCk7XG4gIHZhciBnZXRNZXRob2QgPSBmdW5jdGlvbiAoa2luZCkge1xuICAgIGlmICghQlVHR1kgJiYga2luZCBpbiBwcm90bykgcmV0dXJuIHByb3RvW2tpbmRdO1xuICAgIHN3aXRjaCAoa2luZCkge1xuICAgICAgY2FzZSBLRVlTOiByZXR1cm4gZnVuY3Rpb24ga2V5cygpIHsgcmV0dXJuIG5ldyBDb25zdHJ1Y3Rvcih0aGlzLCBraW5kKTsgfTtcbiAgICAgIGNhc2UgVkFMVUVTOiByZXR1cm4gZnVuY3Rpb24gdmFsdWVzKCkgeyByZXR1cm4gbmV3IENvbnN0cnVjdG9yKHRoaXMsIGtpbmQpOyB9O1xuICAgIH0gcmV0dXJuIGZ1bmN0aW9uIGVudHJpZXMoKSB7IHJldHVybiBuZXcgQ29uc3RydWN0b3IodGhpcywga2luZCk7IH07XG4gIH07XG4gIHZhciBUQUcgPSBOQU1FICsgJyBJdGVyYXRvcic7XG4gIHZhciBERUZfVkFMVUVTID0gREVGQVVMVCA9PSBWQUxVRVM7XG4gIHZhciBWQUxVRVNfQlVHID0gZmFsc2U7XG4gIHZhciBwcm90byA9IEJhc2UucHJvdG90eXBlO1xuICB2YXIgJG5hdGl2ZSA9IHByb3RvW0lURVJBVE9SXSB8fCBwcm90b1tGRl9JVEVSQVRPUl0gfHwgREVGQVVMVCAmJiBwcm90b1tERUZBVUxUXTtcbiAgdmFyICRkZWZhdWx0ID0gJG5hdGl2ZSB8fCBnZXRNZXRob2QoREVGQVVMVCk7XG4gIHZhciAkZW50cmllcyA9IERFRkFVTFQgPyAhREVGX1ZBTFVFUyA/ICRkZWZhdWx0IDogZ2V0TWV0aG9kKCdlbnRyaWVzJykgOiB1bmRlZmluZWQ7XG4gIHZhciAkYW55TmF0aXZlID0gTkFNRSA9PSAnQXJyYXknID8gcHJvdG8uZW50cmllcyB8fCAkbmF0aXZlIDogJG5hdGl2ZTtcbiAgdmFyIG1ldGhvZHMsIGtleSwgSXRlcmF0b3JQcm90b3R5cGU7XG4gIC8vIEZpeCBuYXRpdmVcbiAgaWYgKCRhbnlOYXRpdmUpIHtcbiAgICBJdGVyYXRvclByb3RvdHlwZSA9IGdldFByb3RvdHlwZU9mKCRhbnlOYXRpdmUuY2FsbChuZXcgQmFzZSgpKSk7XG4gICAgaWYgKEl0ZXJhdG9yUHJvdG90eXBlICE9PSBPYmplY3QucHJvdG90eXBlICYmIEl0ZXJhdG9yUHJvdG90eXBlLm5leHQpIHtcbiAgICAgIC8vIFNldCBAQHRvU3RyaW5nVGFnIHRvIG5hdGl2ZSBpdGVyYXRvcnNcbiAgICAgIHNldFRvU3RyaW5nVGFnKEl0ZXJhdG9yUHJvdG90eXBlLCBUQUcsIHRydWUpO1xuICAgICAgLy8gZml4IGZvciBzb21lIG9sZCBlbmdpbmVzXG4gICAgICBpZiAoIUxJQlJBUlkgJiYgdHlwZW9mIEl0ZXJhdG9yUHJvdG90eXBlW0lURVJBVE9SXSAhPSAnZnVuY3Rpb24nKSBoaWRlKEl0ZXJhdG9yUHJvdG90eXBlLCBJVEVSQVRPUiwgcmV0dXJuVGhpcyk7XG4gICAgfVxuICB9XG4gIC8vIGZpeCBBcnJheSN7dmFsdWVzLCBAQGl0ZXJhdG9yfS5uYW1lIGluIFY4IC8gRkZcbiAgaWYgKERFRl9WQUxVRVMgJiYgJG5hdGl2ZSAmJiAkbmF0aXZlLm5hbWUgIT09IFZBTFVFUykge1xuICAgIFZBTFVFU19CVUcgPSB0cnVlO1xuICAgICRkZWZhdWx0ID0gZnVuY3Rpb24gdmFsdWVzKCkgeyByZXR1cm4gJG5hdGl2ZS5jYWxsKHRoaXMpOyB9O1xuICB9XG4gIC8vIERlZmluZSBpdGVyYXRvclxuICBpZiAoKCFMSUJSQVJZIHx8IEZPUkNFRCkgJiYgKEJVR0dZIHx8IFZBTFVFU19CVUcgfHwgIXByb3RvW0lURVJBVE9SXSkpIHtcbiAgICBoaWRlKHByb3RvLCBJVEVSQVRPUiwgJGRlZmF1bHQpO1xuICB9XG4gIC8vIFBsdWcgZm9yIGxpYnJhcnlcbiAgSXRlcmF0b3JzW05BTUVdID0gJGRlZmF1bHQ7XG4gIEl0ZXJhdG9yc1tUQUddID0gcmV0dXJuVGhpcztcbiAgaWYgKERFRkFVTFQpIHtcbiAgICBtZXRob2RzID0ge1xuICAgICAgdmFsdWVzOiBERUZfVkFMVUVTID8gJGRlZmF1bHQgOiBnZXRNZXRob2QoVkFMVUVTKSxcbiAgICAgIGtleXM6IElTX1NFVCA/ICRkZWZhdWx0IDogZ2V0TWV0aG9kKEtFWVMpLFxuICAgICAgZW50cmllczogJGVudHJpZXNcbiAgICB9O1xuICAgIGlmIChGT1JDRUQpIGZvciAoa2V5IGluIG1ldGhvZHMpIHtcbiAgICAgIGlmICghKGtleSBpbiBwcm90bykpIHJlZGVmaW5lKHByb3RvLCBrZXksIG1ldGhvZHNba2V5XSk7XG4gICAgfSBlbHNlICRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogKEJVR0dZIHx8IFZBTFVFU19CVUcpLCBOQU1FLCBtZXRob2RzKTtcbiAgfVxuICByZXR1cm4gbWV0aG9kcztcbn07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///73\n")},function(module,exports,__webpack_require__){eval("// helper for String#{startsWith, endsWith, includes}\nvar isRegExp = __webpack_require__(75);\nvar defined = __webpack_require__(25);\n\nmodule.exports = function (that, searchString, NAME) {\n  if (isRegExp(searchString)) throw TypeError('String#' + NAME + \" doesn't accept regex!\");\n  return String(defined(that));\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzQuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19zdHJpbmctY29udGV4dC5qcz9kMmM4Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGhlbHBlciBmb3IgU3RyaW5nI3tzdGFydHNXaXRoLCBlbmRzV2l0aCwgaW5jbHVkZXN9XG52YXIgaXNSZWdFeHAgPSByZXF1aXJlKCcuL19pcy1yZWdleHAnKTtcbnZhciBkZWZpbmVkID0gcmVxdWlyZSgnLi9fZGVmaW5lZCcpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICh0aGF0LCBzZWFyY2hTdHJpbmcsIE5BTUUpIHtcbiAgaWYgKGlzUmVnRXhwKHNlYXJjaFN0cmluZykpIHRocm93IFR5cGVFcnJvcignU3RyaW5nIycgKyBOQU1FICsgXCIgZG9lc24ndCBhY2NlcHQgcmVnZXghXCIpO1xuICByZXR1cm4gU3RyaW5nKGRlZmluZWQodGhhdCkpO1xufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///74\n")},function(module,exports,__webpack_require__){eval("// 7.2.8 IsRegExp(argument)\nvar isObject = __webpack_require__(5);\nvar cof = __webpack_require__(24);\nvar MATCH = __webpack_require__(6)('match');\nmodule.exports = function (it) {\n  var isRegExp;\n  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : cof(it) == 'RegExp');\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19pcy1yZWdleHAuanM/YWFlMyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyA3LjIuOCBJc1JlZ0V4cChhcmd1bWVudClcbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xudmFyIGNvZiA9IHJlcXVpcmUoJy4vX2NvZicpO1xudmFyIE1BVENIID0gcmVxdWlyZSgnLi9fd2tzJykoJ21hdGNoJyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICB2YXIgaXNSZWdFeHA7XG4gIHJldHVybiBpc09iamVjdChpdCkgJiYgKChpc1JlZ0V4cCA9IGl0W01BVENIXSkgIT09IHVuZGVmaW5lZCA/ICEhaXNSZWdFeHAgOiBjb2YoaXQpID09ICdSZWdFeHAnKTtcbn07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///75\n")},function(module,exports,__webpack_require__){eval("var MATCH = __webpack_require__(6)('match');\nmodule.exports = function (KEY) {\n  var re = /./;\n  try {\n    '/./'[KEY](re);\n  } catch (e) {\n    try {\n      re[MATCH] = false;\n      return !'/./'[KEY](re);\n    } catch (f) { /* empty */ }\n  } return true;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzYuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19mYWlscy1pcy1yZWdleHAuanM/NTE0NyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgTUFUQ0ggPSByZXF1aXJlKCcuL193a3MnKSgnbWF0Y2gnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKEtFWSkge1xuICB2YXIgcmUgPSAvLi87XG4gIHRyeSB7XG4gICAgJy8uLydbS0VZXShyZSk7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICB0cnkge1xuICAgICAgcmVbTUFUQ0hdID0gZmFsc2U7XG4gICAgICByZXR1cm4gIScvLi8nW0tFWV0ocmUpO1xuICAgIH0gY2F0Y2ggKGYpIHsgLyogZW1wdHkgKi8gfVxuICB9IHJldHVybiB0cnVlO1xufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///76\n")},function(module,exports,__webpack_require__){eval("// check on default Array iterator\nvar Iterators = __webpack_require__(41);\nvar ITERATOR = __webpack_require__(6)('iterator');\nvar ArrayProto = Array.prototype;\n\nmodule.exports = function (it) {\n  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzcuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19pcy1hcnJheS1pdGVyLmpzPzMzYTQiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gY2hlY2sgb24gZGVmYXVsdCBBcnJheSBpdGVyYXRvclxudmFyIEl0ZXJhdG9ycyA9IHJlcXVpcmUoJy4vX2l0ZXJhdG9ycycpO1xudmFyIElURVJBVE9SID0gcmVxdWlyZSgnLi9fd2tzJykoJ2l0ZXJhdG9yJyk7XG52YXIgQXJyYXlQcm90byA9IEFycmF5LnByb3RvdHlwZTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQpIHtcbiAgcmV0dXJuIGl0ICE9PSB1bmRlZmluZWQgJiYgKEl0ZXJhdG9ycy5BcnJheSA9PT0gaXQgfHwgQXJyYXlQcm90b1tJVEVSQVRPUl0gPT09IGl0KTtcbn07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///77\n")},function(module,exports,__webpack_require__){"use strict";eval("\nvar $defineProperty = __webpack_require__(9);\nvar createDesc = __webpack_require__(29);\n\nmodule.exports = function (object, index, value) {\n  if (index in object) $defineProperty.f(object, index, createDesc(0, value));\n  else object[index] = value;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzguanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19jcmVhdGUtcHJvcGVydHkuanM/ZjFhZSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG52YXIgJGRlZmluZVByb3BlcnR5ID0gcmVxdWlyZSgnLi9fb2JqZWN0LWRwJyk7XG52YXIgY3JlYXRlRGVzYyA9IHJlcXVpcmUoJy4vX3Byb3BlcnR5LWRlc2MnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAob2JqZWN0LCBpbmRleCwgdmFsdWUpIHtcbiAgaWYgKGluZGV4IGluIG9iamVjdCkgJGRlZmluZVByb3BlcnR5LmYob2JqZWN0LCBpbmRleCwgY3JlYXRlRGVzYygwLCB2YWx1ZSkpO1xuICBlbHNlIG9iamVjdFtpbmRleF0gPSB2YWx1ZTtcbn07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///78\n")},function(module,exports,__webpack_require__){eval("var classof = __webpack_require__(47);\nvar ITERATOR = __webpack_require__(6)('iterator');\nvar Iterators = __webpack_require__(41);\nmodule.exports = __webpack_require__(8).getIteratorMethod = function (it) {\n  if (it != undefined) return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzkuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2NvcmUuZ2V0LWl0ZXJhdG9yLW1ldGhvZC5qcz8yN2VlIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBjbGFzc29mID0gcmVxdWlyZSgnLi9fY2xhc3NvZicpO1xudmFyIElURVJBVE9SID0gcmVxdWlyZSgnLi9fd2tzJykoJ2l0ZXJhdG9yJyk7XG52YXIgSXRlcmF0b3JzID0gcmVxdWlyZSgnLi9faXRlcmF0b3JzJyk7XG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vX2NvcmUnKS5nZXRJdGVyYXRvck1ldGhvZCA9IGZ1bmN0aW9uIChpdCkge1xuICBpZiAoaXQgIT0gdW5kZWZpbmVkKSByZXR1cm4gaXRbSVRFUkFUT1JdXG4gICAgfHwgaXRbJ0BAaXRlcmF0b3InXVxuICAgIHx8IEl0ZXJhdG9yc1tjbGFzc29mKGl0KV07XG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///79\n")},function(module,exports,__webpack_require__){"use strict";eval("// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\n\nvar toObject = __webpack_require__(11);\nvar toAbsoluteIndex = __webpack_require__(33);\nvar toLength = __webpack_require__(7);\nmodule.exports = function fill(value /* , start = 0, end = @length */) {\n  var O = toObject(this);\n  var length = toLength(O.length);\n  var aLen = arguments.length;\n  var index = toAbsoluteIndex(aLen > 1 ? arguments[1] : undefined, length);\n  var end = aLen > 2 ? arguments[2] : undefined;\n  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);\n  while (endPos > index) O[index++] = value;\n  return O;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19hcnJheS1maWxsLmpzPzM2YmQiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gMjIuMS4zLjYgQXJyYXkucHJvdG90eXBlLmZpbGwodmFsdWUsIHN0YXJ0ID0gMCwgZW5kID0gdGhpcy5sZW5ndGgpXG4ndXNlIHN0cmljdCc7XG52YXIgdG9PYmplY3QgPSByZXF1aXJlKCcuL190by1vYmplY3QnKTtcbnZhciB0b0Fic29sdXRlSW5kZXggPSByZXF1aXJlKCcuL190by1hYnNvbHV0ZS1pbmRleCcpO1xudmFyIHRvTGVuZ3RoID0gcmVxdWlyZSgnLi9fdG8tbGVuZ3RoJyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGZpbGwodmFsdWUgLyogLCBzdGFydCA9IDAsIGVuZCA9IEBsZW5ndGggKi8pIHtcbiAgdmFyIE8gPSB0b09iamVjdCh0aGlzKTtcbiAgdmFyIGxlbmd0aCA9IHRvTGVuZ3RoKE8ubGVuZ3RoKTtcbiAgdmFyIGFMZW4gPSBhcmd1bWVudHMubGVuZ3RoO1xuICB2YXIgaW5kZXggPSB0b0Fic29sdXRlSW5kZXgoYUxlbiA+IDEgPyBhcmd1bWVudHNbMV0gOiB1bmRlZmluZWQsIGxlbmd0aCk7XG4gIHZhciBlbmQgPSBhTGVuID4gMiA/IGFyZ3VtZW50c1syXSA6IHVuZGVmaW5lZDtcbiAgdmFyIGVuZFBvcyA9IGVuZCA9PT0gdW5kZWZpbmVkID8gbGVuZ3RoIDogdG9BYnNvbHV0ZUluZGV4KGVuZCwgbGVuZ3RoKTtcbiAgd2hpbGUgKGVuZFBvcyA+IGluZGV4KSBPW2luZGV4KytdID0gdmFsdWU7XG4gIHJldHVybiBPO1xufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///80\n")},function(module,exports,__webpack_require__){"use strict";eval("\nvar addToUnscopables = __webpack_require__(37);\nvar step = __webpack_require__(110);\nvar Iterators = __webpack_require__(41);\nvar toIObject = __webpack_require__(16);\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nmodule.exports = __webpack_require__(73)(Array, 'Array', function (iterated, kind) {\n  this._t = toIObject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var kind = this._k;\n  var index = this._i++;\n  if (!O || index >= O.length) {\n    this._t = undefined;\n    return step(1);\n  }\n  if (kind == 'keys') return step(0, index);\n  if (kind == 'values') return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments = Iterators.Array;\n\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5hcnJheS5pdGVyYXRvci5qcz9jYWRmIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcbnZhciBhZGRUb1Vuc2NvcGFibGVzID0gcmVxdWlyZSgnLi9fYWRkLXRvLXVuc2NvcGFibGVzJyk7XG52YXIgc3RlcCA9IHJlcXVpcmUoJy4vX2l0ZXItc3RlcCcpO1xudmFyIEl0ZXJhdG9ycyA9IHJlcXVpcmUoJy4vX2l0ZXJhdG9ycycpO1xudmFyIHRvSU9iamVjdCA9IHJlcXVpcmUoJy4vX3RvLWlvYmplY3QnKTtcblxuLy8gMjIuMS4zLjQgQXJyYXkucHJvdG90eXBlLmVudHJpZXMoKVxuLy8gMjIuMS4zLjEzIEFycmF5LnByb3RvdHlwZS5rZXlzKClcbi8vIDIyLjEuMy4yOSBBcnJheS5wcm90b3R5cGUudmFsdWVzKClcbi8vIDIyLjEuMy4zMCBBcnJheS5wcm90b3R5cGVbQEBpdGVyYXRvcl0oKVxubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL19pdGVyLWRlZmluZScpKEFycmF5LCAnQXJyYXknLCBmdW5jdGlvbiAoaXRlcmF0ZWQsIGtpbmQpIHtcbiAgdGhpcy5fdCA9IHRvSU9iamVjdChpdGVyYXRlZCk7IC8vIHRhcmdldFxuICB0aGlzLl9pID0gMDsgICAgICAgICAgICAgICAgICAgLy8gbmV4dCBpbmRleFxuICB0aGlzLl9rID0ga2luZDsgICAgICAgICAgICAgICAgLy8ga2luZFxuLy8gMjIuMS41LjIuMSAlQXJyYXlJdGVyYXRvclByb3RvdHlwZSUubmV4dCgpXG59LCBmdW5jdGlvbiAoKSB7XG4gIHZhciBPID0gdGhpcy5fdDtcbiAgdmFyIGtpbmQgPSB0aGlzLl9rO1xuICB2YXIgaW5kZXggPSB0aGlzLl9pKys7XG4gIGlmICghTyB8fCBpbmRleCA+PSBPLmxlbmd0aCkge1xuICAgIHRoaXMuX3QgPSB1bmRlZmluZWQ7XG4gICAgcmV0dXJuIHN0ZXAoMSk7XG4gIH1cbiAgaWYgKGtpbmQgPT0gJ2tleXMnKSByZXR1cm4gc3RlcCgwLCBpbmRleCk7XG4gIGlmIChraW5kID09ICd2YWx1ZXMnKSByZXR1cm4gc3RlcCgwLCBPW2luZGV4XSk7XG4gIHJldHVybiBzdGVwKDAsIFtpbmRleCwgT1tpbmRleF1dKTtcbn0sICd2YWx1ZXMnKTtcblxuLy8gYXJndW1lbnRzTGlzdFtAQGl0ZXJhdG9yXSBpcyAlQXJyYXlQcm90b192YWx1ZXMlICg5LjQuNC42LCA5LjQuNC43KVxuSXRlcmF0b3JzLkFyZ3VtZW50cyA9IEl0ZXJhdG9ycy5BcnJheTtcblxuYWRkVG9VbnNjb3BhYmxlcygna2V5cycpO1xuYWRkVG9VbnNjb3BhYmxlcygndmFsdWVzJyk7XG5hZGRUb1Vuc2NvcGFibGVzKCdlbnRyaWVzJyk7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///81\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nvar regexpFlags = __webpack_require__(54);\n\nvar nativeExec = RegExp.prototype.exec;\n// This always refers to the native implementation, because the\n// String#replace polyfill uses ./fix-regexp-well-known-symbol-logic.js,\n// which loads this file before patching the method.\nvar nativeReplace = String.prototype.replace;\n\nvar patchedExec = nativeExec;\n\nvar LAST_INDEX = 'lastIndex';\n\nvar UPDATES_LAST_INDEX_WRONG = (function () {\n  var re1 = /a/,\n      re2 = /b*/g;\n  nativeExec.call(re1, 'a');\n  nativeExec.call(re2, 'a');\n  return re1[LAST_INDEX] !== 0 || re2[LAST_INDEX] !== 0;\n})();\n\n// nonparticipating capturing group, copied from es5-shim's String#split patch.\nvar NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;\n\nvar PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED;\n\nif (PATCH) {\n  patchedExec = function exec(str) {\n    var re = this;\n    var lastIndex, reCopy, match, i;\n\n    if (NPCG_INCLUDED) {\n      reCopy = new RegExp('^' + re.source + '$(?!\\\\s)', regexpFlags.call(re));\n    }\n    if (UPDATES_LAST_INDEX_WRONG) lastIndex = re[LAST_INDEX];\n\n    match = nativeExec.call(re, str);\n\n    if (UPDATES_LAST_INDEX_WRONG && match) {\n      re[LAST_INDEX] = re.global ? match.index + match[0].length : lastIndex;\n    }\n    if (NPCG_INCLUDED && match && match.length > 1) {\n      // Fix browsers whose `exec` methods don't consistently return `undefined`\n      // for NPCG, like IE8. NOTE: This doesn' work for /(.?)?/\n      // eslint-disable-next-line no-loop-func\n      nativeReplace.call(match[0], reCopy, function () {\n        for (i = 1; i < arguments.length - 2; i++) {\n          if (arguments[i] === undefined) match[i] = undefined;\n        }\n      });\n    }\n\n    return match;\n  };\n}\n\nmodule.exports = patchedExec;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODIuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19yZWdleHAtZXhlYy5qcz81MjBhIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIHJlZ2V4cEZsYWdzID0gcmVxdWlyZSgnLi9fZmxhZ3MnKTtcblxudmFyIG5hdGl2ZUV4ZWMgPSBSZWdFeHAucHJvdG90eXBlLmV4ZWM7XG4vLyBUaGlzIGFsd2F5cyByZWZlcnMgdG8gdGhlIG5hdGl2ZSBpbXBsZW1lbnRhdGlvbiwgYmVjYXVzZSB0aGVcbi8vIFN0cmluZyNyZXBsYWNlIHBvbHlmaWxsIHVzZXMgLi9maXgtcmVnZXhwLXdlbGwta25vd24tc3ltYm9sLWxvZ2ljLmpzLFxuLy8gd2hpY2ggbG9hZHMgdGhpcyBmaWxlIGJlZm9yZSBwYXRjaGluZyB0aGUgbWV0aG9kLlxudmFyIG5hdGl2ZVJlcGxhY2UgPSBTdHJpbmcucHJvdG90eXBlLnJlcGxhY2U7XG5cbnZhciBwYXRjaGVkRXhlYyA9IG5hdGl2ZUV4ZWM7XG5cbnZhciBMQVNUX0lOREVYID0gJ2xhc3RJbmRleCc7XG5cbnZhciBVUERBVEVTX0xBU1RfSU5ERVhfV1JPTkcgPSAoZnVuY3Rpb24gKCkge1xuICB2YXIgcmUxID0gL2EvLFxuICAgICAgcmUyID0gL2IqL2c7XG4gIG5hdGl2ZUV4ZWMuY2FsbChyZTEsICdhJyk7XG4gIG5hdGl2ZUV4ZWMuY2FsbChyZTIsICdhJyk7XG4gIHJldHVybiByZTFbTEFTVF9JTkRFWF0gIT09IDAgfHwgcmUyW0xBU1RfSU5ERVhdICE9PSAwO1xufSkoKTtcblxuLy8gbm9ucGFydGljaXBhdGluZyBjYXB0dXJpbmcgZ3JvdXAsIGNvcGllZCBmcm9tIGVzNS1zaGltJ3MgU3RyaW5nI3NwbGl0IHBhdGNoLlxudmFyIE5QQ0dfSU5DTFVERUQgPSAvKCk/Py8uZXhlYygnJylbMV0gIT09IHVuZGVmaW5lZDtcblxudmFyIFBBVENIID0gVVBEQVRFU19MQVNUX0lOREVYX1dST05HIHx8IE5QQ0dfSU5DTFVERUQ7XG5cbmlmIChQQVRDSCkge1xuICBwYXRjaGVkRXhlYyA9IGZ1bmN0aW9uIGV4ZWMoc3RyKSB7XG4gICAgdmFyIHJlID0gdGhpcztcbiAgICB2YXIgbGFzdEluZGV4LCByZUNvcHksIG1hdGNoLCBpO1xuXG4gICAgaWYgKE5QQ0dfSU5DTFVERUQpIHtcbiAgICAgIHJlQ29weSA9IG5ldyBSZWdFeHAoJ14nICsgcmUuc291cmNlICsgJyQoPyFcXFxccyknLCByZWdleHBGbGFncy5jYWxsKHJlKSk7XG4gICAgfVxuICAgIGlmIChVUERBVEVTX0xBU1RfSU5ERVhfV1JPTkcpIGxhc3RJbmRleCA9IHJlW0xBU1RfSU5ERVhdO1xuXG4gICAgbWF0Y2ggPSBuYXRpdmVFeGVjLmNhbGwocmUsIHN0cik7XG5cbiAgICBpZiAoVVBEQVRFU19MQVNUX0lOREVYX1dST05HICYmIG1hdGNoKSB7XG4gICAgICByZVtMQVNUX0lOREVYXSA9IHJlLmdsb2JhbCA/IG1hdGNoLmluZGV4ICsgbWF0Y2hbMF0ubGVuZ3RoIDogbGFzdEluZGV4O1xuICAgIH1cbiAgICBpZiAoTlBDR19JTkNMVURFRCAmJiBtYXRjaCAmJiBtYXRjaC5sZW5ndGggPiAxKSB7XG4gICAgICAvLyBGaXggYnJvd3NlcnMgd2hvc2UgYGV4ZWNgIG1ldGhvZHMgZG9uJ3QgY29uc2lzdGVudGx5IHJldHVybiBgdW5kZWZpbmVkYFxuICAgICAgLy8gZm9yIE5QQ0csIGxpa2UgSUU4LiBOT1RFOiBUaGlzIGRvZXNuJyB3b3JrIGZvciAvKC4/KT8vXG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tbG9vcC1mdW5jXG4gICAgICBuYXRpdmVSZXBsYWNlLmNhbGwobWF0Y2hbMF0sIHJlQ29weSwgZnVuY3Rpb24gKCkge1xuICAgICAgICBmb3IgKGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aCAtIDI7IGkrKykge1xuICAgICAgICAgIGlmIChhcmd1bWVudHNbaV0gPT09IHVuZGVmaW5lZCkgbWF0Y2hbaV0gPSB1bmRlZmluZWQ7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cblxuICAgIHJldHVybiBtYXRjaDtcbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBwYXRjaGVkRXhlYztcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///82\n")},function(module,exports,__webpack_require__){"use strict";eval("\nvar at = __webpack_require__(72)(true);\n\n // `AdvanceStringIndex` abstract operation\n// https://tc39.github.io/ecma262/#sec-advancestringindex\nmodule.exports = function (S, index, unicode) {\n  return index + (unicode ? at(S, index).length : 1);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19hZHZhbmNlLXN0cmluZy1pbmRleC5qcz8wMzkwIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcbnZhciBhdCA9IHJlcXVpcmUoJy4vX3N0cmluZy1hdCcpKHRydWUpO1xuXG4gLy8gYEFkdmFuY2VTdHJpbmdJbmRleGAgYWJzdHJhY3Qgb3BlcmF0aW9uXG4vLyBodHRwczovL3RjMzkuZ2l0aHViLmlvL2VjbWEyNjIvI3NlYy1hZHZhbmNlc3RyaW5naW5kZXhcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKFMsIGluZGV4LCB1bmljb2RlKSB7XG4gIHJldHVybiBpbmRleCArICh1bmljb2RlID8gYXQoUywgaW5kZXgpLmxlbmd0aCA6IDEpO1xufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///83\n")},function(module,exports,__webpack_require__){eval("var ctx = __webpack_require__(18);\nvar invoke = __webpack_require__(99);\nvar html = __webpack_require__(65);\nvar cel = __webpack_require__(61);\nvar global = __webpack_require__(2);\nvar process = global.process;\nvar setTask = global.setImmediate;\nvar clearTask = global.clearImmediate;\nvar MessageChannel = global.MessageChannel;\nvar Dispatch = global.Dispatch;\nvar counter = 0;\nvar queue = {};\nvar ONREADYSTATECHANGE = 'onreadystatechange';\nvar defer, channel, port;\nvar run = function () {\n  var id = +this;\n  // eslint-disable-next-line no-prototype-builtins\n  if (queue.hasOwnProperty(id)) {\n    var fn = queue[id];\n    delete queue[id];\n    fn();\n  }\n};\nvar listener = function (event) {\n  run.call(event.data);\n};\n// Node.js 0.9+ & IE10+ has setImmediate, otherwise:\nif (!setTask || !clearTask) {\n  setTask = function setImmediate(fn) {\n    var args = [];\n    var i = 1;\n    while (arguments.length > i) args.push(arguments[i++]);\n    queue[++counter] = function () {\n      // eslint-disable-next-line no-new-func\n      invoke(typeof fn == 'function' ? fn : Function(fn), args);\n    };\n    defer(counter);\n    return counter;\n  };\n  clearTask = function clearImmediate(id) {\n    delete queue[id];\n  };\n  // Node.js 0.8-\n  if (__webpack_require__(24)(process) == 'process') {\n    defer = function (id) {\n      process.nextTick(ctx(run, id, 1));\n    };\n  // Sphere (JS game engine) Dispatch API\n  } else if (Dispatch && Dispatch.now) {\n    defer = function (id) {\n      Dispatch.now(ctx(run, id, 1));\n    };\n  // Browsers with MessageChannel, includes WebWorkers\n  } else if (MessageChannel) {\n    channel = new MessageChannel();\n    port = channel.port2;\n    channel.port1.onmessage = listener;\n    defer = ctx(port.postMessage, port, 1);\n  // Browsers with postMessage, skip WebWorkers\n  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'\n  } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts) {\n    defer = function (id) {\n      global.postMessage(id + '', '*');\n    };\n    global.addEventListener('message', listener, false);\n  // IE8-\n  } else if (ONREADYSTATECHANGE in cel('script')) {\n    defer = function (id) {\n      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function () {\n        html.removeChild(this);\n        run.call(id);\n      };\n    };\n  // Rest old browsers\n  } else {\n    defer = function (id) {\n      setTimeout(ctx(run, id, 1), 0);\n    };\n  }\n}\nmodule.exports = {\n  set: setTask,\n  clear: clearTask\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODQuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL190YXNrLmpzPzE5OTEiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGN0eCA9IHJlcXVpcmUoJy4vX2N0eCcpO1xudmFyIGludm9rZSA9IHJlcXVpcmUoJy4vX2ludm9rZScpO1xudmFyIGh0bWwgPSByZXF1aXJlKCcuL19odG1sJyk7XG52YXIgY2VsID0gcmVxdWlyZSgnLi9fZG9tLWNyZWF0ZScpO1xudmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpO1xudmFyIHByb2Nlc3MgPSBnbG9iYWwucHJvY2VzcztcbnZhciBzZXRUYXNrID0gZ2xvYmFsLnNldEltbWVkaWF0ZTtcbnZhciBjbGVhclRhc2sgPSBnbG9iYWwuY2xlYXJJbW1lZGlhdGU7XG52YXIgTWVzc2FnZUNoYW5uZWwgPSBnbG9iYWwuTWVzc2FnZUNoYW5uZWw7XG52YXIgRGlzcGF0Y2ggPSBnbG9iYWwuRGlzcGF0Y2g7XG52YXIgY291bnRlciA9IDA7XG52YXIgcXVldWUgPSB7fTtcbnZhciBPTlJFQURZU1RBVEVDSEFOR0UgPSAnb25yZWFkeXN0YXRlY2hhbmdlJztcbnZhciBkZWZlciwgY2hhbm5lbCwgcG9ydDtcbnZhciBydW4gPSBmdW5jdGlvbiAoKSB7XG4gIHZhciBpZCA9ICt0aGlzO1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcHJvdG90eXBlLWJ1aWx0aW5zXG4gIGlmIChxdWV1ZS5oYXNPd25Qcm9wZXJ0eShpZCkpIHtcbiAgICB2YXIgZm4gPSBxdWV1ZVtpZF07XG4gICAgZGVsZXRlIHF1ZXVlW2lkXTtcbiAgICBmbigpO1xuICB9XG59O1xudmFyIGxpc3RlbmVyID0gZnVuY3Rpb24gKGV2ZW50KSB7XG4gIHJ1bi5jYWxsKGV2ZW50LmRhdGEpO1xufTtcbi8vIE5vZGUuanMgMC45KyAmIElFMTArIGhhcyBzZXRJbW1lZGlhdGUsIG90aGVyd2lzZTpcbmlmICghc2V0VGFzayB8fCAhY2xlYXJUYXNrKSB7XG4gIHNldFRhc2sgPSBmdW5jdGlvbiBzZXRJbW1lZGlhdGUoZm4pIHtcbiAgICB2YXIgYXJncyA9IFtdO1xuICAgIHZhciBpID0gMTtcbiAgICB3aGlsZSAoYXJndW1lbnRzLmxlbmd0aCA+IGkpIGFyZ3MucHVzaChhcmd1bWVudHNbaSsrXSk7XG4gICAgcXVldWVbKytjb3VudGVyXSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1uZXctZnVuY1xuICAgICAgaW52b2tlKHR5cGVvZiBmbiA9PSAnZnVuY3Rpb24nID8gZm4gOiBGdW5jdGlvbihmbiksIGFyZ3MpO1xuICAgIH07XG4gICAgZGVmZXIoY291bnRlcik7XG4gICAgcmV0dXJuIGNvdW50ZXI7XG4gIH07XG4gIGNsZWFyVGFzayA9IGZ1bmN0aW9uIGNsZWFySW1tZWRpYXRlKGlkKSB7XG4gICAgZGVsZXRlIHF1ZXVlW2lkXTtcbiAgfTtcbiAgLy8gTm9kZS5qcyAwLjgtXG4gIGlmIChyZXF1aXJlKCcuL19jb2YnKShwcm9jZXNzKSA9PSAncHJvY2VzcycpIHtcbiAgICBkZWZlciA9IGZ1bmN0aW9uIChpZCkge1xuICAgICAgcHJvY2Vzcy5uZXh0VGljayhjdHgocnVuLCBpZCwgMSkpO1xuICAgIH07XG4gIC8vIFNwaGVyZSAoSlMgZ2FtZSBlbmdpbmUpIERpc3BhdGNoIEFQSVxuICB9IGVsc2UgaWYgKERpc3BhdGNoICYmIERpc3BhdGNoLm5vdykge1xuICAgIGRlZmVyID0gZnVuY3Rpb24gKGlkKSB7XG4gICAgICBEaXNwYXRjaC5ub3coY3R4KHJ1biwgaWQsIDEpKTtcbiAgICB9O1xuICAvLyBCcm93c2VycyB3aXRoIE1lc3NhZ2VDaGFubmVsLCBpbmNsdWRlcyBXZWJXb3JrZXJzXG4gIH0gZWxzZSBpZiAoTWVzc2FnZUNoYW5uZWwpIHtcbiAgICBjaGFubmVsID0gbmV3IE1lc3NhZ2VDaGFubmVsKCk7XG4gICAgcG9ydCA9IGNoYW5uZWwucG9ydDI7XG4gICAgY2hhbm5lbC5wb3J0MS5vbm1lc3NhZ2UgPSBsaXN0ZW5lcjtcbiAgICBkZWZlciA9IGN0eChwb3J0LnBvc3RNZXNzYWdlLCBwb3J0LCAxKTtcbiAgLy8gQnJvd3NlcnMgd2l0aCBwb3N0TWVzc2FnZSwgc2tpcCBXZWJXb3JrZXJzXG4gIC8vIElFOCBoYXMgcG9zdE1lc3NhZ2UsIGJ1dCBpdCdzIHN5bmMgJiB0eXBlb2YgaXRzIHBvc3RNZXNzYWdlIGlzICdvYmplY3QnXG4gIH0gZWxzZSBpZiAoZ2xvYmFsLmFkZEV2ZW50TGlzdGVuZXIgJiYgdHlwZW9mIHBvc3RNZXNzYWdlID09ICdmdW5jdGlvbicgJiYgIWdsb2JhbC5pbXBvcnRTY3JpcHRzKSB7XG4gICAgZGVmZXIgPSBmdW5jdGlvbiAoaWQpIHtcbiAgICAgIGdsb2JhbC5wb3N0TWVzc2FnZShpZCArICcnLCAnKicpO1xuICAgIH07XG4gICAgZ2xvYmFsLmFkZEV2ZW50TGlzdGVuZXIoJ21lc3NhZ2UnLCBsaXN0ZW5lciwgZmFsc2UpO1xuICAvLyBJRTgtXG4gIH0gZWxzZSBpZiAoT05SRUFEWVNUQVRFQ0hBTkdFIGluIGNlbCgnc2NyaXB0JykpIHtcbiAgICBkZWZlciA9IGZ1bmN0aW9uIChpZCkge1xuICAgICAgaHRtbC5hcHBlbmRDaGlsZChjZWwoJ3NjcmlwdCcpKVtPTlJFQURZU1RBVEVDSEFOR0VdID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBodG1sLnJlbW92ZUNoaWxkKHRoaXMpO1xuICAgICAgICBydW4uY2FsbChpZCk7XG4gICAgICB9O1xuICAgIH07XG4gIC8vIFJlc3Qgb2xkIGJyb3dzZXJzXG4gIH0gZWxzZSB7XG4gICAgZGVmZXIgPSBmdW5jdGlvbiAoaWQpIHtcbiAgICAgIHNldFRpbWVvdXQoY3R4KHJ1biwgaWQsIDEpLCAwKTtcbiAgICB9O1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgc2V0OiBzZXRUYXNrLFxuICBjbGVhcjogY2xlYXJUYXNrXG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///84\n")},function(module,exports,__webpack_require__){"use strict";eval("\nvar global = __webpack_require__(2);\nvar DESCRIPTORS = __webpack_require__(10);\nvar LIBRARY = __webpack_require__(31);\nvar $typed = __webpack_require__(60);\nvar hide = __webpack_require__(15);\nvar redefineAll = __webpack_require__(44);\nvar fails = __webpack_require__(3);\nvar anInstance = __webpack_require__(43);\nvar toInteger = __webpack_require__(20);\nvar toLength = __webpack_require__(7);\nvar toIndex = __webpack_require__(118);\nvar gOPN = __webpack_require__(35).f;\nvar dP = __webpack_require__(9).f;\nvar arrayFill = __webpack_require__(80);\nvar setToStringTag = __webpack_require__(39);\nvar ARRAY_BUFFER = 'ArrayBuffer';\nvar DATA_VIEW = 'DataView';\nvar PROTOTYPE = 'prototype';\nvar WRONG_LENGTH = 'Wrong length!';\nvar WRONG_INDEX = 'Wrong index!';\nvar $ArrayBuffer = global[ARRAY_BUFFER];\nvar $DataView = global[DATA_VIEW];\nvar Math = global.Math;\nvar RangeError = global.RangeError;\n// eslint-disable-next-line no-shadow-restricted-names\nvar Infinity = global.Infinity;\nvar BaseBuffer = $ArrayBuffer;\nvar abs = Math.abs;\nvar pow = Math.pow;\nvar floor = Math.floor;\nvar log = Math.log;\nvar LN2 = Math.LN2;\nvar BUFFER = 'buffer';\nvar BYTE_LENGTH = 'byteLength';\nvar BYTE_OFFSET = 'byteOffset';\nvar $BUFFER = DESCRIPTORS ? '_b' : BUFFER;\nvar $LENGTH = DESCRIPTORS ? '_l' : BYTE_LENGTH;\nvar $OFFSET = DESCRIPTORS ? '_o' : BYTE_OFFSET;\n\n// IEEE754 conversions based on https://github.com/feross/ieee754\nfunction packIEEE754(value, mLen, nBytes) {\n  var buffer = new Array(nBytes);\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var rt = mLen === 23 ? pow(2, -24) - pow(2, -77) : 0;\n  var i = 0;\n  var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;\n  var e, m, c;\n  value = abs(value);\n  // eslint-disable-next-line no-self-compare\n  if (value != value || value === Infinity) {\n    // eslint-disable-next-line no-self-compare\n    m = value != value ? 1 : 0;\n    e = eMax;\n  } else {\n    e = floor(log(value) / LN2);\n    if (value * (c = pow(2, -e)) < 1) {\n      e--;\n      c *= 2;\n    }\n    if (e + eBias >= 1) {\n      value += rt / c;\n    } else {\n      value += rt * pow(2, 1 - eBias);\n    }\n    if (value * c >= 2) {\n      e++;\n      c /= 2;\n    }\n    if (e + eBias >= eMax) {\n      m = 0;\n      e = eMax;\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * pow(2, mLen);\n      e = e + eBias;\n    } else {\n      m = value * pow(2, eBias - 1) * pow(2, mLen);\n      e = 0;\n    }\n  }\n  for (; mLen >= 8; buffer[i++] = m & 255, m /= 256, mLen -= 8);\n  e = e << mLen | m;\n  eLen += mLen;\n  for (; eLen > 0; buffer[i++] = e & 255, e /= 256, eLen -= 8);\n  buffer[--i] |= s * 128;\n  return buffer;\n}\nfunction unpackIEEE754(buffer, mLen, nBytes) {\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var nBits = eLen - 7;\n  var i = nBytes - 1;\n  var s = buffer[i--];\n  var e = s & 127;\n  var m;\n  s >>= 7;\n  for (; nBits > 0; e = e * 256 + buffer[i], i--, nBits -= 8);\n  m = e & (1 << -nBits) - 1;\n  e >>= -nBits;\n  nBits += mLen;\n  for (; nBits > 0; m = m * 256 + buffer[i], i--, nBits -= 8);\n  if (e === 0) {\n    e = 1 - eBias;\n  } else if (e === eMax) {\n    return m ? NaN : s ? -Infinity : Infinity;\n  } else {\n    m = m + pow(2, mLen);\n    e = e - eBias;\n  } return (s ? -1 : 1) * m * pow(2, e - mLen);\n}\n\nfunction unpackI32(bytes) {\n  return bytes[3] << 24 | bytes[2] << 16 | bytes[1] << 8 | bytes[0];\n}\nfunction packI8(it) {\n  return [it & 0xff];\n}\nfunction packI16(it) {\n  return [it & 0xff, it >> 8 & 0xff];\n}\nfunction packI32(it) {\n  return [it & 0xff, it >> 8 & 0xff, it >> 16 & 0xff, it >> 24 & 0xff];\n}\nfunction packF64(it) {\n  return packIEEE754(it, 52, 8);\n}\nfunction packF32(it) {\n  return packIEEE754(it, 23, 4);\n}\n\nfunction addGetter(C, key, internal) {\n  dP(C[PROTOTYPE], key, { get: function () { return this[internal]; } });\n}\n\nfunction get(view, bytes, index, isLittleEndian) {\n  var numIndex = +index;\n  var intIndex = toIndex(numIndex);\n  if (intIndex + bytes > view[$LENGTH]) throw RangeError(WRONG_INDEX);\n  var store = view[$BUFFER]._b;\n  var start = intIndex + view[$OFFSET];\n  var pack = store.slice(start, start + bytes);\n  return isLittleEndian ? pack : pack.reverse();\n}\nfunction set(view, bytes, index, conversion, value, isLittleEndian) {\n  var numIndex = +index;\n  var intIndex = toIndex(numIndex);\n  if (intIndex + bytes > view[$LENGTH]) throw RangeError(WRONG_INDEX);\n  var store = view[$BUFFER]._b;\n  var start = intIndex + view[$OFFSET];\n  var pack = conversion(+value);\n  for (var i = 0; i < bytes; i++) store[start + i] = pack[isLittleEndian ? i : bytes - i - 1];\n}\n\nif (!$typed.ABV) {\n  $ArrayBuffer = function ArrayBuffer(length) {\n    anInstance(this, $ArrayBuffer, ARRAY_BUFFER);\n    var byteLength = toIndex(length);\n    this._b = arrayFill.call(new Array(byteLength), 0);\n    this[$LENGTH] = byteLength;\n  };\n\n  $DataView = function DataView(buffer, byteOffset, byteLength) {\n    anInstance(this, $DataView, DATA_VIEW);\n    anInstance(buffer, $ArrayBuffer, DATA_VIEW);\n    var bufferLength = buffer[$LENGTH];\n    var offset = toInteger(byteOffset);\n    if (offset < 0 || offset > bufferLength) throw RangeError('Wrong offset!');\n    byteLength = byteLength === undefined ? bufferLength - offset : toLength(byteLength);\n    if (offset + byteLength > bufferLength) throw RangeError(WRONG_LENGTH);\n    this[$BUFFER] = buffer;\n    this[$OFFSET] = offset;\n    this[$LENGTH] = byteLength;\n  };\n\n  if (DESCRIPTORS) {\n    addGetter($ArrayBuffer, BYTE_LENGTH, '_l');\n    addGetter($DataView, BUFFER, '_b');\n    addGetter($DataView, BYTE_LENGTH, '_l');\n    addGetter($DataView, BYTE_OFFSET, '_o');\n  }\n\n  redefineAll($DataView[PROTOTYPE], {\n    getInt8: function getInt8(byteOffset) {\n      return get(this, 1, byteOffset)[0] << 24 >> 24;\n    },\n    getUint8: function getUint8(byteOffset) {\n      return get(this, 1, byteOffset)[0];\n    },\n    getInt16: function getInt16(byteOffset /* , littleEndian */) {\n      var bytes = get(this, 2, byteOffset, arguments[1]);\n      return (bytes[1] << 8 | bytes[0]) << 16 >> 16;\n    },\n    getUint16: function getUint16(byteOffset /* , littleEndian */) {\n      var bytes = get(this, 2, byteOffset, arguments[1]);\n      return bytes[1] << 8 | bytes[0];\n    },\n    getInt32: function getInt32(byteOffset /* , littleEndian */) {\n      return unpackI32(get(this, 4, byteOffset, arguments[1]));\n    },\n    getUint32: function getUint32(byteOffset /* , littleEndian */) {\n      return unpackI32(get(this, 4, byteOffset, arguments[1])) >>> 0;\n    },\n    getFloat32: function getFloat32(byteOffset /* , littleEndian */) {\n      return unpackIEEE754(get(this, 4, byteOffset, arguments[1]), 23, 4);\n    },\n    getFloat64: function getFloat64(byteOffset /* , littleEndian */) {\n      return unpackIEEE754(get(this, 8, byteOffset, arguments[1]), 52, 8);\n    },\n    setInt8: function setInt8(byteOffset, value) {\n      set(this, 1, byteOffset, packI8, value);\n    },\n    setUint8: function setUint8(byteOffset, value) {\n      set(this, 1, byteOffset, packI8, value);\n    },\n    setInt16: function setInt16(byteOffset, value /* , littleEndian */) {\n      set(this, 2, byteOffset, packI16, value, arguments[2]);\n    },\n    setUint16: function setUint16(byteOffset, value /* , littleEndian */) {\n      set(this, 2, byteOffset, packI16, value, arguments[2]);\n    },\n    setInt32: function setInt32(byteOffset, value /* , littleEndian */) {\n      set(this, 4, byteOffset, packI32, value, arguments[2]);\n    },\n    setUint32: function setUint32(byteOffset, value /* , littleEndian */) {\n      set(this, 4, byteOffset, packI32, value, arguments[2]);\n    },\n    setFloat32: function setFloat32(byteOffset, value /* , littleEndian */) {\n      set(this, 4, byteOffset, packF32, value, arguments[2]);\n    },\n    setFloat64: function setFloat64(byteOffset, value /* , littleEndian */) {\n      set(this, 8, byteOffset, packF64, value, arguments[2]);\n    }\n  });\n} else {\n  if (!fails(function () {\n    $ArrayBuffer(1);\n  }) || !fails(function () {\n    new $ArrayBuffer(-1); // eslint-disable-line no-new\n  }) || fails(function () {\n    new $ArrayBuffer(); // eslint-disable-line no-new\n    new $ArrayBuffer(1.5); // eslint-disable-line no-new\n    new $ArrayBuffer(NaN); // eslint-disable-line no-new\n    return $ArrayBuffer.name != ARRAY_BUFFER;\n  })) {\n    $ArrayBuffer = function ArrayBuffer(length) {\n      anInstance(this, $ArrayBuffer);\n      return new BaseBuffer(toIndex(length));\n    };\n    var ArrayBufferProto = $ArrayBuffer[PROTOTYPE] = BaseBuffer[PROTOTYPE];\n    for (var keys = gOPN(BaseBuffer), j = 0, key; keys.length > j;) {\n      if (!((key = keys[j++]) in $ArrayBuffer)) hide($ArrayBuffer, key, BaseBuffer[key]);\n    }\n    if (!LIBRARY) ArrayBufferProto.constructor = $ArrayBuffer;\n  }\n  // iOS Safari 7.x bug\n  var view = new $DataView(new $ArrayBuffer(2));\n  var $setInt8 = $DataView[PROTOTYPE].setInt8;\n  view.setInt8(0, 2147483648);\n  view.setInt8(1, 2147483649);\n  if (view.getInt8(0) || !view.getInt8(1)) redefineAll($DataView[PROTOTYPE], {\n    setInt8: function setInt8(byteOffset, value) {\n      $setInt8.call(this, byteOffset, value << 24 >> 24);\n    },\n    setUint8: function setUint8(byteOffset, value) {\n      $setInt8.call(this, byteOffset, value << 24 >> 24);\n    }\n  }, true);\n}\nsetToStringTag($ArrayBuffer, ARRAY_BUFFER);\nsetToStringTag($DataView, DATA_VIEW);\nhide($DataView[PROTOTYPE], $typed.VIEW, true);\nexports[ARRAY_BUFFER] = $ArrayBuffer;\nexports[DATA_VIEW] = $DataView;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL190eXBlZC1idWZmZXIuanM/ZWQwYiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG52YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi9fZ2xvYmFsJyk7XG52YXIgREVTQ1JJUFRPUlMgPSByZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpO1xudmFyIExJQlJBUlkgPSByZXF1aXJlKCcuL19saWJyYXJ5Jyk7XG52YXIgJHR5cGVkID0gcmVxdWlyZSgnLi9fdHlwZWQnKTtcbnZhciBoaWRlID0gcmVxdWlyZSgnLi9faGlkZScpO1xudmFyIHJlZGVmaW5lQWxsID0gcmVxdWlyZSgnLi9fcmVkZWZpbmUtYWxsJyk7XG52YXIgZmFpbHMgPSByZXF1aXJlKCcuL19mYWlscycpO1xudmFyIGFuSW5zdGFuY2UgPSByZXF1aXJlKCcuL19hbi1pbnN0YW5jZScpO1xudmFyIHRvSW50ZWdlciA9IHJlcXVpcmUoJy4vX3RvLWludGVnZXInKTtcbnZhciB0b0xlbmd0aCA9IHJlcXVpcmUoJy4vX3RvLWxlbmd0aCcpO1xudmFyIHRvSW5kZXggPSByZXF1aXJlKCcuL190by1pbmRleCcpO1xudmFyIGdPUE4gPSByZXF1aXJlKCcuL19vYmplY3QtZ29wbicpLmY7XG52YXIgZFAgPSByZXF1aXJlKCcuL19vYmplY3QtZHAnKS5mO1xudmFyIGFycmF5RmlsbCA9IHJlcXVpcmUoJy4vX2FycmF5LWZpbGwnKTtcbnZhciBzZXRUb1N0cmluZ1RhZyA9IHJlcXVpcmUoJy4vX3NldC10by1zdHJpbmctdGFnJyk7XG52YXIgQVJSQVlfQlVGRkVSID0gJ0FycmF5QnVmZmVyJztcbnZhciBEQVRBX1ZJRVcgPSAnRGF0YVZpZXcnO1xudmFyIFBST1RPVFlQRSA9ICdwcm90b3R5cGUnO1xudmFyIFdST05HX0xFTkdUSCA9ICdXcm9uZyBsZW5ndGghJztcbnZhciBXUk9OR19JTkRFWCA9ICdXcm9uZyBpbmRleCEnO1xudmFyICRBcnJheUJ1ZmZlciA9IGdsb2JhbFtBUlJBWV9CVUZGRVJdO1xudmFyICREYXRhVmlldyA9IGdsb2JhbFtEQVRBX1ZJRVddO1xudmFyIE1hdGggPSBnbG9iYWwuTWF0aDtcbnZhciBSYW5nZUVycm9yID0gZ2xvYmFsLlJhbmdlRXJyb3I7XG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tc2hhZG93LXJlc3RyaWN0ZWQtbmFtZXNcbnZhciBJbmZpbml0eSA9IGdsb2JhbC5JbmZpbml0eTtcbnZhciBCYXNlQnVmZmVyID0gJEFycmF5QnVmZmVyO1xudmFyIGFicyA9IE1hdGguYWJzO1xudmFyIHBvdyA9IE1hdGgucG93O1xudmFyIGZsb29yID0gTWF0aC5mbG9vcjtcbnZhciBsb2cgPSBNYXRoLmxvZztcbnZhciBMTjIgPSBNYXRoLkxOMjtcbnZhciBCVUZGRVIgPSAnYnVmZmVyJztcbnZhciBCWVRFX0xFTkdUSCA9ICdieXRlTGVuZ3RoJztcbnZhciBCWVRFX09GRlNFVCA9ICdieXRlT2Zmc2V0JztcbnZhciAkQlVGRkVSID0gREVTQ1JJUFRPUlMgPyAnX2InIDogQlVGRkVSO1xudmFyICRMRU5HVEggPSBERVNDUklQVE9SUyA/ICdfbCcgOiBCWVRFX0xFTkdUSDtcbnZhciAkT0ZGU0VUID0gREVTQ1JJUFRPUlMgPyAnX28nIDogQllURV9PRkZTRVQ7XG5cbi8vIElFRUU3NTQgY29udmVyc2lvbnMgYmFzZWQgb24gaHR0cHM6Ly9naXRodWIuY29tL2Zlcm9zcy9pZWVlNzU0XG5mdW5jdGlvbiBwYWNrSUVFRTc1NCh2YWx1ZSwgbUxlbiwgbkJ5dGVzKSB7XG4gIHZhciBidWZmZXIgPSBuZXcgQXJyYXkobkJ5dGVzKTtcbiAgdmFyIGVMZW4gPSBuQnl0ZXMgKiA4IC0gbUxlbiAtIDE7XG4gIHZhciBlTWF4ID0gKDEgPDwgZUxlbikgLSAxO1xuICB2YXIgZUJpYXMgPSBlTWF4ID4+IDE7XG4gIHZhciBydCA9IG1MZW4gPT09IDIzID8gcG93KDIsIC0yNCkgLSBwb3coMiwgLTc3KSA6IDA7XG4gIHZhciBpID0gMDtcbiAgdmFyIHMgPSB2YWx1ZSA8IDAgfHwgdmFsdWUgPT09IDAgJiYgMSAvIHZhbHVlIDwgMCA/IDEgOiAwO1xuICB2YXIgZSwgbSwgYztcbiAgdmFsdWUgPSBhYnModmFsdWUpO1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tc2VsZi1jb21wYXJlXG4gIGlmICh2YWx1ZSAhPSB2YWx1ZSB8fCB2YWx1ZSA9PT0gSW5maW5pdHkpIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tc2VsZi1jb21wYXJlXG4gICAgbSA9IHZhbHVlICE9IHZhbHVlID8gMSA6IDA7XG4gICAgZSA9IGVNYXg7XG4gIH0gZWxzZSB7XG4gICAgZSA9IGZsb29yKGxvZyh2YWx1ZSkgLyBMTjIpO1xuICAgIGlmICh2YWx1ZSAqIChjID0gcG93KDIsIC1lKSkgPCAxKSB7XG4gICAgICBlLS07XG4gICAgICBjICo9IDI7XG4gICAgfVxuICAgIGlmIChlICsgZUJpYXMgPj0gMSkge1xuICAgICAgdmFsdWUgKz0gcnQgLyBjO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YWx1ZSArPSBydCAqIHBvdygyLCAxIC0gZUJpYXMpO1xuICAgIH1cbiAgICBpZiAodmFsdWUgKiBjID49IDIpIHtcbiAgICAgIGUrKztcbiAgICAgIGMgLz0gMjtcbiAgICB9XG4gICAgaWYgKGUgKyBlQmlhcyA+PSBlTWF4KSB7XG4gICAgICBtID0gMDtcbiAgICAgIGUgPSBlTWF4O1xuICAgIH0gZWxzZSBpZiAoZSArIGVCaWFzID49IDEpIHtcbiAgICAgIG0gPSAodmFsdWUgKiBjIC0gMSkgKiBwb3coMiwgbUxlbik7XG4gICAgICBlID0gZSArIGVCaWFzO1xuICAgIH0gZWxzZSB7XG4gICAgICBtID0gdmFsdWUgKiBwb3coMiwgZUJpYXMgLSAxKSAqIHBvdygyLCBtTGVuKTtcbiAgICAgIGUgPSAwO1xuICAgIH1cbiAgfVxuICBmb3IgKDsgbUxlbiA+PSA4OyBidWZmZXJbaSsrXSA9IG0gJiAyNTUsIG0gLz0gMjU2LCBtTGVuIC09IDgpO1xuICBlID0gZSA8PCBtTGVuIHwgbTtcbiAgZUxlbiArPSBtTGVuO1xuICBmb3IgKDsgZUxlbiA+IDA7IGJ1ZmZlcltpKytdID0gZSAmIDI1NSwgZSAvPSAyNTYsIGVMZW4gLT0gOCk7XG4gIGJ1ZmZlclstLWldIHw9IHMgKiAxMjg7XG4gIHJldHVybiBidWZmZXI7XG59XG5mdW5jdGlvbiB1bnBhY2tJRUVFNzU0KGJ1ZmZlciwgbUxlbiwgbkJ5dGVzKSB7XG4gIHZhciBlTGVuID0gbkJ5dGVzICogOCAtIG1MZW4gLSAxO1xuICB2YXIgZU1heCA9ICgxIDw8IGVMZW4pIC0gMTtcbiAgdmFyIGVCaWFzID0gZU1heCA+PiAxO1xuICB2YXIgbkJpdHMgPSBlTGVuIC0gNztcbiAgdmFyIGkgPSBuQnl0ZXMgLSAxO1xuICB2YXIgcyA9IGJ1ZmZlcltpLS1dO1xuICB2YXIgZSA9IHMgJiAxMjc7XG4gIHZhciBtO1xuICBzID4+PSA3O1xuICBmb3IgKDsgbkJpdHMgPiAwOyBlID0gZSAqIDI1NiArIGJ1ZmZlcltpXSwgaS0tLCBuQml0cyAtPSA4KTtcbiAgbSA9IGUgJiAoMSA8PCAtbkJpdHMpIC0gMTtcbiAgZSA+Pj0gLW5CaXRzO1xuICBuQml0cyArPSBtTGVuO1xuICBmb3IgKDsgbkJpdHMgPiAwOyBtID0gbSAqIDI1NiArIGJ1ZmZlcltpXSwgaS0tLCBuQml0cyAtPSA4KTtcbiAgaWYgKGUgPT09IDApIHtcbiAgICBlID0gMSAtIGVCaWFzO1xuICB9IGVsc2UgaWYgKGUgPT09IGVNYXgpIHtcbiAgICByZXR1cm4gbSA/IE5hTiA6IHMgPyAtSW5maW5pdHkgOiBJbmZpbml0eTtcbiAgfSBlbHNlIHtcbiAgICBtID0gbSArIHBvdygyLCBtTGVuKTtcbiAgICBlID0gZSAtIGVCaWFzO1xuICB9IHJldHVybiAocyA/IC0xIDogMSkgKiBtICogcG93KDIsIGUgLSBtTGVuKTtcbn1cblxuZnVuY3Rpb24gdW5wYWNrSTMyKGJ5dGVzKSB7XG4gIHJldHVybiBieXRlc1szXSA8PCAyNCB8IGJ5dGVzWzJdIDw8IDE2IHwgYnl0ZXNbMV0gPDwgOCB8IGJ5dGVzWzBdO1xufVxuZnVuY3Rpb24gcGFja0k4KGl0KSB7XG4gIHJldHVybiBbaXQgJiAweGZmXTtcbn1cbmZ1bmN0aW9uIHBhY2tJMTYoaXQpIHtcbiAgcmV0dXJuIFtpdCAmIDB4ZmYsIGl0ID4+IDggJiAweGZmXTtcbn1cbmZ1bmN0aW9uIHBhY2tJMzIoaXQpIHtcbiAgcmV0dXJuIFtpdCAmIDB4ZmYsIGl0ID4+IDggJiAweGZmLCBpdCA+PiAxNiAmIDB4ZmYsIGl0ID4+IDI0ICYgMHhmZl07XG59XG5mdW5jdGlvbiBwYWNrRjY0KGl0KSB7XG4gIHJldHVybiBwYWNrSUVFRTc1NChpdCwgNTIsIDgpO1xufVxuZnVuY3Rpb24gcGFja0YzMihpdCkge1xuICByZXR1cm4gcGFja0lFRUU3NTQoaXQsIDIzLCA0KTtcbn1cblxuZnVuY3Rpb24gYWRkR2V0dGVyKEMsIGtleSwgaW50ZXJuYWwpIHtcbiAgZFAoQ1tQUk9UT1RZUEVdLCBrZXksIHsgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiB0aGlzW2ludGVybmFsXTsgfSB9KTtcbn1cblxuZnVuY3Rpb24gZ2V0KHZpZXcsIGJ5dGVzLCBpbmRleCwgaXNMaXR0bGVFbmRpYW4pIHtcbiAgdmFyIG51bUluZGV4ID0gK2luZGV4O1xuICB2YXIgaW50SW5kZXggPSB0b0luZGV4KG51bUluZGV4KTtcbiAgaWYgKGludEluZGV4ICsgYnl0ZXMgPiB2aWV3WyRMRU5HVEhdKSB0aHJvdyBSYW5nZUVycm9yKFdST05HX0lOREVYKTtcbiAgdmFyIHN0b3JlID0gdmlld1skQlVGRkVSXS5fYjtcbiAgdmFyIHN0YXJ0ID0gaW50SW5kZXggKyB2aWV3WyRPRkZTRVRdO1xuICB2YXIgcGFjayA9IHN0b3JlLnNsaWNlKHN0YXJ0LCBzdGFydCArIGJ5dGVzKTtcbiAgcmV0dXJuIGlzTGl0dGxlRW5kaWFuID8gcGFjayA6IHBhY2sucmV2ZXJzZSgpO1xufVxuZnVuY3Rpb24gc2V0KHZpZXcsIGJ5dGVzLCBpbmRleCwgY29udmVyc2lvbiwgdmFsdWUsIGlzTGl0dGxlRW5kaWFuKSB7XG4gIHZhciBudW1JbmRleCA9ICtpbmRleDtcbiAgdmFyIGludEluZGV4ID0gdG9JbmRleChudW1JbmRleCk7XG4gIGlmIChpbnRJbmRleCArIGJ5dGVzID4gdmlld1skTEVOR1RIXSkgdGhyb3cgUmFuZ2VFcnJvcihXUk9OR19JTkRFWCk7XG4gIHZhciBzdG9yZSA9IHZpZXdbJEJVRkZFUl0uX2I7XG4gIHZhciBzdGFydCA9IGludEluZGV4ICsgdmlld1skT0ZGU0VUXTtcbiAgdmFyIHBhY2sgPSBjb252ZXJzaW9uKCt2YWx1ZSk7XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgYnl0ZXM7IGkrKykgc3RvcmVbc3RhcnQgKyBpXSA9IHBhY2tbaXNMaXR0bGVFbmRpYW4gPyBpIDogYnl0ZXMgLSBpIC0gMV07XG59XG5cbmlmICghJHR5cGVkLkFCVikge1xuICAkQXJyYXlCdWZmZXIgPSBmdW5jdGlvbiBBcnJheUJ1ZmZlcihsZW5ndGgpIHtcbiAgICBhbkluc3RhbmNlKHRoaXMsICRBcnJheUJ1ZmZlciwgQVJSQVlfQlVGRkVSKTtcbiAgICB2YXIgYnl0ZUxlbmd0aCA9IHRvSW5kZXgobGVuZ3RoKTtcbiAgICB0aGlzLl9iID0gYXJyYXlGaWxsLmNhbGwobmV3IEFycmF5KGJ5dGVMZW5ndGgpLCAwKTtcbiAgICB0aGlzWyRMRU5HVEhdID0gYnl0ZUxlbmd0aDtcbiAgfTtcblxuICAkRGF0YVZpZXcgPSBmdW5jdGlvbiBEYXRhVmlldyhidWZmZXIsIGJ5dGVPZmZzZXQsIGJ5dGVMZW5ndGgpIHtcbiAgICBhbkluc3RhbmNlKHRoaXMsICREYXRhVmlldywgREFUQV9WSUVXKTtcbiAgICBhbkluc3RhbmNlKGJ1ZmZlciwgJEFycmF5QnVmZmVyLCBEQVRBX1ZJRVcpO1xuICAgIHZhciBidWZmZXJMZW5ndGggPSBidWZmZXJbJExFTkdUSF07XG4gICAgdmFyIG9mZnNldCA9IHRvSW50ZWdlcihieXRlT2Zmc2V0KTtcbiAgICBpZiAob2Zmc2V0IDwgMCB8fCBvZmZzZXQgPiBidWZmZXJMZW5ndGgpIHRocm93IFJhbmdlRXJyb3IoJ1dyb25nIG9mZnNldCEnKTtcbiAgICBieXRlTGVuZ3RoID0gYnl0ZUxlbmd0aCA9PT0gdW5kZWZpbmVkID8gYnVmZmVyTGVuZ3RoIC0gb2Zmc2V0IDogdG9MZW5ndGgoYnl0ZUxlbmd0aCk7XG4gICAgaWYgKG9mZnNldCArIGJ5dGVMZW5ndGggPiBidWZmZXJMZW5ndGgpIHRocm93IFJhbmdlRXJyb3IoV1JPTkdfTEVOR1RIKTtcbiAgICB0aGlzWyRCVUZGRVJdID0gYnVmZmVyO1xuICAgIHRoaXNbJE9GRlNFVF0gPSBvZmZzZXQ7XG4gICAgdGhpc1skTEVOR1RIXSA9IGJ5dGVMZW5ndGg7XG4gIH07XG5cbiAgaWYgKERFU0NSSVBUT1JTKSB7XG4gICAgYWRkR2V0dGVyKCRBcnJheUJ1ZmZlciwgQllURV9MRU5HVEgsICdfbCcpO1xuICAgIGFkZEdldHRlcigkRGF0YVZpZXcsIEJVRkZFUiwgJ19iJyk7XG4gICAgYWRkR2V0dGVyKCREYXRhVmlldywgQllURV9MRU5HVEgsICdfbCcpO1xuICAgIGFkZEdldHRlcigkRGF0YVZpZXcsIEJZVEVfT0ZGU0VULCAnX28nKTtcbiAgfVxuXG4gIHJlZGVmaW5lQWxsKCREYXRhVmlld1tQUk9UT1RZUEVdLCB7XG4gICAgZ2V0SW50ODogZnVuY3Rpb24gZ2V0SW50OChieXRlT2Zmc2V0KSB7XG4gICAgICByZXR1cm4gZ2V0KHRoaXMsIDEsIGJ5dGVPZmZzZXQpWzBdIDw8IDI0ID4+IDI0O1xuICAgIH0sXG4gICAgZ2V0VWludDg6IGZ1bmN0aW9uIGdldFVpbnQ4KGJ5dGVPZmZzZXQpIHtcbiAgICAgIHJldHVybiBnZXQodGhpcywgMSwgYnl0ZU9mZnNldClbMF07XG4gICAgfSxcbiAgICBnZXRJbnQxNjogZnVuY3Rpb24gZ2V0SW50MTYoYnl0ZU9mZnNldCAvKiAsIGxpdHRsZUVuZGlhbiAqLykge1xuICAgICAgdmFyIGJ5dGVzID0gZ2V0KHRoaXMsIDIsIGJ5dGVPZmZzZXQsIGFyZ3VtZW50c1sxXSk7XG4gICAgICByZXR1cm4gKGJ5dGVzWzFdIDw8IDggfCBieXRlc1swXSkgPDwgMTYgPj4gMTY7XG4gICAgfSxcbiAgICBnZXRVaW50MTY6IGZ1bmN0aW9uIGdldFVpbnQxNihieXRlT2Zmc2V0IC8qICwgbGl0dGxlRW5kaWFuICovKSB7XG4gICAgICB2YXIgYnl0ZXMgPSBnZXQodGhpcywgMiwgYnl0ZU9mZnNldCwgYXJndW1lbnRzWzFdKTtcbiAgICAgIHJldHVybiBieXRlc1sxXSA8PCA4IHwgYnl0ZXNbMF07XG4gICAgfSxcbiAgICBnZXRJbnQzMjogZnVuY3Rpb24gZ2V0SW50MzIoYnl0ZU9mZnNldCAvKiAsIGxpdHRsZUVuZGlhbiAqLykge1xuICAgICAgcmV0dXJuIHVucGFja0kzMihnZXQodGhpcywgNCwgYnl0ZU9mZnNldCwgYXJndW1lbnRzWzFdKSk7XG4gICAgfSxcbiAgICBnZXRVaW50MzI6IGZ1bmN0aW9uIGdldFVpbnQzMihieXRlT2Zmc2V0IC8qICwgbGl0dGxlRW5kaWFuICovKSB7XG4gICAgICByZXR1cm4gdW5wYWNrSTMyKGdldCh0aGlzLCA0LCBieXRlT2Zmc2V0LCBhcmd1bWVudHNbMV0pKSA+Pj4gMDtcbiAgICB9LFxuICAgIGdldEZsb2F0MzI6IGZ1bmN0aW9uIGdldEZsb2F0MzIoYnl0ZU9mZnNldCAvKiAsIGxpdHRsZUVuZGlhbiAqLykge1xuICAgICAgcmV0dXJuIHVucGFja0lFRUU3NTQoZ2V0KHRoaXMsIDQsIGJ5dGVPZmZzZXQsIGFyZ3VtZW50c1sxXSksIDIzLCA0KTtcbiAgICB9LFxuICAgIGdldEZsb2F0NjQ6IGZ1bmN0aW9uIGdldEZsb2F0NjQoYnl0ZU9mZnNldCAvKiAsIGxpdHRsZUVuZGlhbiAqLykge1xuICAgICAgcmV0dXJuIHVucGFja0lFRUU3NTQoZ2V0KHRoaXMsIDgsIGJ5dGVPZmZzZXQsIGFyZ3VtZW50c1sxXSksIDUyLCA4KTtcbiAgICB9LFxuICAgIHNldEludDg6IGZ1bmN0aW9uIHNldEludDgoYnl0ZU9mZnNldCwgdmFsdWUpIHtcbiAgICAgIHNldCh0aGlzLCAxLCBieXRlT2Zmc2V0LCBwYWNrSTgsIHZhbHVlKTtcbiAgICB9LFxuICAgIHNldFVpbnQ4OiBmdW5jdGlvbiBzZXRVaW50OChieXRlT2Zmc2V0LCB2YWx1ZSkge1xuICAgICAgc2V0KHRoaXMsIDEsIGJ5dGVPZmZzZXQsIHBhY2tJOCwgdmFsdWUpO1xuICAgIH0sXG4gICAgc2V0SW50MTY6IGZ1bmN0aW9uIHNldEludDE2KGJ5dGVPZmZzZXQsIHZhbHVlIC8qICwgbGl0dGxlRW5kaWFuICovKSB7XG4gICAgICBzZXQodGhpcywgMiwgYnl0ZU9mZnNldCwgcGFja0kxNiwgdmFsdWUsIGFyZ3VtZW50c1syXSk7XG4gICAgfSxcbiAgICBzZXRVaW50MTY6IGZ1bmN0aW9uIHNldFVpbnQxNihieXRlT2Zmc2V0LCB2YWx1ZSAvKiAsIGxpdHRsZUVuZGlhbiAqLykge1xuICAgICAgc2V0KHRoaXMsIDIsIGJ5dGVPZmZzZXQsIHBhY2tJMTYsIHZhbHVlLCBhcmd1bWVudHNbMl0pO1xuICAgIH0sXG4gICAgc2V0SW50MzI6IGZ1bmN0aW9uIHNldEludDMyKGJ5dGVPZmZzZXQsIHZhbHVlIC8qICwgbGl0dGxlRW5kaWFuICovKSB7XG4gICAgICBzZXQodGhpcywgNCwgYnl0ZU9mZnNldCwgcGFja0kzMiwgdmFsdWUsIGFyZ3VtZW50c1syXSk7XG4gICAgfSxcbiAgICBzZXRVaW50MzI6IGZ1bmN0aW9uIHNldFVpbnQzMihieXRlT2Zmc2V0LCB2YWx1ZSAvKiAsIGxpdHRsZUVuZGlhbiAqLykge1xuICAgICAgc2V0KHRoaXMsIDQsIGJ5dGVPZmZzZXQsIHBhY2tJMzIsIHZhbHVlLCBhcmd1bWVudHNbMl0pO1xuICAgIH0sXG4gICAgc2V0RmxvYXQzMjogZnVuY3Rpb24gc2V0RmxvYXQzMihieXRlT2Zmc2V0LCB2YWx1ZSAvKiAsIGxpdHRsZUVuZGlhbiAqLykge1xuICAgICAgc2V0KHRoaXMsIDQsIGJ5dGVPZmZzZXQsIHBhY2tGMzIsIHZhbHVlLCBhcmd1bWVudHNbMl0pO1xuICAgIH0sXG4gICAgc2V0RmxvYXQ2NDogZnVuY3Rpb24gc2V0RmxvYXQ2NChieXRlT2Zmc2V0LCB2YWx1ZSAvKiAsIGxpdHRsZUVuZGlhbiAqLykge1xuICAgICAgc2V0KHRoaXMsIDgsIGJ5dGVPZmZzZXQsIHBhY2tGNjQsIHZhbHVlLCBhcmd1bWVudHNbMl0pO1xuICAgIH1cbiAgfSk7XG59IGVsc2Uge1xuICBpZiAoIWZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgICAkQXJyYXlCdWZmZXIoMSk7XG4gIH0pIHx8ICFmYWlscyhmdW5jdGlvbiAoKSB7XG4gICAgbmV3ICRBcnJheUJ1ZmZlcigtMSk7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tbmV3XG4gIH0pIHx8IGZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgICBuZXcgJEFycmF5QnVmZmVyKCk7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tbmV3XG4gICAgbmV3ICRBcnJheUJ1ZmZlcigxLjUpOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLW5ld1xuICAgIG5ldyAkQXJyYXlCdWZmZXIoTmFOKTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1uZXdcbiAgICByZXR1cm4gJEFycmF5QnVmZmVyLm5hbWUgIT0gQVJSQVlfQlVGRkVSO1xuICB9KSkge1xuICAgICRBcnJheUJ1ZmZlciA9IGZ1bmN0aW9uIEFycmF5QnVmZmVyKGxlbmd0aCkge1xuICAgICAgYW5JbnN0YW5jZSh0aGlzLCAkQXJyYXlCdWZmZXIpO1xuICAgICAgcmV0dXJuIG5ldyBCYXNlQnVmZmVyKHRvSW5kZXgobGVuZ3RoKSk7XG4gICAgfTtcbiAgICB2YXIgQXJyYXlCdWZmZXJQcm90byA9ICRBcnJheUJ1ZmZlcltQUk9UT1RZUEVdID0gQmFzZUJ1ZmZlcltQUk9UT1RZUEVdO1xuICAgIGZvciAodmFyIGtleXMgPSBnT1BOKEJhc2VCdWZmZXIpLCBqID0gMCwga2V5OyBrZXlzLmxlbmd0aCA+IGo7KSB7XG4gICAgICBpZiAoISgoa2V5ID0ga2V5c1tqKytdKSBpbiAkQXJyYXlCdWZmZXIpKSBoaWRlKCRBcnJheUJ1ZmZlciwga2V5LCBCYXNlQnVmZmVyW2tleV0pO1xuICAgIH1cbiAgICBpZiAoIUxJQlJBUlkpIEFycmF5QnVmZmVyUHJvdG8uY29uc3RydWN0b3IgPSAkQXJyYXlCdWZmZXI7XG4gIH1cbiAgLy8gaU9TIFNhZmFyaSA3LnggYnVnXG4gIHZhciB2aWV3ID0gbmV3ICREYXRhVmlldyhuZXcgJEFycmF5QnVmZmVyKDIpKTtcbiAgdmFyICRzZXRJbnQ4ID0gJERhdGFWaWV3W1BST1RPVFlQRV0uc2V0SW50ODtcbiAgdmlldy5zZXRJbnQ4KDAsIDIxNDc0ODM2NDgpO1xuICB2aWV3LnNldEludDgoMSwgMjE0NzQ4MzY0OSk7XG4gIGlmICh2aWV3LmdldEludDgoMCkgfHwgIXZpZXcuZ2V0SW50OCgxKSkgcmVkZWZpbmVBbGwoJERhdGFWaWV3W1BST1RPVFlQRV0sIHtcbiAgICBzZXRJbnQ4OiBmdW5jdGlvbiBzZXRJbnQ4KGJ5dGVPZmZzZXQsIHZhbHVlKSB7XG4gICAgICAkc2V0SW50OC5jYWxsKHRoaXMsIGJ5dGVPZmZzZXQsIHZhbHVlIDw8IDI0ID4+IDI0KTtcbiAgICB9LFxuICAgIHNldFVpbnQ4OiBmdW5jdGlvbiBzZXRVaW50OChieXRlT2Zmc2V0LCB2YWx1ZSkge1xuICAgICAgJHNldEludDguY2FsbCh0aGlzLCBieXRlT2Zmc2V0LCB2YWx1ZSA8PCAyNCA+PiAyNCk7XG4gICAgfVxuICB9LCB0cnVlKTtcbn1cbnNldFRvU3RyaW5nVGFnKCRBcnJheUJ1ZmZlciwgQVJSQVlfQlVGRkVSKTtcbnNldFRvU3RyaW5nVGFnKCREYXRhVmlldywgREFUQV9WSUVXKTtcbmhpZGUoJERhdGFWaWV3W1BST1RPVFlQRV0sICR0eXBlZC5WSUVXLCB0cnVlKTtcbmV4cG9ydHNbQVJSQVlfQlVGRkVSXSA9ICRBcnJheUJ1ZmZlcjtcbmV4cG9ydHNbREFUQV9WSUVXXSA9ICREYXRhVmlldztcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///85\n")},function(module,exports){eval("// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODYuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2dsb2JhbC5qcz9lNTNkIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGh0dHBzOi8vZ2l0aHViLmNvbS96bG9pcm9jay9jb3JlLWpzL2lzc3Vlcy84NiNpc3N1ZWNvbW1lbnQtMTE1NzU5MDI4XG52YXIgZ2xvYmFsID0gbW9kdWxlLmV4cG9ydHMgPSB0eXBlb2Ygd2luZG93ICE9ICd1bmRlZmluZWQnICYmIHdpbmRvdy5NYXRoID09IE1hdGhcbiAgPyB3aW5kb3cgOiB0eXBlb2Ygc2VsZiAhPSAndW5kZWZpbmVkJyAmJiBzZWxmLk1hdGggPT0gTWF0aCA/IHNlbGZcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLW5ldy1mdW5jXG4gIDogRnVuY3Rpb24oJ3JldHVybiB0aGlzJykoKTtcbmlmICh0eXBlb2YgX19nID09ICdudW1iZXInKSBfX2cgPSBnbG9iYWw7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tdW5kZWZcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///86\n")},function(module,exports){eval("module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODcuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2lzLW9iamVjdC5qcz9mNzcyIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIHJldHVybiB0eXBlb2YgaXQgPT09ICdvYmplY3QnID8gaXQgIT09IG51bGwgOiB0eXBlb2YgaXQgPT09ICdmdW5jdGlvbic7XG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///87\n")},function(module,exports,__webpack_require__){eval("// Thank's IE8 for his funny defineProperty\nmodule.exports = !__webpack_require__(123)(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODguanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2Rlc2NyaXB0b3JzLmpzPzhlNjAiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gVGhhbmsncyBJRTggZm9yIGhpcyBmdW5ueSBkZWZpbmVQcm9wZXJ0eVxubW9kdWxlLmV4cG9ydHMgPSAhcmVxdWlyZSgnLi9fZmFpbHMnKShmdW5jdGlvbiAoKSB7XG4gIHJldHVybiBPYmplY3QuZGVmaW5lUHJvcGVydHkoe30sICdhJywgeyBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIDc7IH0gfSkuYSAhPSA3O1xufSk7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///88\n")},function(module,exports){eval('//     proxy-observe v0.0.18\r\n//     Copyright (c) 2015, 2016 Simon Y. Blackwell, AnyWhichWay\r\n//     MIT License - http://opensource.org/licenses/mit-license.php\r\n(function() {\r\n\t"use strict";\r\n\t// Creates and returns a Proxy wrapping a target so that all changes can be trapped and forwarded to\r\n\t// a callback. The callback takes an array of changes just like the traditional original Chrome Object.observe\r\n\t// {object:<object changed>,name:<field changed>,type:add|update|delete|reconfigure|preventExtensions|setPrototype,oldValue:<old value if update | delete>}\r\n\t// The acceptlist can be add|update|delete|reconfigure|preventExtensions|setPrototype.\r\n\t// v 0.0.10 to support pausing and restarting observation two additional constructor arguments are available to Object.observe:\r\n\t// pausable - create the Observer so it can be paused\r\n\t// pause - create observer in paused state\r\n\t// if pausable is true then an additional method deliver(ignorePrevious) is available to start delivery\r\n\t// to pause delivery set a property called pause on the function deliver to true\r\n\t// pausable is optional to reduce the chance of shadowing a property or method on any existing code called deliver\r\n\tif(!Object.observe && typeof(Proxy)==="function") {\r\n\t\tfunction Observer(target,callback,acceptlist,pausable,pause,delay) {\r\n\t    \tvar me = this, proxy;\r\n\t    \tfunction deliver(ignorePrevious,delay) {\r\n\t    \t\tdeliver.delay = delay;\r\n\t    \t\tif(!deliver.pause) {\r\n\t        \t\tif(me.changeset.length>0) {\r\n\t        \t\t\tif(!ignorePrevious) {\r\n\t\t    \t    \t\tvar changes = me.changeset.filter(function(change) { return !acceptlist || acceptlist.indexOf(change.type)>=0; });\r\n\t\t        \t\t\tif(changes.length>0) {\r\n\t\t        \t\t\t\tcallback(changes);\r\n\t\t        \t\t\t}\r\n\t        \t\t\t}\r\n\t        \t\t\tme.changeset = [];\r\n\t        \t\t}\r\n\t    \t\t}\r\n\t    \t}\r\n\t    \tdeliver.pause = pause;\r\n\t    \tdeliver.delay = delay;\r\n\t\t    me.get = function(target, property) {\r\n\t\t    \tif(property==="__observer__") {\r\n\t\t    \t\treturn me;\r\n\t\t    \t}\r\n\t\t    \tif(property==="unobserve") {\r\n\t\t    \t\treturn function() {\r\n\t\t    \t\t\tObject.unobserve(target);\r\n\t\t    \t\t\treturn target;\r\n\t\t    \t\t};\r\n\t\t    \t}\r\n\t\t    \tif(property==="deliver") {\r\n\t\t    \t\treturn deliver;\r\n\t\t    \t}\r\n\t\t    \treturn target[property];\r\n\t\t    }\r\n\t    \tme.target = target;\r\n\t    \tme.changeset = [];\r\n\t    \tif(!me.target.__observerCallbacks__) {\r\n\t    \t\t// __observerCallbacks__ is used as an index to get at the proxy which is the observer, so we can unobserve\r\n\t    \t\tObject.defineProperty(target,"__observerCallbacks__",{enumerable:false,configurable:true,writable:false,value:[]});\r\n\t    \t\tObject.defineProperty(target,"__observers__",{enumerable:false,configurable:true,writable:false,value:[]});\r\n\t    \t}\r\n\t    \tme.target.__observerCallbacks__.push(callback);\r\n\t    \tme.target.__observers__.push(this);\r\n\t    \tproxy = new Proxy(target,me);\r\n\t    \tdeliver(false,delay);\r\n\t    \treturn proxy;\r\n\t    }\r\n\t\tObserver.prototype.deliver = function() {\r\n\t\t\treturn this.get(null,"deliver");\r\n\t\t}\r\n\t    Observer.prototype.set = function(target, property, value) { // , receiver\r\n\t    \tvar oldvalue = target[property];\r\n\t    \tvar type = (oldvalue===undefined ? "add" : "update");\r\n\t    \ttarget[property] = value;\r\n\t    \tif(target.__observers__.indexOf(this)>=0 && (!this.acceptlist || this.acceptlist.indexOf(type)>=0)) {\r\n\t        \tvar change = {object:target,name:property,type:type},\r\n\t        \t\tstart = this.changeset.length === 0,\r\n\t        \t\tdeliver = this.deliver();\r\n\t        \tif(type==="update") {\r\n\t        \t\tchange.oldValue = oldvalue;\r\n\t        \t}\r\n\t        \tthis.changeset.push(change);\r\n\t        \tif(start) {\r\n\t        \t\tdeliver(false,(typeof(deliver.delay)==="number" ? deliver.delay : 10));\r\n\t        \t}\r\n\t    \t}\r\n\t    \treturn true;\r\n\t    };\r\n\t    Observer.prototype.deleteProperty = function(target, property) {\r\n\t    \tvar oldvalue = target[property];\r\n\t    \t//if(typeof(oldvalue)!=="undefined") {\r\n\t\t    \tdelete target[property];\r\n\t\t    \tif(target.__observers__.indexOf(this)>=0 && !this.acceptlist || this.acceptlist.indexOf("delete")>=0) {\r\n\t\t        \tvar change = {object:target,name:property,type:"delete",oldValue:oldvalue},\r\n\t\t        \t\tstart = this.changeset.length === 0,\r\n\t\t        \t\tdeliver = this.deliver();\r\n\t\t        \tthis.changeset.push(change);\r\n\t\t        \tif(start) {\r\n\t\t        \t\tdeliver(false,(typeof(deliver.delay)==="number" ? deliver.delay : 10));\r\n\t\t        \t}\r\n\t\t    \t}\r\n\t    \t//}\r\n\t    \treturn true;\r\n\t    };\r\n\t    Observer.prototype.defineProperty = function(target, property, descriptor) {\r\n\t    \tObject.defineProperty(target, property, descriptor);\r\n\t    \tif(target.__observers__.indexOf(this)>=0 && !this.acceptlist || this.acceptlist.indexOf("reconfigure")>=0) {\r\n\t        \tvar change = {object:target,name:property,type:"reconfigure"},\r\n        \t\t\tstart = this.changeset.length === 0,\r\n        \t\t\tdeliver = this.deliver();\r\n\t        \tthis.changeset.push(change);\r\n\t        \tif(start) {\r\n\t        \t\tdeliver(false,(typeof(deliver.delay)==="number" ? deliver.delay : 10));\r\n\t        \t}\r\n\t    \t}\r\n\t    \treturn true;\r\n\t    };\r\n\t    Observer.prototype.setPrototypeOf = function(target, prototype) {\r\n\t    \tvar oldvalue = Object.getPrototypeOf(target);\r\n\t    \tObject.setPrototypeOf(target, prototype);\r\n\t    \tif(target.__observers__.indexOf(this)>=0 && !this.acceptlist || this.acceptlist.indexOf("setPrototype")>=0) {\r\n\t        \tvar change = {object:target,name:"__proto__",type:"setPrototype",oldValue:oldvalue},\r\n    \t\t\t\tstart = this.changeset.length === 0,\r\n    \t\t\t\tdeliver = this.deliver();\r\n\t        \tthis.changeset.push(change);\r\n\t        \tif(start) {\r\n\t        \t\tdeliver(false,(typeof(deliver.delay)==="number" ? deliver.delay : 10));\r\n\t        \t}\r\n\t    \t}\r\n\t    \treturn true;\r\n\t    };\r\n\t    Observer.prototype.preventExtensions = function(target) {\r\n\t        Object.preventExtensions(target);\r\n\t    \tif(target.__observers__.indexOf(this)>=0 && !this.acceptlist || this.acceptlist.indexOf("preventExtensions")>=0) {\r\n\t        \tvar change = {object:target,type:"preventExtensions"},\r\n\t\t\t\t\tstart = this.changeset.length === 0,\r\n\t\t\t\t\tdeliver = this.deliver();\r\n\t        \tthis.changeset.push(change);\r\n\t        \tif(start) {\r\n\t        \t\tdeliver(false,(typeof(deliver.delay)==="number" ? deliver.delay : 10));\r\n\t        \t}\r\n\t    \t}\r\n\t    \treturn true;\r\n\t    };\r\n\t    Object.observe = function(object,callback,acceptlist,pausable,pause,delay) {\r\n\t    \treturn new Observer(object,callback,acceptlist,pausable,pause,delay);\r\n\t    };\r\n\t    Object.unobserve = function(object,callback) {\r\n\t    \tif(object.__observerCallbacks__) {\r\n\t    \t\tif(!callback) {\r\n\t    \t\t\tobject.__observerCallbacks__.splice(0,object.__observerCallbacks__.length);\r\n\t    \t\t\tobject.__observers__.splice(0,object.__observers__.length);\r\n\t    \t\t\treturn;\r\n\t    \t\t}\r\n\t    \t\tobject.__observerCallbacks__.forEach(function(observercallback,i) {\r\n\t    \t\t\tif(callback===observercallback) {\r\n\t    \t\t\t\tobject.__observerCallbacks__.splice(i,1);\r\n\t    \t\t\t\tdelete object.__observers__[i].callback;\r\n\t    \t\t\t\tobject.__observers__.splice(i,1);\r\n\t    \t\t\t}\r\n\t    \t\t});\r\n\t    \t}\r\n\t    };\r\n\t    Array.observe = function(object,callback,acceptlist,pausable,pause,delay) {\r\n\t    \tif(!(object instanceof Array) && !Array.isArray(object)) {\r\n\t    \t\tthrow new TypeError("First argument to Array.observer is not an Array");\r\n\t    \t}\r\n            \tacceptlist = acceptlist || ["add", "update", "delete", "splice"];\r\n\t    \tvar arrayproxy = new Proxy(object,{get: function(target,property) {\r\n\t    \t\tif(property==="unobserve") {\r\n\t\t    \t\treturn function(callback) {\r\n\t\t    \t\t\tif(callback) {\r\n\t\t    \t\t\t\treturn Object.unobserve(target,callback);\r\n\t\t    \t\t\t}\r\n\t\t    \t\t\treturn target.unobserve();\r\n\t\t    \t\t};\r\n\t\t    \t}\r\n\t    \t\tif(property==="splice") {\r\n\t    \t\t\treturn function(start,end) {\r\n\t    \t\t\t\tif(typeof(start)!=="number" || typeof(end)!=="number") {\r\n\t    \t\t\t\t\tthrow new TypeError("First two arguments to Array splice are not number, number");\r\n\t    \t\t\t\t}\r\n\t    \t    \t\tvar removed = this.slice(start,start+end),\r\n\t    \t    \t\t\taddedCount = (arguments.length > 1 ? arguments.length-2 : 0),\r\n\t    \t    \t\t\tchange =  {object:object,type:"splice",index:start,removed:removed,addedCount:addedCount};\r\n\t    \t    \t\ttarget.splice.apply(target,arguments);\r\n\t    \t    \t\tif(acceptlist.indexOf("splice")>=0) {\r\n\t    \t    \t\t\tvar start = proxy.__observer__.changeset.length === 0,\r\n\t    \t        \t\t\tdeliver = proxy.__observer__.deliver();\r\n\t    \t    \t\t\tproxy.__observer__.changeset.push(change);\r\n\t    \t    \t\t\tif(start) {\r\n\t    \t\t        \t\tdeliver(false,(typeof(deliver.delay)==="number" ? deliver.delay : 10));\r\n\t    \t\t        \t}\r\n\t    \t    \t\t}\r\n\t    \t    \t}\r\n\t    \t\t}\r\n\t    \t\tif(property==="push") {\r\n\t    \t\t\t return function(item) {\r\n\t    \t\t    \treturn this.splice(this.length,0,item);\r\n\t    \t\t    }\r\n\t    \t\t}\r\n\t    \t\tif(property==="pop") {\r\n\t    \t\t\t return function() {\r\n\t    \t\t    \treturn this.splice(this.length-1,1);\r\n\t    \t\t    }\r\n\t    \t\t}\r\n\t    \t\tif(property==="unshift") {\r\n\t    \t\t\t return function(item) {\r\n    \t\t    \t\treturn this.splice(0,0,item);\r\n    \t\t    \t}\r\n\t    \t\t}\r\n\t    \t\tif(property==="shift") {\r\n\t    \t\t\treturn function() {\r\n\t    \t    \t\treturn this.splice(0,1);\r\n\t    \t    \t}\r\n\t    \t\t}\r\n\t    \t\treturn target[property];\r\n\t    \t}});\r\n\t    \tvar proxy = Object.observe(arrayproxy,function(changeset) { \r\n\t    \t\tvar changes = changeset.filter(function(change) { return change.name!=="length" && change.name!=="add" && (!acceptlist || acceptlist.indexOf(change.type)>=0); });\r\n\t    \t\tif(changes.length>0) {\r\n\t    \t\t\tcallback(changes);\r\n\t    \t\t}\r\n\t    \t},acceptlist,pausable,pause,delay);\r\n\t    \treturn proxy;\r\n\t    };\r\n\t    Array.unobserve = function(object,callback) {\r\n\t\t  return object.unobserve(callback);\r\n\t    }\r\n\t}\r\n\tObject.deepObserve = function(object,callback,parts) {\r\n\r\n\t\tparts = (parts ? parts : []);\r\n\r\n\t\tvar toTypeName = function(obj) {\r\n\t\t\treturn ({}).toString.call(obj).match(/\\s([a-zA-Z]+)/)[1].toLowerCase()\r\n\t\t}\r\n\r\n\t\tfunction reobserve(value, parts) {\r\n\t\t\tvar keys = Object.keys(value);\r\n\t\t\tkeys.forEach(function(key) {\r\n\t\t\t\tif((toTypeName(value[key]) === \'object\' || toTypeName(value[key]) === \'array\') && !value[key].hasOwnProperty(\'__observers__\')) {\r\n\t\t\t\t\tvar newparts = parts.slice(0);\r\n\t\t\t\t\tnewparts.push(key);\r\n\t\t\t\t\tvalue[key] = Object.deepObserve(value[key],callback,newparts);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treobserve(object, parts);\r\n\r\n\t\tvar observed = Object.observe(object,function(changeset) {\r\n\t\t\tvar changes = [];\r\n\t\t\tfunction recurse(name,rootObject,oldObject,newObject,path) {\r\n\t\t\t\tif(newObject instanceof Object) {\r\n\t\t\t\t\tvar newkeys = Object.keys(newObject);\r\n\t\t\t\t\tnewkeys.forEach(function(key) {\r\n\t\t\t\t\t\tif(!oldObject || (oldObject[key]!==newObject[key])) {\r\n\t\t\t\t\t\t\tvar oldvalue = (oldObject && oldObject[key]!==undefined ? oldObject[key] : undefined),\r\n\t\t\t\t\t\t\t\tchange = (oldvalue===undefined ? "add" : "update"),\r\n\t\t\t\t\t\t\t\tkeypath = path + "." + key;\r\n\r\n\t\t\t\t\t\t\tchanges.push({name:name,object:rootObject,type:change,oldValue:oldvalue,newValue:newObject[key],keypath:keypath});\r\n\t\t\t\t\t\t\trecurse(name,rootObject,oldvalue,newObject[key],keypath);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t} else if(oldObject instanceof Object) {\r\n\t\t\t\t\tvar oldkeys = Object.keys(oldObject);\r\n\t\t\t\t\toldkeys.forEach(function(key) {\r\n\t\t\t\t\t\tvar change = (newObject===null ? "update" : "delete"),\r\n\t\t\t\t\t\t\tkeypath = path + "." + key;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\tchanges.push({name:name,object:rootObject,type:change,oldValue:oldObject[key],newValue:newObject,keypath:keypath});\r\n\t\t\t\t\t\trecurse(name,rootObject,oldObject[key],undefined,keypath);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tchangeset.forEach(function(change) {\r\n\t\t\t\tvar keypath = (parts.length>0 ? parts.join(".") + "." : "") + change.name;\r\n\r\n\t\t\t\tif (change.type === "update" || change.type === "add") { \r\n\t\t\t\t\treobserve(change.object, parts);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tchanges.push({name:change.name,object:change.object,type:change.type,oldValue:change.oldValue,newValue:change.object[change.name],keypath:keypath});\r\n\t\t\t\trecurse(change.name,change.object,change.oldValue,change.object[change.name],keypath);\r\n\t\t\t});\r\n\t\t\tcallback(changes);\r\n\t\t});\r\n\t\treturn observed;\r\n\t};\r\n})();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///89\n')},function(module,exports,__webpack_require__){eval('var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\r\nAuthor: Geraint Luff and others\r\nYear: 2013\r\n\r\nThis code is released into the "public domain" by its author(s).  Anybody may use, alter and distribute the code without restriction.  The author makes no guarantees, and takes no liability of any kind for use of this code.\r\n\r\nIf you find a bug or make an improvement, it would be courteous to let the author know, but it is not compulsory.\r\n*/\r\n(function (global, factory) {\r\n  if (true) {\r\n    // AMD. Register as an anonymous module.\r\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === \'function\' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n  } else {}\r\n}(this, function () {\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys?redirectlocale=en-US&redirectslug=JavaScript%2FReference%2FGlobal_Objects%2FObject%2Fkeys\r\nif (!Object.keys) {\r\n\tObject.keys = (function () {\r\n\t\tvar hasOwnProperty = Object.prototype.hasOwnProperty,\r\n\t\t\thasDontEnumBug = !({toString: null}).propertyIsEnumerable(\'toString\'),\r\n\t\t\tdontEnums = [\r\n\t\t\t\t\'toString\',\r\n\t\t\t\t\'toLocaleString\',\r\n\t\t\t\t\'valueOf\',\r\n\t\t\t\t\'hasOwnProperty\',\r\n\t\t\t\t\'isPrototypeOf\',\r\n\t\t\t\t\'propertyIsEnumerable\',\r\n\t\t\t\t\'constructor\'\r\n\t\t\t],\r\n\t\t\tdontEnumsLength = dontEnums.length;\r\n\r\n\t\treturn function (obj) {\r\n\t\t\tif (typeof obj !== \'object\' && typeof obj !== \'function\' || obj === null) {\r\n\t\t\t\tthrow new TypeError(\'Object.keys called on non-object\');\r\n\t\t\t}\r\n\r\n\t\t\tvar result = [];\r\n\r\n\t\t\tfor (var prop in obj) {\r\n\t\t\t\tif (hasOwnProperty.call(obj, prop)) {\r\n\t\t\t\t\tresult.push(prop);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (hasDontEnumBug) {\r\n\t\t\t\tfor (var i=0; i < dontEnumsLength; i++) {\r\n\t\t\t\t\tif (hasOwnProperty.call(obj, dontEnums[i])) {\r\n\t\t\t\t\t\tresult.push(dontEnums[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn result;\r\n\t\t};\r\n\t})();\r\n}\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/create\r\nif (!Object.create) {\r\n\tObject.create = (function(){\r\n\t\tfunction F(){}\r\n\r\n\t\treturn function(o){\r\n\t\t\tif (arguments.length !== 1) {\r\n\t\t\t\tthrow new Error(\'Object.create implementation only accepts one parameter.\');\r\n\t\t\t}\r\n\t\t\tF.prototype = o;\r\n\t\t\treturn new F();\r\n\t\t};\r\n\t})();\r\n}\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/isArray?redirectlocale=en-US&redirectslug=JavaScript%2FReference%2FGlobal_Objects%2FArray%2FisArray\r\nif(!Array.isArray) {\r\n\tArray.isArray = function (vArg) {\r\n\t\treturn Object.prototype.toString.call(vArg) === "[object Array]";\r\n\t};\r\n}\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/indexOf?redirectlocale=en-US&redirectslug=JavaScript%2FReference%2FGlobal_Objects%2FArray%2FindexOf\r\nif (!Array.prototype.indexOf) {\r\n\tArray.prototype.indexOf = function (searchElement /*, fromIndex */ ) {\r\n\t\tif (this === null) {\r\n\t\t\tthrow new TypeError();\r\n\t\t}\r\n\t\tvar t = Object(this);\r\n\t\tvar len = t.length >>> 0;\r\n\r\n\t\tif (len === 0) {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t\tvar n = 0;\r\n\t\tif (arguments.length > 1) {\r\n\t\t\tn = Number(arguments[1]);\r\n\t\t\tif (n !== n) { // shortcut for verifying if it\'s NaN\r\n\t\t\t\tn = 0;\r\n\t\t\t} else if (n !== 0 && n !== Infinity && n !== -Infinity) {\r\n\t\t\t\tn = (n > 0 || -1) * Math.floor(Math.abs(n));\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (n >= len) {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t\tvar k = n >= 0 ? n : Math.max(len - Math.abs(n), 0);\r\n\t\tfor (; k < len; k++) {\r\n\t\t\tif (k in t && t[k] === searchElement) {\r\n\t\t\t\treturn k;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn -1;\r\n\t};\r\n}\r\n\r\n// Grungey Object.isFrozen hack\r\nif (!Object.isFrozen) {\r\n\tObject.isFrozen = function (obj) {\r\n\t\tvar key = "tv4_test_frozen_key";\r\n\t\twhile (obj.hasOwnProperty(key)) {\r\n\t\t\tkey += Math.random();\r\n\t\t}\r\n\t\ttry {\r\n\t\t\tobj[key] = true;\r\n\t\t\tdelete obj[key];\r\n\t\t\treturn false;\r\n\t\t} catch (e) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t};\r\n}\r\n// Based on: https://github.com/geraintluff/uri-templates, but with all the de-substitution stuff removed\r\n\r\nvar uriTemplateGlobalModifiers = {\r\n\t"+": true,\r\n\t"#": true,\r\n\t".": true,\r\n\t"/": true,\r\n\t";": true,\r\n\t"?": true,\r\n\t"&": true\r\n};\r\nvar uriTemplateSuffices = {\r\n\t"*": true\r\n};\r\n\r\nfunction notReallyPercentEncode(string) {\r\n\treturn encodeURI(string).replace(/%25[0-9][0-9]/g, function (doubleEncoded) {\r\n\t\treturn "%" + doubleEncoded.substring(3);\r\n\t});\r\n}\r\n\r\nfunction uriTemplateSubstitution(spec) {\r\n\tvar modifier = "";\r\n\tif (uriTemplateGlobalModifiers[spec.charAt(0)]) {\r\n\t\tmodifier = spec.charAt(0);\r\n\t\tspec = spec.substring(1);\r\n\t}\r\n\tvar separator = "";\r\n\tvar prefix = "";\r\n\tvar shouldEscape = true;\r\n\tvar showVariables = false;\r\n\tvar trimEmptyString = false;\r\n\tif (modifier === \'+\') {\r\n\t\tshouldEscape = false;\r\n\t} else if (modifier === ".") {\r\n\t\tprefix = ".";\r\n\t\tseparator = ".";\r\n\t} else if (modifier === "/") {\r\n\t\tprefix = "/";\r\n\t\tseparator = "/";\r\n\t} else if (modifier === \'#\') {\r\n\t\tprefix = "#";\r\n\t\tshouldEscape = false;\r\n\t} else if (modifier === \';\') {\r\n\t\tprefix = ";";\r\n\t\tseparator = ";";\r\n\t\tshowVariables = true;\r\n\t\ttrimEmptyString = true;\r\n\t} else if (modifier === \'?\') {\r\n\t\tprefix = "?";\r\n\t\tseparator = "&";\r\n\t\tshowVariables = true;\r\n\t} else if (modifier === \'&\') {\r\n\t\tprefix = "&";\r\n\t\tseparator = "&";\r\n\t\tshowVariables = true;\r\n\t}\r\n\r\n\tvar varNames = [];\r\n\tvar varList = spec.split(",");\r\n\tvar varSpecs = [];\r\n\tvar varSpecMap = {};\r\n\tfor (var i = 0; i < varList.length; i++) {\r\n\t\tvar varName = varList[i];\r\n\t\tvar truncate = null;\r\n\t\tif (varName.indexOf(":") !== -1) {\r\n\t\t\tvar parts = varName.split(":");\r\n\t\t\tvarName = parts[0];\r\n\t\t\ttruncate = parseInt(parts[1], 10);\r\n\t\t}\r\n\t\tvar suffices = {};\r\n\t\twhile (uriTemplateSuffices[varName.charAt(varName.length - 1)]) {\r\n\t\t\tsuffices[varName.charAt(varName.length - 1)] = true;\r\n\t\t\tvarName = varName.substring(0, varName.length - 1);\r\n\t\t}\r\n\t\tvar varSpec = {\r\n\t\t\ttruncate: truncate,\r\n\t\t\tname: varName,\r\n\t\t\tsuffices: suffices\r\n\t\t};\r\n\t\tvarSpecs.push(varSpec);\r\n\t\tvarSpecMap[varName] = varSpec;\r\n\t\tvarNames.push(varName);\r\n\t}\r\n\tvar subFunction = function (valueFunction) {\r\n\t\tvar result = "";\r\n\t\tvar startIndex = 0;\r\n\t\tfor (var i = 0; i < varSpecs.length; i++) {\r\n\t\t\tvar varSpec = varSpecs[i];\r\n\t\t\tvar value = valueFunction(varSpec.name);\r\n\t\t\tif (value === null || value === undefined || (Array.isArray(value) && value.length === 0) || (typeof value === \'object\' && Object.keys(value).length === 0)) {\r\n\t\t\t\tstartIndex++;\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tif (i === startIndex) {\r\n\t\t\t\tresult += prefix;\r\n\t\t\t} else {\r\n\t\t\t\tresult += (separator || ",");\r\n\t\t\t}\r\n\t\t\tif (Array.isArray(value)) {\r\n\t\t\t\tif (showVariables) {\r\n\t\t\t\t\tresult += varSpec.name + "=";\r\n\t\t\t\t}\r\n\t\t\t\tfor (var j = 0; j < value.length; j++) {\r\n\t\t\t\t\tif (j > 0) {\r\n\t\t\t\t\t\tresult += varSpec.suffices[\'*\'] ? (separator || ",") : ",";\r\n\t\t\t\t\t\tif (varSpec.suffices[\'*\'] && showVariables) {\r\n\t\t\t\t\t\t\tresult += varSpec.name + "=";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tresult += shouldEscape ? encodeURIComponent(value[j]).replace(/!/g, "%21") : notReallyPercentEncode(value[j]);\r\n\t\t\t\t}\r\n\t\t\t} else if (typeof value === "object") {\r\n\t\t\t\tif (showVariables && !varSpec.suffices[\'*\']) {\r\n\t\t\t\t\tresult += varSpec.name + "=";\r\n\t\t\t\t}\r\n\t\t\t\tvar first = true;\r\n\t\t\t\tfor (var key in value) {\r\n\t\t\t\t\tif (!first) {\r\n\t\t\t\t\t\tresult += varSpec.suffices[\'*\'] ? (separator || ",") : ",";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfirst = false;\r\n\t\t\t\t\tresult += shouldEscape ? encodeURIComponent(key).replace(/!/g, "%21") : notReallyPercentEncode(key);\r\n\t\t\t\t\tresult += varSpec.suffices[\'*\'] ? \'=\' : ",";\r\n\t\t\t\t\tresult += shouldEscape ? encodeURIComponent(value[key]).replace(/!/g, "%21") : notReallyPercentEncode(value[key]);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (showVariables) {\r\n\t\t\t\t\tresult += varSpec.name;\r\n\t\t\t\t\tif (!trimEmptyString || value !== "") {\r\n\t\t\t\t\t\tresult += "=";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (varSpec.truncate != null) {\r\n\t\t\t\t\tvalue = value.substring(0, varSpec.truncate);\r\n\t\t\t\t}\r\n\t\t\t\tresult += shouldEscape ? encodeURIComponent(value).replace(/!/g, "%21"): notReallyPercentEncode(value);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result;\r\n\t};\r\n\tsubFunction.varNames = varNames;\r\n\treturn {\r\n\t\tprefix: prefix,\r\n\t\tsubstitution: subFunction\r\n\t};\r\n}\r\n\r\nfunction UriTemplate(template) {\r\n\tif (!(this instanceof UriTemplate)) {\r\n\t\treturn new UriTemplate(template);\r\n\t}\r\n\tvar parts = template.split("{");\r\n\tvar textParts = [parts.shift()];\r\n\tvar prefixes = [];\r\n\tvar substitutions = [];\r\n\tvar varNames = [];\r\n\twhile (parts.length > 0) {\r\n\t\tvar part = parts.shift();\r\n\t\tvar spec = part.split("}")[0];\r\n\t\tvar remainder = part.substring(spec.length + 1);\r\n\t\tvar funcs = uriTemplateSubstitution(spec);\r\n\t\tsubstitutions.push(funcs.substitution);\r\n\t\tprefixes.push(funcs.prefix);\r\n\t\ttextParts.push(remainder);\r\n\t\tvarNames = varNames.concat(funcs.substitution.varNames);\r\n\t}\r\n\tthis.fill = function (valueFunction) {\r\n\t\tvar result = textParts[0];\r\n\t\tfor (var i = 0; i < substitutions.length; i++) {\r\n\t\t\tvar substitution = substitutions[i];\r\n\t\t\tresult += substitution(valueFunction);\r\n\t\t\tresult += textParts[i + 1];\r\n\t\t}\r\n\t\treturn result;\r\n\t};\r\n\tthis.varNames = varNames;\r\n\tthis.template = template;\r\n}\r\nUriTemplate.prototype = {\r\n\ttoString: function () {\r\n\t\treturn this.template;\r\n\t},\r\n\tfillFromObject: function (obj) {\r\n\t\treturn this.fill(function (varName) {\r\n\t\t\treturn obj[varName];\r\n\t\t});\r\n\t}\r\n};\r\nvar ValidatorContext = function ValidatorContext(parent, collectMultiple, errorReporter, checkRecursive, trackUnknownProperties) {\r\n\tthis.missing = [];\r\n\tthis.missingMap = {};\r\n\tthis.formatValidators = parent ? Object.create(parent.formatValidators) : {};\r\n\tthis.schemas = parent ? Object.create(parent.schemas) : {};\r\n\tthis.collectMultiple = collectMultiple;\r\n\tthis.errors = [];\r\n\tthis.handleError = collectMultiple ? this.collectError : this.returnError;\r\n\tif (checkRecursive) {\r\n\t\tthis.checkRecursive = true;\r\n\t\tthis.scanned = [];\r\n\t\tthis.scannedFrozen = [];\r\n\t\tthis.scannedFrozenSchemas = [];\r\n\t\tthis.scannedFrozenValidationErrors = [];\r\n\t\tthis.validatedSchemasKey = \'tv4_validation_id\';\r\n\t\tthis.validationErrorsKey = \'tv4_validation_errors_id\';\r\n\t}\r\n\tif (trackUnknownProperties) {\r\n\t\tthis.trackUnknownProperties = true;\r\n\t\tthis.knownPropertyPaths = {};\r\n\t\tthis.unknownPropertyPaths = {};\r\n\t}\r\n\tthis.errorReporter = errorReporter || defaultErrorReporter(\'en\');\r\n\tif (typeof this.errorReporter === \'string\') {\r\n\t\tthrow new Error(\'debug\');\r\n\t}\r\n\tthis.definedKeywords = {};\r\n\tif (parent) {\r\n\t\tfor (var key in parent.definedKeywords) {\r\n\t\t\tthis.definedKeywords[key] = parent.definedKeywords[key].slice(0);\r\n\t\t}\r\n\t}\r\n};\r\nValidatorContext.prototype.defineKeyword = function (keyword, keywordFunction) {\r\n\tthis.definedKeywords[keyword] = this.definedKeywords[keyword] || [];\r\n\tthis.definedKeywords[keyword].push(keywordFunction);\r\n};\r\nValidatorContext.prototype.createError = function (code, messageParams, dataPath, schemaPath, subErrors, data, schema) {\r\n\tvar error = new ValidationError(code, messageParams, dataPath, schemaPath, subErrors);\r\n\terror.message = this.errorReporter(error, data, schema);\r\n\treturn error;\r\n};\r\nValidatorContext.prototype.returnError = function (error) {\r\n\treturn error;\r\n};\r\nValidatorContext.prototype.collectError = function (error) {\r\n\tif (error) {\r\n\t\tthis.errors.push(error);\r\n\t}\r\n\treturn null;\r\n};\r\nValidatorContext.prototype.prefixErrors = function (startIndex, dataPath, schemaPath) {\r\n\tfor (var i = startIndex; i < this.errors.length; i++) {\r\n\t\tthis.errors[i] = this.errors[i].prefixWith(dataPath, schemaPath);\r\n\t}\r\n\treturn this;\r\n};\r\nValidatorContext.prototype.banUnknownProperties = function (data, schema) {\r\n\tfor (var unknownPath in this.unknownPropertyPaths) {\r\n\t\tvar error = this.createError(ErrorCodes.UNKNOWN_PROPERTY, {path: unknownPath}, unknownPath, "", null, data, schema);\r\n\t\tvar result = this.handleError(error);\r\n\t\tif (result) {\r\n\t\t\treturn result;\r\n\t\t}\r\n\t}\r\n\treturn null;\r\n};\r\n\r\nValidatorContext.prototype.addFormat = function (format, validator) {\r\n\tif (typeof format === \'object\') {\r\n\t\tfor (var key in format) {\r\n\t\t\tthis.addFormat(key, format[key]);\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\tthis.formatValidators[format] = validator;\r\n};\r\nValidatorContext.prototype.resolveRefs = function (schema, urlHistory) {\r\n\tif (schema[\'$ref\'] !== undefined) {\r\n\t\turlHistory = urlHistory || {};\r\n\t\tif (urlHistory[schema[\'$ref\']]) {\r\n\t\t\treturn this.createError(ErrorCodes.CIRCULAR_REFERENCE, {urls: Object.keys(urlHistory).join(\', \')}, \'\', \'\', null, undefined, schema);\r\n\t\t}\r\n\t\turlHistory[schema[\'$ref\']] = true;\r\n\t\tschema = this.getSchema(schema[\'$ref\'], urlHistory);\r\n\t}\r\n\treturn schema;\r\n};\r\nValidatorContext.prototype.getSchema = function (url, urlHistory) {\r\n\tvar schema;\r\n\tif (this.schemas[url] !== undefined) {\r\n\t\tschema = this.schemas[url];\r\n\t\treturn this.resolveRefs(schema, urlHistory);\r\n\t}\r\n\tvar baseUrl = url;\r\n\tvar fragment = "";\r\n\tif (url.indexOf(\'#\') !== -1) {\r\n\t\tfragment = url.substring(url.indexOf("#") + 1);\r\n\t\tbaseUrl = url.substring(0, url.indexOf("#"));\r\n\t}\r\n\tif (typeof this.schemas[baseUrl] === \'object\') {\r\n\t\tschema = this.schemas[baseUrl];\r\n\t\tvar pointerPath = decodeURIComponent(fragment);\r\n\t\tif (pointerPath === "") {\r\n\t\t\treturn this.resolveRefs(schema, urlHistory);\r\n\t\t} else if (pointerPath.charAt(0) !== "/") {\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\t\tvar parts = pointerPath.split("/").slice(1);\r\n\t\tfor (var i = 0; i < parts.length; i++) {\r\n\t\t\tvar component = parts[i].replace(/~1/g, "/").replace(/~0/g, "~");\r\n\t\t\tif (schema[component] === undefined) {\r\n\t\t\t\tschema = undefined;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tschema = schema[component];\r\n\t\t}\r\n\t\tif (schema !== undefined) {\r\n\t\t\treturn this.resolveRefs(schema, urlHistory);\r\n\t\t}\r\n\t}\r\n\tif (this.missing[baseUrl] === undefined) {\r\n\t\tthis.missing.push(baseUrl);\r\n\t\tthis.missing[baseUrl] = baseUrl;\r\n\t\tthis.missingMap[baseUrl] = baseUrl;\r\n\t}\r\n};\r\nValidatorContext.prototype.searchSchemas = function (schema, url) {\r\n\tif (Array.isArray(schema)) {\r\n\t\tfor (var i = 0; i < schema.length; i++) {\r\n\t\t\tthis.searchSchemas(schema[i], url);\r\n\t\t}\r\n\t} else if (schema && typeof schema === "object") {\r\n\t\tif (typeof schema.id === "string") {\r\n\t\t\tif (isTrustedUrl(url, schema.id)) {\r\n\t\t\t\tif (this.schemas[schema.id] === undefined) {\r\n\t\t\t\t\tthis.schemas[schema.id] = schema;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (var key in schema) {\r\n\t\t\tif (key !== "enum") {\r\n\t\t\t\tif (typeof schema[key] === "object") {\r\n\t\t\t\t\tthis.searchSchemas(schema[key], url);\r\n\t\t\t\t} else if (key === "$ref") {\r\n\t\t\t\t\tvar uri = getDocumentUri(schema[key]);\r\n\t\t\t\t\tif (uri && this.schemas[uri] === undefined && this.missingMap[uri] === undefined) {\r\n\t\t\t\t\t\tthis.missingMap[uri] = uri;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n};\r\nValidatorContext.prototype.addSchema = function (url, schema) {\r\n\t//overload\r\n\tif (typeof url !== \'string\' || typeof schema === \'undefined\') {\r\n\t\tif (typeof url === \'object\' && typeof url.id === \'string\') {\r\n\t\t\tschema = url;\r\n\t\t\turl = schema.id;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\tif (url === getDocumentUri(url) + "#") {\r\n\t\t// Remove empty fragment\r\n\t\turl = getDocumentUri(url);\r\n\t}\r\n\tthis.schemas[url] = schema;\r\n\tdelete this.missingMap[url];\r\n\tnormSchema(schema, url);\r\n\tthis.searchSchemas(schema, url);\r\n};\r\n\r\nValidatorContext.prototype.getSchemaMap = function () {\r\n\tvar map = {};\r\n\tfor (var key in this.schemas) {\r\n\t\tmap[key] = this.schemas[key];\r\n\t}\r\n\treturn map;\r\n};\r\n\r\nValidatorContext.prototype.getSchemaUris = function (filterRegExp) {\r\n\tvar list = [];\r\n\tfor (var key in this.schemas) {\r\n\t\tif (!filterRegExp || filterRegExp.test(key)) {\r\n\t\t\tlist.push(key);\r\n\t\t}\r\n\t}\r\n\treturn list;\r\n};\r\n\r\nValidatorContext.prototype.getMissingUris = function (filterRegExp) {\r\n\tvar list = [];\r\n\tfor (var key in this.missingMap) {\r\n\t\tif (!filterRegExp || filterRegExp.test(key)) {\r\n\t\t\tlist.push(key);\r\n\t\t}\r\n\t}\r\n\treturn list;\r\n};\r\n\r\nValidatorContext.prototype.dropSchemas = function () {\r\n\tthis.schemas = {};\r\n\tthis.reset();\r\n};\r\nValidatorContext.prototype.reset = function () {\r\n\tthis.missing = [];\r\n\tthis.missingMap = {};\r\n\tthis.errors = [];\r\n};\r\n\r\nValidatorContext.prototype.validateAll = function (data, schema, dataPathParts, schemaPathParts, dataPointerPath) {\r\n\tvar topLevel;\r\n\tschema = this.resolveRefs(schema);\r\n\tif (!schema) {\r\n\t\treturn null;\r\n\t} else if (schema instanceof ValidationError) {\r\n\t\tthis.errors.push(schema);\r\n\t\treturn schema;\r\n\t}\r\n\r\n\tvar startErrorCount = this.errors.length;\r\n\tvar frozenIndex, scannedFrozenSchemaIndex = null, scannedSchemasIndex = null;\r\n\tif (this.checkRecursive && data && typeof data === \'object\') {\r\n\t\ttopLevel = !this.scanned.length;\r\n\t\tif (data[this.validatedSchemasKey]) {\r\n\t\t\tvar schemaIndex = data[this.validatedSchemasKey].indexOf(schema);\r\n\t\t\tif (schemaIndex !== -1) {\r\n\t\t\t\tthis.errors = this.errors.concat(data[this.validationErrorsKey][schemaIndex]);\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (Object.isFrozen(data)) {\r\n\t\t\tfrozenIndex = this.scannedFrozen.indexOf(data);\r\n\t\t\tif (frozenIndex !== -1) {\r\n\t\t\t\tvar frozenSchemaIndex = this.scannedFrozenSchemas[frozenIndex].indexOf(schema);\r\n\t\t\t\tif (frozenSchemaIndex !== -1) {\r\n\t\t\t\t\tthis.errors = this.errors.concat(this.scannedFrozenValidationErrors[frozenIndex][frozenSchemaIndex]);\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.scanned.push(data);\r\n\t\tif (Object.isFrozen(data)) {\r\n\t\t\tif (frozenIndex === -1) {\r\n\t\t\t\tfrozenIndex = this.scannedFrozen.length;\r\n\t\t\t\tthis.scannedFrozen.push(data);\r\n\t\t\t\tthis.scannedFrozenSchemas.push([]);\r\n\t\t\t}\r\n\t\t\tscannedFrozenSchemaIndex = this.scannedFrozenSchemas[frozenIndex].length;\r\n\t\t\tthis.scannedFrozenSchemas[frozenIndex][scannedFrozenSchemaIndex] = schema;\r\n\t\t\tthis.scannedFrozenValidationErrors[frozenIndex][scannedFrozenSchemaIndex] = [];\r\n\t\t} else {\r\n\t\t\tif (!data[this.validatedSchemasKey]) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tObject.defineProperty(data, this.validatedSchemasKey, {\r\n\t\t\t\t\t\tvalue: [],\r\n\t\t\t\t\t\tconfigurable: true\r\n\t\t\t\t\t});\r\n\t\t\t\t\tObject.defineProperty(data, this.validationErrorsKey, {\r\n\t\t\t\t\t\tvalue: [],\r\n\t\t\t\t\t\tconfigurable: true\r\n\t\t\t\t\t});\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\t//IE 7/8 workaround\r\n\t\t\t\t\tdata[this.validatedSchemasKey] = [];\r\n\t\t\t\t\tdata[this.validationErrorsKey] = [];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tscannedSchemasIndex = data[this.validatedSchemasKey].length;\r\n\t\t\tdata[this.validatedSchemasKey][scannedSchemasIndex] = schema;\r\n\t\t\tdata[this.validationErrorsKey][scannedSchemasIndex] = [];\r\n\t\t}\r\n\t}\r\n\r\n\tvar errorCount = this.errors.length;\r\n\tvar error = this.validateBasic(data, schema, dataPointerPath)\r\n\t\t|| this.validateNumeric(data, schema, dataPointerPath)\r\n\t\t|| this.validateString(data, schema, dataPointerPath)\r\n\t\t|| this.validateArray(data, schema, dataPointerPath)\r\n\t\t|| this.validateObject(data, schema, dataPointerPath)\r\n\t\t|| this.validateCombinations(data, schema, dataPointerPath)\r\n\t\t|| this.validateHypermedia(data, schema, dataPointerPath)\r\n\t\t|| this.validateFormat(data, schema, dataPointerPath)\r\n\t\t|| this.validateDefinedKeywords(data, schema, dataPointerPath)\r\n\t\t|| null;\r\n\r\n\tif (topLevel) {\r\n\t\twhile (this.scanned.length) {\r\n\t\t\tvar item = this.scanned.pop();\r\n\t\t\tdelete item[this.validatedSchemasKey];\r\n\t\t}\r\n\t\tthis.scannedFrozen = [];\r\n\t\tthis.scannedFrozenSchemas = [];\r\n\t}\r\n\r\n\tif (error || errorCount !== this.errors.length) {\r\n\t\twhile ((dataPathParts && dataPathParts.length) || (schemaPathParts && schemaPathParts.length)) {\r\n\t\t\tvar dataPart = (dataPathParts && dataPathParts.length) ? "" + dataPathParts.pop() : null;\r\n\t\t\tvar schemaPart = (schemaPathParts && schemaPathParts.length) ? "" + schemaPathParts.pop() : null;\r\n\t\t\tif (error) {\r\n\t\t\t\terror = error.prefixWith(dataPart, schemaPart);\r\n\t\t\t}\r\n\t\t\tthis.prefixErrors(errorCount, dataPart, schemaPart);\r\n\t\t}\r\n\t}\r\n\r\n\tif (scannedFrozenSchemaIndex !== null) {\r\n\t\tthis.scannedFrozenValidationErrors[frozenIndex][scannedFrozenSchemaIndex] = this.errors.slice(startErrorCount);\r\n\t} else if (scannedSchemasIndex !== null) {\r\n\t\tdata[this.validationErrorsKey][scannedSchemasIndex] = this.errors.slice(startErrorCount);\r\n\t}\r\n\r\n\treturn this.handleError(error);\r\n};\r\nValidatorContext.prototype.validateFormat = function (data, schema) {\r\n\tif (typeof schema.format !== \'string\' || !this.formatValidators[schema.format]) {\r\n\t\treturn null;\r\n\t}\r\n\tvar errorMessage = this.formatValidators[schema.format].call(null, data, schema);\r\n\tif (typeof errorMessage === \'string\' || typeof errorMessage === \'number\') {\r\n\t\treturn this.createError(ErrorCodes.FORMAT_CUSTOM, {message: errorMessage}, \'\', \'/format\', null, data, schema);\r\n\t} else if (errorMessage && typeof errorMessage === \'object\') {\r\n\t\treturn this.createError(ErrorCodes.FORMAT_CUSTOM, {message: errorMessage.message || "?"}, errorMessage.dataPath || \'\', errorMessage.schemaPath || "/format", null, data, schema);\r\n\t}\r\n\treturn null;\r\n};\r\nValidatorContext.prototype.validateDefinedKeywords = function (data, schema, dataPointerPath) {\r\n\tfor (var key in this.definedKeywords) {\r\n\t\tif (typeof schema[key] === \'undefined\') {\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tvar validationFunctions = this.definedKeywords[key];\r\n\t\tfor (var i = 0; i < validationFunctions.length; i++) {\r\n\t\t\tvar func = validationFunctions[i];\r\n\t\t\tvar result = func(data, schema[key], schema, dataPointerPath);\r\n\t\t\tif (typeof result === \'string\' || typeof result === \'number\') {\r\n\t\t\t\treturn this.createError(ErrorCodes.KEYWORD_CUSTOM, {key: key, message: result}, \'\', \'\', null, data, schema).prefixWith(null, key);\r\n\t\t\t} else if (result && typeof result === \'object\') {\r\n\t\t\t\tvar code = result.code;\r\n\t\t\t\tif (typeof code === \'string\') {\r\n\t\t\t\t\tif (!ErrorCodes[code]) {\r\n\t\t\t\t\t\tthrow new Error(\'Undefined error code (use defineError): \' + code);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcode = ErrorCodes[code];\r\n\t\t\t\t} else if (typeof code !== \'number\') {\r\n\t\t\t\t\tcode = ErrorCodes.KEYWORD_CUSTOM;\r\n\t\t\t\t}\r\n\t\t\t\tvar messageParams = (typeof result.message === \'object\') ? result.message : {key: key, message: result.message || "?"};\r\n\t\t\t\tvar schemaPath = result.schemaPath || ("/" + key.replace(/~/g, \'~0\').replace(/\\//g, \'~1\'));\r\n\t\t\t\treturn this.createError(code, messageParams, result.dataPath || null, schemaPath, null, data, schema);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn null;\r\n};\r\n\r\nfunction recursiveCompare(A, B) {\r\n\tif (A === B) {\r\n\t\treturn true;\r\n\t}\r\n\tif (A && B && typeof A === "object" && typeof B === "object") {\r\n\t\tif (Array.isArray(A) !== Array.isArray(B)) {\r\n\t\t\treturn false;\r\n\t\t} else if (Array.isArray(A)) {\r\n\t\t\tif (A.length !== B.length) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tfor (var i = 0; i < A.length; i++) {\r\n\t\t\t\tif (!recursiveCompare(A[i], B[i])) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tvar key;\r\n\t\t\tfor (key in A) {\r\n\t\t\t\tif (B[key] === undefined && A[key] !== undefined) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (key in B) {\r\n\t\t\t\tif (A[key] === undefined && B[key] !== undefined) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (key in A) {\r\n\t\t\t\tif (!recursiveCompare(A[key], B[key])) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\treturn false;\r\n}\r\n\r\nValidatorContext.prototype.validateBasic = function validateBasic(data, schema, dataPointerPath) {\r\n\tvar error;\r\n\tif (error = this.validateType(data, schema, dataPointerPath)) {\r\n\t\treturn error.prefixWith(null, "type");\r\n\t}\r\n\tif (error = this.validateEnum(data, schema, dataPointerPath)) {\r\n\t\treturn error.prefixWith(null, "type");\r\n\t}\r\n\treturn null;\r\n};\r\n\r\nValidatorContext.prototype.validateType = function validateType(data, schema) {\r\n\tif (schema.type === undefined) {\r\n\t\treturn null;\r\n\t}\r\n\tvar dataType = typeof data;\r\n\tif (data === null) {\r\n\t\tdataType = "null";\r\n\t} else if (Array.isArray(data)) {\r\n\t\tdataType = "array";\r\n\t}\r\n\tvar allowedTypes = schema.type;\r\n\tif (!Array.isArray(allowedTypes)) {\r\n\t\tallowedTypes = [allowedTypes];\r\n\t}\r\n\r\n\tfor (var i = 0; i < allowedTypes.length; i++) {\r\n\t\tvar type = allowedTypes[i];\r\n\t\tif (type === dataType || (type === "integer" && dataType === "number" && (data % 1 === 0))) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\treturn this.createError(ErrorCodes.INVALID_TYPE, {type: dataType, expected: allowedTypes.join("/")}, \'\', \'\', null, data, schema);\r\n};\r\n\r\nValidatorContext.prototype.validateEnum = function validateEnum(data, schema) {\r\n\tif (schema["enum"] === undefined) {\r\n\t\treturn null;\r\n\t}\r\n\tfor (var i = 0; i < schema["enum"].length; i++) {\r\n\t\tvar enumVal = schema["enum"][i];\r\n\t\tif (recursiveCompare(data, enumVal)) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\treturn this.createError(ErrorCodes.ENUM_MISMATCH, {value: (typeof JSON !== \'undefined\') ? JSON.stringify(data) : data}, \'\', \'\', null, data, schema);\r\n};\r\n\r\nValidatorContext.prototype.validateNumeric = function validateNumeric(data, schema, dataPointerPath) {\r\n\treturn this.validateMultipleOf(data, schema, dataPointerPath)\r\n\t\t|| this.validateMinMax(data, schema, dataPointerPath)\r\n\t\t|| this.validateNaN(data, schema, dataPointerPath)\r\n\t\t|| null;\r\n};\r\n\r\nvar CLOSE_ENOUGH_LOW = Math.pow(2, -51);\r\nvar CLOSE_ENOUGH_HIGH = 1 - CLOSE_ENOUGH_LOW;\r\nValidatorContext.prototype.validateMultipleOf = function validateMultipleOf(data, schema) {\r\n\tvar multipleOf = schema.multipleOf || schema.divisibleBy;\r\n\tif (multipleOf === undefined) {\r\n\t\treturn null;\r\n\t}\r\n\tif (typeof data === "number") {\r\n\t\tvar remainder = (data/multipleOf)%1;\r\n\t\tif (remainder >= CLOSE_ENOUGH_LOW && remainder < CLOSE_ENOUGH_HIGH) {\r\n\t\t\treturn this.createError(ErrorCodes.NUMBER_MULTIPLE_OF, {value: data, multipleOf: multipleOf}, \'\', \'\', null, data, schema);\r\n\t\t}\r\n\t}\r\n\treturn null;\r\n};\r\n\r\nValidatorContext.prototype.validateMinMax = function validateMinMax(data, schema) {\r\n\tif (typeof data !== "number") {\r\n\t\treturn null;\r\n\t}\r\n\tif (schema.minimum !== undefined) {\r\n\t\tif (data < schema.minimum) {\r\n\t\t\treturn this.createError(ErrorCodes.NUMBER_MINIMUM, {value: data, minimum: schema.minimum}, \'\', \'/minimum\', null, data, schema);\r\n\t\t}\r\n\t\tif (schema.exclusiveMinimum && data === schema.minimum) {\r\n\t\t\treturn this.createError(ErrorCodes.NUMBER_MINIMUM_EXCLUSIVE, {value: data, minimum: schema.minimum}, \'\', \'/exclusiveMinimum\', null, data, schema);\r\n\t\t}\r\n\t}\r\n\tif (schema.maximum !== undefined) {\r\n\t\tif (data > schema.maximum) {\r\n\t\t\treturn this.createError(ErrorCodes.NUMBER_MAXIMUM, {value: data, maximum: schema.maximum}, \'\', \'/maximum\', null, data, schema);\r\n\t\t}\r\n\t\tif (schema.exclusiveMaximum && data === schema.maximum) {\r\n\t\t\treturn this.createError(ErrorCodes.NUMBER_MAXIMUM_EXCLUSIVE, {value: data, maximum: schema.maximum}, \'\', \'/exclusiveMaximum\', null, data, schema);\r\n\t\t}\r\n\t}\r\n\treturn null;\r\n};\r\n\r\nValidatorContext.prototype.validateNaN = function validateNaN(data, schema) {\r\n\tif (typeof data !== "number") {\r\n\t\treturn null;\r\n\t}\r\n\tif (isNaN(data) === true || data === Infinity || data === -Infinity) {\r\n\t\treturn this.createError(ErrorCodes.NUMBER_NOT_A_NUMBER, {value: data}, \'\', \'/type\', null, data, schema);\r\n\t}\r\n\treturn null;\r\n};\r\n\r\nValidatorContext.prototype.validateString = function validateString(data, schema, dataPointerPath) {\r\n\treturn this.validateStringLength(data, schema, dataPointerPath)\r\n\t\t|| this.validateStringPattern(data, schema, dataPointerPath)\r\n\t\t|| null;\r\n};\r\n\r\nValidatorContext.prototype.validateStringLength = function validateStringLength(data, schema) {\r\n\tif (typeof data !== "string") {\r\n\t\treturn null;\r\n\t}\r\n\tif (schema.minLength !== undefined) {\r\n\t\tif (data.length < schema.minLength) {\r\n\t\t\treturn this.createError(ErrorCodes.STRING_LENGTH_SHORT, {length: data.length, minimum: schema.minLength}, \'\', \'/minLength\', null, data, schema);\r\n\t\t}\r\n\t}\r\n\tif (schema.maxLength !== undefined) {\r\n\t\tif (data.length > schema.maxLength) {\r\n\t\t\treturn this.createError(ErrorCodes.STRING_LENGTH_LONG, {length: data.length, maximum: schema.maxLength}, \'\', \'/maxLength\', null, data, schema);\r\n\t\t}\r\n\t}\r\n\treturn null;\r\n};\r\n\r\nValidatorContext.prototype.validateStringPattern = function validateStringPattern(data, schema) {\r\n\tif (typeof data !== "string" || (typeof schema.pattern !== "string" && !(schema.pattern instanceof RegExp))) {\r\n\t\treturn null;\r\n\t}\r\n\tvar regexp;\r\n\tif (schema.pattern instanceof RegExp) {\r\n\t  regexp = schema.pattern;\r\n\t}\r\n\telse {\r\n\t  var body, flags = \'\';\r\n\t  // Check for regular expression literals\r\n\t  // @see http://www.ecma-international.org/ecma-262/5.1/#sec-7.8.5\r\n\t  var literal = schema.pattern.match(/^\\/(.+)\\/([img]*)$/);\r\n\t  if (literal) {\r\n\t    body = literal[1];\r\n\t    flags = literal[2];\r\n\t  }\r\n\t  else {\r\n\t    body = schema.pattern;\r\n\t  }\r\n\t  regexp = new RegExp(body, flags);\r\n\t}\r\n\tif (!regexp.test(data)) {\r\n\t\treturn this.createError(ErrorCodes.STRING_PATTERN, {pattern: schema.pattern}, \'\', \'/pattern\', null, data, schema);\r\n\t}\r\n\treturn null;\r\n};\r\n\r\nValidatorContext.prototype.validateArray = function validateArray(data, schema, dataPointerPath) {\r\n\tif (!Array.isArray(data)) {\r\n\t\treturn null;\r\n\t}\r\n\treturn this.validateArrayLength(data, schema, dataPointerPath)\r\n\t\t|| this.validateArrayUniqueItems(data, schema, dataPointerPath)\r\n\t\t|| this.validateArrayItems(data, schema, dataPointerPath)\r\n\t\t|| null;\r\n};\r\n\r\nValidatorContext.prototype.validateArrayLength = function validateArrayLength(data, schema) {\r\n\tvar error;\r\n\tif (schema.minItems !== undefined) {\r\n\t\tif (data.length < schema.minItems) {\r\n\t\t\terror = this.createError(ErrorCodes.ARRAY_LENGTH_SHORT, {length: data.length, minimum: schema.minItems}, \'\', \'/minItems\', null, data, schema);\r\n\t\t\tif (this.handleError(error)) {\r\n\t\t\t\treturn error;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif (schema.maxItems !== undefined) {\r\n\t\tif (data.length > schema.maxItems) {\r\n\t\t\terror = this.createError(ErrorCodes.ARRAY_LENGTH_LONG, {length: data.length, maximum: schema.maxItems}, \'\', \'/maxItems\', null, data, schema);\r\n\t\t\tif (this.handleError(error)) {\r\n\t\t\t\treturn error;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn null;\r\n};\r\n\r\nValidatorContext.prototype.validateArrayUniqueItems = function validateArrayUniqueItems(data, schema) {\r\n\tif (schema.uniqueItems) {\r\n\t\tfor (var i = 0; i < data.length; i++) {\r\n\t\t\tfor (var j = i + 1; j < data.length; j++) {\r\n\t\t\t\tif (recursiveCompare(data[i], data[j])) {\r\n\t\t\t\t\tvar error = this.createError(ErrorCodes.ARRAY_UNIQUE, {match1: i, match2: j}, \'\', \'/uniqueItems\', null, data, schema);\r\n\t\t\t\t\tif (this.handleError(error)) {\r\n\t\t\t\t\t\treturn error;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn null;\r\n};\r\n\r\nValidatorContext.prototype.validateArrayItems = function validateArrayItems(data, schema, dataPointerPath) {\r\n\tif (schema.items === undefined) {\r\n\t\treturn null;\r\n\t}\r\n\tvar error, i;\r\n\tif (Array.isArray(schema.items)) {\r\n\t\tfor (i = 0; i < data.length; i++) {\r\n\t\t\tif (i < schema.items.length) {\r\n\t\t\t\tif (error = this.validateAll(data[i], schema.items[i], [i], ["items", i], dataPointerPath + "/" + i)) {\r\n\t\t\t\t\treturn error;\r\n\t\t\t\t}\r\n\t\t\t} else if (schema.additionalItems !== undefined) {\r\n\t\t\t\tif (typeof schema.additionalItems === "boolean") {\r\n\t\t\t\t\tif (!schema.additionalItems) {\r\n\t\t\t\t\t\terror = (this.createError(ErrorCodes.ARRAY_ADDITIONAL_ITEMS, {}, \'/\' + i, \'/additionalItems\', null, data, schema));\r\n\t\t\t\t\t\tif (this.handleError(error)) {\r\n\t\t\t\t\t\t\treturn error;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (error = this.validateAll(data[i], schema.additionalItems, [i], ["additionalItems"], dataPointerPath + "/" + i)) {\r\n\t\t\t\t\treturn error;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t} else {\r\n\t\tfor (i = 0; i < data.length; i++) {\r\n\t\t\tif (error = this.validateAll(data[i], schema.items, [i], ["items"], dataPointerPath + "/" + i)) {\r\n\t\t\t\treturn error;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn null;\r\n};\r\n\r\nValidatorContext.prototype.validateObject = function validateObject(data, schema, dataPointerPath) {\r\n\tif (typeof data !== "object" || data === null || Array.isArray(data)) {\r\n\t\treturn null;\r\n\t}\r\n\treturn this.validateObjectMinMaxProperties(data, schema, dataPointerPath)\r\n\t\t|| this.validateObjectRequiredProperties(data, schema, dataPointerPath)\r\n\t\t|| this.validateObjectProperties(data, schema, dataPointerPath)\r\n\t\t|| this.validateObjectDependencies(data, schema, dataPointerPath)\r\n\t\t|| null;\r\n};\r\n\r\nValidatorContext.prototype.validateObjectMinMaxProperties = function validateObjectMinMaxProperties(data, schema) {\r\n\tvar keys = Object.keys(data);\r\n\tvar error;\r\n\tif (schema.minProperties !== undefined) {\r\n\t\tif (keys.length < schema.minProperties) {\r\n\t\t\terror = this.createError(ErrorCodes.OBJECT_PROPERTIES_MINIMUM, {propertyCount: keys.length, minimum: schema.minProperties}, \'\', \'/minProperties\', null, data, schema);\r\n\t\t\tif (this.handleError(error)) {\r\n\t\t\t\treturn error;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif (schema.maxProperties !== undefined) {\r\n\t\tif (keys.length > schema.maxProperties) {\r\n\t\t\terror = this.createError(ErrorCodes.OBJECT_PROPERTIES_MAXIMUM, {propertyCount: keys.length, maximum: schema.maxProperties}, \'\', \'/maxProperties\', null, data, schema);\r\n\t\t\tif (this.handleError(error)) {\r\n\t\t\t\treturn error;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn null;\r\n};\r\n\r\nValidatorContext.prototype.validateObjectRequiredProperties = function validateObjectRequiredProperties(data, schema) {\r\n\tif (schema.required !== undefined) {\r\n\t\tfor (var i = 0; i < schema.required.length; i++) {\r\n\t\t\tvar key = schema.required[i];\r\n\t\t\tif (data[key] === undefined) {\r\n\t\t\t\tvar error = this.createError(ErrorCodes.OBJECT_REQUIRED, {key: key}, \'\', \'/required/\' + i, null, data, schema);\r\n\t\t\t\tif (this.handleError(error)) {\r\n\t\t\t\t\treturn error;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn null;\r\n};\r\n\r\nValidatorContext.prototype.validateObjectProperties = function validateObjectProperties(data, schema, dataPointerPath) {\r\n\tvar error;\r\n\tfor (var key in data) {\r\n\t\tvar keyPointerPath = dataPointerPath + "/" + key.replace(/~/g, \'~0\').replace(/\\//g, \'~1\');\r\n\t\tvar foundMatch = false;\r\n\t\tif (schema.properties !== undefined && schema.properties[key] !== undefined) {\r\n\t\t\tfoundMatch = true;\r\n\t\t\tif (error = this.validateAll(data[key], schema.properties[key], [key], ["properties", key], keyPointerPath)) {\r\n\t\t\t\treturn error;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (schema.patternProperties !== undefined) {\r\n\t\t\tfor (var patternKey in schema.patternProperties) {\r\n\t\t\t\tvar regexp = new RegExp(patternKey);\r\n\t\t\t\tif (regexp.test(key)) {\r\n\t\t\t\t\tfoundMatch = true;\r\n\t\t\t\t\tif (error = this.validateAll(data[key], schema.patternProperties[patternKey], [key], ["patternProperties", patternKey], keyPointerPath)) {\r\n\t\t\t\t\t\treturn error;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!foundMatch) {\r\n\t\t\tif (schema.additionalProperties !== undefined) {\r\n\t\t\t\tif (this.trackUnknownProperties) {\r\n\t\t\t\t\tthis.knownPropertyPaths[keyPointerPath] = true;\r\n\t\t\t\t\tdelete this.unknownPropertyPaths[keyPointerPath];\r\n\t\t\t\t}\r\n\t\t\t\tif (typeof schema.additionalProperties === "boolean") {\r\n\t\t\t\t\tif (!schema.additionalProperties) {\r\n\t\t\t\t\t\terror = this.createError(ErrorCodes.OBJECT_ADDITIONAL_PROPERTIES, {key: key}, \'\', \'/additionalProperties\', null, data, schema).prefixWith(key, null);\r\n\t\t\t\t\t\tif (this.handleError(error)) {\r\n\t\t\t\t\t\t\treturn error;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (error = this.validateAll(data[key], schema.additionalProperties, [key], ["additionalProperties"], keyPointerPath)) {\r\n\t\t\t\t\t\treturn error;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (this.trackUnknownProperties && !this.knownPropertyPaths[keyPointerPath]) {\r\n\t\t\t\tthis.unknownPropertyPaths[keyPointerPath] = true;\r\n\t\t\t}\r\n\t\t} else if (this.trackUnknownProperties) {\r\n\t\t\tthis.knownPropertyPaths[keyPointerPath] = true;\r\n\t\t\tdelete this.unknownPropertyPaths[keyPointerPath];\r\n\t\t}\r\n\t}\r\n\treturn null;\r\n};\r\n\r\nValidatorContext.prototype.validateObjectDependencies = function validateObjectDependencies(data, schema, dataPointerPath) {\r\n\tvar error;\r\n\tif (schema.dependencies !== undefined) {\r\n\t\tfor (var depKey in schema.dependencies) {\r\n\t\t\tif (data[depKey] !== undefined) {\r\n\t\t\t\tvar dep = schema.dependencies[depKey];\r\n\t\t\t\tif (typeof dep === "string") {\r\n\t\t\t\t\tif (data[dep] === undefined) {\r\n\t\t\t\t\t\terror = this.createError(ErrorCodes.OBJECT_DEPENDENCY_KEY, {key: depKey, missing: dep}, \'\', \'\', null, data, schema).prefixWith(null, depKey).prefixWith(null, "dependencies");\r\n\t\t\t\t\t\tif (this.handleError(error)) {\r\n\t\t\t\t\t\t\treturn error;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (Array.isArray(dep)) {\r\n\t\t\t\t\tfor (var i = 0; i < dep.length; i++) {\r\n\t\t\t\t\t\tvar requiredKey = dep[i];\r\n\t\t\t\t\t\tif (data[requiredKey] === undefined) {\r\n\t\t\t\t\t\t\terror = this.createError(ErrorCodes.OBJECT_DEPENDENCY_KEY, {key: depKey, missing: requiredKey}, \'\', \'/\' + i, null, data, schema).prefixWith(null, depKey).prefixWith(null, "dependencies");\r\n\t\t\t\t\t\t\tif (this.handleError(error)) {\r\n\t\t\t\t\t\t\t\treturn error;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (error = this.validateAll(data, dep, [], ["dependencies", depKey], dataPointerPath)) {\r\n\t\t\t\t\t\treturn error;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn null;\r\n};\r\n\r\nValidatorContext.prototype.validateCombinations = function validateCombinations(data, schema, dataPointerPath) {\r\n\treturn this.validateAllOf(data, schema, dataPointerPath)\r\n\t\t|| this.validateAnyOf(data, schema, dataPointerPath)\r\n\t\t|| this.validateOneOf(data, schema, dataPointerPath)\r\n\t\t|| this.validateNot(data, schema, dataPointerPath)\r\n\t\t|| null;\r\n};\r\n\r\nValidatorContext.prototype.validateAllOf = function validateAllOf(data, schema, dataPointerPath) {\r\n\tif (schema.allOf === undefined) {\r\n\t\treturn null;\r\n\t}\r\n\tvar error;\r\n\tfor (var i = 0; i < schema.allOf.length; i++) {\r\n\t\tvar subSchema = schema.allOf[i];\r\n\t\tif (error = this.validateAll(data, subSchema, [], ["allOf", i], dataPointerPath)) {\r\n\t\t\treturn error;\r\n\t\t}\r\n\t}\r\n\treturn null;\r\n};\r\n\r\nValidatorContext.prototype.validateAnyOf = function validateAnyOf(data, schema, dataPointerPath) {\r\n\tif (schema.anyOf === undefined) {\r\n\t\treturn null;\r\n\t}\r\n\tvar errors = [];\r\n\tvar startErrorCount = this.errors.length;\r\n\tvar oldUnknownPropertyPaths, oldKnownPropertyPaths;\r\n\tif (this.trackUnknownProperties) {\r\n\t\toldUnknownPropertyPaths = this.unknownPropertyPaths;\r\n\t\toldKnownPropertyPaths = this.knownPropertyPaths;\r\n\t}\r\n\tvar errorAtEnd = true;\r\n\tfor (var i = 0; i < schema.anyOf.length; i++) {\r\n\t\tif (this.trackUnknownProperties) {\r\n\t\t\tthis.unknownPropertyPaths = {};\r\n\t\t\tthis.knownPropertyPaths = {};\r\n\t\t}\r\n\t\tvar subSchema = schema.anyOf[i];\r\n\r\n\t\tvar errorCount = this.errors.length;\r\n\t\tvar error = this.validateAll(data, subSchema, [], ["anyOf", i], dataPointerPath);\r\n\r\n\t\tif (error === null && errorCount === this.errors.length) {\r\n\t\t\tthis.errors = this.errors.slice(0, startErrorCount);\r\n\r\n\t\t\tif (this.trackUnknownProperties) {\r\n\t\t\t\tfor (var knownKey in this.knownPropertyPaths) {\r\n\t\t\t\t\toldKnownPropertyPaths[knownKey] = true;\r\n\t\t\t\t\tdelete oldUnknownPropertyPaths[knownKey];\r\n\t\t\t\t}\r\n\t\t\t\tfor (var unknownKey in this.unknownPropertyPaths) {\r\n\t\t\t\t\tif (!oldKnownPropertyPaths[unknownKey]) {\r\n\t\t\t\t\t\toldUnknownPropertyPaths[unknownKey] = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// We need to continue looping so we catch all the property definitions, but we don\'t want to return an error\r\n\t\t\t\terrorAtEnd = false;\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tif (error) {\r\n\t\t\terrors.push(error.prefixWith(null, "" + i).prefixWith(null, "anyOf"));\r\n\t\t}\r\n\t}\r\n\tif (this.trackUnknownProperties) {\r\n\t\tthis.unknownPropertyPaths = oldUnknownPropertyPaths;\r\n\t\tthis.knownPropertyPaths = oldKnownPropertyPaths;\r\n\t}\r\n\tif (errorAtEnd) {\r\n\t\terrors = errors.concat(this.errors.slice(startErrorCount));\r\n\t\tthis.errors = this.errors.slice(0, startErrorCount);\r\n\t\treturn this.createError(ErrorCodes.ANY_OF_MISSING, {}, "", "/anyOf", errors, data, schema);\r\n\t}\r\n};\r\n\r\nValidatorContext.prototype.validateOneOf = function validateOneOf(data, schema, dataPointerPath) {\r\n\tif (schema.oneOf === undefined) {\r\n\t\treturn null;\r\n\t}\r\n\tvar validIndex = null;\r\n\tvar errors = [];\r\n\tvar startErrorCount = this.errors.length;\r\n\tvar oldUnknownPropertyPaths, oldKnownPropertyPaths;\r\n\tif (this.trackUnknownProperties) {\r\n\t\toldUnknownPropertyPaths = this.unknownPropertyPaths;\r\n\t\toldKnownPropertyPaths = this.knownPropertyPaths;\r\n\t}\r\n\tfor (var i = 0; i < schema.oneOf.length; i++) {\r\n\t\tif (this.trackUnknownProperties) {\r\n\t\t\tthis.unknownPropertyPaths = {};\r\n\t\t\tthis.knownPropertyPaths = {};\r\n\t\t}\r\n\t\tvar subSchema = schema.oneOf[i];\r\n\r\n\t\tvar errorCount = this.errors.length;\r\n\t\tvar error = this.validateAll(data, subSchema, [], ["oneOf", i], dataPointerPath);\r\n\r\n\t\tif (error === null && errorCount === this.errors.length) {\r\n\t\t\tif (validIndex === null) {\r\n\t\t\t\tvalidIndex = i;\r\n\t\t\t} else {\r\n\t\t\t\tthis.errors = this.errors.slice(0, startErrorCount);\r\n\t\t\t\treturn this.createError(ErrorCodes.ONE_OF_MULTIPLE, {index1: validIndex, index2: i}, "", "/oneOf", null, data, schema);\r\n\t\t\t}\r\n\t\t\tif (this.trackUnknownProperties) {\r\n\t\t\t\tfor (var knownKey in this.knownPropertyPaths) {\r\n\t\t\t\t\toldKnownPropertyPaths[knownKey] = true;\r\n\t\t\t\t\tdelete oldUnknownPropertyPaths[knownKey];\r\n\t\t\t\t}\r\n\t\t\t\tfor (var unknownKey in this.unknownPropertyPaths) {\r\n\t\t\t\t\tif (!oldKnownPropertyPaths[unknownKey]) {\r\n\t\t\t\t\t\toldUnknownPropertyPaths[unknownKey] = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else if (error) {\r\n\t\t\terrors.push(error);\r\n\t\t}\r\n\t}\r\n\tif (this.trackUnknownProperties) {\r\n\t\tthis.unknownPropertyPaths = oldUnknownPropertyPaths;\r\n\t\tthis.knownPropertyPaths = oldKnownPropertyPaths;\r\n\t}\r\n\tif (validIndex === null) {\r\n\t\terrors = errors.concat(this.errors.slice(startErrorCount));\r\n\t\tthis.errors = this.errors.slice(0, startErrorCount);\r\n\t\treturn this.createError(ErrorCodes.ONE_OF_MISSING, {}, "", "/oneOf", errors, data, schema);\r\n\t} else {\r\n\t\tthis.errors = this.errors.slice(0, startErrorCount);\r\n\t}\r\n\treturn null;\r\n};\r\n\r\nValidatorContext.prototype.validateNot = function validateNot(data, schema, dataPointerPath) {\r\n\tif (schema.not === undefined) {\r\n\t\treturn null;\r\n\t}\r\n\tvar oldErrorCount = this.errors.length;\r\n\tvar oldUnknownPropertyPaths, oldKnownPropertyPaths;\r\n\tif (this.trackUnknownProperties) {\r\n\t\toldUnknownPropertyPaths = this.unknownPropertyPaths;\r\n\t\toldKnownPropertyPaths = this.knownPropertyPaths;\r\n\t\tthis.unknownPropertyPaths = {};\r\n\t\tthis.knownPropertyPaths = {};\r\n\t}\r\n\tvar error = this.validateAll(data, schema.not, null, null, dataPointerPath);\r\n\tvar notErrors = this.errors.slice(oldErrorCount);\r\n\tthis.errors = this.errors.slice(0, oldErrorCount);\r\n\tif (this.trackUnknownProperties) {\r\n\t\tthis.unknownPropertyPaths = oldUnknownPropertyPaths;\r\n\t\tthis.knownPropertyPaths = oldKnownPropertyPaths;\r\n\t}\r\n\tif (error === null && notErrors.length === 0) {\r\n\t\treturn this.createError(ErrorCodes.NOT_PASSED, {}, "", "/not", null, data, schema);\r\n\t}\r\n\treturn null;\r\n};\r\n\r\nValidatorContext.prototype.validateHypermedia = function validateCombinations(data, schema, dataPointerPath) {\r\n\tif (!schema.links) {\r\n\t\treturn null;\r\n\t}\r\n\tvar error;\r\n\tfor (var i = 0; i < schema.links.length; i++) {\r\n\t\tvar ldo = schema.links[i];\r\n\t\tif (ldo.rel === "describedby") {\r\n\t\t\tvar template = new UriTemplate(ldo.href);\r\n\t\t\tvar allPresent = true;\r\n\t\t\tfor (var j = 0; j < template.varNames.length; j++) {\r\n\t\t\t\tif (!(template.varNames[j] in data)) {\r\n\t\t\t\t\tallPresent = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (allPresent) {\r\n\t\t\t\tvar schemaUrl = template.fillFromObject(data);\r\n\t\t\t\tvar subSchema = {"$ref": schemaUrl};\r\n\t\t\t\tif (error = this.validateAll(data, subSchema, [], ["links", i], dataPointerPath)) {\r\n\t\t\t\t\treturn error;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n};\r\n\r\n// parseURI() and resolveUrl() are from https://gist.github.com/1088850\r\n//   -  released as public domain by author ("Yaffle") - see comments on gist\r\n\r\nfunction parseURI(url) {\r\n\tvar m = String(url).replace(/^\\s+|\\s+$/g, \'\').match(/^([^:\\/?#]+:)?(\\/\\/(?:[^:@]*(?::[^:@]*)?@)?(([^:\\/?#]*)(?::(\\d*))?))?([^?#]*)(\\?[^#]*)?(#[\\s\\S]*)?/);\r\n\t// authority = \'//\' + user + \':\' + pass \'@\' + hostname + \':\' port\r\n\treturn (m ? {\r\n\t\thref     : m[0] || \'\',\r\n\t\tprotocol : m[1] || \'\',\r\n\t\tauthority: m[2] || \'\',\r\n\t\thost     : m[3] || \'\',\r\n\t\thostname : m[4] || \'\',\r\n\t\tport     : m[5] || \'\',\r\n\t\tpathname : m[6] || \'\',\r\n\t\tsearch   : m[7] || \'\',\r\n\t\thash     : m[8] || \'\'\r\n\t} : null);\r\n}\r\n\r\nfunction resolveUrl(base, href) {// RFC 3986\r\n\r\n\tfunction removeDotSegments(input) {\r\n\t\tvar output = [];\r\n\t\tinput.replace(/^(\\.\\.?(\\/|$))+/, \'\')\r\n\t\t\t.replace(/\\/(\\.(\\/|$))+/g, \'/\')\r\n\t\t\t.replace(/\\/\\.\\.$/, \'/../\')\r\n\t\t\t.replace(/\\/?[^\\/]*/g, function (p) {\r\n\t\t\t\tif (p === \'/..\') {\r\n\t\t\t\t\toutput.pop();\r\n\t\t\t\t} else {\r\n\t\t\t\t\toutput.push(p);\r\n\t\t\t\t}\r\n\t\t});\r\n\t\treturn output.join(\'\').replace(/^\\//, input.charAt(0) === \'/\' ? \'/\' : \'\');\r\n\t}\r\n\r\n\thref = parseURI(href || \'\');\r\n\tbase = parseURI(base || \'\');\r\n\r\n\treturn !href || !base ? null : (href.protocol || base.protocol) +\r\n\t\t(href.protocol || href.authority ? href.authority : base.authority) +\r\n\t\tremoveDotSegments(href.protocol || href.authority || href.pathname.charAt(0) === \'/\' ? href.pathname : (href.pathname ? ((base.authority && !base.pathname ? \'/\' : \'\') + base.pathname.slice(0, base.pathname.lastIndexOf(\'/\') + 1) + href.pathname) : base.pathname)) +\r\n\t\t(href.protocol || href.authority || href.pathname ? href.search : (href.search || base.search)) +\r\n\t\thref.hash;\r\n}\r\n\r\nfunction getDocumentUri(uri) {\r\n\treturn uri.split(\'#\')[0];\r\n}\r\nfunction normSchema(schema, baseUri) {\r\n\tif (schema && typeof schema === "object") {\r\n\t\tif (baseUri === undefined) {\r\n\t\t\tbaseUri = schema.id;\r\n\t\t} else if (typeof schema.id === "string") {\r\n\t\t\tbaseUri = resolveUrl(baseUri, schema.id);\r\n\t\t\tschema.id = baseUri;\r\n\t\t}\r\n\t\tif (Array.isArray(schema)) {\r\n\t\t\tfor (var i = 0; i < schema.length; i++) {\r\n\t\t\t\tnormSchema(schema[i], baseUri);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (typeof schema[\'$ref\'] === "string") {\r\n\t\t\t\tschema[\'$ref\'] = resolveUrl(baseUri, schema[\'$ref\']);\r\n\t\t\t}\r\n\t\t\tfor (var key in schema) {\r\n\t\t\t\tif (key !== "enum") {\r\n\t\t\t\t\tnormSchema(schema[key], baseUri);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction defaultErrorReporter(language) {\r\n\tlanguage = language || \'en\';\r\n\r\n\tvar errorMessages = languages[language];\r\n\r\n\treturn function (error) {\r\n\t\tvar messageTemplate = errorMessages[error.code] || ErrorMessagesDefault[error.code];\r\n\t\tif (typeof messageTemplate !== \'string\') {\r\n\t\t\treturn "Unknown error code " + error.code + ": " + JSON.stringify(error.messageParams);\r\n\t\t}\r\n\t\tvar messageParams = error.params;\r\n\t\t// Adapted from Crockford\'s supplant()\r\n\t\treturn messageTemplate.replace(/\\{([^{}]*)\\}/g, function (whole, varName) {\r\n\t\t\tvar subValue = messageParams[varName];\r\n\t\t\treturn typeof subValue === \'string\' || typeof subValue === \'number\' ? subValue : whole;\r\n\t\t});\r\n\t};\r\n}\r\n\r\nvar ErrorCodes = {\r\n\tINVALID_TYPE: 0,\r\n\tENUM_MISMATCH: 1,\r\n\tANY_OF_MISSING: 10,\r\n\tONE_OF_MISSING: 11,\r\n\tONE_OF_MULTIPLE: 12,\r\n\tNOT_PASSED: 13,\r\n\t// Numeric errors\r\n\tNUMBER_MULTIPLE_OF: 100,\r\n\tNUMBER_MINIMUM: 101,\r\n\tNUMBER_MINIMUM_EXCLUSIVE: 102,\r\n\tNUMBER_MAXIMUM: 103,\r\n\tNUMBER_MAXIMUM_EXCLUSIVE: 104,\r\n\tNUMBER_NOT_A_NUMBER: 105,\r\n\t// String errors\r\n\tSTRING_LENGTH_SHORT: 200,\r\n\tSTRING_LENGTH_LONG: 201,\r\n\tSTRING_PATTERN: 202,\r\n\t// Object errors\r\n\tOBJECT_PROPERTIES_MINIMUM: 300,\r\n\tOBJECT_PROPERTIES_MAXIMUM: 301,\r\n\tOBJECT_REQUIRED: 302,\r\n\tOBJECT_ADDITIONAL_PROPERTIES: 303,\r\n\tOBJECT_DEPENDENCY_KEY: 304,\r\n\t// Array errors\r\n\tARRAY_LENGTH_SHORT: 400,\r\n\tARRAY_LENGTH_LONG: 401,\r\n\tARRAY_UNIQUE: 402,\r\n\tARRAY_ADDITIONAL_ITEMS: 403,\r\n\t// Custom/user-defined errors\r\n\tFORMAT_CUSTOM: 500,\r\n\tKEYWORD_CUSTOM: 501,\r\n\t// Schema structure\r\n\tCIRCULAR_REFERENCE: 600,\r\n\t// Non-standard validation options\r\n\tUNKNOWN_PROPERTY: 1000\r\n};\r\nvar ErrorCodeLookup = {};\r\nfor (var key in ErrorCodes) {\r\n\tErrorCodeLookup[ErrorCodes[key]] = key;\r\n}\r\nvar ErrorMessagesDefault = {\r\n\tINVALID_TYPE: "Invalid type: {type} (expected {expected})",\r\n\tENUM_MISMATCH: "No enum match for: {value}",\r\n\tANY_OF_MISSING: "Data does not match any schemas from \\"anyOf\\"",\r\n\tONE_OF_MISSING: "Data does not match any schemas from \\"oneOf\\"",\r\n\tONE_OF_MULTIPLE: "Data is valid against more than one schema from \\"oneOf\\": indices {index1} and {index2}",\r\n\tNOT_PASSED: "Data matches schema from \\"not\\"",\r\n\t// Numeric errors\r\n\tNUMBER_MULTIPLE_OF: "Value {value} is not a multiple of {multipleOf}",\r\n\tNUMBER_MINIMUM: "Value {value} is less than minimum {minimum}",\r\n\tNUMBER_MINIMUM_EXCLUSIVE: "Value {value} is equal to exclusive minimum {minimum}",\r\n\tNUMBER_MAXIMUM: "Value {value} is greater than maximum {maximum}",\r\n\tNUMBER_MAXIMUM_EXCLUSIVE: "Value {value} is equal to exclusive maximum {maximum}",\r\n\tNUMBER_NOT_A_NUMBER: "Value {value} is not a valid number",\r\n\t// String errors\r\n\tSTRING_LENGTH_SHORT: "String is too short ({length} chars), minimum {minimum}",\r\n\tSTRING_LENGTH_LONG: "String is too long ({length} chars), maximum {maximum}",\r\n\tSTRING_PATTERN: "String does not match pattern: {pattern}",\r\n\t// Object errors\r\n\tOBJECT_PROPERTIES_MINIMUM: "Too few properties defined ({propertyCount}), minimum {minimum}",\r\n\tOBJECT_PROPERTIES_MAXIMUM: "Too many properties defined ({propertyCount}), maximum {maximum}",\r\n\tOBJECT_REQUIRED: "Missing required property: {key}",\r\n\tOBJECT_ADDITIONAL_PROPERTIES: "Additional properties not allowed",\r\n\tOBJECT_DEPENDENCY_KEY: "Dependency failed - key must exist: {missing} (due to key: {key})",\r\n\t// Array errors\r\n\tARRAY_LENGTH_SHORT: "Array is too short ({length}), minimum {minimum}",\r\n\tARRAY_LENGTH_LONG: "Array is too long ({length}), maximum {maximum}",\r\n\tARRAY_UNIQUE: "Array items are not unique (indices {match1} and {match2})",\r\n\tARRAY_ADDITIONAL_ITEMS: "Additional items not allowed",\r\n\t// Format errors\r\n\tFORMAT_CUSTOM: "Format validation failed ({message})",\r\n\tKEYWORD_CUSTOM: "Keyword failed: {key} ({message})",\r\n\t// Schema structure\r\n\tCIRCULAR_REFERENCE: "Circular $refs: {urls}",\r\n\t// Non-standard validation options\r\n\tUNKNOWN_PROPERTY: "Unknown property (not in schema)"\r\n};\r\n\r\nfunction ValidationError(code, params, dataPath, schemaPath, subErrors) {\r\n\tError.call(this);\r\n\tif (code === undefined) {\r\n\t\tthrow new Error ("No error code supplied: " + schemaPath);\r\n\t}\r\n\tthis.message = \'\';\r\n\tthis.params = params;\r\n\tthis.code = code;\r\n\tthis.dataPath = dataPath || "";\r\n\tthis.schemaPath = schemaPath || "";\r\n\tthis.subErrors = subErrors || null;\r\n\r\n\tvar err = new Error(this.message);\r\n\tthis.stack = err.stack || err.stacktrace;\r\n\tif (!this.stack) {\r\n\t\ttry {\r\n\t\t\tthrow err;\r\n\t\t}\r\n\t\tcatch(err) {\r\n\t\t\tthis.stack = err.stack || err.stacktrace;\r\n\t\t}\r\n\t}\r\n}\r\nValidationError.prototype = Object.create(Error.prototype);\r\nValidationError.prototype.constructor = ValidationError;\r\nValidationError.prototype.name = \'ValidationError\';\r\n\r\nValidationError.prototype.prefixWith = function (dataPrefix, schemaPrefix) {\r\n\tif (dataPrefix !== null) {\r\n\t\tdataPrefix = dataPrefix.replace(/~/g, "~0").replace(/\\//g, "~1");\r\n\t\tthis.dataPath = "/" + dataPrefix + this.dataPath;\r\n\t}\r\n\tif (schemaPrefix !== null) {\r\n\t\tschemaPrefix = schemaPrefix.replace(/~/g, "~0").replace(/\\//g, "~1");\r\n\t\tthis.schemaPath = "/" + schemaPrefix + this.schemaPath;\r\n\t}\r\n\tif (this.subErrors !== null) {\r\n\t\tfor (var i = 0; i < this.subErrors.length; i++) {\r\n\t\t\tthis.subErrors[i].prefixWith(dataPrefix, schemaPrefix);\r\n\t\t}\r\n\t}\r\n\treturn this;\r\n};\r\n\r\nfunction isTrustedUrl(baseUrl, testUrl) {\r\n\tif(testUrl.substring(0, baseUrl.length) === baseUrl){\r\n\t\tvar remainder = testUrl.substring(baseUrl.length);\r\n\t\tif ((testUrl.length > 0 && testUrl.charAt(baseUrl.length - 1) === "/")\r\n\t\t\t|| remainder.charAt(0) === "#"\r\n\t\t\t|| remainder.charAt(0) === "?") {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\treturn false;\r\n}\r\n\r\nvar languages = {};\r\nfunction createApi(language) {\r\n\tvar globalContext = new ValidatorContext();\r\n\tvar currentLanguage;\r\n\tvar customErrorReporter;\r\n\tvar api = {\r\n\t\tsetErrorReporter: function (reporter) {\r\n\t\t\tif (typeof reporter === \'string\') {\r\n\t\t\t\treturn this.language(reporter);\r\n\t\t\t}\r\n\t\t\tcustomErrorReporter = reporter;\r\n\t\t\treturn true;\r\n\t\t},\r\n\t\taddFormat: function () {\r\n\t\t\tglobalContext.addFormat.apply(globalContext, arguments);\r\n\t\t},\r\n\t\tlanguage: function (code) {\r\n\t\t\tif (!code) {\r\n\t\t\t\treturn currentLanguage;\r\n\t\t\t}\r\n\t\t\tif (!languages[code]) {\r\n\t\t\t\tcode = code.split(\'-\')[0]; // fall back to base language\r\n\t\t\t}\r\n\t\t\tif (languages[code]) {\r\n\t\t\t\tcurrentLanguage = code;\r\n\t\t\t\treturn code; // so you can tell if fall-back has happened\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\taddLanguage: function (code, messageMap) {\r\n\t\t\tvar key;\r\n\t\t\tfor (key in ErrorCodes) {\r\n\t\t\t\tif (messageMap[key] && !messageMap[ErrorCodes[key]]) {\r\n\t\t\t\t\tmessageMap[ErrorCodes[key]] = messageMap[key];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tvar rootCode = code.split(\'-\')[0];\r\n\t\t\tif (!languages[rootCode]) { // use for base language if not yet defined\r\n\t\t\t\tlanguages[code] = messageMap;\r\n\t\t\t\tlanguages[rootCode] = messageMap;\r\n\t\t\t} else {\r\n\t\t\t\tlanguages[code] = Object.create(languages[rootCode]);\r\n\t\t\t\tfor (key in messageMap) {\r\n\t\t\t\t\tif (typeof languages[rootCode][key] === \'undefined\') {\r\n\t\t\t\t\t\tlanguages[rootCode][key] = messageMap[key];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlanguages[code][key] = messageMap[key];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\tfreshApi: function (language) {\r\n\t\t\tvar result = createApi();\r\n\t\t\tif (language) {\r\n\t\t\t\tresult.language(language);\r\n\t\t\t}\r\n\t\t\treturn result;\r\n\t\t},\r\n\t\tvalidate: function (data, schema, checkRecursive, banUnknownProperties) {\r\n\t\t\tvar def = defaultErrorReporter(currentLanguage);\r\n\t\t\tvar errorReporter = customErrorReporter ? function (error, data, schema) {\r\n\t\t\t\treturn customErrorReporter(error, data, schema) || def(error, data, schema);\r\n\t\t\t} : def;\r\n\t\t\tvar context = new ValidatorContext(globalContext, false, errorReporter, checkRecursive, banUnknownProperties);\r\n\t\t\tif (typeof schema === "string") {\r\n\t\t\t\tschema = {"$ref": schema};\r\n\t\t\t}\r\n\t\t\tcontext.addSchema("", schema);\r\n\t\t\tvar error = context.validateAll(data, schema, null, null, "");\r\n\t\t\tif (!error && banUnknownProperties) {\r\n\t\t\t\terror = context.banUnknownProperties(data, schema);\r\n\t\t\t}\r\n\t\t\tthis.error = error;\r\n\t\t\tthis.missing = context.missing;\r\n\t\t\tthis.valid = (error === null);\r\n\t\t\treturn this.valid;\r\n\t\t},\r\n\t\tvalidateResult: function () {\r\n\t\t\tvar result = {toString: function () {\r\n\t\t\t\treturn this.valid ? \'valid\' : this.error.message;\r\n\t\t\t}};\r\n\t\t\tthis.validate.apply(result, arguments);\r\n\t\t\treturn result;\r\n\t\t},\r\n\t\tvalidateMultiple: function (data, schema, checkRecursive, banUnknownProperties) {\r\n\t\t\tvar def = defaultErrorReporter(currentLanguage);\r\n\t\t\tvar errorReporter = customErrorReporter ? function (error, data, schema) {\r\n\t\t\t\treturn customErrorReporter(error, data, schema) || def(error, data, schema);\r\n\t\t\t} : def;\r\n\t\t\tvar context = new ValidatorContext(globalContext, true, errorReporter, checkRecursive, banUnknownProperties);\r\n\t\t\tif (typeof schema === "string") {\r\n\t\t\t\tschema = {"$ref": schema};\r\n\t\t\t}\r\n\t\t\tcontext.addSchema("", schema);\r\n\t\t\tcontext.validateAll(data, schema, null, null, "");\r\n\t\t\tif (banUnknownProperties) {\r\n\t\t\t\tcontext.banUnknownProperties(data, schema);\r\n\t\t\t}\r\n\t\t\tvar result = {toString: function () {\r\n\t\t\t\treturn this.valid ? \'valid\' : this.error.message;\r\n\t\t\t}};\r\n\t\t\tresult.errors = context.errors;\r\n\t\t\tresult.missing = context.missing;\r\n\t\t\tresult.valid = (result.errors.length === 0);\r\n\t\t\treturn result;\r\n\t\t},\r\n\t\taddSchema: function () {\r\n\t\t\treturn globalContext.addSchema.apply(globalContext, arguments);\r\n\t\t},\r\n\t\tgetSchema: function () {\r\n\t\t\treturn globalContext.getSchema.apply(globalContext, arguments);\r\n\t\t},\r\n\t\tgetSchemaMap: function () {\r\n\t\t\treturn globalContext.getSchemaMap.apply(globalContext, arguments);\r\n\t\t},\r\n\t\tgetSchemaUris: function () {\r\n\t\t\treturn globalContext.getSchemaUris.apply(globalContext, arguments);\r\n\t\t},\r\n\t\tgetMissingUris: function () {\r\n\t\t\treturn globalContext.getMissingUris.apply(globalContext, arguments);\r\n\t\t},\r\n\t\tdropSchemas: function () {\r\n\t\t\tglobalContext.dropSchemas.apply(globalContext, arguments);\r\n\t\t},\r\n\t\tdefineKeyword: function () {\r\n\t\t\tglobalContext.defineKeyword.apply(globalContext, arguments);\r\n\t\t},\r\n\t\tdefineError: function (codeName, codeNumber, defaultMessage) {\r\n\t\t\tif (typeof codeName !== \'string\' || !/^[A-Z]+(_[A-Z]+)*$/.test(codeName)) {\r\n\t\t\t\tthrow new Error(\'Code name must be a string in UPPER_CASE_WITH_UNDERSCORES\');\r\n\t\t\t}\r\n\t\t\tif (typeof codeNumber !== \'number\' || codeNumber%1 !== 0 || codeNumber < 10000) {\r\n\t\t\t\tthrow new Error(\'Code number must be an integer > 10000\');\r\n\t\t\t}\r\n\t\t\tif (typeof ErrorCodes[codeName] !== \'undefined\') {\r\n\t\t\t\tthrow new Error(\'Error already defined: \' + codeName + \' as \' + ErrorCodes[codeName]);\r\n\t\t\t}\r\n\t\t\tif (typeof ErrorCodeLookup[codeNumber] !== \'undefined\') {\r\n\t\t\t\tthrow new Error(\'Error code already used: \' + ErrorCodeLookup[codeNumber] + \' as \' + codeNumber);\r\n\t\t\t}\r\n\t\t\tErrorCodes[codeName] = codeNumber;\r\n\t\t\tErrorCodeLookup[codeNumber] = codeName;\r\n\t\t\tErrorMessagesDefault[codeName] = ErrorMessagesDefault[codeNumber] = defaultMessage;\r\n\t\t\tfor (var langCode in languages) {\r\n\t\t\t\tvar language = languages[langCode];\r\n\t\t\t\tif (language[codeName]) {\r\n\t\t\t\t\tlanguage[codeNumber] = language[codeNumber] || language[codeName];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\treset: function () {\r\n\t\t\tglobalContext.reset();\r\n\t\t\tthis.error = null;\r\n\t\t\tthis.missing = [];\r\n\t\t\tthis.valid = true;\r\n\t\t},\r\n\t\tmissing: [],\r\n\t\terror: null,\r\n\t\tvalid: true,\r\n\t\tnormSchema: normSchema,\r\n\t\tresolveUrl: resolveUrl,\r\n\t\tgetDocumentUri: getDocumentUri,\r\n\t\terrorCodes: ErrorCodes\r\n\t};\r\n\tapi.language(language || \'en\');\r\n\treturn api;\r\n}\r\n\r\nvar tv4 = createApi();\r\ntv4.addLanguage(\'en-gb\', ErrorMessagesDefault);\r\n\r\n//legacy property\r\ntv4.tv4 = tv4;\r\n\r\nreturn tv4; // used by _header.js to globalise.\r\n\r\n}));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///90\n')},function(module,exports,__webpack_require__){eval("module.exports = !__webpack_require__(10) && !__webpack_require__(3)(function () {\n  return Object.defineProperty(__webpack_require__(61)('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19pZTgtZG9tLWRlZmluZS5qcz9jNjlhIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gIXJlcXVpcmUoJy4vX2Rlc2NyaXB0b3JzJykgJiYgIXJlcXVpcmUoJy4vX2ZhaWxzJykoZnVuY3Rpb24gKCkge1xuICByZXR1cm4gT2JqZWN0LmRlZmluZVByb3BlcnR5KHJlcXVpcmUoJy4vX2RvbS1jcmVhdGUnKSgnZGl2JyksICdhJywgeyBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIDc7IH0gfSkuYSAhPSA3O1xufSk7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///91\n")},function(module,exports,__webpack_require__){eval("var global = __webpack_require__(2);\nvar core = __webpack_require__(8);\nvar LIBRARY = __webpack_require__(31);\nvar wksExt = __webpack_require__(62);\nvar defineProperty = __webpack_require__(9).f;\nmodule.exports = function (name) {\n  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});\n  if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, { value: wksExt.f(name) });\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTIuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL193a3MtZGVmaW5lLmpzPzNhNzIiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpO1xudmFyIGNvcmUgPSByZXF1aXJlKCcuL19jb3JlJyk7XG52YXIgTElCUkFSWSA9IHJlcXVpcmUoJy4vX2xpYnJhcnknKTtcbnZhciB3a3NFeHQgPSByZXF1aXJlKCcuL193a3MtZXh0Jyk7XG52YXIgZGVmaW5lUHJvcGVydHkgPSByZXF1aXJlKCcuL19vYmplY3QtZHAnKS5mO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobmFtZSkge1xuICB2YXIgJFN5bWJvbCA9IGNvcmUuU3ltYm9sIHx8IChjb3JlLlN5bWJvbCA9IExJQlJBUlkgPyB7fSA6IGdsb2JhbC5TeW1ib2wgfHwge30pO1xuICBpZiAobmFtZS5jaGFyQXQoMCkgIT0gJ18nICYmICEobmFtZSBpbiAkU3ltYm9sKSkgZGVmaW5lUHJvcGVydHkoJFN5bWJvbCwgbmFtZSwgeyB2YWx1ZTogd2tzRXh0LmYobmFtZSkgfSk7XG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///92\n")},function(module,exports,__webpack_require__){eval("var has = __webpack_require__(14);\nvar toIObject = __webpack_require__(16);\nvar arrayIndexOf = __webpack_require__(50)(false);\nvar IE_PROTO = __webpack_require__(63)('IE_PROTO');\n\nmodule.exports = function (object, names) {\n  var O = toIObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19vYmplY3Qta2V5cy1pbnRlcm5hbC5qcz9jZTEwIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBoYXMgPSByZXF1aXJlKCcuL19oYXMnKTtcbnZhciB0b0lPYmplY3QgPSByZXF1aXJlKCcuL190by1pb2JqZWN0Jyk7XG52YXIgYXJyYXlJbmRleE9mID0gcmVxdWlyZSgnLi9fYXJyYXktaW5jbHVkZXMnKShmYWxzZSk7XG52YXIgSUVfUFJPVE8gPSByZXF1aXJlKCcuL19zaGFyZWQta2V5JykoJ0lFX1BST1RPJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKG9iamVjdCwgbmFtZXMpIHtcbiAgdmFyIE8gPSB0b0lPYmplY3Qob2JqZWN0KTtcbiAgdmFyIGkgPSAwO1xuICB2YXIgcmVzdWx0ID0gW107XG4gIHZhciBrZXk7XG4gIGZvciAoa2V5IGluIE8pIGlmIChrZXkgIT0gSUVfUFJPVE8pIGhhcyhPLCBrZXkpICYmIHJlc3VsdC5wdXNoKGtleSk7XG4gIC8vIERvbid0IGVudW0gYnVnICYgaGlkZGVuIGtleXNcbiAgd2hpbGUgKG5hbWVzLmxlbmd0aCA+IGkpIGlmIChoYXMoTywga2V5ID0gbmFtZXNbaSsrXSkpIHtcbiAgICB+YXJyYXlJbmRleE9mKHJlc3VsdCwga2V5KSB8fCByZXN1bHQucHVzaChrZXkpO1xuICB9XG4gIHJldHVybiByZXN1bHQ7XG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///93\n")},function(module,exports,__webpack_require__){eval("var dP = __webpack_require__(9);\nvar anObject = __webpack_require__(4);\nvar getKeys = __webpack_require__(32);\n\nmodule.exports = __webpack_require__(10) ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = getKeys(Properties);\n  var length = keys.length;\n  var i = 0;\n  var P;\n  while (length > i) dP.f(O, P = keys[i++], Properties[P]);\n  return O;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTQuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19vYmplY3QtZHBzLmpzPzE0OTUiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGRQID0gcmVxdWlyZSgnLi9fb2JqZWN0LWRwJyk7XG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbnZhciBnZXRLZXlzID0gcmVxdWlyZSgnLi9fb2JqZWN0LWtleXMnKTtcblxubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpID8gT2JqZWN0LmRlZmluZVByb3BlcnRpZXMgOiBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKE8sIFByb3BlcnRpZXMpIHtcbiAgYW5PYmplY3QoTyk7XG4gIHZhciBrZXlzID0gZ2V0S2V5cyhQcm9wZXJ0aWVzKTtcbiAgdmFyIGxlbmd0aCA9IGtleXMubGVuZ3RoO1xuICB2YXIgaSA9IDA7XG4gIHZhciBQO1xuICB3aGlsZSAobGVuZ3RoID4gaSkgZFAuZihPLCBQID0ga2V5c1tpKytdLCBQcm9wZXJ0aWVzW1BdKTtcbiAgcmV0dXJuIE87XG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///94\n")},function(module,exports,__webpack_require__){eval("// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window\nvar toIObject = __webpack_require__(16);\nvar gOPN = __webpack_require__(35).f;\nvar toString = {}.toString;\n\nvar windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames\n  ? Object.getOwnPropertyNames(window) : [];\n\nvar getWindowNames = function (it) {\n  try {\n    return gOPN(it);\n  } catch (e) {\n    return windowNames.slice();\n  }\n};\n\nmodule.exports.f = function getOwnPropertyNames(it) {\n  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19vYmplY3QtZ29wbi1leHQuanM/N2JiYyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBmYWxsYmFjayBmb3IgSUUxMSBidWdneSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyB3aXRoIGlmcmFtZSBhbmQgd2luZG93XG52YXIgdG9JT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8taW9iamVjdCcpO1xudmFyIGdPUE4gPSByZXF1aXJlKCcuL19vYmplY3QtZ29wbicpLmY7XG52YXIgdG9TdHJpbmcgPSB7fS50b1N0cmluZztcblxudmFyIHdpbmRvd05hbWVzID0gdHlwZW9mIHdpbmRvdyA9PSAnb2JqZWN0JyAmJiB3aW5kb3cgJiYgT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXNcbiAgPyBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh3aW5kb3cpIDogW107XG5cbnZhciBnZXRXaW5kb3dOYW1lcyA9IGZ1bmN0aW9uIChpdCkge1xuICB0cnkge1xuICAgIHJldHVybiBnT1BOKGl0KTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIHJldHVybiB3aW5kb3dOYW1lcy5zbGljZSgpO1xuICB9XG59O1xuXG5tb2R1bGUuZXhwb3J0cy5mID0gZnVuY3Rpb24gZ2V0T3duUHJvcGVydHlOYW1lcyhpdCkge1xuICByZXR1cm4gd2luZG93TmFtZXMgJiYgdG9TdHJpbmcuY2FsbChpdCkgPT0gJ1tvYmplY3QgV2luZG93XScgPyBnZXRXaW5kb3dOYW1lcyhpdCkgOiBnT1BOKHRvSU9iamVjdChpdCkpO1xufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///95\n")},function(module,exports,__webpack_require__){"use strict";eval("\n// 19.1.2.1 Object.assign(target, source, ...)\nvar getKeys = __webpack_require__(32);\nvar gOPS = __webpack_require__(51);\nvar pIE = __webpack_require__(46);\nvar toObject = __webpack_require__(11);\nvar IObject = __webpack_require__(45);\nvar $assign = Object.assign;\n\n// should work with symbols and should have deterministic property order (V8 bug)\nmodule.exports = !$assign || __webpack_require__(3)(function () {\n  var A = {};\n  var B = {};\n  // eslint-disable-next-line no-undef\n  var S = Symbol();\n  var K = 'abcdefghijklmnopqrst';\n  A[S] = 7;\n  K.split('').forEach(function (k) { B[k] = k; });\n  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n}) ? function assign(target, source) { // eslint-disable-line no-unused-vars\n  var T = toObject(target);\n  var aLen = arguments.length;\n  var index = 1;\n  var getSymbols = gOPS.f;\n  var isEnum = pIE.f;\n  while (aLen > index) {\n    var S = IObject(arguments[index++]);\n    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);\n    var length = keys.length;\n    var j = 0;\n    var key;\n    while (length > j) if (isEnum.call(S, key = keys[j++])) T[key] = S[key];\n  } return T;\n} : $assign;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTYuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19vYmplY3QtYXNzaWduLmpzPzczMzMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuLy8gMTkuMS4yLjEgT2JqZWN0LmFzc2lnbih0YXJnZXQsIHNvdXJjZSwgLi4uKVxudmFyIGdldEtleXMgPSByZXF1aXJlKCcuL19vYmplY3Qta2V5cycpO1xudmFyIGdPUFMgPSByZXF1aXJlKCcuL19vYmplY3QtZ29wcycpO1xudmFyIHBJRSA9IHJlcXVpcmUoJy4vX29iamVjdC1waWUnKTtcbnZhciB0b09iamVjdCA9IHJlcXVpcmUoJy4vX3RvLW9iamVjdCcpO1xudmFyIElPYmplY3QgPSByZXF1aXJlKCcuL19pb2JqZWN0Jyk7XG52YXIgJGFzc2lnbiA9IE9iamVjdC5hc3NpZ247XG5cbi8vIHNob3VsZCB3b3JrIHdpdGggc3ltYm9scyBhbmQgc2hvdWxkIGhhdmUgZGV0ZXJtaW5pc3RpYyBwcm9wZXJ0eSBvcmRlciAoVjggYnVnKVxubW9kdWxlLmV4cG9ydHMgPSAhJGFzc2lnbiB8fCByZXF1aXJlKCcuL19mYWlscycpKGZ1bmN0aW9uICgpIHtcbiAgdmFyIEEgPSB7fTtcbiAgdmFyIEIgPSB7fTtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVuZGVmXG4gIHZhciBTID0gU3ltYm9sKCk7XG4gIHZhciBLID0gJ2FiY2RlZmdoaWprbG1ub3BxcnN0JztcbiAgQVtTXSA9IDc7XG4gIEsuc3BsaXQoJycpLmZvckVhY2goZnVuY3Rpb24gKGspIHsgQltrXSA9IGs7IH0pO1xuICByZXR1cm4gJGFzc2lnbih7fSwgQSlbU10gIT0gNyB8fCBPYmplY3Qua2V5cygkYXNzaWduKHt9LCBCKSkuam9pbignJykgIT0gSztcbn0pID8gZnVuY3Rpb24gYXNzaWduKHRhcmdldCwgc291cmNlKSB7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tdW51c2VkLXZhcnNcbiAgdmFyIFQgPSB0b09iamVjdCh0YXJnZXQpO1xuICB2YXIgYUxlbiA9IGFyZ3VtZW50cy5sZW5ndGg7XG4gIHZhciBpbmRleCA9IDE7XG4gIHZhciBnZXRTeW1ib2xzID0gZ09QUy5mO1xuICB2YXIgaXNFbnVtID0gcElFLmY7XG4gIHdoaWxlIChhTGVuID4gaW5kZXgpIHtcbiAgICB2YXIgUyA9IElPYmplY3QoYXJndW1lbnRzW2luZGV4KytdKTtcbiAgICB2YXIga2V5cyA9IGdldFN5bWJvbHMgPyBnZXRLZXlzKFMpLmNvbmNhdChnZXRTeW1ib2xzKFMpKSA6IGdldEtleXMoUyk7XG4gICAgdmFyIGxlbmd0aCA9IGtleXMubGVuZ3RoO1xuICAgIHZhciBqID0gMDtcbiAgICB2YXIga2V5O1xuICAgIHdoaWxlIChsZW5ndGggPiBqKSBpZiAoaXNFbnVtLmNhbGwoUywga2V5ID0ga2V5c1tqKytdKSkgVFtrZXldID0gU1trZXldO1xuICB9IHJldHVybiBUO1xufSA6ICRhc3NpZ247XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///96\n")},function(module,exports){eval("// 7.2.9 SameValue(x, y)\nmodule.exports = Object.is || function is(x, y) {\n  // eslint-disable-next-line no-self-compare\n  return x === y ? x !== 0 || 1 / x === 1 / y : x != x && y != y;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTcuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19zYW1lLXZhbHVlLmpzPzgzYTEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gNy4yLjkgU2FtZVZhbHVlKHgsIHkpXG5tb2R1bGUuZXhwb3J0cyA9IE9iamVjdC5pcyB8fCBmdW5jdGlvbiBpcyh4LCB5KSB7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1zZWxmLWNvbXBhcmVcbiAgcmV0dXJuIHggPT09IHkgPyB4ICE9PSAwIHx8IDEgLyB4ID09PSAxIC8geSA6IHggIT0geCAmJiB5ICE9IHk7XG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///97\n")},function(module,exports,__webpack_require__){"use strict";eval("\nvar aFunction = __webpack_require__(19);\nvar isObject = __webpack_require__(5);\nvar invoke = __webpack_require__(99);\nvar arraySlice = [].slice;\nvar factories = {};\n\nvar construct = function (F, len, args) {\n  if (!(len in factories)) {\n    for (var n = [], i = 0; i < len; i++) n[i] = 'a[' + i + ']';\n    // eslint-disable-next-line no-new-func\n    factories[len] = Function('F,a', 'return new F(' + n.join(',') + ')');\n  } return factories[len](F, args);\n};\n\nmodule.exports = Function.bind || function bind(that /* , ...args */) {\n  var fn = aFunction(this);\n  var partArgs = arraySlice.call(arguments, 1);\n  var bound = function (/* args... */) {\n    var args = partArgs.concat(arraySlice.call(arguments));\n    return this instanceof bound ? construct(fn, args.length, args) : invoke(fn, args, that);\n  };\n  if (isObject(fn.prototype)) bound.prototype = fn.prototype;\n  return bound;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTguanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19iaW5kLmpzP2YwYzEiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xudmFyIGFGdW5jdGlvbiA9IHJlcXVpcmUoJy4vX2EtZnVuY3Rpb24nKTtcbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xudmFyIGludm9rZSA9IHJlcXVpcmUoJy4vX2ludm9rZScpO1xudmFyIGFycmF5U2xpY2UgPSBbXS5zbGljZTtcbnZhciBmYWN0b3JpZXMgPSB7fTtcblxudmFyIGNvbnN0cnVjdCA9IGZ1bmN0aW9uIChGLCBsZW4sIGFyZ3MpIHtcbiAgaWYgKCEobGVuIGluIGZhY3RvcmllcykpIHtcbiAgICBmb3IgKHZhciBuID0gW10sIGkgPSAwOyBpIDwgbGVuOyBpKyspIG5baV0gPSAnYVsnICsgaSArICddJztcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tbmV3LWZ1bmNcbiAgICBmYWN0b3JpZXNbbGVuXSA9IEZ1bmN0aW9uKCdGLGEnLCAncmV0dXJuIG5ldyBGKCcgKyBuLmpvaW4oJywnKSArICcpJyk7XG4gIH0gcmV0dXJuIGZhY3Rvcmllc1tsZW5dKEYsIGFyZ3MpO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBGdW5jdGlvbi5iaW5kIHx8IGZ1bmN0aW9uIGJpbmQodGhhdCAvKiAsIC4uLmFyZ3MgKi8pIHtcbiAgdmFyIGZuID0gYUZ1bmN0aW9uKHRoaXMpO1xuICB2YXIgcGFydEFyZ3MgPSBhcnJheVNsaWNlLmNhbGwoYXJndW1lbnRzLCAxKTtcbiAgdmFyIGJvdW5kID0gZnVuY3Rpb24gKC8qIGFyZ3MuLi4gKi8pIHtcbiAgICB2YXIgYXJncyA9IHBhcnRBcmdzLmNvbmNhdChhcnJheVNsaWNlLmNhbGwoYXJndW1lbnRzKSk7XG4gICAgcmV0dXJuIHRoaXMgaW5zdGFuY2VvZiBib3VuZCA/IGNvbnN0cnVjdChmbiwgYXJncy5sZW5ndGgsIGFyZ3MpIDogaW52b2tlKGZuLCBhcmdzLCB0aGF0KTtcbiAgfTtcbiAgaWYgKGlzT2JqZWN0KGZuLnByb3RvdHlwZSkpIGJvdW5kLnByb3RvdHlwZSA9IGZuLnByb3RvdHlwZTtcbiAgcmV0dXJuIGJvdW5kO1xufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///98\n")},function(module,exports){eval("// fast apply, http://jsperf.lnkit.com/fast-apply/5\nmodule.exports = function (fn, args, that) {\n  var un = that === undefined;\n  switch (args.length) {\n    case 0: return un ? fn()\n                      : fn.call(that);\n    case 1: return un ? fn(args[0])\n                      : fn.call(that, args[0]);\n    case 2: return un ? fn(args[0], args[1])\n                      : fn.call(that, args[0], args[1]);\n    case 3: return un ? fn(args[0], args[1], args[2])\n                      : fn.call(that, args[0], args[1], args[2]);\n    case 4: return un ? fn(args[0], args[1], args[2], args[3])\n                      : fn.call(that, args[0], args[1], args[2], args[3]);\n  } return fn.apply(that, args);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTkuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19pbnZva2UuanM/MzFmNCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBmYXN0IGFwcGx5LCBodHRwOi8vanNwZXJmLmxua2l0LmNvbS9mYXN0LWFwcGx5LzVcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGZuLCBhcmdzLCB0aGF0KSB7XG4gIHZhciB1biA9IHRoYXQgPT09IHVuZGVmaW5lZDtcbiAgc3dpdGNoIChhcmdzLmxlbmd0aCkge1xuICAgIGNhc2UgMDogcmV0dXJuIHVuID8gZm4oKVxuICAgICAgICAgICAgICAgICAgICAgIDogZm4uY2FsbCh0aGF0KTtcbiAgICBjYXNlIDE6IHJldHVybiB1biA/IGZuKGFyZ3NbMF0pXG4gICAgICAgICAgICAgICAgICAgICAgOiBmbi5jYWxsKHRoYXQsIGFyZ3NbMF0pO1xuICAgIGNhc2UgMjogcmV0dXJuIHVuID8gZm4oYXJnc1swXSwgYXJnc1sxXSlcbiAgICAgICAgICAgICAgICAgICAgICA6IGZuLmNhbGwodGhhdCwgYXJnc1swXSwgYXJnc1sxXSk7XG4gICAgY2FzZSAzOiByZXR1cm4gdW4gPyBmbihhcmdzWzBdLCBhcmdzWzFdLCBhcmdzWzJdKVxuICAgICAgICAgICAgICAgICAgICAgIDogZm4uY2FsbCh0aGF0LCBhcmdzWzBdLCBhcmdzWzFdLCBhcmdzWzJdKTtcbiAgICBjYXNlIDQ6IHJldHVybiB1biA/IGZuKGFyZ3NbMF0sIGFyZ3NbMV0sIGFyZ3NbMl0sIGFyZ3NbM10pXG4gICAgICAgICAgICAgICAgICAgICAgOiBmbi5jYWxsKHRoYXQsIGFyZ3NbMF0sIGFyZ3NbMV0sIGFyZ3NbMl0sIGFyZ3NbM10pO1xuICB9IHJldHVybiBmbi5hcHBseSh0aGF0LCBhcmdzKTtcbn07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///99\n")},function(module,exports,__webpack_require__){eval("var $parseInt = __webpack_require__(2).parseInt;\nvar $trim = __webpack_require__(40).trim;\nvar ws = __webpack_require__(67);\nvar hex = /^[-+]?0[xX]/;\n\nmodule.exports = $parseInt(ws + '08') !== 8 || $parseInt(ws + '0x16') !== 22 ? function parseInt(str, radix) {\n  var string = $trim(String(str), 3);\n  return $parseInt(string, (radix >>> 0) || (hex.test(string) ? 16 : 10));\n} : $parseInt;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTAwLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fcGFyc2UtaW50LmpzPzNjYTUiXSwic291cmNlc0NvbnRlbnQiOlsidmFyICRwYXJzZUludCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpLnBhcnNlSW50O1xudmFyICR0cmltID0gcmVxdWlyZSgnLi9fc3RyaW5nLXRyaW0nKS50cmltO1xudmFyIHdzID0gcmVxdWlyZSgnLi9fc3RyaW5nLXdzJyk7XG52YXIgaGV4ID0gL15bLStdPzBbeFhdLztcblxubW9kdWxlLmV4cG9ydHMgPSAkcGFyc2VJbnQod3MgKyAnMDgnKSAhPT0gOCB8fCAkcGFyc2VJbnQod3MgKyAnMHgxNicpICE9PSAyMiA/IGZ1bmN0aW9uIHBhcnNlSW50KHN0ciwgcmFkaXgpIHtcbiAgdmFyIHN0cmluZyA9ICR0cmltKFN0cmluZyhzdHIpLCAzKTtcbiAgcmV0dXJuICRwYXJzZUludChzdHJpbmcsIChyYWRpeCA+Pj4gMCkgfHwgKGhleC50ZXN0KHN0cmluZykgPyAxNiA6IDEwKSk7XG59IDogJHBhcnNlSW50O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///100\n")},function(module,exports,__webpack_require__){eval("var $parseFloat = __webpack_require__(2).parseFloat;\nvar $trim = __webpack_require__(40).trim;\n\nmodule.exports = 1 / $parseFloat(__webpack_require__(67) + '-0') !== -Infinity ? function parseFloat(str) {\n  var string = $trim(String(str), 3);\n  var result = $parseFloat(string);\n  return result === 0 && string.charAt(0) == '-' ? -0 : result;\n} : $parseFloat;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTAxLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fcGFyc2UtZmxvYXQuanM/ZDc1MiJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgJHBhcnNlRmxvYXQgPSByZXF1aXJlKCcuL19nbG9iYWwnKS5wYXJzZUZsb2F0O1xudmFyICR0cmltID0gcmVxdWlyZSgnLi9fc3RyaW5nLXRyaW0nKS50cmltO1xuXG5tb2R1bGUuZXhwb3J0cyA9IDEgLyAkcGFyc2VGbG9hdChyZXF1aXJlKCcuL19zdHJpbmctd3MnKSArICctMCcpICE9PSAtSW5maW5pdHkgPyBmdW5jdGlvbiBwYXJzZUZsb2F0KHN0cikge1xuICB2YXIgc3RyaW5nID0gJHRyaW0oU3RyaW5nKHN0ciksIDMpO1xuICB2YXIgcmVzdWx0ID0gJHBhcnNlRmxvYXQoc3RyaW5nKTtcbiAgcmV0dXJuIHJlc3VsdCA9PT0gMCAmJiBzdHJpbmcuY2hhckF0KDApID09ICctJyA/IC0wIDogcmVzdWx0O1xufSA6ICRwYXJzZUZsb2F0O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///101\n")},function(module,exports,__webpack_require__){eval("var cof = __webpack_require__(24);\nmodule.exports = function (it, msg) {\n  if (typeof it != 'number' && cof(it) != 'Number') throw TypeError(msg);\n  return +it;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTAyLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fYS1udW1iZXItdmFsdWUuanM/YmVmOSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgY29mID0gcmVxdWlyZSgnLi9fY29mJyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCwgbXNnKSB7XG4gIGlmICh0eXBlb2YgaXQgIT0gJ251bWJlcicgJiYgY29mKGl0KSAhPSAnTnVtYmVyJykgdGhyb3cgVHlwZUVycm9yKG1zZyk7XG4gIHJldHVybiAraXQ7XG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///102\n")},function(module,exports,__webpack_require__){eval("// 20.1.2.3 Number.isInteger(number)\nvar isObject = __webpack_require__(5);\nvar floor = Math.floor;\nmodule.exports = function isInteger(it) {\n  return !isObject(it) && isFinite(it) && floor(it) === it;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTAzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9faXMtaW50ZWdlci5qcz85YzEyIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIDIwLjEuMi4zIE51bWJlci5pc0ludGVnZXIobnVtYmVyKVxudmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7XG52YXIgZmxvb3IgPSBNYXRoLmZsb29yO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBpc0ludGVnZXIoaXQpIHtcbiAgcmV0dXJuICFpc09iamVjdChpdCkgJiYgaXNGaW5pdGUoaXQpICYmIGZsb29yKGl0KSA9PT0gaXQ7XG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///103\n")},function(module,exports){eval("// 20.2.2.20 Math.log1p(x)\nmodule.exports = Math.log1p || function log1p(x) {\n  return (x = +x) > -1e-8 && x < 1e-8 ? x - x * x / 2 : Math.log(1 + x);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTA0LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fbWF0aC1sb2cxcC5qcz9kNmM2Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIDIwLjIuMi4yMCBNYXRoLmxvZzFwKHgpXG5tb2R1bGUuZXhwb3J0cyA9IE1hdGgubG9nMXAgfHwgZnVuY3Rpb24gbG9nMXAoeCkge1xuICByZXR1cm4gKHggPSAreCkgPiAtMWUtOCAmJiB4IDwgMWUtOCA/IHggLSB4ICogeCAvIDIgOiBNYXRoLmxvZygxICsgeCk7XG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///104\n")},function(module,exports,__webpack_require__){"use strict";eval("\nvar create = __webpack_require__(34);\nvar descriptor = __webpack_require__(29);\nvar setToStringTag = __webpack_require__(39);\nvar IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\n__webpack_require__(15)(IteratorPrototype, __webpack_require__(6)('iterator'), function () { return this; });\n\nmodule.exports = function (Constructor, NAME, next) {\n  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });\n  setToStringTag(Constructor, NAME + ' Iterator');\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTA1LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9faXRlci1jcmVhdGUuanM/NDFhMCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG52YXIgY3JlYXRlID0gcmVxdWlyZSgnLi9fb2JqZWN0LWNyZWF0ZScpO1xudmFyIGRlc2NyaXB0b3IgPSByZXF1aXJlKCcuL19wcm9wZXJ0eS1kZXNjJyk7XG52YXIgc2V0VG9TdHJpbmdUYWcgPSByZXF1aXJlKCcuL19zZXQtdG8tc3RyaW5nLXRhZycpO1xudmFyIEl0ZXJhdG9yUHJvdG90eXBlID0ge307XG5cbi8vIDI1LjEuMi4xLjEgJUl0ZXJhdG9yUHJvdG90eXBlJVtAQGl0ZXJhdG9yXSgpXG5yZXF1aXJlKCcuL19oaWRlJykoSXRlcmF0b3JQcm90b3R5cGUsIHJlcXVpcmUoJy4vX3drcycpKCdpdGVyYXRvcicpLCBmdW5jdGlvbiAoKSB7IHJldHVybiB0aGlzOyB9KTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoQ29uc3RydWN0b3IsIE5BTUUsIG5leHQpIHtcbiAgQ29uc3RydWN0b3IucHJvdG90eXBlID0gY3JlYXRlKEl0ZXJhdG9yUHJvdG90eXBlLCB7IG5leHQ6IGRlc2NyaXB0b3IoMSwgbmV4dCkgfSk7XG4gIHNldFRvU3RyaW5nVGFnKENvbnN0cnVjdG9yLCBOQU1FICsgJyBJdGVyYXRvcicpO1xufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///105\n")},function(module,exports,__webpack_require__){eval("// call something on iterator step with safe closing on error\nvar anObject = __webpack_require__(4);\nmodule.exports = function (iterator, fn, value, entries) {\n  try {\n    return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n  // 7.4.6 IteratorClose(iterator, completion)\n  } catch (e) {\n    var ret = iterator['return'];\n    if (ret !== undefined) anObject(ret.call(iterator));\n    throw e;\n  }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTA2LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9faXRlci1jYWxsLmpzPzFmYTgiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gY2FsbCBzb21ldGhpbmcgb24gaXRlcmF0b3Igc3RlcCB3aXRoIHNhZmUgY2xvc2luZyBvbiBlcnJvclxudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdGVyYXRvciwgZm4sIHZhbHVlLCBlbnRyaWVzKSB7XG4gIHRyeSB7XG4gICAgcmV0dXJuIGVudHJpZXMgPyBmbihhbk9iamVjdCh2YWx1ZSlbMF0sIHZhbHVlWzFdKSA6IGZuKHZhbHVlKTtcbiAgLy8gNy40LjYgSXRlcmF0b3JDbG9zZShpdGVyYXRvciwgY29tcGxldGlvbilcbiAgfSBjYXRjaCAoZSkge1xuICAgIHZhciByZXQgPSBpdGVyYXRvclsncmV0dXJuJ107XG4gICAgaWYgKHJldCAhPT0gdW5kZWZpbmVkKSBhbk9iamVjdChyZXQuY2FsbChpdGVyYXRvcikpO1xuICAgIHRocm93IGU7XG4gIH1cbn07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///106\n")},function(module,exports,__webpack_require__){eval("// 9.4.2.3 ArraySpeciesCreate(originalArray, length)\nvar speciesConstructor = __webpack_require__(219);\n\nmodule.exports = function (original, length) {\n  return new (speciesConstructor(original))(length);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTA3LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fYXJyYXktc3BlY2llcy1jcmVhdGUuanM/Y2QxYyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyA5LjQuMi4zIEFycmF5U3BlY2llc0NyZWF0ZShvcmlnaW5hbEFycmF5LCBsZW5ndGgpXG52YXIgc3BlY2llc0NvbnN0cnVjdG9yID0gcmVxdWlyZSgnLi9fYXJyYXktc3BlY2llcy1jb25zdHJ1Y3RvcicpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChvcmlnaW5hbCwgbGVuZ3RoKSB7XG4gIHJldHVybiBuZXcgKHNwZWNpZXNDb25zdHJ1Y3RvcihvcmlnaW5hbCkpKGxlbmd0aCk7XG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///107\n")},function(module,exports,__webpack_require__){eval("var aFunction = __webpack_require__(19);\nvar toObject = __webpack_require__(11);\nvar IObject = __webpack_require__(45);\nvar toLength = __webpack_require__(7);\n\nmodule.exports = function (that, callbackfn, aLen, memo, isRight) {\n  aFunction(callbackfn);\n  var O = toObject(that);\n  var self = IObject(O);\n  var length = toLength(O.length);\n  var index = isRight ? length - 1 : 0;\n  var i = isRight ? -1 : 1;\n  if (aLen < 2) for (;;) {\n    if (index in self) {\n      memo = self[index];\n      index += i;\n      break;\n    }\n    index += i;\n    if (isRight ? index < 0 : length <= index) {\n      throw TypeError('Reduce of empty array with no initial value');\n    }\n  }\n  for (;isRight ? index >= 0 : length > index; index += i) if (index in self) {\n    memo = callbackfn(memo, self[index], index, O);\n  }\n  return memo;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTA4LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fYXJyYXktcmVkdWNlLmpzPzdiMjMiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGFGdW5jdGlvbiA9IHJlcXVpcmUoJy4vX2EtZnVuY3Rpb24nKTtcbnZhciB0b09iamVjdCA9IHJlcXVpcmUoJy4vX3RvLW9iamVjdCcpO1xudmFyIElPYmplY3QgPSByZXF1aXJlKCcuL19pb2JqZWN0Jyk7XG52YXIgdG9MZW5ndGggPSByZXF1aXJlKCcuL190by1sZW5ndGgnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAodGhhdCwgY2FsbGJhY2tmbiwgYUxlbiwgbWVtbywgaXNSaWdodCkge1xuICBhRnVuY3Rpb24oY2FsbGJhY2tmbik7XG4gIHZhciBPID0gdG9PYmplY3QodGhhdCk7XG4gIHZhciBzZWxmID0gSU9iamVjdChPKTtcbiAgdmFyIGxlbmd0aCA9IHRvTGVuZ3RoKE8ubGVuZ3RoKTtcbiAgdmFyIGluZGV4ID0gaXNSaWdodCA/IGxlbmd0aCAtIDEgOiAwO1xuICB2YXIgaSA9IGlzUmlnaHQgPyAtMSA6IDE7XG4gIGlmIChhTGVuIDwgMikgZm9yICg7Oykge1xuICAgIGlmIChpbmRleCBpbiBzZWxmKSB7XG4gICAgICBtZW1vID0gc2VsZltpbmRleF07XG4gICAgICBpbmRleCArPSBpO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICAgIGluZGV4ICs9IGk7XG4gICAgaWYgKGlzUmlnaHQgPyBpbmRleCA8IDAgOiBsZW5ndGggPD0gaW5kZXgpIHtcbiAgICAgIHRocm93IFR5cGVFcnJvcignUmVkdWNlIG9mIGVtcHR5IGFycmF5IHdpdGggbm8gaW5pdGlhbCB2YWx1ZScpO1xuICAgIH1cbiAgfVxuICBmb3IgKDtpc1JpZ2h0ID8gaW5kZXggPj0gMCA6IGxlbmd0aCA+IGluZGV4OyBpbmRleCArPSBpKSBpZiAoaW5kZXggaW4gc2VsZikge1xuICAgIG1lbW8gPSBjYWxsYmFja2ZuKG1lbW8sIHNlbGZbaW5kZXhdLCBpbmRleCwgTyk7XG4gIH1cbiAgcmV0dXJuIG1lbW87XG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///108\n")},function(module,exports,__webpack_require__){"use strict";eval("// 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)\n\nvar toObject = __webpack_require__(11);\nvar toAbsoluteIndex = __webpack_require__(33);\nvar toLength = __webpack_require__(7);\n\nmodule.exports = [].copyWithin || function copyWithin(target /* = 0 */, start /* = 0, end = @length */) {\n  var O = toObject(this);\n  var len = toLength(O.length);\n  var to = toAbsoluteIndex(target, len);\n  var from = toAbsoluteIndex(start, len);\n  var end = arguments.length > 2 ? arguments[2] : undefined;\n  var count = Math.min((end === undefined ? len : toAbsoluteIndex(end, len)) - from, len - to);\n  var inc = 1;\n  if (from < to && to < from + count) {\n    inc = -1;\n    from += count - 1;\n    to += count - 1;\n  }\n  while (count-- > 0) {\n    if (from in O) O[to] = O[from];\n    else delete O[to];\n    to += inc;\n    from += inc;\n  } return O;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTA5LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fYXJyYXktY29weS13aXRoaW4uanM/YmE5MiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyAyMi4xLjMuMyBBcnJheS5wcm90b3R5cGUuY29weVdpdGhpbih0YXJnZXQsIHN0YXJ0LCBlbmQgPSB0aGlzLmxlbmd0aClcbid1c2Ugc3RyaWN0JztcbnZhciB0b09iamVjdCA9IHJlcXVpcmUoJy4vX3RvLW9iamVjdCcpO1xudmFyIHRvQWJzb2x1dGVJbmRleCA9IHJlcXVpcmUoJy4vX3RvLWFic29sdXRlLWluZGV4Jyk7XG52YXIgdG9MZW5ndGggPSByZXF1aXJlKCcuL190by1sZW5ndGgnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBbXS5jb3B5V2l0aGluIHx8IGZ1bmN0aW9uIGNvcHlXaXRoaW4odGFyZ2V0IC8qID0gMCAqLywgc3RhcnQgLyogPSAwLCBlbmQgPSBAbGVuZ3RoICovKSB7XG4gIHZhciBPID0gdG9PYmplY3QodGhpcyk7XG4gIHZhciBsZW4gPSB0b0xlbmd0aChPLmxlbmd0aCk7XG4gIHZhciB0byA9IHRvQWJzb2x1dGVJbmRleCh0YXJnZXQsIGxlbik7XG4gIHZhciBmcm9tID0gdG9BYnNvbHV0ZUluZGV4KHN0YXJ0LCBsZW4pO1xuICB2YXIgZW5kID0gYXJndW1lbnRzLmxlbmd0aCA+IDIgPyBhcmd1bWVudHNbMl0gOiB1bmRlZmluZWQ7XG4gIHZhciBjb3VudCA9IE1hdGgubWluKChlbmQgPT09IHVuZGVmaW5lZCA/IGxlbiA6IHRvQWJzb2x1dGVJbmRleChlbmQsIGxlbikpIC0gZnJvbSwgbGVuIC0gdG8pO1xuICB2YXIgaW5jID0gMTtcbiAgaWYgKGZyb20gPCB0byAmJiB0byA8IGZyb20gKyBjb3VudCkge1xuICAgIGluYyA9IC0xO1xuICAgIGZyb20gKz0gY291bnQgLSAxO1xuICAgIHRvICs9IGNvdW50IC0gMTtcbiAgfVxuICB3aGlsZSAoY291bnQtLSA+IDApIHtcbiAgICBpZiAoZnJvbSBpbiBPKSBPW3RvXSA9IE9bZnJvbV07XG4gICAgZWxzZSBkZWxldGUgT1t0b107XG4gICAgdG8gKz0gaW5jO1xuICAgIGZyb20gKz0gaW5jO1xuICB9IHJldHVybiBPO1xufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///109\n")},function(module,exports){eval("module.exports = function (done, value) {\n  return { value: value, done: !!done };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTEwLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9faXRlci1zdGVwLmpzP2Q1M2IiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoZG9uZSwgdmFsdWUpIHtcbiAgcmV0dXJuIHsgdmFsdWU6IHZhbHVlLCBkb25lOiAhIWRvbmUgfTtcbn07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///110\n")},function(module,exports,__webpack_require__){"use strict";eval("\nvar regexpExec = __webpack_require__(82);\n__webpack_require__(1)({\n  target: 'RegExp',\n  proto: true,\n  forced: regexpExec !== /./.exec\n}, {\n  exec: regexpExec\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTExLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYucmVnZXhwLmV4ZWMuanM/YjBjNSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG52YXIgcmVnZXhwRXhlYyA9IHJlcXVpcmUoJy4vX3JlZ2V4cC1leGVjJyk7XG5yZXF1aXJlKCcuL19leHBvcnQnKSh7XG4gIHRhcmdldDogJ1JlZ0V4cCcsXG4gIHByb3RvOiB0cnVlLFxuICBmb3JjZWQ6IHJlZ2V4cEV4ZWMgIT09IC8uLy5leGVjXG59LCB7XG4gIGV4ZWM6IHJlZ2V4cEV4ZWNcbn0pO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///111\n")},function(module,exports,__webpack_require__){eval("// 21.2.5.3 get RegExp.prototype.flags()\nif (__webpack_require__(10) && /./g.flags != 'g') __webpack_require__(9).f(RegExp.prototype, 'flags', {\n  configurable: true,\n  get: __webpack_require__(54)\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTEyLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYucmVnZXhwLmZsYWdzLmpzPzM4NDYiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gMjEuMi41LjMgZ2V0IFJlZ0V4cC5wcm90b3R5cGUuZmxhZ3MoKVxuaWYgKHJlcXVpcmUoJy4vX2Rlc2NyaXB0b3JzJykgJiYgLy4vZy5mbGFncyAhPSAnZycpIHJlcXVpcmUoJy4vX29iamVjdC1kcCcpLmYoUmVnRXhwLnByb3RvdHlwZSwgJ2ZsYWdzJywge1xuICBjb25maWd1cmFibGU6IHRydWUsXG4gIGdldDogcmVxdWlyZSgnLi9fZmxhZ3MnKVxufSk7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///112\n")},function(module,exports,__webpack_require__){"use strict";eval("\nvar LIBRARY = __webpack_require__(31);\nvar global = __webpack_require__(2);\nvar ctx = __webpack_require__(18);\nvar classof = __webpack_require__(47);\nvar $export = __webpack_require__(1);\nvar isObject = __webpack_require__(5);\nvar aFunction = __webpack_require__(19);\nvar anInstance = __webpack_require__(43);\nvar forOf = __webpack_require__(57);\nvar speciesConstructor = __webpack_require__(48);\nvar task = __webpack_require__(84).set;\nvar microtask = __webpack_require__(239)();\nvar newPromiseCapabilityModule = __webpack_require__(114);\nvar perform = __webpack_require__(240);\nvar userAgent = __webpack_require__(58);\nvar promiseResolve = __webpack_require__(115);\nvar PROMISE = 'Promise';\nvar TypeError = global.TypeError;\nvar process = global.process;\nvar versions = process && process.versions;\nvar v8 = versions && versions.v8 || '';\nvar $Promise = global[PROMISE];\nvar isNode = classof(process) == 'process';\nvar empty = function () { /* empty */ };\nvar Internal, newGenericPromiseCapability, OwnPromiseCapability, Wrapper;\nvar newPromiseCapability = newGenericPromiseCapability = newPromiseCapabilityModule.f;\n\nvar USE_NATIVE = !!function () {\n  try {\n    // correct subclassing with @@species support\n    var promise = $Promise.resolve(1);\n    var FakePromise = (promise.constructor = {})[__webpack_require__(6)('species')] = function (exec) {\n      exec(empty, empty);\n    };\n    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test\n    return (isNode || typeof PromiseRejectionEvent == 'function')\n      && promise.then(empty) instanceof FakePromise\n      // v8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables\n      // https://bugs.chromium.org/p/chromium/issues/detail?id=830565\n      // we can't detect it synchronously, so just check versions\n      && v8.indexOf('6.6') !== 0\n      && userAgent.indexOf('Chrome/66') === -1;\n  } catch (e) { /* empty */ }\n}();\n\n// helpers\nvar isThenable = function (it) {\n  var then;\n  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;\n};\nvar notify = function (promise, isReject) {\n  if (promise._n) return;\n  promise._n = true;\n  var chain = promise._c;\n  microtask(function () {\n    var value = promise._v;\n    var ok = promise._s == 1;\n    var i = 0;\n    var run = function (reaction) {\n      var handler = ok ? reaction.ok : reaction.fail;\n      var resolve = reaction.resolve;\n      var reject = reaction.reject;\n      var domain = reaction.domain;\n      var result, then, exited;\n      try {\n        if (handler) {\n          if (!ok) {\n            if (promise._h == 2) onHandleUnhandled(promise);\n            promise._h = 1;\n          }\n          if (handler === true) result = value;\n          else {\n            if (domain) domain.enter();\n            result = handler(value); // may throw\n            if (domain) {\n              domain.exit();\n              exited = true;\n            }\n          }\n          if (result === reaction.promise) {\n            reject(TypeError('Promise-chain cycle'));\n          } else if (then = isThenable(result)) {\n            then.call(result, resolve, reject);\n          } else resolve(result);\n        } else reject(value);\n      } catch (e) {\n        if (domain && !exited) domain.exit();\n        reject(e);\n      }\n    };\n    while (chain.length > i) run(chain[i++]); // variable length - can't use forEach\n    promise._c = [];\n    promise._n = false;\n    if (isReject && !promise._h) onUnhandled(promise);\n  });\n};\nvar onUnhandled = function (promise) {\n  task.call(global, function () {\n    var value = promise._v;\n    var unhandled = isUnhandled(promise);\n    var result, handler, console;\n    if (unhandled) {\n      result = perform(function () {\n        if (isNode) {\n          process.emit('unhandledRejection', value, promise);\n        } else if (handler = global.onunhandledrejection) {\n          handler({ promise: promise, reason: value });\n        } else if ((console = global.console) && console.error) {\n          console.error('Unhandled promise rejection', value);\n        }\n      });\n      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should\n      promise._h = isNode || isUnhandled(promise) ? 2 : 1;\n    } promise._a = undefined;\n    if (unhandled && result.e) throw result.v;\n  });\n};\nvar isUnhandled = function (promise) {\n  return promise._h !== 1 && (promise._a || promise._c).length === 0;\n};\nvar onHandleUnhandled = function (promise) {\n  task.call(global, function () {\n    var handler;\n    if (isNode) {\n      process.emit('rejectionHandled', promise);\n    } else if (handler = global.onrejectionhandled) {\n      handler({ promise: promise, reason: promise._v });\n    }\n  });\n};\nvar $reject = function (value) {\n  var promise = this;\n  if (promise._d) return;\n  promise._d = true;\n  promise = promise._w || promise; // unwrap\n  promise._v = value;\n  promise._s = 2;\n  if (!promise._a) promise._a = promise._c.slice();\n  notify(promise, true);\n};\nvar $resolve = function (value) {\n  var promise = this;\n  var then;\n  if (promise._d) return;\n  promise._d = true;\n  promise = promise._w || promise; // unwrap\n  try {\n    if (promise === value) throw TypeError(\"Promise can't be resolved itself\");\n    if (then = isThenable(value)) {\n      microtask(function () {\n        var wrapper = { _w: promise, _d: false }; // wrap\n        try {\n          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));\n        } catch (e) {\n          $reject.call(wrapper, e);\n        }\n      });\n    } else {\n      promise._v = value;\n      promise._s = 1;\n      notify(promise, false);\n    }\n  } catch (e) {\n    $reject.call({ _w: promise, _d: false }, e); // wrap\n  }\n};\n\n// constructor polyfill\nif (!USE_NATIVE) {\n  // 25.4.3.1 Promise(executor)\n  $Promise = function Promise(executor) {\n    anInstance(this, $Promise, PROMISE, '_h');\n    aFunction(executor);\n    Internal.call(this);\n    try {\n      executor(ctx($resolve, this, 1), ctx($reject, this, 1));\n    } catch (err) {\n      $reject.call(this, err);\n    }\n  };\n  // eslint-disable-next-line no-unused-vars\n  Internal = function Promise(executor) {\n    this._c = [];             // <- awaiting reactions\n    this._a = undefined;      // <- checked in isUnhandled reactions\n    this._s = 0;              // <- state\n    this._d = false;          // <- done\n    this._v = undefined;      // <- value\n    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled\n    this._n = false;          // <- notify\n  };\n  Internal.prototype = __webpack_require__(44)($Promise.prototype, {\n    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)\n    then: function then(onFulfilled, onRejected) {\n      var reaction = newPromiseCapability(speciesConstructor(this, $Promise));\n      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;\n      reaction.fail = typeof onRejected == 'function' && onRejected;\n      reaction.domain = isNode ? process.domain : undefined;\n      this._c.push(reaction);\n      if (this._a) this._a.push(reaction);\n      if (this._s) notify(this, false);\n      return reaction.promise;\n    },\n    // 25.4.5.1 Promise.prototype.catch(onRejected)\n    'catch': function (onRejected) {\n      return this.then(undefined, onRejected);\n    }\n  });\n  OwnPromiseCapability = function () {\n    var promise = new Internal();\n    this.promise = promise;\n    this.resolve = ctx($resolve, promise, 1);\n    this.reject = ctx($reject, promise, 1);\n  };\n  newPromiseCapabilityModule.f = newPromiseCapability = function (C) {\n    return C === $Promise || C === Wrapper\n      ? new OwnPromiseCapability(C)\n      : newGenericPromiseCapability(C);\n  };\n}\n\n$export($export.G + $export.W + $export.F * !USE_NATIVE, { Promise: $Promise });\n__webpack_require__(39)($Promise, PROMISE);\n__webpack_require__(42)(PROMISE);\nWrapper = __webpack_require__(8)[PROMISE];\n\n// statics\n$export($export.S + $export.F * !USE_NATIVE, PROMISE, {\n  // 25.4.4.5 Promise.reject(r)\n  reject: function reject(r) {\n    var capability = newPromiseCapability(this);\n    var $$reject = capability.reject;\n    $$reject(r);\n    return capability.promise;\n  }\n});\n$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {\n  // 25.4.4.6 Promise.resolve(x)\n  resolve: function resolve(x) {\n    return promiseResolve(LIBRARY && this === Wrapper ? $Promise : this, x);\n  }\n});\n$export($export.S + $export.F * !(USE_NATIVE && __webpack_require__(53)(function (iter) {\n  $Promise.all(iter)['catch'](empty);\n})), PROMISE, {\n  // 25.4.4.1 Promise.all(iterable)\n  all: function all(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var resolve = capability.resolve;\n    var reject = capability.reject;\n    var result = perform(function () {\n      var values = [];\n      var index = 0;\n      var remaining = 1;\n      forOf(iterable, false, function (promise) {\n        var $index = index++;\n        var alreadyCalled = false;\n        values.push(undefined);\n        remaining++;\n        C.resolve(promise).then(function (value) {\n          if (alreadyCalled) return;\n          alreadyCalled = true;\n          values[$index] = value;\n          --remaining || resolve(values);\n        }, reject);\n      });\n      --remaining || resolve(values);\n    });\n    if (result.e) reject(result.v);\n    return capability.promise;\n  },\n  // 25.4.4.4 Promise.race(iterable)\n  race: function race(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var reject = capability.reject;\n    var result = perform(function () {\n      forOf(iterable, false, function (promise) {\n        C.resolve(promise).then(capability.resolve, reject);\n      });\n    });\n    if (result.e) reject(result.v);\n    return capability.promise;\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///113\n")},function(module,exports,__webpack_require__){"use strict";eval("\n// 25.4.1.5 NewPromiseCapability(C)\nvar aFunction = __webpack_require__(19);\n\nfunction PromiseCapability(C) {\n  var resolve, reject;\n  this.promise = new C(function ($$resolve, $$reject) {\n    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');\n    resolve = $$resolve;\n    reject = $$reject;\n  });\n  this.resolve = aFunction(resolve);\n  this.reject = aFunction(reject);\n}\n\nmodule.exports.f = function (C) {\n  return new PromiseCapability(C);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTE0LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fbmV3LXByb21pc2UtY2FwYWJpbGl0eS5qcz9hNWI4Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0Jztcbi8vIDI1LjQuMS41IE5ld1Byb21pc2VDYXBhYmlsaXR5KEMpXG52YXIgYUZ1bmN0aW9uID0gcmVxdWlyZSgnLi9fYS1mdW5jdGlvbicpO1xuXG5mdW5jdGlvbiBQcm9taXNlQ2FwYWJpbGl0eShDKSB7XG4gIHZhciByZXNvbHZlLCByZWplY3Q7XG4gIHRoaXMucHJvbWlzZSA9IG5ldyBDKGZ1bmN0aW9uICgkJHJlc29sdmUsICQkcmVqZWN0KSB7XG4gICAgaWYgKHJlc29sdmUgIT09IHVuZGVmaW5lZCB8fCByZWplY3QgIT09IHVuZGVmaW5lZCkgdGhyb3cgVHlwZUVycm9yKCdCYWQgUHJvbWlzZSBjb25zdHJ1Y3RvcicpO1xuICAgIHJlc29sdmUgPSAkJHJlc29sdmU7XG4gICAgcmVqZWN0ID0gJCRyZWplY3Q7XG4gIH0pO1xuICB0aGlzLnJlc29sdmUgPSBhRnVuY3Rpb24ocmVzb2x2ZSk7XG4gIHRoaXMucmVqZWN0ID0gYUZ1bmN0aW9uKHJlamVjdCk7XG59XG5cbm1vZHVsZS5leHBvcnRzLmYgPSBmdW5jdGlvbiAoQykge1xuICByZXR1cm4gbmV3IFByb21pc2VDYXBhYmlsaXR5KEMpO1xufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///114\n")},function(module,exports,__webpack_require__){eval("var anObject = __webpack_require__(4);\nvar isObject = __webpack_require__(5);\nvar newPromiseCapability = __webpack_require__(114);\n\nmodule.exports = function (C, x) {\n  anObject(C);\n  if (isObject(x) && x.constructor === C) return x;\n  var promiseCapability = newPromiseCapability.f(C);\n  var resolve = promiseCapability.resolve;\n  resolve(x);\n  return promiseCapability.promise;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTE1LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fcHJvbWlzZS1yZXNvbHZlLmpzP2JjYWEiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG52YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKTtcbnZhciBuZXdQcm9taXNlQ2FwYWJpbGl0eSA9IHJlcXVpcmUoJy4vX25ldy1wcm9taXNlLWNhcGFiaWxpdHknKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoQywgeCkge1xuICBhbk9iamVjdChDKTtcbiAgaWYgKGlzT2JqZWN0KHgpICYmIHguY29uc3RydWN0b3IgPT09IEMpIHJldHVybiB4O1xuICB2YXIgcHJvbWlzZUNhcGFiaWxpdHkgPSBuZXdQcm9taXNlQ2FwYWJpbGl0eS5mKEMpO1xuICB2YXIgcmVzb2x2ZSA9IHByb21pc2VDYXBhYmlsaXR5LnJlc29sdmU7XG4gIHJlc29sdmUoeCk7XG4gIHJldHVybiBwcm9taXNlQ2FwYWJpbGl0eS5wcm9taXNlO1xufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///115\n")},function(module,exports,__webpack_require__){"use strict";eval("\nvar dP = __webpack_require__(9).f;\nvar create = __webpack_require__(34);\nvar redefineAll = __webpack_require__(44);\nvar ctx = __webpack_require__(18);\nvar anInstance = __webpack_require__(43);\nvar forOf = __webpack_require__(57);\nvar $iterDefine = __webpack_require__(73);\nvar step = __webpack_require__(110);\nvar setSpecies = __webpack_require__(42);\nvar DESCRIPTORS = __webpack_require__(10);\nvar fastKey = __webpack_require__(28).fastKey;\nvar validate = __webpack_require__(38);\nvar SIZE = DESCRIPTORS ? '_s' : 'size';\n\nvar getEntry = function (that, key) {\n  // fast case\n  var index = fastKey(key);\n  var entry;\n  if (index !== 'F') return that._i[index];\n  // frozen object case\n  for (entry = that._f; entry; entry = entry.n) {\n    if (entry.k == key) return entry;\n  }\n};\n\nmodule.exports = {\n  getConstructor: function (wrapper, NAME, IS_MAP, ADDER) {\n    var C = wrapper(function (that, iterable) {\n      anInstance(that, C, NAME, '_i');\n      that._t = NAME;         // collection type\n      that._i = create(null); // index\n      that._f = undefined;    // first entry\n      that._l = undefined;    // last entry\n      that[SIZE] = 0;         // size\n      if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);\n    });\n    redefineAll(C.prototype, {\n      // 23.1.3.1 Map.prototype.clear()\n      // 23.2.3.2 Set.prototype.clear()\n      clear: function clear() {\n        for (var that = validate(this, NAME), data = that._i, entry = that._f; entry; entry = entry.n) {\n          entry.r = true;\n          if (entry.p) entry.p = entry.p.n = undefined;\n          delete data[entry.i];\n        }\n        that._f = that._l = undefined;\n        that[SIZE] = 0;\n      },\n      // 23.1.3.3 Map.prototype.delete(key)\n      // 23.2.3.4 Set.prototype.delete(value)\n      'delete': function (key) {\n        var that = validate(this, NAME);\n        var entry = getEntry(that, key);\n        if (entry) {\n          var next = entry.n;\n          var prev = entry.p;\n          delete that._i[entry.i];\n          entry.r = true;\n          if (prev) prev.n = next;\n          if (next) next.p = prev;\n          if (that._f == entry) that._f = next;\n          if (that._l == entry) that._l = prev;\n          that[SIZE]--;\n        } return !!entry;\n      },\n      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)\n      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)\n      forEach: function forEach(callbackfn /* , that = undefined */) {\n        validate(this, NAME);\n        var f = ctx(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);\n        var entry;\n        while (entry = entry ? entry.n : this._f) {\n          f(entry.v, entry.k, this);\n          // revert to the last existing entry\n          while (entry && entry.r) entry = entry.p;\n        }\n      },\n      // 23.1.3.7 Map.prototype.has(key)\n      // 23.2.3.7 Set.prototype.has(value)\n      has: function has(key) {\n        return !!getEntry(validate(this, NAME), key);\n      }\n    });\n    if (DESCRIPTORS) dP(C.prototype, 'size', {\n      get: function () {\n        return validate(this, NAME)[SIZE];\n      }\n    });\n    return C;\n  },\n  def: function (that, key, value) {\n    var entry = getEntry(that, key);\n    var prev, index;\n    // change existing entry\n    if (entry) {\n      entry.v = value;\n    // create new entry\n    } else {\n      that._l = entry = {\n        i: index = fastKey(key, true), // <- index\n        k: key,                        // <- key\n        v: value,                      // <- value\n        p: prev = that._l,             // <- previous entry\n        n: undefined,                  // <- next entry\n        r: false                       // <- removed\n      };\n      if (!that._f) that._f = entry;\n      if (prev) prev.n = entry;\n      that[SIZE]++;\n      // add to index\n      if (index !== 'F') that._i[index] = entry;\n    } return that;\n  },\n  getEntry: getEntry,\n  setStrong: function (C, NAME, IS_MAP) {\n    // add .keys, .values, .entries, [@@iterator]\n    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11\n    $iterDefine(C, NAME, function (iterated, kind) {\n      this._t = validate(iterated, NAME); // target\n      this._k = kind;                     // kind\n      this._l = undefined;                // previous\n    }, function () {\n      var that = this;\n      var kind = that._k;\n      var entry = that._l;\n      // revert to the last existing entry\n      while (entry && entry.r) entry = entry.p;\n      // get next entry\n      if (!that._t || !(that._l = entry = entry ? entry.n : that._t._f)) {\n        // or finish the iteration\n        that._t = undefined;\n        return step(1);\n      }\n      // return step by kind\n      if (kind == 'keys') return step(0, entry.k);\n      if (kind == 'values') return step(0, entry.v);\n      return step(0, [entry.k, entry.v]);\n    }, IS_MAP ? 'entries' : 'values', !IS_MAP, true);\n\n    // add [@@species], 23.1.2.2, 23.2.2.2\n    setSpecies(NAME);\n  }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///116\n")},function(module,exports,__webpack_require__){"use strict";eval("\nvar redefineAll = __webpack_require__(44);\nvar getWeak = __webpack_require__(28).getWeak;\nvar anObject = __webpack_require__(4);\nvar isObject = __webpack_require__(5);\nvar anInstance = __webpack_require__(43);\nvar forOf = __webpack_require__(57);\nvar createArrayMethod = __webpack_require__(23);\nvar $has = __webpack_require__(14);\nvar validate = __webpack_require__(38);\nvar arrayFind = createArrayMethod(5);\nvar arrayFindIndex = createArrayMethod(6);\nvar id = 0;\n\n// fallback for uncaught frozen keys\nvar uncaughtFrozenStore = function (that) {\n  return that._l || (that._l = new UncaughtFrozenStore());\n};\nvar UncaughtFrozenStore = function () {\n  this.a = [];\n};\nvar findUncaughtFrozen = function (store, key) {\n  return arrayFind(store.a, function (it) {\n    return it[0] === key;\n  });\n};\nUncaughtFrozenStore.prototype = {\n  get: function (key) {\n    var entry = findUncaughtFrozen(this, key);\n    if (entry) return entry[1];\n  },\n  has: function (key) {\n    return !!findUncaughtFrozen(this, key);\n  },\n  set: function (key, value) {\n    var entry = findUncaughtFrozen(this, key);\n    if (entry) entry[1] = value;\n    else this.a.push([key, value]);\n  },\n  'delete': function (key) {\n    var index = arrayFindIndex(this.a, function (it) {\n      return it[0] === key;\n    });\n    if (~index) this.a.splice(index, 1);\n    return !!~index;\n  }\n};\n\nmodule.exports = {\n  getConstructor: function (wrapper, NAME, IS_MAP, ADDER) {\n    var C = wrapper(function (that, iterable) {\n      anInstance(that, C, NAME, '_i');\n      that._t = NAME;      // collection type\n      that._i = id++;      // collection id\n      that._l = undefined; // leak store for uncaught frozen objects\n      if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);\n    });\n    redefineAll(C.prototype, {\n      // 23.3.3.2 WeakMap.prototype.delete(key)\n      // 23.4.3.3 WeakSet.prototype.delete(value)\n      'delete': function (key) {\n        if (!isObject(key)) return false;\n        var data = getWeak(key);\n        if (data === true) return uncaughtFrozenStore(validate(this, NAME))['delete'](key);\n        return data && $has(data, this._i) && delete data[this._i];\n      },\n      // 23.3.3.4 WeakMap.prototype.has(key)\n      // 23.4.3.4 WeakSet.prototype.has(value)\n      has: function has(key) {\n        if (!isObject(key)) return false;\n        var data = getWeak(key);\n        if (data === true) return uncaughtFrozenStore(validate(this, NAME)).has(key);\n        return data && $has(data, this._i);\n      }\n    });\n    return C;\n  },\n  def: function (that, key, value) {\n    var data = getWeak(anObject(key), true);\n    if (data === true) uncaughtFrozenStore(that).set(key, value);\n    else data[that._i] = value;\n    return that;\n  },\n  ufstore: uncaughtFrozenStore\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTE3LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fY29sbGVjdGlvbi13ZWFrLmpzPzY0M2UiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xudmFyIHJlZGVmaW5lQWxsID0gcmVxdWlyZSgnLi9fcmVkZWZpbmUtYWxsJyk7XG52YXIgZ2V0V2VhayA9IHJlcXVpcmUoJy4vX21ldGEnKS5nZXRXZWFrO1xudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG52YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKTtcbnZhciBhbkluc3RhbmNlID0gcmVxdWlyZSgnLi9fYW4taW5zdGFuY2UnKTtcbnZhciBmb3JPZiA9IHJlcXVpcmUoJy4vX2Zvci1vZicpO1xudmFyIGNyZWF0ZUFycmF5TWV0aG9kID0gcmVxdWlyZSgnLi9fYXJyYXktbWV0aG9kcycpO1xudmFyICRoYXMgPSByZXF1aXJlKCcuL19oYXMnKTtcbnZhciB2YWxpZGF0ZSA9IHJlcXVpcmUoJy4vX3ZhbGlkYXRlLWNvbGxlY3Rpb24nKTtcbnZhciBhcnJheUZpbmQgPSBjcmVhdGVBcnJheU1ldGhvZCg1KTtcbnZhciBhcnJheUZpbmRJbmRleCA9IGNyZWF0ZUFycmF5TWV0aG9kKDYpO1xudmFyIGlkID0gMDtcblxuLy8gZmFsbGJhY2sgZm9yIHVuY2F1Z2h0IGZyb3plbiBrZXlzXG52YXIgdW5jYXVnaHRGcm96ZW5TdG9yZSA9IGZ1bmN0aW9uICh0aGF0KSB7XG4gIHJldHVybiB0aGF0Ll9sIHx8ICh0aGF0Ll9sID0gbmV3IFVuY2F1Z2h0RnJvemVuU3RvcmUoKSk7XG59O1xudmFyIFVuY2F1Z2h0RnJvemVuU3RvcmUgPSBmdW5jdGlvbiAoKSB7XG4gIHRoaXMuYSA9IFtdO1xufTtcbnZhciBmaW5kVW5jYXVnaHRGcm96ZW4gPSBmdW5jdGlvbiAoc3RvcmUsIGtleSkge1xuICByZXR1cm4gYXJyYXlGaW5kKHN0b3JlLmEsIGZ1bmN0aW9uIChpdCkge1xuICAgIHJldHVybiBpdFswXSA9PT0ga2V5O1xuICB9KTtcbn07XG5VbmNhdWdodEZyb3plblN0b3JlLnByb3RvdHlwZSA9IHtcbiAgZ2V0OiBmdW5jdGlvbiAoa2V5KSB7XG4gICAgdmFyIGVudHJ5ID0gZmluZFVuY2F1Z2h0RnJvemVuKHRoaXMsIGtleSk7XG4gICAgaWYgKGVudHJ5KSByZXR1cm4gZW50cnlbMV07XG4gIH0sXG4gIGhhczogZnVuY3Rpb24gKGtleSkge1xuICAgIHJldHVybiAhIWZpbmRVbmNhdWdodEZyb3plbih0aGlzLCBrZXkpO1xuICB9LFxuICBzZXQ6IGZ1bmN0aW9uIChrZXksIHZhbHVlKSB7XG4gICAgdmFyIGVudHJ5ID0gZmluZFVuY2F1Z2h0RnJvemVuKHRoaXMsIGtleSk7XG4gICAgaWYgKGVudHJ5KSBlbnRyeVsxXSA9IHZhbHVlO1xuICAgIGVsc2UgdGhpcy5hLnB1c2goW2tleSwgdmFsdWVdKTtcbiAgfSxcbiAgJ2RlbGV0ZSc6IGZ1bmN0aW9uIChrZXkpIHtcbiAgICB2YXIgaW5kZXggPSBhcnJheUZpbmRJbmRleCh0aGlzLmEsIGZ1bmN0aW9uIChpdCkge1xuICAgICAgcmV0dXJuIGl0WzBdID09PSBrZXk7XG4gICAgfSk7XG4gICAgaWYgKH5pbmRleCkgdGhpcy5hLnNwbGljZShpbmRleCwgMSk7XG4gICAgcmV0dXJuICEhfmluZGV4O1xuICB9XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgZ2V0Q29uc3RydWN0b3I6IGZ1bmN0aW9uICh3cmFwcGVyLCBOQU1FLCBJU19NQVAsIEFEREVSKSB7XG4gICAgdmFyIEMgPSB3cmFwcGVyKGZ1bmN0aW9uICh0aGF0LCBpdGVyYWJsZSkge1xuICAgICAgYW5JbnN0YW5jZSh0aGF0LCBDLCBOQU1FLCAnX2knKTtcbiAgICAgIHRoYXQuX3QgPSBOQU1FOyAgICAgIC8vIGNvbGxlY3Rpb24gdHlwZVxuICAgICAgdGhhdC5faSA9IGlkKys7ICAgICAgLy8gY29sbGVjdGlvbiBpZFxuICAgICAgdGhhdC5fbCA9IHVuZGVmaW5lZDsgLy8gbGVhayBzdG9yZSBmb3IgdW5jYXVnaHQgZnJvemVuIG9iamVjdHNcbiAgICAgIGlmIChpdGVyYWJsZSAhPSB1bmRlZmluZWQpIGZvck9mKGl0ZXJhYmxlLCBJU19NQVAsIHRoYXRbQURERVJdLCB0aGF0KTtcbiAgICB9KTtcbiAgICByZWRlZmluZUFsbChDLnByb3RvdHlwZSwge1xuICAgICAgLy8gMjMuMy4zLjIgV2Vha01hcC5wcm90b3R5cGUuZGVsZXRlKGtleSlcbiAgICAgIC8vIDIzLjQuMy4zIFdlYWtTZXQucHJvdG90eXBlLmRlbGV0ZSh2YWx1ZSlcbiAgICAgICdkZWxldGUnOiBmdW5jdGlvbiAoa2V5KSB7XG4gICAgICAgIGlmICghaXNPYmplY3Qoa2V5KSkgcmV0dXJuIGZhbHNlO1xuICAgICAgICB2YXIgZGF0YSA9IGdldFdlYWsoa2V5KTtcbiAgICAgICAgaWYgKGRhdGEgPT09IHRydWUpIHJldHVybiB1bmNhdWdodEZyb3plblN0b3JlKHZhbGlkYXRlKHRoaXMsIE5BTUUpKVsnZGVsZXRlJ10oa2V5KTtcbiAgICAgICAgcmV0dXJuIGRhdGEgJiYgJGhhcyhkYXRhLCB0aGlzLl9pKSAmJiBkZWxldGUgZGF0YVt0aGlzLl9pXTtcbiAgICAgIH0sXG4gICAgICAvLyAyMy4zLjMuNCBXZWFrTWFwLnByb3RvdHlwZS5oYXMoa2V5KVxuICAgICAgLy8gMjMuNC4zLjQgV2Vha1NldC5wcm90b3R5cGUuaGFzKHZhbHVlKVxuICAgICAgaGFzOiBmdW5jdGlvbiBoYXMoa2V5KSB7XG4gICAgICAgIGlmICghaXNPYmplY3Qoa2V5KSkgcmV0dXJuIGZhbHNlO1xuICAgICAgICB2YXIgZGF0YSA9IGdldFdlYWsoa2V5KTtcbiAgICAgICAgaWYgKGRhdGEgPT09IHRydWUpIHJldHVybiB1bmNhdWdodEZyb3plblN0b3JlKHZhbGlkYXRlKHRoaXMsIE5BTUUpKS5oYXMoa2V5KTtcbiAgICAgICAgcmV0dXJuIGRhdGEgJiYgJGhhcyhkYXRhLCB0aGlzLl9pKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgICByZXR1cm4gQztcbiAgfSxcbiAgZGVmOiBmdW5jdGlvbiAodGhhdCwga2V5LCB2YWx1ZSkge1xuICAgIHZhciBkYXRhID0gZ2V0V2Vhayhhbk9iamVjdChrZXkpLCB0cnVlKTtcbiAgICBpZiAoZGF0YSA9PT0gdHJ1ZSkgdW5jYXVnaHRGcm96ZW5TdG9yZSh0aGF0KS5zZXQoa2V5LCB2YWx1ZSk7XG4gICAgZWxzZSBkYXRhW3RoYXQuX2ldID0gdmFsdWU7XG4gICAgcmV0dXJuIHRoYXQ7XG4gIH0sXG4gIHVmc3RvcmU6IHVuY2F1Z2h0RnJvemVuU3RvcmVcbn07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///117\n")},function(module,exports,__webpack_require__){eval("// https://tc39.github.io/ecma262/#sec-toindex\nvar toInteger = __webpack_require__(20);\nvar toLength = __webpack_require__(7);\nmodule.exports = function (it) {\n  if (it === undefined) return 0;\n  var number = toInteger(it);\n  var length = toLength(number);\n  if (number !== length) throw RangeError('Wrong length!');\n  return length;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTE4LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fdG8taW5kZXguanM/MDlmYSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBodHRwczovL3RjMzkuZ2l0aHViLmlvL2VjbWEyNjIvI3NlYy10b2luZGV4XG52YXIgdG9JbnRlZ2VyID0gcmVxdWlyZSgnLi9fdG8taW50ZWdlcicpO1xudmFyIHRvTGVuZ3RoID0gcmVxdWlyZSgnLi9fdG8tbGVuZ3RoJyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICBpZiAoaXQgPT09IHVuZGVmaW5lZCkgcmV0dXJuIDA7XG4gIHZhciBudW1iZXIgPSB0b0ludGVnZXIoaXQpO1xuICB2YXIgbGVuZ3RoID0gdG9MZW5ndGgobnVtYmVyKTtcbiAgaWYgKG51bWJlciAhPT0gbGVuZ3RoKSB0aHJvdyBSYW5nZUVycm9yKCdXcm9uZyBsZW5ndGghJyk7XG4gIHJldHVybiBsZW5ndGg7XG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///118\n")},function(module,exports,__webpack_require__){eval("// all object keys, includes non-enumerable and symbols\nvar gOPN = __webpack_require__(35);\nvar gOPS = __webpack_require__(51);\nvar anObject = __webpack_require__(4);\nvar Reflect = __webpack_require__(2).Reflect;\nmodule.exports = Reflect && Reflect.ownKeys || function ownKeys(it) {\n  var keys = gOPN.f(anObject(it));\n  var getSymbols = gOPS.f;\n  return getSymbols ? keys.concat(getSymbols(it)) : keys;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTE5LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fb3duLWtleXMuanM/OTkwYiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBhbGwgb2JqZWN0IGtleXMsIGluY2x1ZGVzIG5vbi1lbnVtZXJhYmxlIGFuZCBzeW1ib2xzXG52YXIgZ09QTiA9IHJlcXVpcmUoJy4vX29iamVjdC1nb3BuJyk7XG52YXIgZ09QUyA9IHJlcXVpcmUoJy4vX29iamVjdC1nb3BzJyk7XG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbnZhciBSZWZsZWN0ID0gcmVxdWlyZSgnLi9fZ2xvYmFsJykuUmVmbGVjdDtcbm1vZHVsZS5leHBvcnRzID0gUmVmbGVjdCAmJiBSZWZsZWN0Lm93bktleXMgfHwgZnVuY3Rpb24gb3duS2V5cyhpdCkge1xuICB2YXIga2V5cyA9IGdPUE4uZihhbk9iamVjdChpdCkpO1xuICB2YXIgZ2V0U3ltYm9scyA9IGdPUFMuZjtcbiAgcmV0dXJuIGdldFN5bWJvbHMgPyBrZXlzLmNvbmNhdChnZXRTeW1ib2xzKGl0KSkgOiBrZXlzO1xufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///119\n")},function(module,exports,__webpack_require__){eval("// https://github.com/tc39/proposal-string-pad-start-end\nvar toLength = __webpack_require__(7);\nvar repeat = __webpack_require__(69);\nvar defined = __webpack_require__(25);\n\nmodule.exports = function (that, maxLength, fillString, left) {\n  var S = String(defined(that));\n  var stringLength = S.length;\n  var fillStr = fillString === undefined ? ' ' : String(fillString);\n  var intMaxLength = toLength(maxLength);\n  if (intMaxLength <= stringLength || fillStr == '') return S;\n  var fillLen = intMaxLength - stringLength;\n  var stringFiller = repeat.call(fillStr, Math.ceil(fillLen / fillStr.length));\n  if (stringFiller.length > fillLen) stringFiller = stringFiller.slice(0, fillLen);\n  return left ? stringFiller + S : S + stringFiller;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTIwLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fc3RyaW5nLXBhZC5qcz8yZTA4Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGh0dHBzOi8vZ2l0aHViLmNvbS90YzM5L3Byb3Bvc2FsLXN0cmluZy1wYWQtc3RhcnQtZW5kXG52YXIgdG9MZW5ndGggPSByZXF1aXJlKCcuL190by1sZW5ndGgnKTtcbnZhciByZXBlYXQgPSByZXF1aXJlKCcuL19zdHJpbmctcmVwZWF0Jyk7XG52YXIgZGVmaW5lZCA9IHJlcXVpcmUoJy4vX2RlZmluZWQnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAodGhhdCwgbWF4TGVuZ3RoLCBmaWxsU3RyaW5nLCBsZWZ0KSB7XG4gIHZhciBTID0gU3RyaW5nKGRlZmluZWQodGhhdCkpO1xuICB2YXIgc3RyaW5nTGVuZ3RoID0gUy5sZW5ndGg7XG4gIHZhciBmaWxsU3RyID0gZmlsbFN0cmluZyA9PT0gdW5kZWZpbmVkID8gJyAnIDogU3RyaW5nKGZpbGxTdHJpbmcpO1xuICB2YXIgaW50TWF4TGVuZ3RoID0gdG9MZW5ndGgobWF4TGVuZ3RoKTtcbiAgaWYgKGludE1heExlbmd0aCA8PSBzdHJpbmdMZW5ndGggfHwgZmlsbFN0ciA9PSAnJykgcmV0dXJuIFM7XG4gIHZhciBmaWxsTGVuID0gaW50TWF4TGVuZ3RoIC0gc3RyaW5nTGVuZ3RoO1xuICB2YXIgc3RyaW5nRmlsbGVyID0gcmVwZWF0LmNhbGwoZmlsbFN0ciwgTWF0aC5jZWlsKGZpbGxMZW4gLyBmaWxsU3RyLmxlbmd0aCkpO1xuICBpZiAoc3RyaW5nRmlsbGVyLmxlbmd0aCA+IGZpbGxMZW4pIHN0cmluZ0ZpbGxlciA9IHN0cmluZ0ZpbGxlci5zbGljZSgwLCBmaWxsTGVuKTtcbiAgcmV0dXJuIGxlZnQgPyBzdHJpbmdGaWxsZXIgKyBTIDogUyArIHN0cmluZ0ZpbGxlcjtcbn07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///120\n")},function(module,exports,__webpack_require__){eval("var getKeys = __webpack_require__(32);\nvar toIObject = __webpack_require__(16);\nvar isEnum = __webpack_require__(46).f;\nmodule.exports = function (isEntries) {\n  return function (it) {\n    var O = toIObject(it);\n    var keys = getKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) if (isEnum.call(O, key = keys[i++])) {\n      result.push(isEntries ? [key, O[key]] : O[key]);\n    } return result;\n  };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTIxLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fb2JqZWN0LXRvLWFycmF5LmpzPzUwNGMiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGdldEtleXMgPSByZXF1aXJlKCcuL19vYmplY3Qta2V5cycpO1xudmFyIHRvSU9iamVjdCA9IHJlcXVpcmUoJy4vX3RvLWlvYmplY3QnKTtcbnZhciBpc0VudW0gPSByZXF1aXJlKCcuL19vYmplY3QtcGllJykuZjtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGlzRW50cmllcykge1xuICByZXR1cm4gZnVuY3Rpb24gKGl0KSB7XG4gICAgdmFyIE8gPSB0b0lPYmplY3QoaXQpO1xuICAgIHZhciBrZXlzID0gZ2V0S2V5cyhPKTtcbiAgICB2YXIgbGVuZ3RoID0ga2V5cy5sZW5ndGg7XG4gICAgdmFyIGkgPSAwO1xuICAgIHZhciByZXN1bHQgPSBbXTtcbiAgICB2YXIga2V5O1xuICAgIHdoaWxlIChsZW5ndGggPiBpKSBpZiAoaXNFbnVtLmNhbGwoTywga2V5ID0ga2V5c1tpKytdKSkge1xuICAgICAgcmVzdWx0LnB1c2goaXNFbnRyaWVzID8gW2tleSwgT1trZXldXSA6IE9ba2V5XSk7XG4gICAgfSByZXR1cm4gcmVzdWx0O1xuICB9O1xufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///121\n")},function(module,exports){eval("var core = module.exports = { version: '2.6.5' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTIyLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19jb3JlLmpzPzU4NGEiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGNvcmUgPSBtb2R1bGUuZXhwb3J0cyA9IHsgdmVyc2lvbjogJzIuNi41JyB9O1xuaWYgKHR5cGVvZiBfX2UgPT0gJ251bWJlcicpIF9fZSA9IGNvcmU7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tdW5kZWZcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///122\n")},function(module,exports){eval("module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTIzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19mYWlscy5qcz8yOTRjIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGV4ZWMpIHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gISFleGVjKCk7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///123\n")},function(e,n,t){t(125),e.exports=t(313)},function(module,exports,__webpack_require__){"use strict";eval('\n\n__webpack_require__(126);\n\nvar _global = _interopRequireDefault(__webpack_require__(298));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nif (_global.default._babelPolyfill && typeof console !== "undefined" && console.warn) {\n  console.warn("@babel/polyfill is loaded more than once on this page. This is probably not desirable/intended " + "and may have consequences if different versions of the polyfills are applied sequentially. " + "If you do need to load the polyfill more than once, use @babel/polyfill/noConflict " + "instead to bypass the warning.");\n}\n\n_global.default._babelPolyfill = true;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTI1LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9wb2x5ZmlsbC9saWIvaW5kZXguanM/ZTc5MiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxucmVxdWlyZShcIi4vbm9Db25mbGljdFwiKTtcblxudmFyIF9nbG9iYWwgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCJjb3JlLWpzL2xpYnJhcnkvZm4vZ2xvYmFsXCIpKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuaWYgKF9nbG9iYWwuZGVmYXVsdC5fYmFiZWxQb2x5ZmlsbCAmJiB0eXBlb2YgY29uc29sZSAhPT0gXCJ1bmRlZmluZWRcIiAmJiBjb25zb2xlLndhcm4pIHtcbiAgY29uc29sZS53YXJuKFwiQGJhYmVsL3BvbHlmaWxsIGlzIGxvYWRlZCBtb3JlIHRoYW4gb25jZSBvbiB0aGlzIHBhZ2UuIFRoaXMgaXMgcHJvYmFibHkgbm90IGRlc2lyYWJsZS9pbnRlbmRlZCBcIiArIFwiYW5kIG1heSBoYXZlIGNvbnNlcXVlbmNlcyBpZiBkaWZmZXJlbnQgdmVyc2lvbnMgb2YgdGhlIHBvbHlmaWxscyBhcmUgYXBwbGllZCBzZXF1ZW50aWFsbHkuIFwiICsgXCJJZiB5b3UgZG8gbmVlZCB0byBsb2FkIHRoZSBwb2x5ZmlsbCBtb3JlIHRoYW4gb25jZSwgdXNlIEBiYWJlbC9wb2x5ZmlsbC9ub0NvbmZsaWN0IFwiICsgXCJpbnN0ZWFkIHRvIGJ5cGFzcyB0aGUgd2FybmluZy5cIik7XG59XG5cbl9nbG9iYWwuZGVmYXVsdC5fYmFiZWxQb2x5ZmlsbCA9IHRydWU7Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///125\n')},function(module,exports,__webpack_require__){"use strict";eval("\n\n__webpack_require__(127);\n\n__webpack_require__(270);\n\n__webpack_require__(272);\n\n__webpack_require__(275);\n\n__webpack_require__(277);\n\n__webpack_require__(279);\n\n__webpack_require__(281);\n\n__webpack_require__(283);\n\n__webpack_require__(285);\n\n__webpack_require__(287);\n\n__webpack_require__(289);\n\n__webpack_require__(291);\n\n__webpack_require__(293);\n\n__webpack_require__(297);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTI2LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9wb2x5ZmlsbC9saWIvbm9Db25mbGljdC5qcz84MzY2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5yZXF1aXJlKFwiY29yZS1qcy9lczZcIik7XG5cbnJlcXVpcmUoXCJjb3JlLWpzL2ZuL2FycmF5L2luY2x1ZGVzXCIpO1xuXG5yZXF1aXJlKFwiY29yZS1qcy9mbi9hcnJheS9mbGF0LW1hcFwiKTtcblxucmVxdWlyZShcImNvcmUtanMvZm4vc3RyaW5nL3BhZC1zdGFydFwiKTtcblxucmVxdWlyZShcImNvcmUtanMvZm4vc3RyaW5nL3BhZC1lbmRcIik7XG5cbnJlcXVpcmUoXCJjb3JlLWpzL2ZuL3N0cmluZy90cmltLXN0YXJ0XCIpO1xuXG5yZXF1aXJlKFwiY29yZS1qcy9mbi9zdHJpbmcvdHJpbS1lbmRcIik7XG5cbnJlcXVpcmUoXCJjb3JlLWpzL2ZuL3N5bWJvbC9hc3luYy1pdGVyYXRvclwiKTtcblxucmVxdWlyZShcImNvcmUtanMvZm4vb2JqZWN0L2dldC1vd24tcHJvcGVydHktZGVzY3JpcHRvcnNcIik7XG5cbnJlcXVpcmUoXCJjb3JlLWpzL2ZuL29iamVjdC92YWx1ZXNcIik7XG5cbnJlcXVpcmUoXCJjb3JlLWpzL2ZuL29iamVjdC9lbnRyaWVzXCIpO1xuXG5yZXF1aXJlKFwiY29yZS1qcy9mbi9wcm9taXNlL2ZpbmFsbHlcIik7XG5cbnJlcXVpcmUoXCJjb3JlLWpzL3dlYlwiKTtcblxucmVxdWlyZShcInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZVwiKTsiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///126\n")},function(module,exports,__webpack_require__){eval("__webpack_require__(128);\n__webpack_require__(131);\n__webpack_require__(132);\n__webpack_require__(133);\n__webpack_require__(134);\n__webpack_require__(135);\n__webpack_require__(136);\n__webpack_require__(137);\n__webpack_require__(138);\n__webpack_require__(139);\n__webpack_require__(140);\n__webpack_require__(141);\n__webpack_require__(142);\n__webpack_require__(143);\n__webpack_require__(144);\n__webpack_require__(145);\n__webpack_require__(146);\n__webpack_require__(147);\n__webpack_require__(148);\n__webpack_require__(149);\n__webpack_require__(150);\n__webpack_require__(151);\n__webpack_require__(152);\n__webpack_require__(153);\n__webpack_require__(154);\n__webpack_require__(155);\n__webpack_require__(156);\n__webpack_require__(157);\n__webpack_require__(158);\n__webpack_require__(159);\n__webpack_require__(160);\n__webpack_require__(161);\n__webpack_require__(162);\n__webpack_require__(163);\n__webpack_require__(164);\n__webpack_require__(165);\n__webpack_require__(166);\n__webpack_require__(167);\n__webpack_require__(168);\n__webpack_require__(169);\n__webpack_require__(170);\n__webpack_require__(171);\n__webpack_require__(172);\n__webpack_require__(174);\n__webpack_require__(175);\n__webpack_require__(176);\n__webpack_require__(177);\n__webpack_require__(178);\n__webpack_require__(179);\n__webpack_require__(180);\n__webpack_require__(181);\n__webpack_require__(182);\n__webpack_require__(183);\n__webpack_require__(184);\n__webpack_require__(185);\n__webpack_require__(186);\n__webpack_require__(187);\n__webpack_require__(188);\n__webpack_require__(189);\n__webpack_require__(190);\n__webpack_require__(191);\n__webpack_require__(192);\n__webpack_require__(193);\n__webpack_require__(194);\n__webpack_require__(195);\n__webpack_require__(196);\n__webpack_require__(197);\n__webpack_require__(198);\n__webpack_require__(199);\n__webpack_require__(200);\n__webpack_require__(201);\n__webpack_require__(202);\n__webpack_require__(203);\n__webpack_require__(204);\n__webpack_require__(205);\n__webpack_require__(206);\n__webpack_require__(207);\n__webpack_require__(209);\n__webpack_require__(210);\n__webpack_require__(212);\n__webpack_require__(213);\n__webpack_require__(214);\n__webpack_require__(215);\n__webpack_require__(216);\n__webpack_require__(217);\n__webpack_require__(218);\n__webpack_require__(220);\n__webpack_require__(221);\n__webpack_require__(222);\n__webpack_require__(223);\n__webpack_require__(224);\n__webpack_require__(225);\n__webpack_require__(226);\n__webpack_require__(227);\n__webpack_require__(228);\n__webpack_require__(229);\n__webpack_require__(230);\n__webpack_require__(231);\n__webpack_require__(232);\n__webpack_require__(81);\n__webpack_require__(233);\n__webpack_require__(111);\n__webpack_require__(234);\n__webpack_require__(112);\n__webpack_require__(235);\n__webpack_require__(236);\n__webpack_require__(237);\n__webpack_require__(238);\n__webpack_require__(113);\n__webpack_require__(241);\n__webpack_require__(242);\n__webpack_require__(243);\n__webpack_require__(244);\n__webpack_require__(245);\n__webpack_require__(246);\n__webpack_require__(247);\n__webpack_require__(248);\n__webpack_require__(249);\n__webpack_require__(250);\n__webpack_require__(251);\n__webpack_require__(252);\n__webpack_require__(253);\n__webpack_require__(254);\n__webpack_require__(255);\n__webpack_require__(256);\n__webpack_require__(257);\n__webpack_require__(258);\n__webpack_require__(259);\n__webpack_require__(260);\n__webpack_require__(261);\n__webpack_require__(262);\n__webpack_require__(263);\n__webpack_require__(264);\n__webpack_require__(265);\n__webpack_require__(266);\n__webpack_require__(267);\n__webpack_require__(268);\n__webpack_require__(269);\nmodule.exports = __webpack_require__(8);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///127\n")},function(module,exports,__webpack_require__){"use strict";eval("\n// ECMAScript 6 symbols shim\nvar global = __webpack_require__(2);\nvar has = __webpack_require__(14);\nvar DESCRIPTORS = __webpack_require__(10);\nvar $export = __webpack_require__(1);\nvar redefine = __webpack_require__(12);\nvar META = __webpack_require__(28).KEY;\nvar $fails = __webpack_require__(3);\nvar shared = __webpack_require__(49);\nvar setToStringTag = __webpack_require__(39);\nvar uid = __webpack_require__(30);\nvar wks = __webpack_require__(6);\nvar wksExt = __webpack_require__(62);\nvar wksDefine = __webpack_require__(92);\nvar enumKeys = __webpack_require__(130);\nvar isArray = __webpack_require__(52);\nvar anObject = __webpack_require__(4);\nvar isObject = __webpack_require__(5);\nvar toIObject = __webpack_require__(16);\nvar toPrimitive = __webpack_require__(27);\nvar createDesc = __webpack_require__(29);\nvar _create = __webpack_require__(34);\nvar gOPNExt = __webpack_require__(95);\nvar $GOPD = __webpack_require__(21);\nvar $DP = __webpack_require__(9);\nvar $keys = __webpack_require__(32);\nvar gOPD = $GOPD.f;\nvar dP = $DP.f;\nvar gOPN = gOPNExt.f;\nvar $Symbol = global.Symbol;\nvar $JSON = global.JSON;\nvar _stringify = $JSON && $JSON.stringify;\nvar PROTOTYPE = 'prototype';\nvar HIDDEN = wks('_hidden');\nvar TO_PRIMITIVE = wks('toPrimitive');\nvar isEnum = {}.propertyIsEnumerable;\nvar SymbolRegistry = shared('symbol-registry');\nvar AllSymbols = shared('symbols');\nvar OPSymbols = shared('op-symbols');\nvar ObjectProto = Object[PROTOTYPE];\nvar USE_NATIVE = typeof $Symbol == 'function';\nvar QObject = global.QObject;\n// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173\nvar setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;\n\n// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687\nvar setSymbolDesc = DESCRIPTORS && $fails(function () {\n  return _create(dP({}, 'a', {\n    get: function () { return dP(this, 'a', { value: 7 }).a; }\n  })).a != 7;\n}) ? function (it, key, D) {\n  var protoDesc = gOPD(ObjectProto, key);\n  if (protoDesc) delete ObjectProto[key];\n  dP(it, key, D);\n  if (protoDesc && it !== ObjectProto) dP(ObjectProto, key, protoDesc);\n} : dP;\n\nvar wrap = function (tag) {\n  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);\n  sym._k = tag;\n  return sym;\n};\n\nvar isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function (it) {\n  return typeof it == 'symbol';\n} : function (it) {\n  return it instanceof $Symbol;\n};\n\nvar $defineProperty = function defineProperty(it, key, D) {\n  if (it === ObjectProto) $defineProperty(OPSymbols, key, D);\n  anObject(it);\n  key = toPrimitive(key, true);\n  anObject(D);\n  if (has(AllSymbols, key)) {\n    if (!D.enumerable) {\n      if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));\n      it[HIDDEN][key] = true;\n    } else {\n      if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;\n      D = _create(D, { enumerable: createDesc(0, false) });\n    } return setSymbolDesc(it, key, D);\n  } return dP(it, key, D);\n};\nvar $defineProperties = function defineProperties(it, P) {\n  anObject(it);\n  var keys = enumKeys(P = toIObject(P));\n  var i = 0;\n  var l = keys.length;\n  var key;\n  while (l > i) $defineProperty(it, key = keys[i++], P[key]);\n  return it;\n};\nvar $create = function create(it, P) {\n  return P === undefined ? _create(it) : $defineProperties(_create(it), P);\n};\nvar $propertyIsEnumerable = function propertyIsEnumerable(key) {\n  var E = isEnum.call(this, key = toPrimitive(key, true));\n  if (this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return false;\n  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;\n};\nvar $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {\n  it = toIObject(it);\n  key = toPrimitive(key, true);\n  if (it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return;\n  var D = gOPD(it, key);\n  if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;\n  return D;\n};\nvar $getOwnPropertyNames = function getOwnPropertyNames(it) {\n  var names = gOPN(toIObject(it));\n  var result = [];\n  var i = 0;\n  var key;\n  while (names.length > i) {\n    if (!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);\n  } return result;\n};\nvar $getOwnPropertySymbols = function getOwnPropertySymbols(it) {\n  var IS_OP = it === ObjectProto;\n  var names = gOPN(IS_OP ? OPSymbols : toIObject(it));\n  var result = [];\n  var i = 0;\n  var key;\n  while (names.length > i) {\n    if (has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true)) result.push(AllSymbols[key]);\n  } return result;\n};\n\n// 19.4.1.1 Symbol([description])\nif (!USE_NATIVE) {\n  $Symbol = function Symbol() {\n    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');\n    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);\n    var $set = function (value) {\n      if (this === ObjectProto) $set.call(OPSymbols, value);\n      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;\n      setSymbolDesc(this, tag, createDesc(1, value));\n    };\n    if (DESCRIPTORS && setter) setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });\n    return wrap(tag);\n  };\n  redefine($Symbol[PROTOTYPE], 'toString', function toString() {\n    return this._k;\n  });\n\n  $GOPD.f = $getOwnPropertyDescriptor;\n  $DP.f = $defineProperty;\n  __webpack_require__(35).f = gOPNExt.f = $getOwnPropertyNames;\n  __webpack_require__(46).f = $propertyIsEnumerable;\n  __webpack_require__(51).f = $getOwnPropertySymbols;\n\n  if (DESCRIPTORS && !__webpack_require__(31)) {\n    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);\n  }\n\n  wksExt.f = function (name) {\n    return wrap(wks(name));\n  };\n}\n\n$export($export.G + $export.W + $export.F * !USE_NATIVE, { Symbol: $Symbol });\n\nfor (var es6Symbols = (\n  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14\n  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'\n).split(','), j = 0; es6Symbols.length > j;)wks(es6Symbols[j++]);\n\nfor (var wellKnownSymbols = $keys(wks.store), k = 0; wellKnownSymbols.length > k;) wksDefine(wellKnownSymbols[k++]);\n\n$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {\n  // 19.4.2.1 Symbol.for(key)\n  'for': function (key) {\n    return has(SymbolRegistry, key += '')\n      ? SymbolRegistry[key]\n      : SymbolRegistry[key] = $Symbol(key);\n  },\n  // 19.4.2.5 Symbol.keyFor(sym)\n  keyFor: function keyFor(sym) {\n    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');\n    for (var key in SymbolRegistry) if (SymbolRegistry[key] === sym) return key;\n  },\n  useSetter: function () { setter = true; },\n  useSimple: function () { setter = false; }\n});\n\n$export($export.S + $export.F * !USE_NATIVE, 'Object', {\n  // 19.1.2.2 Object.create(O [, Properties])\n  create: $create,\n  // 19.1.2.4 Object.defineProperty(O, P, Attributes)\n  defineProperty: $defineProperty,\n  // 19.1.2.3 Object.defineProperties(O, Properties)\n  defineProperties: $defineProperties,\n  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)\n  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,\n  // 19.1.2.7 Object.getOwnPropertyNames(O)\n  getOwnPropertyNames: $getOwnPropertyNames,\n  // 19.1.2.8 Object.getOwnPropertySymbols(O)\n  getOwnPropertySymbols: $getOwnPropertySymbols\n});\n\n// 24.3.2 JSON.stringify(value [, replacer [, space]])\n$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function () {\n  var S = $Symbol();\n  // MS Edge converts symbol values to JSON as {}\n  // WebKit converts symbol values to JSON as null\n  // V8 throws on boxed symbols\n  return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';\n})), 'JSON', {\n  stringify: function stringify(it) {\n    var args = [it];\n    var i = 1;\n    var replacer, $replacer;\n    while (arguments.length > i) args.push(arguments[i++]);\n    $replacer = replacer = args[1];\n    if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined\n    if (!isArray(replacer)) replacer = function (key, value) {\n      if (typeof $replacer == 'function') value = $replacer.call(this, key, value);\n      if (!isSymbol(value)) return value;\n    };\n    args[1] = replacer;\n    return _stringify.apply($JSON, args);\n  }\n});\n\n// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)\n$Symbol[PROTOTYPE][TO_PRIMITIVE] || __webpack_require__(15)($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);\n// 19.4.3.5 Symbol.prototype[@@toStringTag]\nsetToStringTag($Symbol, 'Symbol');\n// 20.2.1.9 Math[@@toStringTag]\nsetToStringTag(Math, 'Math', true);\n// 24.3.3 JSON[@@toStringTag]\nsetToStringTag(global.JSON, 'JSON', true);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///128\n")},function(module,exports,__webpack_require__){eval("module.exports = __webpack_require__(49)('native-function-to-string', Function.toString);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTI5LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fZnVuY3Rpb24tdG8tc3RyaW5nLmpzP2ZhNWIiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL19zaGFyZWQnKSgnbmF0aXZlLWZ1bmN0aW9uLXRvLXN0cmluZycsIEZ1bmN0aW9uLnRvU3RyaW5nKTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///129\n")},function(module,exports,__webpack_require__){eval("// all enumerable object keys, includes symbols\nvar getKeys = __webpack_require__(32);\nvar gOPS = __webpack_require__(51);\nvar pIE = __webpack_require__(46);\nmodule.exports = function (it) {\n  var result = getKeys(it);\n  var getSymbols = gOPS.f;\n  if (getSymbols) {\n    var symbols = getSymbols(it);\n    var isEnum = pIE.f;\n    var i = 0;\n    var key;\n    while (symbols.length > i) if (isEnum.call(it, key = symbols[i++])) result.push(key);\n  } return result;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTMwLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fZW51bS1rZXlzLmpzP2Q0YzAiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gYWxsIGVudW1lcmFibGUgb2JqZWN0IGtleXMsIGluY2x1ZGVzIHN5bWJvbHNcbnZhciBnZXRLZXlzID0gcmVxdWlyZSgnLi9fb2JqZWN0LWtleXMnKTtcbnZhciBnT1BTID0gcmVxdWlyZSgnLi9fb2JqZWN0LWdvcHMnKTtcbnZhciBwSUUgPSByZXF1aXJlKCcuL19vYmplY3QtcGllJyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICB2YXIgcmVzdWx0ID0gZ2V0S2V5cyhpdCk7XG4gIHZhciBnZXRTeW1ib2xzID0gZ09QUy5mO1xuICBpZiAoZ2V0U3ltYm9scykge1xuICAgIHZhciBzeW1ib2xzID0gZ2V0U3ltYm9scyhpdCk7XG4gICAgdmFyIGlzRW51bSA9IHBJRS5mO1xuICAgIHZhciBpID0gMDtcbiAgICB2YXIga2V5O1xuICAgIHdoaWxlIChzeW1ib2xzLmxlbmd0aCA+IGkpIGlmIChpc0VudW0uY2FsbChpdCwga2V5ID0gc3ltYm9sc1tpKytdKSkgcmVzdWx0LnB1c2goa2V5KTtcbiAgfSByZXR1cm4gcmVzdWx0O1xufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///130\n")},function(module,exports,__webpack_require__){eval("var $export = __webpack_require__(1);\n// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\n$export($export.S, 'Object', { create: __webpack_require__(34) });\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTMxLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYub2JqZWN0LmNyZWF0ZS5qcz84NDc4Il0sInNvdXJjZXNDb250ZW50IjpbInZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG4vLyAxOS4xLjIuMiAvIDE1LjIuMy41IE9iamVjdC5jcmVhdGUoTyBbLCBQcm9wZXJ0aWVzXSlcbiRleHBvcnQoJGV4cG9ydC5TLCAnT2JqZWN0JywgeyBjcmVhdGU6IHJlcXVpcmUoJy4vX29iamVjdC1jcmVhdGUnKSB9KTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///131\n")},function(module,exports,__webpack_require__){eval("var $export = __webpack_require__(1);\n// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)\n$export($export.S + $export.F * !__webpack_require__(10), 'Object', { defineProperty: __webpack_require__(9).f });\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTMyLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYub2JqZWN0LmRlZmluZS1wcm9wZXJ0eS5qcz8xYzAxIl0sInNvdXJjZXNDb250ZW50IjpbInZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG4vLyAxOS4xLjIuNCAvIDE1LjIuMy42IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShPLCBQLCBBdHRyaWJ1dGVzKVxuJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYgKiAhcmVxdWlyZSgnLi9fZGVzY3JpcHRvcnMnKSwgJ09iamVjdCcsIHsgZGVmaW5lUHJvcGVydHk6IHJlcXVpcmUoJy4vX29iamVjdC1kcCcpLmYgfSk7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///132\n")},function(module,exports,__webpack_require__){eval("var $export = __webpack_require__(1);\n// 19.1.2.3 / 15.2.3.7 Object.defineProperties(O, Properties)\n$export($export.S + $export.F * !__webpack_require__(10), 'Object', { defineProperties: __webpack_require__(94) });\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTMzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYub2JqZWN0LmRlZmluZS1wcm9wZXJ0aWVzLmpzPzU4YjIiXSwic291cmNlc0NvbnRlbnQiOlsidmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbi8vIDE5LjEuMi4zIC8gMTUuMi4zLjcgT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoTywgUHJvcGVydGllcylcbiRleHBvcnQoJGV4cG9ydC5TICsgJGV4cG9ydC5GICogIXJlcXVpcmUoJy4vX2Rlc2NyaXB0b3JzJyksICdPYmplY3QnLCB7IGRlZmluZVByb3BlcnRpZXM6IHJlcXVpcmUoJy4vX29iamVjdC1kcHMnKSB9KTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///133\n")},function(module,exports,__webpack_require__){eval("// 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)\nvar toIObject = __webpack_require__(16);\nvar $getOwnPropertyDescriptor = __webpack_require__(21).f;\n\n__webpack_require__(22)('getOwnPropertyDescriptor', function () {\n  return function getOwnPropertyDescriptor(it, key) {\n    return $getOwnPropertyDescriptor(toIObject(it), key);\n  };\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTM0LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYub2JqZWN0LmdldC1vd24tcHJvcGVydHktZGVzY3JpcHRvci5qcz85OTg2Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIDE5LjEuMi42IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoTywgUClcbnZhciB0b0lPYmplY3QgPSByZXF1aXJlKCcuL190by1pb2JqZWN0Jyk7XG52YXIgJGdldE93blByb3BlcnR5RGVzY3JpcHRvciA9IHJlcXVpcmUoJy4vX29iamVjdC1nb3BkJykuZjtcblxucmVxdWlyZSgnLi9fb2JqZWN0LXNhcCcpKCdnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3InLCBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiBmdW5jdGlvbiBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoaXQsIGtleSkge1xuICAgIHJldHVybiAkZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHRvSU9iamVjdChpdCksIGtleSk7XG4gIH07XG59KTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///134\n")},function(module,exports,__webpack_require__){eval("// 19.1.2.9 Object.getPrototypeOf(O)\nvar toObject = __webpack_require__(11);\nvar $getPrototypeOf = __webpack_require__(36);\n\n__webpack_require__(22)('getPrototypeOf', function () {\n  return function getPrototypeOf(it) {\n    return $getPrototypeOf(toObject(it));\n  };\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTM1LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYub2JqZWN0LmdldC1wcm90b3R5cGUtb2YuanM/ZTRmNyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyAxOS4xLjIuOSBPYmplY3QuZ2V0UHJvdG90eXBlT2YoTylcbnZhciB0b09iamVjdCA9IHJlcXVpcmUoJy4vX3RvLW9iamVjdCcpO1xudmFyICRnZXRQcm90b3R5cGVPZiA9IHJlcXVpcmUoJy4vX29iamVjdC1ncG8nKTtcblxucmVxdWlyZSgnLi9fb2JqZWN0LXNhcCcpKCdnZXRQcm90b3R5cGVPZicsIGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIGdldFByb3RvdHlwZU9mKGl0KSB7XG4gICAgcmV0dXJuICRnZXRQcm90b3R5cGVPZih0b09iamVjdChpdCkpO1xuICB9O1xufSk7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///135\n")},function(module,exports,__webpack_require__){eval("// 19.1.2.14 Object.keys(O)\nvar toObject = __webpack_require__(11);\nvar $keys = __webpack_require__(32);\n\n__webpack_require__(22)('keys', function () {\n  return function keys(it) {\n    return $keys(toObject(it));\n  };\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTM2LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYub2JqZWN0LmtleXMuanM/NDU2ZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyAxOS4xLjIuMTQgT2JqZWN0LmtleXMoTylcbnZhciB0b09iamVjdCA9IHJlcXVpcmUoJy4vX3RvLW9iamVjdCcpO1xudmFyICRrZXlzID0gcmVxdWlyZSgnLi9fb2JqZWN0LWtleXMnKTtcblxucmVxdWlyZSgnLi9fb2JqZWN0LXNhcCcpKCdrZXlzJywgZnVuY3Rpb24gKCkge1xuICByZXR1cm4gZnVuY3Rpb24ga2V5cyhpdCkge1xuICAgIHJldHVybiAka2V5cyh0b09iamVjdChpdCkpO1xuICB9O1xufSk7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///136\n")},function(module,exports,__webpack_require__){eval("// 19.1.2.7 Object.getOwnPropertyNames(O)\n__webpack_require__(22)('getOwnPropertyNames', function () {\n  return __webpack_require__(95).f;\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTM3LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYub2JqZWN0LmdldC1vd24tcHJvcGVydHktbmFtZXMuanM/MjVkYiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyAxOS4xLjIuNyBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyhPKVxucmVxdWlyZSgnLi9fb2JqZWN0LXNhcCcpKCdnZXRPd25Qcm9wZXJ0eU5hbWVzJywgZnVuY3Rpb24gKCkge1xuICByZXR1cm4gcmVxdWlyZSgnLi9fb2JqZWN0LWdvcG4tZXh0JykuZjtcbn0pO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///137\n")},function(module,exports,__webpack_require__){eval("// 19.1.2.5 Object.freeze(O)\nvar isObject = __webpack_require__(5);\nvar meta = __webpack_require__(28).onFreeze;\n\n__webpack_require__(22)('freeze', function ($freeze) {\n  return function freeze(it) {\n    return $freeze && isObject(it) ? $freeze(meta(it)) : it;\n  };\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTM4LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYub2JqZWN0LmZyZWV6ZS5qcz8wZDZkIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIDE5LjEuMi41IE9iamVjdC5mcmVlemUoTylcbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xudmFyIG1ldGEgPSByZXF1aXJlKCcuL19tZXRhJykub25GcmVlemU7XG5cbnJlcXVpcmUoJy4vX29iamVjdC1zYXAnKSgnZnJlZXplJywgZnVuY3Rpb24gKCRmcmVlemUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIGZyZWV6ZShpdCkge1xuICAgIHJldHVybiAkZnJlZXplICYmIGlzT2JqZWN0KGl0KSA/ICRmcmVlemUobWV0YShpdCkpIDogaXQ7XG4gIH07XG59KTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///138\n")},function(module,exports,__webpack_require__){eval("// 19.1.2.17 Object.seal(O)\nvar isObject = __webpack_require__(5);\nvar meta = __webpack_require__(28).onFreeze;\n\n__webpack_require__(22)('seal', function ($seal) {\n  return function seal(it) {\n    return $seal && isObject(it) ? $seal(meta(it)) : it;\n  };\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTM5LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYub2JqZWN0LnNlYWwuanM/Y2Y2YSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyAxOS4xLjIuMTcgT2JqZWN0LnNlYWwoTylcbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xudmFyIG1ldGEgPSByZXF1aXJlKCcuL19tZXRhJykub25GcmVlemU7XG5cbnJlcXVpcmUoJy4vX29iamVjdC1zYXAnKSgnc2VhbCcsIGZ1bmN0aW9uICgkc2VhbCkge1xuICByZXR1cm4gZnVuY3Rpb24gc2VhbChpdCkge1xuICAgIHJldHVybiAkc2VhbCAmJiBpc09iamVjdChpdCkgPyAkc2VhbChtZXRhKGl0KSkgOiBpdDtcbiAgfTtcbn0pO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///139\n")},function(module,exports,__webpack_require__){eval("// 19.1.2.15 Object.preventExtensions(O)\nvar isObject = __webpack_require__(5);\nvar meta = __webpack_require__(28).onFreeze;\n\n__webpack_require__(22)('preventExtensions', function ($preventExtensions) {\n  return function preventExtensions(it) {\n    return $preventExtensions && isObject(it) ? $preventExtensions(meta(it)) : it;\n  };\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTQwLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYub2JqZWN0LnByZXZlbnQtZXh0ZW5zaW9ucy5qcz85YWVhIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIDE5LjEuMi4xNSBPYmplY3QucHJldmVudEV4dGVuc2lvbnMoTylcbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xudmFyIG1ldGEgPSByZXF1aXJlKCcuL19tZXRhJykub25GcmVlemU7XG5cbnJlcXVpcmUoJy4vX29iamVjdC1zYXAnKSgncHJldmVudEV4dGVuc2lvbnMnLCBmdW5jdGlvbiAoJHByZXZlbnRFeHRlbnNpb25zKSB7XG4gIHJldHVybiBmdW5jdGlvbiBwcmV2ZW50RXh0ZW5zaW9ucyhpdCkge1xuICAgIHJldHVybiAkcHJldmVudEV4dGVuc2lvbnMgJiYgaXNPYmplY3QoaXQpID8gJHByZXZlbnRFeHRlbnNpb25zKG1ldGEoaXQpKSA6IGl0O1xuICB9O1xufSk7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///140\n")},function(module,exports,__webpack_require__){eval("// 19.1.2.12 Object.isFrozen(O)\nvar isObject = __webpack_require__(5);\n\n__webpack_require__(22)('isFrozen', function ($isFrozen) {\n  return function isFrozen(it) {\n    return isObject(it) ? $isFrozen ? $isFrozen(it) : false : true;\n  };\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTQxLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYub2JqZWN0LmlzLWZyb3plbi5qcz82NmM4Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIDE5LjEuMi4xMiBPYmplY3QuaXNGcm96ZW4oTylcbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xuXG5yZXF1aXJlKCcuL19vYmplY3Qtc2FwJykoJ2lzRnJvemVuJywgZnVuY3Rpb24gKCRpc0Zyb3plbikge1xuICByZXR1cm4gZnVuY3Rpb24gaXNGcm96ZW4oaXQpIHtcbiAgICByZXR1cm4gaXNPYmplY3QoaXQpID8gJGlzRnJvemVuID8gJGlzRnJvemVuKGl0KSA6IGZhbHNlIDogdHJ1ZTtcbiAgfTtcbn0pO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///141\n")},function(module,exports,__webpack_require__){eval("// 19.1.2.13 Object.isSealed(O)\nvar isObject = __webpack_require__(5);\n\n__webpack_require__(22)('isSealed', function ($isSealed) {\n  return function isSealed(it) {\n    return isObject(it) ? $isSealed ? $isSealed(it) : false : true;\n  };\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTQyLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYub2JqZWN0LmlzLXNlYWxlZC5qcz81N2YwIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIDE5LjEuMi4xMyBPYmplY3QuaXNTZWFsZWQoTylcbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xuXG5yZXF1aXJlKCcuL19vYmplY3Qtc2FwJykoJ2lzU2VhbGVkJywgZnVuY3Rpb24gKCRpc1NlYWxlZCkge1xuICByZXR1cm4gZnVuY3Rpb24gaXNTZWFsZWQoaXQpIHtcbiAgICByZXR1cm4gaXNPYmplY3QoaXQpID8gJGlzU2VhbGVkID8gJGlzU2VhbGVkKGl0KSA6IGZhbHNlIDogdHJ1ZTtcbiAgfTtcbn0pO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///142\n")},function(module,exports,__webpack_require__){eval("// 19.1.2.11 Object.isExtensible(O)\nvar isObject = __webpack_require__(5);\n\n__webpack_require__(22)('isExtensible', function ($isExtensible) {\n  return function isExtensible(it) {\n    return isObject(it) ? $isExtensible ? $isExtensible(it) : true : false;\n  };\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTQzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYub2JqZWN0LmlzLWV4dGVuc2libGUuanM/MTY1YiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyAxOS4xLjIuMTEgT2JqZWN0LmlzRXh0ZW5zaWJsZShPKVxudmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7XG5cbnJlcXVpcmUoJy4vX29iamVjdC1zYXAnKSgnaXNFeHRlbnNpYmxlJywgZnVuY3Rpb24gKCRpc0V4dGVuc2libGUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIGlzRXh0ZW5zaWJsZShpdCkge1xuICAgIHJldHVybiBpc09iamVjdChpdCkgPyAkaXNFeHRlbnNpYmxlID8gJGlzRXh0ZW5zaWJsZShpdCkgOiB0cnVlIDogZmFsc2U7XG4gIH07XG59KTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///143\n")},function(module,exports,__webpack_require__){eval("// 19.1.3.1 Object.assign(target, source)\nvar $export = __webpack_require__(1);\n\n$export($export.S + $export.F, 'Object', { assign: __webpack_require__(96) });\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTQ0LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYub2JqZWN0LmFzc2lnbi5qcz9mNzUxIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIDE5LjEuMy4xIE9iamVjdC5hc3NpZ24odGFyZ2V0LCBzb3VyY2UpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xuXG4kZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiwgJ09iamVjdCcsIHsgYXNzaWduOiByZXF1aXJlKCcuL19vYmplY3QtYXNzaWduJykgfSk7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///144\n")},function(module,exports,__webpack_require__){eval("// 19.1.3.10 Object.is(value1, value2)\nvar $export = __webpack_require__(1);\n$export($export.S, 'Object', { is: __webpack_require__(97) });\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTQ1LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYub2JqZWN0LmlzLmpzP2RiOTciXSwic291cmNlc0NvbnRlbnQiOlsiLy8gMTkuMS4zLjEwIE9iamVjdC5pcyh2YWx1ZTEsIHZhbHVlMilcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG4kZXhwb3J0KCRleHBvcnQuUywgJ09iamVjdCcsIHsgaXM6IHJlcXVpcmUoJy4vX3NhbWUtdmFsdWUnKSB9KTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///145\n")},function(module,exports,__webpack_require__){eval("// 19.1.3.19 Object.setPrototypeOf(O, proto)\nvar $export = __webpack_require__(1);\n$export($export.S, 'Object', { setPrototypeOf: __webpack_require__(66).set });\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTQ2LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYub2JqZWN0LnNldC1wcm90b3R5cGUtb2YuanM/ZmQyNCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyAxOS4xLjMuMTkgT2JqZWN0LnNldFByb3RvdHlwZU9mKE8sIHByb3RvKVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbiRleHBvcnQoJGV4cG9ydC5TLCAnT2JqZWN0JywgeyBzZXRQcm90b3R5cGVPZjogcmVxdWlyZSgnLi9fc2V0LXByb3RvJykuc2V0IH0pO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///146\n")},function(module,exports,__webpack_require__){"use strict";eval("\n// 19.1.3.6 Object.prototype.toString()\nvar classof = __webpack_require__(47);\nvar test = {};\ntest[__webpack_require__(6)('toStringTag')] = 'z';\nif (test + '' != '[object z]') {\n  __webpack_require__(12)(Object.prototype, 'toString', function toString() {\n    return '[object ' + classof(this) + ']';\n  }, true);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTQ3LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYub2JqZWN0LnRvLXN0cmluZy5qcz8wNmRiIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0Jztcbi8vIDE5LjEuMy42IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcoKVxudmFyIGNsYXNzb2YgPSByZXF1aXJlKCcuL19jbGFzc29mJyk7XG52YXIgdGVzdCA9IHt9O1xudGVzdFtyZXF1aXJlKCcuL193a3MnKSgndG9TdHJpbmdUYWcnKV0gPSAneic7XG5pZiAodGVzdCArICcnICE9ICdbb2JqZWN0IHpdJykge1xuICByZXF1aXJlKCcuL19yZWRlZmluZScpKE9iamVjdC5wcm90b3R5cGUsICd0b1N0cmluZycsIGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgIHJldHVybiAnW29iamVjdCAnICsgY2xhc3NvZih0aGlzKSArICddJztcbiAgfSwgdHJ1ZSk7XG59XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///147\n")},function(module,exports,__webpack_require__){eval("// 19.2.3.2 / 15.3.4.5 Function.prototype.bind(thisArg, args...)\nvar $export = __webpack_require__(1);\n\n$export($export.P, 'Function', { bind: __webpack_require__(98) });\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTQ4LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuZnVuY3Rpb24uYmluZC5qcz9kOTJhIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIDE5LjIuMy4yIC8gMTUuMy40LjUgRnVuY3Rpb24ucHJvdG90eXBlLmJpbmQodGhpc0FyZywgYXJncy4uLilcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG5cbiRleHBvcnQoJGV4cG9ydC5QLCAnRnVuY3Rpb24nLCB7IGJpbmQ6IHJlcXVpcmUoJy4vX2JpbmQnKSB9KTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///148\n")},function(module,exports,__webpack_require__){eval("var dP = __webpack_require__(9).f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || __webpack_require__(10) && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTQ5LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuZnVuY3Rpb24ubmFtZS5qcz83ZjdmIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBkUCA9IHJlcXVpcmUoJy4vX29iamVjdC1kcCcpLmY7XG52YXIgRlByb3RvID0gRnVuY3Rpb24ucHJvdG90eXBlO1xudmFyIG5hbWVSRSA9IC9eXFxzKmZ1bmN0aW9uIChbXiAoXSopLztcbnZhciBOQU1FID0gJ25hbWUnO1xuXG4vLyAxOS4yLjQuMiBuYW1lXG5OQU1FIGluIEZQcm90byB8fCByZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpICYmIGRQKEZQcm90bywgTkFNRSwge1xuICBjb25maWd1cmFibGU6IHRydWUsXG4gIGdldDogZnVuY3Rpb24gKCkge1xuICAgIHRyeSB7XG4gICAgICByZXR1cm4gKCcnICsgdGhpcykubWF0Y2gobmFtZVJFKVsxXTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICByZXR1cm4gJyc7XG4gICAgfVxuICB9XG59KTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///149\n")},function(module,exports,__webpack_require__){"use strict";eval("\nvar isObject = __webpack_require__(5);\nvar getPrototypeOf = __webpack_require__(36);\nvar HAS_INSTANCE = __webpack_require__(6)('hasInstance');\nvar FunctionProto = Function.prototype;\n// 19.2.3.6 Function.prototype[@@hasInstance](V)\nif (!(HAS_INSTANCE in FunctionProto)) __webpack_require__(9).f(FunctionProto, HAS_INSTANCE, { value: function (O) {\n  if (typeof this != 'function' || !isObject(O)) return false;\n  if (!isObject(this.prototype)) return O instanceof this;\n  // for environment w/o native `@@hasInstance` logic enough `instanceof`, but add this:\n  while (O = getPrototypeOf(O)) if (this.prototype === O) return true;\n  return false;\n} });\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTUwLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuZnVuY3Rpb24uaGFzLWluc3RhbmNlLmpzPzIxN2IiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xudmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7XG52YXIgZ2V0UHJvdG90eXBlT2YgPSByZXF1aXJlKCcuL19vYmplY3QtZ3BvJyk7XG52YXIgSEFTX0lOU1RBTkNFID0gcmVxdWlyZSgnLi9fd2tzJykoJ2hhc0luc3RhbmNlJyk7XG52YXIgRnVuY3Rpb25Qcm90byA9IEZ1bmN0aW9uLnByb3RvdHlwZTtcbi8vIDE5LjIuMy42IEZ1bmN0aW9uLnByb3RvdHlwZVtAQGhhc0luc3RhbmNlXShWKVxuaWYgKCEoSEFTX0lOU1RBTkNFIGluIEZ1bmN0aW9uUHJvdG8pKSByZXF1aXJlKCcuL19vYmplY3QtZHAnKS5mKEZ1bmN0aW9uUHJvdG8sIEhBU19JTlNUQU5DRSwgeyB2YWx1ZTogZnVuY3Rpb24gKE8pIHtcbiAgaWYgKHR5cGVvZiB0aGlzICE9ICdmdW5jdGlvbicgfHwgIWlzT2JqZWN0KE8pKSByZXR1cm4gZmFsc2U7XG4gIGlmICghaXNPYmplY3QodGhpcy5wcm90b3R5cGUpKSByZXR1cm4gTyBpbnN0YW5jZW9mIHRoaXM7XG4gIC8vIGZvciBlbnZpcm9ubWVudCB3L28gbmF0aXZlIGBAQGhhc0luc3RhbmNlYCBsb2dpYyBlbm91Z2ggYGluc3RhbmNlb2ZgLCBidXQgYWRkIHRoaXM6XG4gIHdoaWxlIChPID0gZ2V0UHJvdG90eXBlT2YoTykpIGlmICh0aGlzLnByb3RvdHlwZSA9PT0gTykgcmV0dXJuIHRydWU7XG4gIHJldHVybiBmYWxzZTtcbn0gfSk7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///150\n")},function(module,exports,__webpack_require__){eval("var $export = __webpack_require__(1);\nvar $parseInt = __webpack_require__(100);\n// 18.2.5 parseInt(string, radix)\n$export($export.G + $export.F * (parseInt != $parseInt), { parseInt: $parseInt });\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTUxLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYucGFyc2UtaW50LmpzPzE4ZDAiXSwic291cmNlc0NvbnRlbnQiOlsidmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciAkcGFyc2VJbnQgPSByZXF1aXJlKCcuL19wYXJzZS1pbnQnKTtcbi8vIDE4LjIuNSBwYXJzZUludChzdHJpbmcsIHJhZGl4KVxuJGV4cG9ydCgkZXhwb3J0LkcgKyAkZXhwb3J0LkYgKiAocGFyc2VJbnQgIT0gJHBhcnNlSW50KSwgeyBwYXJzZUludDogJHBhcnNlSW50IH0pO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///151\n")},function(module,exports,__webpack_require__){eval("var $export = __webpack_require__(1);\nvar $parseFloat = __webpack_require__(101);\n// 18.2.4 parseFloat(string)\n$export($export.G + $export.F * (parseFloat != $parseFloat), { parseFloat: $parseFloat });\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTUyLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYucGFyc2UtZmxvYXQuanM/YjcyYyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyICRwYXJzZUZsb2F0ID0gcmVxdWlyZSgnLi9fcGFyc2UtZmxvYXQnKTtcbi8vIDE4LjIuNCBwYXJzZUZsb2F0KHN0cmluZylcbiRleHBvcnQoJGV4cG9ydC5HICsgJGV4cG9ydC5GICogKHBhcnNlRmxvYXQgIT0gJHBhcnNlRmxvYXQpLCB7IHBhcnNlRmxvYXQ6ICRwYXJzZUZsb2F0IH0pO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///152\n")},function(module,exports,__webpack_require__){"use strict";eval("\nvar global = __webpack_require__(2);\nvar has = __webpack_require__(14);\nvar cof = __webpack_require__(24);\nvar inheritIfRequired = __webpack_require__(68);\nvar toPrimitive = __webpack_require__(27);\nvar fails = __webpack_require__(3);\nvar gOPN = __webpack_require__(35).f;\nvar gOPD = __webpack_require__(21).f;\nvar dP = __webpack_require__(9).f;\nvar $trim = __webpack_require__(40).trim;\nvar NUMBER = 'Number';\nvar $Number = global[NUMBER];\nvar Base = $Number;\nvar proto = $Number.prototype;\n// Opera ~12 has broken Object#toString\nvar BROKEN_COF = cof(__webpack_require__(34)(proto)) == NUMBER;\nvar TRIM = 'trim' in String.prototype;\n\n// 7.1.3 ToNumber(argument)\nvar toNumber = function (argument) {\n  var it = toPrimitive(argument, false);\n  if (typeof it == 'string' && it.length > 2) {\n    it = TRIM ? it.trim() : $trim(it, 3);\n    var first = it.charCodeAt(0);\n    var third, radix, maxCode;\n    if (first === 43 || first === 45) {\n      third = it.charCodeAt(2);\n      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix\n    } else if (first === 48) {\n      switch (it.charCodeAt(1)) {\n        case 66: case 98: radix = 2; maxCode = 49; break; // fast equal /^0b[01]+$/i\n        case 79: case 111: radix = 8; maxCode = 55; break; // fast equal /^0o[0-7]+$/i\n        default: return +it;\n      }\n      for (var digits = it.slice(2), i = 0, l = digits.length, code; i < l; i++) {\n        code = digits.charCodeAt(i);\n        // parseInt parses a string to a first unavailable symbol\n        // but ToNumber should return NaN if a string contains unavailable symbols\n        if (code < 48 || code > maxCode) return NaN;\n      } return parseInt(digits, radix);\n    }\n  } return +it;\n};\n\nif (!$Number(' 0o1') || !$Number('0b1') || $Number('+0x1')) {\n  $Number = function Number(value) {\n    var it = arguments.length < 1 ? 0 : value;\n    var that = this;\n    return that instanceof $Number\n      // check on 1..constructor(foo) case\n      && (BROKEN_COF ? fails(function () { proto.valueOf.call(that); }) : cof(that) != NUMBER)\n        ? inheritIfRequired(new Base(toNumber(it)), that, $Number) : toNumber(it);\n  };\n  for (var keys = __webpack_require__(10) ? gOPN(Base) : (\n    // ES3:\n    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +\n    // ES6 (in case, if modules with ES6 Number statics required before):\n    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +\n    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger'\n  ).split(','), j = 0, key; keys.length > j; j++) {\n    if (has(Base, key = keys[j]) && !has($Number, key)) {\n      dP($Number, key, gOPD(Base, key));\n    }\n  }\n  $Number.prototype = proto;\n  proto.constructor = $Number;\n  __webpack_require__(12)(global, NUMBER, $Number);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTUzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYubnVtYmVyLmNvbnN0cnVjdG9yLmpzP2M1ZjYiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xudmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpO1xudmFyIGhhcyA9IHJlcXVpcmUoJy4vX2hhcycpO1xudmFyIGNvZiA9IHJlcXVpcmUoJy4vX2NvZicpO1xudmFyIGluaGVyaXRJZlJlcXVpcmVkID0gcmVxdWlyZSgnLi9faW5oZXJpdC1pZi1yZXF1aXJlZCcpO1xudmFyIHRvUHJpbWl0aXZlID0gcmVxdWlyZSgnLi9fdG8tcHJpbWl0aXZlJyk7XG52YXIgZmFpbHMgPSByZXF1aXJlKCcuL19mYWlscycpO1xudmFyIGdPUE4gPSByZXF1aXJlKCcuL19vYmplY3QtZ29wbicpLmY7XG52YXIgZ09QRCA9IHJlcXVpcmUoJy4vX29iamVjdC1nb3BkJykuZjtcbnZhciBkUCA9IHJlcXVpcmUoJy4vX29iamVjdC1kcCcpLmY7XG52YXIgJHRyaW0gPSByZXF1aXJlKCcuL19zdHJpbmctdHJpbScpLnRyaW07XG52YXIgTlVNQkVSID0gJ051bWJlcic7XG52YXIgJE51bWJlciA9IGdsb2JhbFtOVU1CRVJdO1xudmFyIEJhc2UgPSAkTnVtYmVyO1xudmFyIHByb3RvID0gJE51bWJlci5wcm90b3R5cGU7XG4vLyBPcGVyYSB+MTIgaGFzIGJyb2tlbiBPYmplY3QjdG9TdHJpbmdcbnZhciBCUk9LRU5fQ09GID0gY29mKHJlcXVpcmUoJy4vX29iamVjdC1jcmVhdGUnKShwcm90bykpID09IE5VTUJFUjtcbnZhciBUUklNID0gJ3RyaW0nIGluIFN0cmluZy5wcm90b3R5cGU7XG5cbi8vIDcuMS4zIFRvTnVtYmVyKGFyZ3VtZW50KVxudmFyIHRvTnVtYmVyID0gZnVuY3Rpb24gKGFyZ3VtZW50KSB7XG4gIHZhciBpdCA9IHRvUHJpbWl0aXZlKGFyZ3VtZW50LCBmYWxzZSk7XG4gIGlmICh0eXBlb2YgaXQgPT0gJ3N0cmluZycgJiYgaXQubGVuZ3RoID4gMikge1xuICAgIGl0ID0gVFJJTSA/IGl0LnRyaW0oKSA6ICR0cmltKGl0LCAzKTtcbiAgICB2YXIgZmlyc3QgPSBpdC5jaGFyQ29kZUF0KDApO1xuICAgIHZhciB0aGlyZCwgcmFkaXgsIG1heENvZGU7XG4gICAgaWYgKGZpcnN0ID09PSA0MyB8fCBmaXJzdCA9PT0gNDUpIHtcbiAgICAgIHRoaXJkID0gaXQuY2hhckNvZGVBdCgyKTtcbiAgICAgIGlmICh0aGlyZCA9PT0gODggfHwgdGhpcmQgPT09IDEyMCkgcmV0dXJuIE5hTjsgLy8gTnVtYmVyKCcrMHgxJykgc2hvdWxkIGJlIE5hTiwgb2xkIFY4IGZpeFxuICAgIH0gZWxzZSBpZiAoZmlyc3QgPT09IDQ4KSB7XG4gICAgICBzd2l0Y2ggKGl0LmNoYXJDb2RlQXQoMSkpIHtcbiAgICAgICAgY2FzZSA2NjogY2FzZSA5ODogcmFkaXggPSAyOyBtYXhDb2RlID0gNDk7IGJyZWFrOyAvLyBmYXN0IGVxdWFsIC9eMGJbMDFdKyQvaVxuICAgICAgICBjYXNlIDc5OiBjYXNlIDExMTogcmFkaXggPSA4OyBtYXhDb2RlID0gNTU7IGJyZWFrOyAvLyBmYXN0IGVxdWFsIC9eMG9bMC03XSskL2lcbiAgICAgICAgZGVmYXVsdDogcmV0dXJuICtpdDtcbiAgICAgIH1cbiAgICAgIGZvciAodmFyIGRpZ2l0cyA9IGl0LnNsaWNlKDIpLCBpID0gMCwgbCA9IGRpZ2l0cy5sZW5ndGgsIGNvZGU7IGkgPCBsOyBpKyspIHtcbiAgICAgICAgY29kZSA9IGRpZ2l0cy5jaGFyQ29kZUF0KGkpO1xuICAgICAgICAvLyBwYXJzZUludCBwYXJzZXMgYSBzdHJpbmcgdG8gYSBmaXJzdCB1bmF2YWlsYWJsZSBzeW1ib2xcbiAgICAgICAgLy8gYnV0IFRvTnVtYmVyIHNob3VsZCByZXR1cm4gTmFOIGlmIGEgc3RyaW5nIGNvbnRhaW5zIHVuYXZhaWxhYmxlIHN5bWJvbHNcbiAgICAgICAgaWYgKGNvZGUgPCA0OCB8fCBjb2RlID4gbWF4Q29kZSkgcmV0dXJuIE5hTjtcbiAgICAgIH0gcmV0dXJuIHBhcnNlSW50KGRpZ2l0cywgcmFkaXgpO1xuICAgIH1cbiAgfSByZXR1cm4gK2l0O1xufTtcblxuaWYgKCEkTnVtYmVyKCcgMG8xJykgfHwgISROdW1iZXIoJzBiMScpIHx8ICROdW1iZXIoJysweDEnKSkge1xuICAkTnVtYmVyID0gZnVuY3Rpb24gTnVtYmVyKHZhbHVlKSB7XG4gICAgdmFyIGl0ID0gYXJndW1lbnRzLmxlbmd0aCA8IDEgPyAwIDogdmFsdWU7XG4gICAgdmFyIHRoYXQgPSB0aGlzO1xuICAgIHJldHVybiB0aGF0IGluc3RhbmNlb2YgJE51bWJlclxuICAgICAgLy8gY2hlY2sgb24gMS4uY29uc3RydWN0b3IoZm9vKSBjYXNlXG4gICAgICAmJiAoQlJPS0VOX0NPRiA/IGZhaWxzKGZ1bmN0aW9uICgpIHsgcHJvdG8udmFsdWVPZi5jYWxsKHRoYXQpOyB9KSA6IGNvZih0aGF0KSAhPSBOVU1CRVIpXG4gICAgICAgID8gaW5oZXJpdElmUmVxdWlyZWQobmV3IEJhc2UodG9OdW1iZXIoaXQpKSwgdGhhdCwgJE51bWJlcikgOiB0b051bWJlcihpdCk7XG4gIH07XG4gIGZvciAodmFyIGtleXMgPSByZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpID8gZ09QTihCYXNlKSA6IChcbiAgICAvLyBFUzM6XG4gICAgJ01BWF9WQUxVRSxNSU5fVkFMVUUsTmFOLE5FR0FUSVZFX0lORklOSVRZLFBPU0lUSVZFX0lORklOSVRZLCcgK1xuICAgIC8vIEVTNiAoaW4gY2FzZSwgaWYgbW9kdWxlcyB3aXRoIEVTNiBOdW1iZXIgc3RhdGljcyByZXF1aXJlZCBiZWZvcmUpOlxuICAgICdFUFNJTE9OLGlzRmluaXRlLGlzSW50ZWdlcixpc05hTixpc1NhZmVJbnRlZ2VyLE1BWF9TQUZFX0lOVEVHRVIsJyArXG4gICAgJ01JTl9TQUZFX0lOVEVHRVIscGFyc2VGbG9hdCxwYXJzZUludCxpc0ludGVnZXInXG4gICkuc3BsaXQoJywnKSwgaiA9IDAsIGtleTsga2V5cy5sZW5ndGggPiBqOyBqKyspIHtcbiAgICBpZiAoaGFzKEJhc2UsIGtleSA9IGtleXNbal0pICYmICFoYXMoJE51bWJlciwga2V5KSkge1xuICAgICAgZFAoJE51bWJlciwga2V5LCBnT1BEKEJhc2UsIGtleSkpO1xuICAgIH1cbiAgfVxuICAkTnVtYmVyLnByb3RvdHlwZSA9IHByb3RvO1xuICBwcm90by5jb25zdHJ1Y3RvciA9ICROdW1iZXI7XG4gIHJlcXVpcmUoJy4vX3JlZGVmaW5lJykoZ2xvYmFsLCBOVU1CRVIsICROdW1iZXIpO1xufVxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///153\n")},function(module,exports,__webpack_require__){"use strict";eval("\nvar $export = __webpack_require__(1);\nvar toInteger = __webpack_require__(20);\nvar aNumberValue = __webpack_require__(102);\nvar repeat = __webpack_require__(69);\nvar $toFixed = 1.0.toFixed;\nvar floor = Math.floor;\nvar data = [0, 0, 0, 0, 0, 0];\nvar ERROR = 'Number.toFixed: incorrect invocation!';\nvar ZERO = '0';\n\nvar multiply = function (n, c) {\n  var i = -1;\n  var c2 = c;\n  while (++i < 6) {\n    c2 += n * data[i];\n    data[i] = c2 % 1e7;\n    c2 = floor(c2 / 1e7);\n  }\n};\nvar divide = function (n) {\n  var i = 6;\n  var c = 0;\n  while (--i >= 0) {\n    c += data[i];\n    data[i] = floor(c / n);\n    c = (c % n) * 1e7;\n  }\n};\nvar numToString = function () {\n  var i = 6;\n  var s = '';\n  while (--i >= 0) {\n    if (s !== '' || i === 0 || data[i] !== 0) {\n      var t = String(data[i]);\n      s = s === '' ? t : s + repeat.call(ZERO, 7 - t.length) + t;\n    }\n  } return s;\n};\nvar pow = function (x, n, acc) {\n  return n === 0 ? acc : n % 2 === 1 ? pow(x, n - 1, acc * x) : pow(x * x, n / 2, acc);\n};\nvar log = function (x) {\n  var n = 0;\n  var x2 = x;\n  while (x2 >= 4096) {\n    n += 12;\n    x2 /= 4096;\n  }\n  while (x2 >= 2) {\n    n += 1;\n    x2 /= 2;\n  } return n;\n};\n\n$export($export.P + $export.F * (!!$toFixed && (\n  0.00008.toFixed(3) !== '0.000' ||\n  0.9.toFixed(0) !== '1' ||\n  1.255.toFixed(2) !== '1.25' ||\n  1000000000000000128.0.toFixed(0) !== '1000000000000000128'\n) || !__webpack_require__(3)(function () {\n  // V8 ~ Android 4.3-\n  $toFixed.call({});\n})), 'Number', {\n  toFixed: function toFixed(fractionDigits) {\n    var x = aNumberValue(this, ERROR);\n    var f = toInteger(fractionDigits);\n    var s = '';\n    var m = ZERO;\n    var e, z, j, k;\n    if (f < 0 || f > 20) throw RangeError(ERROR);\n    // eslint-disable-next-line no-self-compare\n    if (x != x) return 'NaN';\n    if (x <= -1e21 || x >= 1e21) return String(x);\n    if (x < 0) {\n      s = '-';\n      x = -x;\n    }\n    if (x > 1e-21) {\n      e = log(x * pow(2, 69, 1)) - 69;\n      z = e < 0 ? x * pow(2, -e, 1) : x / pow(2, e, 1);\n      z *= 0x10000000000000;\n      e = 52 - e;\n      if (e > 0) {\n        multiply(0, z);\n        j = f;\n        while (j >= 7) {\n          multiply(1e7, 0);\n          j -= 7;\n        }\n        multiply(pow(10, j, 1), 0);\n        j = e - 1;\n        while (j >= 23) {\n          divide(1 << 23);\n          j -= 23;\n        }\n        divide(1 << j);\n        multiply(1, 1);\n        divide(2);\n        m = numToString();\n      } else {\n        multiply(0, z);\n        multiply(1 << -e, 0);\n        m = numToString() + repeat.call(ZERO, f);\n      }\n    }\n    if (f > 0) {\n      k = m.length;\n      m = s + (k <= f ? '0.' + repeat.call(ZERO, f - k) + m : m.slice(0, k - f) + '.' + m.slice(k - f));\n    } else {\n      m = s + m;\n    } return m;\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTU0LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYubnVtYmVyLnRvLWZpeGVkLmpzPzAzNmMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciB0b0ludGVnZXIgPSByZXF1aXJlKCcuL190by1pbnRlZ2VyJyk7XG52YXIgYU51bWJlclZhbHVlID0gcmVxdWlyZSgnLi9fYS1udW1iZXItdmFsdWUnKTtcbnZhciByZXBlYXQgPSByZXF1aXJlKCcuL19zdHJpbmctcmVwZWF0Jyk7XG52YXIgJHRvRml4ZWQgPSAxLjAudG9GaXhlZDtcbnZhciBmbG9vciA9IE1hdGguZmxvb3I7XG52YXIgZGF0YSA9IFswLCAwLCAwLCAwLCAwLCAwXTtcbnZhciBFUlJPUiA9ICdOdW1iZXIudG9GaXhlZDogaW5jb3JyZWN0IGludm9jYXRpb24hJztcbnZhciBaRVJPID0gJzAnO1xuXG52YXIgbXVsdGlwbHkgPSBmdW5jdGlvbiAobiwgYykge1xuICB2YXIgaSA9IC0xO1xuICB2YXIgYzIgPSBjO1xuICB3aGlsZSAoKytpIDwgNikge1xuICAgIGMyICs9IG4gKiBkYXRhW2ldO1xuICAgIGRhdGFbaV0gPSBjMiAlIDFlNztcbiAgICBjMiA9IGZsb29yKGMyIC8gMWU3KTtcbiAgfVxufTtcbnZhciBkaXZpZGUgPSBmdW5jdGlvbiAobikge1xuICB2YXIgaSA9IDY7XG4gIHZhciBjID0gMDtcbiAgd2hpbGUgKC0taSA+PSAwKSB7XG4gICAgYyArPSBkYXRhW2ldO1xuICAgIGRhdGFbaV0gPSBmbG9vcihjIC8gbik7XG4gICAgYyA9IChjICUgbikgKiAxZTc7XG4gIH1cbn07XG52YXIgbnVtVG9TdHJpbmcgPSBmdW5jdGlvbiAoKSB7XG4gIHZhciBpID0gNjtcbiAgdmFyIHMgPSAnJztcbiAgd2hpbGUgKC0taSA+PSAwKSB7XG4gICAgaWYgKHMgIT09ICcnIHx8IGkgPT09IDAgfHwgZGF0YVtpXSAhPT0gMCkge1xuICAgICAgdmFyIHQgPSBTdHJpbmcoZGF0YVtpXSk7XG4gICAgICBzID0gcyA9PT0gJycgPyB0IDogcyArIHJlcGVhdC5jYWxsKFpFUk8sIDcgLSB0Lmxlbmd0aCkgKyB0O1xuICAgIH1cbiAgfSByZXR1cm4gcztcbn07XG52YXIgcG93ID0gZnVuY3Rpb24gKHgsIG4sIGFjYykge1xuICByZXR1cm4gbiA9PT0gMCA/IGFjYyA6IG4gJSAyID09PSAxID8gcG93KHgsIG4gLSAxLCBhY2MgKiB4KSA6IHBvdyh4ICogeCwgbiAvIDIsIGFjYyk7XG59O1xudmFyIGxvZyA9IGZ1bmN0aW9uICh4KSB7XG4gIHZhciBuID0gMDtcbiAgdmFyIHgyID0geDtcbiAgd2hpbGUgKHgyID49IDQwOTYpIHtcbiAgICBuICs9IDEyO1xuICAgIHgyIC89IDQwOTY7XG4gIH1cbiAgd2hpbGUgKHgyID49IDIpIHtcbiAgICBuICs9IDE7XG4gICAgeDIgLz0gMjtcbiAgfSByZXR1cm4gbjtcbn07XG5cbiRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogKCEhJHRvRml4ZWQgJiYgKFxuICAwLjAwMDA4LnRvRml4ZWQoMykgIT09ICcwLjAwMCcgfHxcbiAgMC45LnRvRml4ZWQoMCkgIT09ICcxJyB8fFxuICAxLjI1NS50b0ZpeGVkKDIpICE9PSAnMS4yNScgfHxcbiAgMTAwMDAwMDAwMDAwMDAwMDEyOC4wLnRvRml4ZWQoMCkgIT09ICcxMDAwMDAwMDAwMDAwMDAwMTI4J1xuKSB8fCAhcmVxdWlyZSgnLi9fZmFpbHMnKShmdW5jdGlvbiAoKSB7XG4gIC8vIFY4IH4gQW5kcm9pZCA0LjMtXG4gICR0b0ZpeGVkLmNhbGwoe30pO1xufSkpLCAnTnVtYmVyJywge1xuICB0b0ZpeGVkOiBmdW5jdGlvbiB0b0ZpeGVkKGZyYWN0aW9uRGlnaXRzKSB7XG4gICAgdmFyIHggPSBhTnVtYmVyVmFsdWUodGhpcywgRVJST1IpO1xuICAgIHZhciBmID0gdG9JbnRlZ2VyKGZyYWN0aW9uRGlnaXRzKTtcbiAgICB2YXIgcyA9ICcnO1xuICAgIHZhciBtID0gWkVSTztcbiAgICB2YXIgZSwgeiwgaiwgaztcbiAgICBpZiAoZiA8IDAgfHwgZiA+IDIwKSB0aHJvdyBSYW5nZUVycm9yKEVSUk9SKTtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tc2VsZi1jb21wYXJlXG4gICAgaWYgKHggIT0geCkgcmV0dXJuICdOYU4nO1xuICAgIGlmICh4IDw9IC0xZTIxIHx8IHggPj0gMWUyMSkgcmV0dXJuIFN0cmluZyh4KTtcbiAgICBpZiAoeCA8IDApIHtcbiAgICAgIHMgPSAnLSc7XG4gICAgICB4ID0gLXg7XG4gICAgfVxuICAgIGlmICh4ID4gMWUtMjEpIHtcbiAgICAgIGUgPSBsb2coeCAqIHBvdygyLCA2OSwgMSkpIC0gNjk7XG4gICAgICB6ID0gZSA8IDAgPyB4ICogcG93KDIsIC1lLCAxKSA6IHggLyBwb3coMiwgZSwgMSk7XG4gICAgICB6ICo9IDB4MTAwMDAwMDAwMDAwMDA7XG4gICAgICBlID0gNTIgLSBlO1xuICAgICAgaWYgKGUgPiAwKSB7XG4gICAgICAgIG11bHRpcGx5KDAsIHopO1xuICAgICAgICBqID0gZjtcbiAgICAgICAgd2hpbGUgKGogPj0gNykge1xuICAgICAgICAgIG11bHRpcGx5KDFlNywgMCk7XG4gICAgICAgICAgaiAtPSA3O1xuICAgICAgICB9XG4gICAgICAgIG11bHRpcGx5KHBvdygxMCwgaiwgMSksIDApO1xuICAgICAgICBqID0gZSAtIDE7XG4gICAgICAgIHdoaWxlIChqID49IDIzKSB7XG4gICAgICAgICAgZGl2aWRlKDEgPDwgMjMpO1xuICAgICAgICAgIGogLT0gMjM7XG4gICAgICAgIH1cbiAgICAgICAgZGl2aWRlKDEgPDwgaik7XG4gICAgICAgIG11bHRpcGx5KDEsIDEpO1xuICAgICAgICBkaXZpZGUoMik7XG4gICAgICAgIG0gPSBudW1Ub1N0cmluZygpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgbXVsdGlwbHkoMCwgeik7XG4gICAgICAgIG11bHRpcGx5KDEgPDwgLWUsIDApO1xuICAgICAgICBtID0gbnVtVG9TdHJpbmcoKSArIHJlcGVhdC5jYWxsKFpFUk8sIGYpO1xuICAgICAgfVxuICAgIH1cbiAgICBpZiAoZiA+IDApIHtcbiAgICAgIGsgPSBtLmxlbmd0aDtcbiAgICAgIG0gPSBzICsgKGsgPD0gZiA/ICcwLicgKyByZXBlYXQuY2FsbChaRVJPLCBmIC0gaykgKyBtIDogbS5zbGljZSgwLCBrIC0gZikgKyAnLicgKyBtLnNsaWNlKGsgLSBmKSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIG0gPSBzICsgbTtcbiAgICB9IHJldHVybiBtO1xuICB9XG59KTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///154\n")},function(module,exports,__webpack_require__){"use strict";eval("\nvar $export = __webpack_require__(1);\nvar $fails = __webpack_require__(3);\nvar aNumberValue = __webpack_require__(102);\nvar $toPrecision = 1.0.toPrecision;\n\n$export($export.P + $export.F * ($fails(function () {\n  // IE7-\n  return $toPrecision.call(1, undefined) !== '1';\n}) || !$fails(function () {\n  // V8 ~ Android 4.3-\n  $toPrecision.call({});\n})), 'Number', {\n  toPrecision: function toPrecision(precision) {\n    var that = aNumberValue(this, 'Number#toPrecision: incorrect invocation!');\n    return precision === undefined ? $toPrecision.call(that) : $toPrecision.call(that, precision);\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTU1LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYubnVtYmVyLnRvLXByZWNpc2lvbi5qcz81NGE4Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgJGZhaWxzID0gcmVxdWlyZSgnLi9fZmFpbHMnKTtcbnZhciBhTnVtYmVyVmFsdWUgPSByZXF1aXJlKCcuL19hLW51bWJlci12YWx1ZScpO1xudmFyICR0b1ByZWNpc2lvbiA9IDEuMC50b1ByZWNpc2lvbjtcblxuJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LkYgKiAoJGZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgLy8gSUU3LVxuICByZXR1cm4gJHRvUHJlY2lzaW9uLmNhbGwoMSwgdW5kZWZpbmVkKSAhPT0gJzEnO1xufSkgfHwgISRmYWlscyhmdW5jdGlvbiAoKSB7XG4gIC8vIFY4IH4gQW5kcm9pZCA0LjMtXG4gICR0b1ByZWNpc2lvbi5jYWxsKHt9KTtcbn0pKSwgJ051bWJlcicsIHtcbiAgdG9QcmVjaXNpb246IGZ1bmN0aW9uIHRvUHJlY2lzaW9uKHByZWNpc2lvbikge1xuICAgIHZhciB0aGF0ID0gYU51bWJlclZhbHVlKHRoaXMsICdOdW1iZXIjdG9QcmVjaXNpb246IGluY29ycmVjdCBpbnZvY2F0aW9uIScpO1xuICAgIHJldHVybiBwcmVjaXNpb24gPT09IHVuZGVmaW5lZCA/ICR0b1ByZWNpc2lvbi5jYWxsKHRoYXQpIDogJHRvUHJlY2lzaW9uLmNhbGwodGhhdCwgcHJlY2lzaW9uKTtcbiAgfVxufSk7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///155\n")},function(module,exports,__webpack_require__){eval("// 20.1.2.1 Number.EPSILON\nvar $export = __webpack_require__(1);\n\n$export($export.S, 'Number', { EPSILON: Math.pow(2, -52) });\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTU2LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYubnVtYmVyLmVwc2lsb24uanM/MmUzNyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyAyMC4xLjIuMSBOdW1iZXIuRVBTSUxPTlxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcblxuJGV4cG9ydCgkZXhwb3J0LlMsICdOdW1iZXInLCB7IEVQU0lMT046IE1hdGgucG93KDIsIC01MikgfSk7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///156\n")},function(module,exports,__webpack_require__){eval("// 20.1.2.2 Number.isFinite(number)\nvar $export = __webpack_require__(1);\nvar _isFinite = __webpack_require__(2).isFinite;\n\n$export($export.S, 'Number', {\n  isFinite: function isFinite(it) {\n    return typeof it == 'number' && _isFinite(it);\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTU3LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYubnVtYmVyLmlzLWZpbml0ZS5qcz9mY2EwIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIDIwLjEuMi4yIE51bWJlci5pc0Zpbml0ZShudW1iZXIpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIF9pc0Zpbml0ZSA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpLmlzRmluaXRlO1xuXG4kZXhwb3J0KCRleHBvcnQuUywgJ051bWJlcicsIHtcbiAgaXNGaW5pdGU6IGZ1bmN0aW9uIGlzRmluaXRlKGl0KSB7XG4gICAgcmV0dXJuIHR5cGVvZiBpdCA9PSAnbnVtYmVyJyAmJiBfaXNGaW5pdGUoaXQpO1xuICB9XG59KTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///157\n")},function(module,exports,__webpack_require__){eval("// 20.1.2.3 Number.isInteger(number)\nvar $export = __webpack_require__(1);\n\n$export($export.S, 'Number', { isInteger: __webpack_require__(103) });\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTU4LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYubnVtYmVyLmlzLWludGVnZXIuanM/N2NkZiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyAyMC4xLjIuMyBOdW1iZXIuaXNJbnRlZ2VyKG51bWJlcilcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnTnVtYmVyJywgeyBpc0ludGVnZXI6IHJlcXVpcmUoJy4vX2lzLWludGVnZXInKSB9KTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///158\n")},function(module,exports,__webpack_require__){eval("// 20.1.2.4 Number.isNaN(number)\nvar $export = __webpack_require__(1);\n\n$export($export.S, 'Number', {\n  isNaN: function isNaN(number) {\n    // eslint-disable-next-line no-self-compare\n    return number != number;\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTU5LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYubnVtYmVyLmlzLW5hbi5qcz9lZTFkIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIDIwLjEuMi40IE51bWJlci5pc05hTihudW1iZXIpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xuXG4kZXhwb3J0KCRleHBvcnQuUywgJ051bWJlcicsIHtcbiAgaXNOYU46IGZ1bmN0aW9uIGlzTmFOKG51bWJlcikge1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1zZWxmLWNvbXBhcmVcbiAgICByZXR1cm4gbnVtYmVyICE9IG51bWJlcjtcbiAgfVxufSk7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///159\n")},function(module,exports,__webpack_require__){eval("// 20.1.2.5 Number.isSafeInteger(number)\nvar $export = __webpack_require__(1);\nvar isInteger = __webpack_require__(103);\nvar abs = Math.abs;\n\n$export($export.S, 'Number', {\n  isSafeInteger: function isSafeInteger(number) {\n    return isInteger(number) && abs(number) <= 0x1fffffffffffff;\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTYwLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYubnVtYmVyLmlzLXNhZmUtaW50ZWdlci5qcz9iMWIxIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIDIwLjEuMi41IE51bWJlci5pc1NhZmVJbnRlZ2VyKG51bWJlcilcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgaXNJbnRlZ2VyID0gcmVxdWlyZSgnLi9faXMtaW50ZWdlcicpO1xudmFyIGFicyA9IE1hdGguYWJzO1xuXG4kZXhwb3J0KCRleHBvcnQuUywgJ051bWJlcicsIHtcbiAgaXNTYWZlSW50ZWdlcjogZnVuY3Rpb24gaXNTYWZlSW50ZWdlcihudW1iZXIpIHtcbiAgICByZXR1cm4gaXNJbnRlZ2VyKG51bWJlcikgJiYgYWJzKG51bWJlcikgPD0gMHgxZmZmZmZmZmZmZmZmZjtcbiAgfVxufSk7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///160\n")},function(module,exports,__webpack_require__){eval("// 20.1.2.6 Number.MAX_SAFE_INTEGER\nvar $export = __webpack_require__(1);\n\n$export($export.S, 'Number', { MAX_SAFE_INTEGER: 0x1fffffffffffff });\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTYxLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYubnVtYmVyLm1heC1zYWZlLWludGVnZXIuanM/ODdmMyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyAyMC4xLjIuNiBOdW1iZXIuTUFYX1NBRkVfSU5URUdFUlxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcblxuJGV4cG9ydCgkZXhwb3J0LlMsICdOdW1iZXInLCB7IE1BWF9TQUZFX0lOVEVHRVI6IDB4MWZmZmZmZmZmZmZmZmYgfSk7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///161\n")},function(module,exports,__webpack_require__){eval("// 20.1.2.10 Number.MIN_SAFE_INTEGER\nvar $export = __webpack_require__(1);\n\n$export($export.S, 'Number', { MIN_SAFE_INTEGER: -0x1fffffffffffff });\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTYyLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYubnVtYmVyLm1pbi1zYWZlLWludGVnZXIuanM/OTI3OCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyAyMC4xLjIuMTAgTnVtYmVyLk1JTl9TQUZFX0lOVEVHRVJcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnTnVtYmVyJywgeyBNSU5fU0FGRV9JTlRFR0VSOiAtMHgxZmZmZmZmZmZmZmZmZiB9KTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///162\n")},function(module,exports,__webpack_require__){eval("var $export = __webpack_require__(1);\nvar $parseFloat = __webpack_require__(101);\n// 20.1.2.12 Number.parseFloat(string)\n$export($export.S + $export.F * (Number.parseFloat != $parseFloat), 'Number', { parseFloat: $parseFloat });\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTYzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYubnVtYmVyLnBhcnNlLWZsb2F0LmpzPzVkZjIiXSwic291cmNlc0NvbnRlbnQiOlsidmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciAkcGFyc2VGbG9hdCA9IHJlcXVpcmUoJy4vX3BhcnNlLWZsb2F0Jyk7XG4vLyAyMC4xLjIuMTIgTnVtYmVyLnBhcnNlRmxvYXQoc3RyaW5nKVxuJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYgKiAoTnVtYmVyLnBhcnNlRmxvYXQgIT0gJHBhcnNlRmxvYXQpLCAnTnVtYmVyJywgeyBwYXJzZUZsb2F0OiAkcGFyc2VGbG9hdCB9KTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///163\n")},function(module,exports,__webpack_require__){eval("var $export = __webpack_require__(1);\nvar $parseInt = __webpack_require__(100);\n// 20.1.2.13 Number.parseInt(string, radix)\n$export($export.S + $export.F * (Number.parseInt != $parseInt), 'Number', { parseInt: $parseInt });\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTY0LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYubnVtYmVyLnBhcnNlLWludC5qcz8wNGZmIl0sInNvdXJjZXNDb250ZW50IjpbInZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgJHBhcnNlSW50ID0gcmVxdWlyZSgnLi9fcGFyc2UtaW50Jyk7XG4vLyAyMC4xLjIuMTMgTnVtYmVyLnBhcnNlSW50KHN0cmluZywgcmFkaXgpXG4kZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqIChOdW1iZXIucGFyc2VJbnQgIT0gJHBhcnNlSW50KSwgJ051bWJlcicsIHsgcGFyc2VJbnQ6ICRwYXJzZUludCB9KTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///164\n")},function(module,exports,__webpack_require__){eval("// 20.2.2.3 Math.acosh(x)\nvar $export = __webpack_require__(1);\nvar log1p = __webpack_require__(104);\nvar sqrt = Math.sqrt;\nvar $acosh = Math.acosh;\n\n$export($export.S + $export.F * !($acosh\n  // V8 bug: https://code.google.com/p/v8/issues/detail?id=3509\n  && Math.floor($acosh(Number.MAX_VALUE)) == 710\n  // Tor Browser bug: Math.acosh(Infinity) -> NaN\n  && $acosh(Infinity) == Infinity\n), 'Math', {\n  acosh: function acosh(x) {\n    return (x = +x) < 1 ? NaN : x > 94906265.62425156\n      ? Math.log(x) + Math.LN2\n      : log1p(x - 1 + sqrt(x - 1) * sqrt(x + 1));\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTY1LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYubWF0aC5hY29zaC5qcz83ZjI1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIDIwLjIuMi4zIE1hdGguYWNvc2goeClcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgbG9nMXAgPSByZXF1aXJlKCcuL19tYXRoLWxvZzFwJyk7XG52YXIgc3FydCA9IE1hdGguc3FydDtcbnZhciAkYWNvc2ggPSBNYXRoLmFjb3NoO1xuXG4kZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqICEoJGFjb3NoXG4gIC8vIFY4IGJ1ZzogaHR0cHM6Ly9jb2RlLmdvb2dsZS5jb20vcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTM1MDlcbiAgJiYgTWF0aC5mbG9vcigkYWNvc2goTnVtYmVyLk1BWF9WQUxVRSkpID09IDcxMFxuICAvLyBUb3IgQnJvd3NlciBidWc6IE1hdGguYWNvc2goSW5maW5pdHkpIC0+IE5hTlxuICAmJiAkYWNvc2goSW5maW5pdHkpID09IEluZmluaXR5XG4pLCAnTWF0aCcsIHtcbiAgYWNvc2g6IGZ1bmN0aW9uIGFjb3NoKHgpIHtcbiAgICByZXR1cm4gKHggPSAreCkgPCAxID8gTmFOIDogeCA+IDk0OTA2MjY1LjYyNDI1MTU2XG4gICAgICA/IE1hdGgubG9nKHgpICsgTWF0aC5MTjJcbiAgICAgIDogbG9nMXAoeCAtIDEgKyBzcXJ0KHggLSAxKSAqIHNxcnQoeCArIDEpKTtcbiAgfVxufSk7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///165\n")},function(module,exports,__webpack_require__){eval("// 20.2.2.5 Math.asinh(x)\nvar $export = __webpack_require__(1);\nvar $asinh = Math.asinh;\n\nfunction asinh(x) {\n  return !isFinite(x = +x) || x == 0 ? x : x < 0 ? -asinh(-x) : Math.log(x + Math.sqrt(x * x + 1));\n}\n\n// Tor Browser bug: Math.asinh(0) -> -0\n$export($export.S + $export.F * !($asinh && 1 / $asinh(0) > 0), 'Math', { asinh: asinh });\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTY2LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYubWF0aC5hc2luaC5qcz81MzZiIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIDIwLjIuMi41IE1hdGguYXNpbmgoeClcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgJGFzaW5oID0gTWF0aC5hc2luaDtcblxuZnVuY3Rpb24gYXNpbmgoeCkge1xuICByZXR1cm4gIWlzRmluaXRlKHggPSAreCkgfHwgeCA9PSAwID8geCA6IHggPCAwID8gLWFzaW5oKC14KSA6IE1hdGgubG9nKHggKyBNYXRoLnNxcnQoeCAqIHggKyAxKSk7XG59XG5cbi8vIFRvciBCcm93c2VyIGJ1ZzogTWF0aC5hc2luaCgwKSAtPiAtMFxuJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYgKiAhKCRhc2luaCAmJiAxIC8gJGFzaW5oKDApID4gMCksICdNYXRoJywgeyBhc2luaDogYXNpbmggfSk7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///166\n")},function(module,exports,__webpack_require__){eval("// 20.2.2.7 Math.atanh(x)\nvar $export = __webpack_require__(1);\nvar $atanh = Math.atanh;\n\n// Tor Browser bug: Math.atanh(-0) -> 0\n$export($export.S + $export.F * !($atanh && 1 / $atanh(-0) < 0), 'Math', {\n  atanh: function atanh(x) {\n    return (x = +x) == 0 ? x : Math.log((1 + x) / (1 - x)) / 2;\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTY3LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYubWF0aC5hdGFuaC5qcz9kOWFiIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIDIwLjIuMi43IE1hdGguYXRhbmgoeClcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgJGF0YW5oID0gTWF0aC5hdGFuaDtcblxuLy8gVG9yIEJyb3dzZXIgYnVnOiBNYXRoLmF0YW5oKC0wKSAtPiAwXG4kZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqICEoJGF0YW5oICYmIDEgLyAkYXRhbmgoLTApIDwgMCksICdNYXRoJywge1xuICBhdGFuaDogZnVuY3Rpb24gYXRhbmgoeCkge1xuICAgIHJldHVybiAoeCA9ICt4KSA9PSAwID8geCA6IE1hdGgubG9nKCgxICsgeCkgLyAoMSAtIHgpKSAvIDI7XG4gIH1cbn0pO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///167\n")},function(module,exports,__webpack_require__){eval("// 20.2.2.9 Math.cbrt(x)\nvar $export = __webpack_require__(1);\nvar sign = __webpack_require__(70);\n\n$export($export.S, 'Math', {\n  cbrt: function cbrt(x) {\n    return sign(x = +x) * Math.pow(Math.abs(x), 1 / 3);\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTY4LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYubWF0aC5jYnJ0LmpzP2Y5YWIiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gMjAuMi4yLjkgTWF0aC5jYnJ0KHgpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIHNpZ24gPSByZXF1aXJlKCcuL19tYXRoLXNpZ24nKTtcblxuJGV4cG9ydCgkZXhwb3J0LlMsICdNYXRoJywge1xuICBjYnJ0OiBmdW5jdGlvbiBjYnJ0KHgpIHtcbiAgICByZXR1cm4gc2lnbih4ID0gK3gpICogTWF0aC5wb3coTWF0aC5hYnMoeCksIDEgLyAzKTtcbiAgfVxufSk7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///168\n")},function(module,exports,__webpack_require__){eval("// 20.2.2.11 Math.clz32(x)\nvar $export = __webpack_require__(1);\n\n$export($export.S, 'Math', {\n  clz32: function clz32(x) {\n    return (x >>>= 0) ? 31 - Math.floor(Math.log(x + 0.5) * Math.LOG2E) : 32;\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTY5LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYubWF0aC5jbHozMi5qcz8zMmQ3Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIDIwLjIuMi4xMSBNYXRoLmNsejMyKHgpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xuXG4kZXhwb3J0KCRleHBvcnQuUywgJ01hdGgnLCB7XG4gIGNsejMyOiBmdW5jdGlvbiBjbHozMih4KSB7XG4gICAgcmV0dXJuICh4ID4+Pj0gMCkgPyAzMSAtIE1hdGguZmxvb3IoTWF0aC5sb2coeCArIDAuNSkgKiBNYXRoLkxPRzJFKSA6IDMyO1xuICB9XG59KTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///169\n")},function(module,exports,__webpack_require__){eval("// 20.2.2.12 Math.cosh(x)\nvar $export = __webpack_require__(1);\nvar exp = Math.exp;\n\n$export($export.S, 'Math', {\n  cosh: function cosh(x) {\n    return (exp(x = +x) + exp(-x)) / 2;\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTcwLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYubWF0aC5jb3NoLmpzPzI1YzkiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gMjAuMi4yLjEyIE1hdGguY29zaCh4KVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciBleHAgPSBNYXRoLmV4cDtcblxuJGV4cG9ydCgkZXhwb3J0LlMsICdNYXRoJywge1xuICBjb3NoOiBmdW5jdGlvbiBjb3NoKHgpIHtcbiAgICByZXR1cm4gKGV4cCh4ID0gK3gpICsgZXhwKC14KSkgLyAyO1xuICB9XG59KTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///170\n")},function(module,exports,__webpack_require__){eval("// 20.2.2.14 Math.expm1(x)\nvar $export = __webpack_require__(1);\nvar $expm1 = __webpack_require__(71);\n\n$export($export.S + $export.F * ($expm1 != Math.expm1), 'Math', { expm1: $expm1 });\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTcxLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYubWF0aC5leHBtMS5qcz85ZjNjIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIDIwLjIuMi4xNCBNYXRoLmV4cG0xKHgpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyICRleHBtMSA9IHJlcXVpcmUoJy4vX21hdGgtZXhwbTEnKTtcblxuJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYgKiAoJGV4cG0xICE9IE1hdGguZXhwbTEpLCAnTWF0aCcsIHsgZXhwbTE6ICRleHBtMSB9KTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///171\n")},function(module,exports,__webpack_require__){eval("// 20.2.2.16 Math.fround(x)\nvar $export = __webpack_require__(1);\n\n$export($export.S, 'Math', { fround: __webpack_require__(173) });\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTcyLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYubWF0aC5mcm91bmQuanM/MDQyZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyAyMC4yLjIuMTYgTWF0aC5mcm91bmQoeClcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnTWF0aCcsIHsgZnJvdW5kOiByZXF1aXJlKCcuL19tYXRoLWZyb3VuZCcpIH0pO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///172\n")},function(module,exports,__webpack_require__){eval("// 20.2.2.16 Math.fround(x)\nvar sign = __webpack_require__(70);\nvar pow = Math.pow;\nvar EPSILON = pow(2, -52);\nvar EPSILON32 = pow(2, -23);\nvar MAX32 = pow(2, 127) * (2 - EPSILON32);\nvar MIN32 = pow(2, -126);\n\nvar roundTiesToEven = function (n) {\n  return n + 1 / EPSILON - 1 / EPSILON;\n};\n\nmodule.exports = Math.fround || function fround(x) {\n  var $abs = Math.abs(x);\n  var $sign = sign(x);\n  var a, result;\n  if ($abs < MIN32) return $sign * roundTiesToEven($abs / MIN32 / EPSILON32) * MIN32 * EPSILON32;\n  a = (1 + EPSILON32 / EPSILON) * $abs;\n  result = a - (a - $abs);\n  // eslint-disable-next-line no-self-compare\n  if (result > MAX32 || result != result) return $sign * Infinity;\n  return $sign * result;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTczLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fbWF0aC1mcm91bmQuanM/OTFjYSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyAyMC4yLjIuMTYgTWF0aC5mcm91bmQoeClcbnZhciBzaWduID0gcmVxdWlyZSgnLi9fbWF0aC1zaWduJyk7XG52YXIgcG93ID0gTWF0aC5wb3c7XG52YXIgRVBTSUxPTiA9IHBvdygyLCAtNTIpO1xudmFyIEVQU0lMT04zMiA9IHBvdygyLCAtMjMpO1xudmFyIE1BWDMyID0gcG93KDIsIDEyNykgKiAoMiAtIEVQU0lMT04zMik7XG52YXIgTUlOMzIgPSBwb3coMiwgLTEyNik7XG5cbnZhciByb3VuZFRpZXNUb0V2ZW4gPSBmdW5jdGlvbiAobikge1xuICByZXR1cm4gbiArIDEgLyBFUFNJTE9OIC0gMSAvIEVQU0lMT047XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IE1hdGguZnJvdW5kIHx8IGZ1bmN0aW9uIGZyb3VuZCh4KSB7XG4gIHZhciAkYWJzID0gTWF0aC5hYnMoeCk7XG4gIHZhciAkc2lnbiA9IHNpZ24oeCk7XG4gIHZhciBhLCByZXN1bHQ7XG4gIGlmICgkYWJzIDwgTUlOMzIpIHJldHVybiAkc2lnbiAqIHJvdW5kVGllc1RvRXZlbigkYWJzIC8gTUlOMzIgLyBFUFNJTE9OMzIpICogTUlOMzIgKiBFUFNJTE9OMzI7XG4gIGEgPSAoMSArIEVQU0lMT04zMiAvIEVQU0lMT04pICogJGFicztcbiAgcmVzdWx0ID0gYSAtIChhIC0gJGFicyk7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1zZWxmLWNvbXBhcmVcbiAgaWYgKHJlc3VsdCA+IE1BWDMyIHx8IHJlc3VsdCAhPSByZXN1bHQpIHJldHVybiAkc2lnbiAqIEluZmluaXR5O1xuICByZXR1cm4gJHNpZ24gKiByZXN1bHQ7XG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///173\n")},function(module,exports,__webpack_require__){eval("// 20.2.2.17 Math.hypot([value1[, value2[, … ]]])\nvar $export = __webpack_require__(1);\nvar abs = Math.abs;\n\n$export($export.S, 'Math', {\n  hypot: function hypot(value1, value2) { // eslint-disable-line no-unused-vars\n    var sum = 0;\n    var i = 0;\n    var aLen = arguments.length;\n    var larg = 0;\n    var arg, div;\n    while (i < aLen) {\n      arg = abs(arguments[i++]);\n      if (larg < arg) {\n        div = larg / arg;\n        sum = sum * div * div + 1;\n        larg = arg;\n      } else if (arg > 0) {\n        div = arg / larg;\n        sum += div * div;\n      } else sum += arg;\n    }\n    return larg === Infinity ? Infinity : larg * Math.sqrt(sum);\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTc0LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYubWF0aC5oeXBvdC5qcz9jN2M2Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIDIwLjIuMi4xNyBNYXRoLmh5cG90KFt2YWx1ZTFbLCB2YWx1ZTJbLCDigKYgXV1dKVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciBhYnMgPSBNYXRoLmFicztcblxuJGV4cG9ydCgkZXhwb3J0LlMsICdNYXRoJywge1xuICBoeXBvdDogZnVuY3Rpb24gaHlwb3QodmFsdWUxLCB2YWx1ZTIpIHsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby11bnVzZWQtdmFyc1xuICAgIHZhciBzdW0gPSAwO1xuICAgIHZhciBpID0gMDtcbiAgICB2YXIgYUxlbiA9IGFyZ3VtZW50cy5sZW5ndGg7XG4gICAgdmFyIGxhcmcgPSAwO1xuICAgIHZhciBhcmcsIGRpdjtcbiAgICB3aGlsZSAoaSA8IGFMZW4pIHtcbiAgICAgIGFyZyA9IGFicyhhcmd1bWVudHNbaSsrXSk7XG4gICAgICBpZiAobGFyZyA8IGFyZykge1xuICAgICAgICBkaXYgPSBsYXJnIC8gYXJnO1xuICAgICAgICBzdW0gPSBzdW0gKiBkaXYgKiBkaXYgKyAxO1xuICAgICAgICBsYXJnID0gYXJnO1xuICAgICAgfSBlbHNlIGlmIChhcmcgPiAwKSB7XG4gICAgICAgIGRpdiA9IGFyZyAvIGxhcmc7XG4gICAgICAgIHN1bSArPSBkaXYgKiBkaXY7XG4gICAgICB9IGVsc2Ugc3VtICs9IGFyZztcbiAgICB9XG4gICAgcmV0dXJuIGxhcmcgPT09IEluZmluaXR5ID8gSW5maW5pdHkgOiBsYXJnICogTWF0aC5zcXJ0KHN1bSk7XG4gIH1cbn0pO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///174\n")},function(module,exports,__webpack_require__){eval("// 20.2.2.18 Math.imul(x, y)\nvar $export = __webpack_require__(1);\nvar $imul = Math.imul;\n\n// some WebKit versions fails with big numbers, some has wrong arity\n$export($export.S + $export.F * __webpack_require__(3)(function () {\n  return $imul(0xffffffff, 5) != -5 || $imul.length != 2;\n}), 'Math', {\n  imul: function imul(x, y) {\n    var UINT16 = 0xffff;\n    var xn = +x;\n    var yn = +y;\n    var xl = UINT16 & xn;\n    var yl = UINT16 & yn;\n    return 0 | xl * yl + ((UINT16 & xn >>> 16) * yl + xl * (UINT16 & yn >>> 16) << 16 >>> 0);\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTc1LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYubWF0aC5pbXVsLmpzP2Y0ZmYiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gMjAuMi4yLjE4IE1hdGguaW11bCh4LCB5KVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciAkaW11bCA9IE1hdGguaW11bDtcblxuLy8gc29tZSBXZWJLaXQgdmVyc2lvbnMgZmFpbHMgd2l0aCBiaWcgbnVtYmVycywgc29tZSBoYXMgd3JvbmcgYXJpdHlcbiRleHBvcnQoJGV4cG9ydC5TICsgJGV4cG9ydC5GICogcmVxdWlyZSgnLi9fZmFpbHMnKShmdW5jdGlvbiAoKSB7XG4gIHJldHVybiAkaW11bCgweGZmZmZmZmZmLCA1KSAhPSAtNSB8fCAkaW11bC5sZW5ndGggIT0gMjtcbn0pLCAnTWF0aCcsIHtcbiAgaW11bDogZnVuY3Rpb24gaW11bCh4LCB5KSB7XG4gICAgdmFyIFVJTlQxNiA9IDB4ZmZmZjtcbiAgICB2YXIgeG4gPSAreDtcbiAgICB2YXIgeW4gPSAreTtcbiAgICB2YXIgeGwgPSBVSU5UMTYgJiB4bjtcbiAgICB2YXIgeWwgPSBVSU5UMTYgJiB5bjtcbiAgICByZXR1cm4gMCB8IHhsICogeWwgKyAoKFVJTlQxNiAmIHhuID4+PiAxNikgKiB5bCArIHhsICogKFVJTlQxNiAmIHluID4+PiAxNikgPDwgMTYgPj4+IDApO1xuICB9XG59KTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///175\n")},function(module,exports,__webpack_require__){eval("// 20.2.2.21 Math.log10(x)\nvar $export = __webpack_require__(1);\n\n$export($export.S, 'Math', {\n  log10: function log10(x) {\n    return Math.log(x) * Math.LOG10E;\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTc2LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYubWF0aC5sb2cxMC5qcz83ODcyIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIDIwLjIuMi4yMSBNYXRoLmxvZzEwKHgpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xuXG4kZXhwb3J0KCRleHBvcnQuUywgJ01hdGgnLCB7XG4gIGxvZzEwOiBmdW5jdGlvbiBsb2cxMCh4KSB7XG4gICAgcmV0dXJuIE1hdGgubG9nKHgpICogTWF0aC5MT0cxMEU7XG4gIH1cbn0pO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///176\n")},function(module,exports,__webpack_require__){eval("// 20.2.2.20 Math.log1p(x)\nvar $export = __webpack_require__(1);\n\n$export($export.S, 'Math', { log1p: __webpack_require__(104) });\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTc3LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYubWF0aC5sb2cxcC5qcz8wNDlmIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIDIwLjIuMi4yMCBNYXRoLmxvZzFwKHgpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xuXG4kZXhwb3J0KCRleHBvcnQuUywgJ01hdGgnLCB7IGxvZzFwOiByZXF1aXJlKCcuL19tYXRoLWxvZzFwJykgfSk7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///177\n")},function(module,exports,__webpack_require__){eval("// 20.2.2.22 Math.log2(x)\nvar $export = __webpack_require__(1);\n\n$export($export.S, 'Math', {\n  log2: function log2(x) {\n    return Math.log(x) / Math.LN2;\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTc4LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYubWF0aC5sb2cyLmpzP2E2OWYiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gMjAuMi4yLjIyIE1hdGgubG9nMih4KVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcblxuJGV4cG9ydCgkZXhwb3J0LlMsICdNYXRoJywge1xuICBsb2cyOiBmdW5jdGlvbiBsb2cyKHgpIHtcbiAgICByZXR1cm4gTWF0aC5sb2coeCkgLyBNYXRoLkxOMjtcbiAgfVxufSk7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///178\n")},function(module,exports,__webpack_require__){eval("// 20.2.2.28 Math.sign(x)\nvar $export = __webpack_require__(1);\n\n$export($export.S, 'Math', { sign: __webpack_require__(70) });\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTc5LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYubWF0aC5zaWduLmpzPzBiMjEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gMjAuMi4yLjI4IE1hdGguc2lnbih4KVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcblxuJGV4cG9ydCgkZXhwb3J0LlMsICdNYXRoJywgeyBzaWduOiByZXF1aXJlKCcuL19tYXRoLXNpZ24nKSB9KTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///179\n")},function(module,exports,__webpack_require__){eval("// 20.2.2.30 Math.sinh(x)\nvar $export = __webpack_require__(1);\nvar expm1 = __webpack_require__(71);\nvar exp = Math.exp;\n\n// V8 near Chromium 38 has a problem with very small numbers\n$export($export.S + $export.F * __webpack_require__(3)(function () {\n  return !Math.sinh(-2e-17) != -2e-17;\n}), 'Math', {\n  sinh: function sinh(x) {\n    return Math.abs(x = +x) < 1\n      ? (expm1(x) - expm1(-x)) / 2\n      : (exp(x - 1) - exp(-x - 1)) * (Math.E / 2);\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTgwLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYubWF0aC5zaW5oLmpzPzZjMWEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gMjAuMi4yLjMwIE1hdGguc2luaCh4KVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciBleHBtMSA9IHJlcXVpcmUoJy4vX21hdGgtZXhwbTEnKTtcbnZhciBleHAgPSBNYXRoLmV4cDtcblxuLy8gVjggbmVhciBDaHJvbWl1bSAzOCBoYXMgYSBwcm9ibGVtIHdpdGggdmVyeSBzbWFsbCBudW1iZXJzXG4kZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqIHJlcXVpcmUoJy4vX2ZhaWxzJykoZnVuY3Rpb24gKCkge1xuICByZXR1cm4gIU1hdGguc2luaCgtMmUtMTcpICE9IC0yZS0xNztcbn0pLCAnTWF0aCcsIHtcbiAgc2luaDogZnVuY3Rpb24gc2luaCh4KSB7XG4gICAgcmV0dXJuIE1hdGguYWJzKHggPSAreCkgPCAxXG4gICAgICA/IChleHBtMSh4KSAtIGV4cG0xKC14KSkgLyAyXG4gICAgICA6IChleHAoeCAtIDEpIC0gZXhwKC14IC0gMSkpICogKE1hdGguRSAvIDIpO1xuICB9XG59KTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///180\n")},function(module,exports,__webpack_require__){eval("// 20.2.2.33 Math.tanh(x)\nvar $export = __webpack_require__(1);\nvar expm1 = __webpack_require__(71);\nvar exp = Math.exp;\n\n$export($export.S, 'Math', {\n  tanh: function tanh(x) {\n    var a = expm1(x = +x);\n    var b = expm1(-x);\n    return a == Infinity ? 1 : b == Infinity ? -1 : (a - b) / (exp(x) + exp(-x));\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTgxLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYubWF0aC50YW5oLmpzP2M3YzYiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gMjAuMi4yLjMzIE1hdGgudGFuaCh4KVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciBleHBtMSA9IHJlcXVpcmUoJy4vX21hdGgtZXhwbTEnKTtcbnZhciBleHAgPSBNYXRoLmV4cDtcblxuJGV4cG9ydCgkZXhwb3J0LlMsICdNYXRoJywge1xuICB0YW5oOiBmdW5jdGlvbiB0YW5oKHgpIHtcbiAgICB2YXIgYSA9IGV4cG0xKHggPSAreCk7XG4gICAgdmFyIGIgPSBleHBtMSgteCk7XG4gICAgcmV0dXJuIGEgPT0gSW5maW5pdHkgPyAxIDogYiA9PSBJbmZpbml0eSA/IC0xIDogKGEgLSBiKSAvIChleHAoeCkgKyBleHAoLXgpKTtcbiAgfVxufSk7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///181\n")},function(module,exports,__webpack_require__){eval("// 20.2.2.34 Math.trunc(x)\nvar $export = __webpack_require__(1);\n\n$export($export.S, 'Math', {\n  trunc: function trunc(it) {\n    return (it > 0 ? Math.floor : Math.ceil)(it);\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTgyLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYubWF0aC50cnVuYy5qcz84NGI0Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIDIwLjIuMi4zNCBNYXRoLnRydW5jKHgpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xuXG4kZXhwb3J0KCRleHBvcnQuUywgJ01hdGgnLCB7XG4gIHRydW5jOiBmdW5jdGlvbiB0cnVuYyhpdCkge1xuICAgIHJldHVybiAoaXQgPiAwID8gTWF0aC5mbG9vciA6IE1hdGguY2VpbCkoaXQpO1xuICB9XG59KTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///182\n")},function(module,exports,__webpack_require__){eval("var $export = __webpack_require__(1);\nvar toAbsoluteIndex = __webpack_require__(33);\nvar fromCharCode = String.fromCharCode;\nvar $fromCodePoint = String.fromCodePoint;\n\n// length should be 1, old FF problem\n$export($export.S + $export.F * (!!$fromCodePoint && $fromCodePoint.length != 1), 'String', {\n  // 21.1.2.2 String.fromCodePoint(...codePoints)\n  fromCodePoint: function fromCodePoint(x) { // eslint-disable-line no-unused-vars\n    var res = [];\n    var aLen = arguments.length;\n    var i = 0;\n    var code;\n    while (aLen > i) {\n      code = +arguments[i++];\n      if (toAbsoluteIndex(code, 0x10ffff) !== code) throw RangeError(code + ' is not a valid code point');\n      res.push(code < 0x10000\n        ? fromCharCode(code)\n        : fromCharCode(((code -= 0x10000) >> 10) + 0xd800, code % 0x400 + 0xdc00)\n      );\n    } return res.join('');\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTgzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuc3RyaW5nLmZyb20tY29kZS1wb2ludC5qcz81Njk1Il0sInNvdXJjZXNDb250ZW50IjpbInZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgdG9BYnNvbHV0ZUluZGV4ID0gcmVxdWlyZSgnLi9fdG8tYWJzb2x1dGUtaW5kZXgnKTtcbnZhciBmcm9tQ2hhckNvZGUgPSBTdHJpbmcuZnJvbUNoYXJDb2RlO1xudmFyICRmcm9tQ29kZVBvaW50ID0gU3RyaW5nLmZyb21Db2RlUG9pbnQ7XG5cbi8vIGxlbmd0aCBzaG91bGQgYmUgMSwgb2xkIEZGIHByb2JsZW1cbiRleHBvcnQoJGV4cG9ydC5TICsgJGV4cG9ydC5GICogKCEhJGZyb21Db2RlUG9pbnQgJiYgJGZyb21Db2RlUG9pbnQubGVuZ3RoICE9IDEpLCAnU3RyaW5nJywge1xuICAvLyAyMS4xLjIuMiBTdHJpbmcuZnJvbUNvZGVQb2ludCguLi5jb2RlUG9pbnRzKVxuICBmcm9tQ29kZVBvaW50OiBmdW5jdGlvbiBmcm9tQ29kZVBvaW50KHgpIHsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby11bnVzZWQtdmFyc1xuICAgIHZhciByZXMgPSBbXTtcbiAgICB2YXIgYUxlbiA9IGFyZ3VtZW50cy5sZW5ndGg7XG4gICAgdmFyIGkgPSAwO1xuICAgIHZhciBjb2RlO1xuICAgIHdoaWxlIChhTGVuID4gaSkge1xuICAgICAgY29kZSA9ICthcmd1bWVudHNbaSsrXTtcbiAgICAgIGlmICh0b0Fic29sdXRlSW5kZXgoY29kZSwgMHgxMGZmZmYpICE9PSBjb2RlKSB0aHJvdyBSYW5nZUVycm9yKGNvZGUgKyAnIGlzIG5vdCBhIHZhbGlkIGNvZGUgcG9pbnQnKTtcbiAgICAgIHJlcy5wdXNoKGNvZGUgPCAweDEwMDAwXG4gICAgICAgID8gZnJvbUNoYXJDb2RlKGNvZGUpXG4gICAgICAgIDogZnJvbUNoYXJDb2RlKCgoY29kZSAtPSAweDEwMDAwKSA+PiAxMCkgKyAweGQ4MDAsIGNvZGUgJSAweDQwMCArIDB4ZGMwMClcbiAgICAgICk7XG4gICAgfSByZXR1cm4gcmVzLmpvaW4oJycpO1xuICB9XG59KTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///183\n")},function(module,exports,__webpack_require__){eval("var $export = __webpack_require__(1);\nvar toIObject = __webpack_require__(16);\nvar toLength = __webpack_require__(7);\n\n$export($export.S, 'String', {\n  // 21.1.2.4 String.raw(callSite, ...substitutions)\n  raw: function raw(callSite) {\n    var tpl = toIObject(callSite.raw);\n    var len = toLength(tpl.length);\n    var aLen = arguments.length;\n    var res = [];\n    var i = 0;\n    while (len > i) {\n      res.push(String(tpl[i++]));\n      if (i < aLen) res.push(String(arguments[i]));\n    } return res.join('');\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTg0LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuc3RyaW5nLnJhdy5qcz83ODhkIl0sInNvdXJjZXNDb250ZW50IjpbInZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgdG9JT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8taW9iamVjdCcpO1xudmFyIHRvTGVuZ3RoID0gcmVxdWlyZSgnLi9fdG8tbGVuZ3RoJyk7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnU3RyaW5nJywge1xuICAvLyAyMS4xLjIuNCBTdHJpbmcucmF3KGNhbGxTaXRlLCAuLi5zdWJzdGl0dXRpb25zKVxuICByYXc6IGZ1bmN0aW9uIHJhdyhjYWxsU2l0ZSkge1xuICAgIHZhciB0cGwgPSB0b0lPYmplY3QoY2FsbFNpdGUucmF3KTtcbiAgICB2YXIgbGVuID0gdG9MZW5ndGgodHBsLmxlbmd0aCk7XG4gICAgdmFyIGFMZW4gPSBhcmd1bWVudHMubGVuZ3RoO1xuICAgIHZhciByZXMgPSBbXTtcbiAgICB2YXIgaSA9IDA7XG4gICAgd2hpbGUgKGxlbiA+IGkpIHtcbiAgICAgIHJlcy5wdXNoKFN0cmluZyh0cGxbaSsrXSkpO1xuICAgICAgaWYgKGkgPCBhTGVuKSByZXMucHVzaChTdHJpbmcoYXJndW1lbnRzW2ldKSk7XG4gICAgfSByZXR1cm4gcmVzLmpvaW4oJycpO1xuICB9XG59KTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///184\n")},function(module,exports,__webpack_require__){"use strict";eval("\n// 21.1.3.25 String.prototype.trim()\n__webpack_require__(40)('trim', function ($trim) {\n  return function trim() {\n    return $trim(this, 3);\n  };\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTg1LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuc3RyaW5nLnRyaW0uanM/NGYzNyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG4vLyAyMS4xLjMuMjUgU3RyaW5nLnByb3RvdHlwZS50cmltKClcbnJlcXVpcmUoJy4vX3N0cmluZy10cmltJykoJ3RyaW0nLCBmdW5jdGlvbiAoJHRyaW0pIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIHRyaW0oKSB7XG4gICAgcmV0dXJuICR0cmltKHRoaXMsIDMpO1xuICB9O1xufSk7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///185\n")},function(module,exports,__webpack_require__){"use strict";eval("\nvar $at = __webpack_require__(72)(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\n__webpack_require__(73)(String, 'String', function (iterated) {\n  this._t = String(iterated); // target\n  this._i = 0;                // next index\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var index = this._i;\n  var point;\n  if (index >= O.length) return { value: undefined, done: true };\n  point = $at(O, index);\n  this._i += point.length;\n  return { value: point, done: false };\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTg2LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuc3RyaW5nLml0ZXJhdG9yLmpzPzVkZjMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xudmFyICRhdCA9IHJlcXVpcmUoJy4vX3N0cmluZy1hdCcpKHRydWUpO1xuXG4vLyAyMS4xLjMuMjcgU3RyaW5nLnByb3RvdHlwZVtAQGl0ZXJhdG9yXSgpXG5yZXF1aXJlKCcuL19pdGVyLWRlZmluZScpKFN0cmluZywgJ1N0cmluZycsIGZ1bmN0aW9uIChpdGVyYXRlZCkge1xuICB0aGlzLl90ID0gU3RyaW5nKGl0ZXJhdGVkKTsgLy8gdGFyZ2V0XG4gIHRoaXMuX2kgPSAwOyAgICAgICAgICAgICAgICAvLyBuZXh0IGluZGV4XG4vLyAyMS4xLjUuMi4xICVTdHJpbmdJdGVyYXRvclByb3RvdHlwZSUubmV4dCgpXG59LCBmdW5jdGlvbiAoKSB7XG4gIHZhciBPID0gdGhpcy5fdDtcbiAgdmFyIGluZGV4ID0gdGhpcy5faTtcbiAgdmFyIHBvaW50O1xuICBpZiAoaW5kZXggPj0gTy5sZW5ndGgpIHJldHVybiB7IHZhbHVlOiB1bmRlZmluZWQsIGRvbmU6IHRydWUgfTtcbiAgcG9pbnQgPSAkYXQoTywgaW5kZXgpO1xuICB0aGlzLl9pICs9IHBvaW50Lmxlbmd0aDtcbiAgcmV0dXJuIHsgdmFsdWU6IHBvaW50LCBkb25lOiBmYWxzZSB9O1xufSk7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///186\n")},function(module,exports,__webpack_require__){"use strict";eval("\nvar $export = __webpack_require__(1);\nvar $at = __webpack_require__(72)(false);\n$export($export.P, 'String', {\n  // 21.1.3.3 String.prototype.codePointAt(pos)\n  codePointAt: function codePointAt(pos) {\n    return $at(this, pos);\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTg3LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuc3RyaW5nLmNvZGUtcG9pbnQtYXQuanM/YTAzMiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyICRhdCA9IHJlcXVpcmUoJy4vX3N0cmluZy1hdCcpKGZhbHNlKTtcbiRleHBvcnQoJGV4cG9ydC5QLCAnU3RyaW5nJywge1xuICAvLyAyMS4xLjMuMyBTdHJpbmcucHJvdG90eXBlLmNvZGVQb2ludEF0KHBvcylcbiAgY29kZVBvaW50QXQ6IGZ1bmN0aW9uIGNvZGVQb2ludEF0KHBvcykge1xuICAgIHJldHVybiAkYXQodGhpcywgcG9zKTtcbiAgfVxufSk7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///187\n")},function(module,exports,__webpack_require__){"use strict";eval("// 21.1.3.6 String.prototype.endsWith(searchString [, endPosition])\n\nvar $export = __webpack_require__(1);\nvar toLength = __webpack_require__(7);\nvar context = __webpack_require__(74);\nvar ENDS_WITH = 'endsWith';\nvar $endsWith = ''[ENDS_WITH];\n\n$export($export.P + $export.F * __webpack_require__(76)(ENDS_WITH), 'String', {\n  endsWith: function endsWith(searchString /* , endPosition = @length */) {\n    var that = context(this, searchString, ENDS_WITH);\n    var endPosition = arguments.length > 1 ? arguments[1] : undefined;\n    var len = toLength(that.length);\n    var end = endPosition === undefined ? len : Math.min(toLength(endPosition), len);\n    var search = String(searchString);\n    return $endsWith\n      ? $endsWith.call(that, search, end)\n      : that.slice(end - search.length, end) === search;\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTg4LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuc3RyaW5nLmVuZHMtd2l0aC5qcz9hZWY2Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIDIxLjEuMy42IFN0cmluZy5wcm90b3R5cGUuZW5kc1dpdGgoc2VhcmNoU3RyaW5nIFssIGVuZFBvc2l0aW9uXSlcbid1c2Ugc3RyaWN0JztcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgdG9MZW5ndGggPSByZXF1aXJlKCcuL190by1sZW5ndGgnKTtcbnZhciBjb250ZXh0ID0gcmVxdWlyZSgnLi9fc3RyaW5nLWNvbnRleHQnKTtcbnZhciBFTkRTX1dJVEggPSAnZW5kc1dpdGgnO1xudmFyICRlbmRzV2l0aCA9ICcnW0VORFNfV0lUSF07XG5cbiRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogcmVxdWlyZSgnLi9fZmFpbHMtaXMtcmVnZXhwJykoRU5EU19XSVRIKSwgJ1N0cmluZycsIHtcbiAgZW5kc1dpdGg6IGZ1bmN0aW9uIGVuZHNXaXRoKHNlYXJjaFN0cmluZyAvKiAsIGVuZFBvc2l0aW9uID0gQGxlbmd0aCAqLykge1xuICAgIHZhciB0aGF0ID0gY29udGV4dCh0aGlzLCBzZWFyY2hTdHJpbmcsIEVORFNfV0lUSCk7XG4gICAgdmFyIGVuZFBvc2l0aW9uID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgPyBhcmd1bWVudHNbMV0gOiB1bmRlZmluZWQ7XG4gICAgdmFyIGxlbiA9IHRvTGVuZ3RoKHRoYXQubGVuZ3RoKTtcbiAgICB2YXIgZW5kID0gZW5kUG9zaXRpb24gPT09IHVuZGVmaW5lZCA/IGxlbiA6IE1hdGgubWluKHRvTGVuZ3RoKGVuZFBvc2l0aW9uKSwgbGVuKTtcbiAgICB2YXIgc2VhcmNoID0gU3RyaW5nKHNlYXJjaFN0cmluZyk7XG4gICAgcmV0dXJuICRlbmRzV2l0aFxuICAgICAgPyAkZW5kc1dpdGguY2FsbCh0aGF0LCBzZWFyY2gsIGVuZClcbiAgICAgIDogdGhhdC5zbGljZShlbmQgLSBzZWFyY2gubGVuZ3RoLCBlbmQpID09PSBzZWFyY2g7XG4gIH1cbn0pO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///188\n")},function(module,exports,__webpack_require__){"use strict";eval("// 21.1.3.7 String.prototype.includes(searchString, position = 0)\n\nvar $export = __webpack_require__(1);\nvar context = __webpack_require__(74);\nvar INCLUDES = 'includes';\n\n$export($export.P + $export.F * __webpack_require__(76)(INCLUDES), 'String', {\n  includes: function includes(searchString /* , position = 0 */) {\n    return !!~context(this, searchString, INCLUDES)\n      .indexOf(searchString, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTg5LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuc3RyaW5nLmluY2x1ZGVzLmpzPzJmZGIiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gMjEuMS4zLjcgU3RyaW5nLnByb3RvdHlwZS5pbmNsdWRlcyhzZWFyY2hTdHJpbmcsIHBvc2l0aW9uID0gMClcbid1c2Ugc3RyaWN0JztcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgY29udGV4dCA9IHJlcXVpcmUoJy4vX3N0cmluZy1jb250ZXh0Jyk7XG52YXIgSU5DTFVERVMgPSAnaW5jbHVkZXMnO1xuXG4kZXhwb3J0KCRleHBvcnQuUCArICRleHBvcnQuRiAqIHJlcXVpcmUoJy4vX2ZhaWxzLWlzLXJlZ2V4cCcpKElOQ0xVREVTKSwgJ1N0cmluZycsIHtcbiAgaW5jbHVkZXM6IGZ1bmN0aW9uIGluY2x1ZGVzKHNlYXJjaFN0cmluZyAvKiAsIHBvc2l0aW9uID0gMCAqLykge1xuICAgIHJldHVybiAhIX5jb250ZXh0KHRoaXMsIHNlYXJjaFN0cmluZywgSU5DTFVERVMpXG4gICAgICAuaW5kZXhPZihzZWFyY2hTdHJpbmcsIGFyZ3VtZW50cy5sZW5ndGggPiAxID8gYXJndW1lbnRzWzFdIDogdW5kZWZpbmVkKTtcbiAgfVxufSk7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///189\n")},function(module,exports,__webpack_require__){eval("var $export = __webpack_require__(1);\n\n$export($export.P, 'String', {\n  // 21.1.3.13 String.prototype.repeat(count)\n  repeat: __webpack_require__(69)\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTkwLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuc3RyaW5nLnJlcGVhdC5qcz8xNGI5Il0sInNvdXJjZXNDb250ZW50IjpbInZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG5cbiRleHBvcnQoJGV4cG9ydC5QLCAnU3RyaW5nJywge1xuICAvLyAyMS4xLjMuMTMgU3RyaW5nLnByb3RvdHlwZS5yZXBlYXQoY291bnQpXG4gIHJlcGVhdDogcmVxdWlyZSgnLi9fc3RyaW5nLXJlcGVhdCcpXG59KTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///190\n")},function(module,exports,__webpack_require__){"use strict";eval("// 21.1.3.18 String.prototype.startsWith(searchString [, position ])\n\nvar $export = __webpack_require__(1);\nvar toLength = __webpack_require__(7);\nvar context = __webpack_require__(74);\nvar STARTS_WITH = 'startsWith';\nvar $startsWith = ''[STARTS_WITH];\n\n$export($export.P + $export.F * __webpack_require__(76)(STARTS_WITH), 'String', {\n  startsWith: function startsWith(searchString /* , position = 0 */) {\n    var that = context(this, searchString, STARTS_WITH);\n    var index = toLength(Math.min(arguments.length > 1 ? arguments[1] : undefined, that.length));\n    var search = String(searchString);\n    return $startsWith\n      ? $startsWith.call(that, search, index)\n      : that.slice(index, index + search.length) === search;\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTkxLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuc3RyaW5nLnN0YXJ0cy13aXRoLmpzP2Y1NTkiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gMjEuMS4zLjE4IFN0cmluZy5wcm90b3R5cGUuc3RhcnRzV2l0aChzZWFyY2hTdHJpbmcgWywgcG9zaXRpb24gXSlcbid1c2Ugc3RyaWN0JztcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgdG9MZW5ndGggPSByZXF1aXJlKCcuL190by1sZW5ndGgnKTtcbnZhciBjb250ZXh0ID0gcmVxdWlyZSgnLi9fc3RyaW5nLWNvbnRleHQnKTtcbnZhciBTVEFSVFNfV0lUSCA9ICdzdGFydHNXaXRoJztcbnZhciAkc3RhcnRzV2l0aCA9ICcnW1NUQVJUU19XSVRIXTtcblxuJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LkYgKiByZXF1aXJlKCcuL19mYWlscy1pcy1yZWdleHAnKShTVEFSVFNfV0lUSCksICdTdHJpbmcnLCB7XG4gIHN0YXJ0c1dpdGg6IGZ1bmN0aW9uIHN0YXJ0c1dpdGgoc2VhcmNoU3RyaW5nIC8qICwgcG9zaXRpb24gPSAwICovKSB7XG4gICAgdmFyIHRoYXQgPSBjb250ZXh0KHRoaXMsIHNlYXJjaFN0cmluZywgU1RBUlRTX1dJVEgpO1xuICAgIHZhciBpbmRleCA9IHRvTGVuZ3RoKE1hdGgubWluKGFyZ3VtZW50cy5sZW5ndGggPiAxID8gYXJndW1lbnRzWzFdIDogdW5kZWZpbmVkLCB0aGF0Lmxlbmd0aCkpO1xuICAgIHZhciBzZWFyY2ggPSBTdHJpbmcoc2VhcmNoU3RyaW5nKTtcbiAgICByZXR1cm4gJHN0YXJ0c1dpdGhcbiAgICAgID8gJHN0YXJ0c1dpdGguY2FsbCh0aGF0LCBzZWFyY2gsIGluZGV4KVxuICAgICAgOiB0aGF0LnNsaWNlKGluZGV4LCBpbmRleCArIHNlYXJjaC5sZW5ndGgpID09PSBzZWFyY2g7XG4gIH1cbn0pO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///191\n")},function(module,exports,__webpack_require__){"use strict";eval("\n// B.2.3.2 String.prototype.anchor(name)\n__webpack_require__(13)('anchor', function (createHTML) {\n  return function anchor(name) {\n    return createHTML(this, 'a', 'name', name);\n  };\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTkyLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuc3RyaW5nLmFuY2hvci5qcz84NDQ5Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0Jztcbi8vIEIuMi4zLjIgU3RyaW5nLnByb3RvdHlwZS5hbmNob3IobmFtZSlcbnJlcXVpcmUoJy4vX3N0cmluZy1odG1sJykoJ2FuY2hvcicsIGZ1bmN0aW9uIChjcmVhdGVIVE1MKSB7XG4gIHJldHVybiBmdW5jdGlvbiBhbmNob3IobmFtZSkge1xuICAgIHJldHVybiBjcmVhdGVIVE1MKHRoaXMsICdhJywgJ25hbWUnLCBuYW1lKTtcbiAgfTtcbn0pO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///192\n")},function(module,exports,__webpack_require__){"use strict";eval("\n// B.2.3.3 String.prototype.big()\n__webpack_require__(13)('big', function (createHTML) {\n  return function big() {\n    return createHTML(this, 'big', '', '');\n  };\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTkzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuc3RyaW5nLmJpZy5qcz85Yzg2Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0Jztcbi8vIEIuMi4zLjMgU3RyaW5nLnByb3RvdHlwZS5iaWcoKVxucmVxdWlyZSgnLi9fc3RyaW5nLWh0bWwnKSgnYmlnJywgZnVuY3Rpb24gKGNyZWF0ZUhUTUwpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIGJpZygpIHtcbiAgICByZXR1cm4gY3JlYXRlSFRNTCh0aGlzLCAnYmlnJywgJycsICcnKTtcbiAgfTtcbn0pO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///193\n")},function(module,exports,__webpack_require__){"use strict";eval("\n// B.2.3.4 String.prototype.blink()\n__webpack_require__(13)('blink', function (createHTML) {\n  return function blink() {\n    return createHTML(this, 'blink', '', '');\n  };\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTk0LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuc3RyaW5nLmJsaW5rLmpzP2ZhODMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuLy8gQi4yLjMuNCBTdHJpbmcucHJvdG90eXBlLmJsaW5rKClcbnJlcXVpcmUoJy4vX3N0cmluZy1odG1sJykoJ2JsaW5rJywgZnVuY3Rpb24gKGNyZWF0ZUhUTUwpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIGJsaW5rKCkge1xuICAgIHJldHVybiBjcmVhdGVIVE1MKHRoaXMsICdibGluaycsICcnLCAnJyk7XG4gIH07XG59KTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///194\n")},function(module,exports,__webpack_require__){"use strict";eval("\n// B.2.3.5 String.prototype.bold()\n__webpack_require__(13)('bold', function (createHTML) {\n  return function bold() {\n    return createHTML(this, 'b', '', '');\n  };\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTk1LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuc3RyaW5nLmJvbGQuanM/NDhjMCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG4vLyBCLjIuMy41IFN0cmluZy5wcm90b3R5cGUuYm9sZCgpXG5yZXF1aXJlKCcuL19zdHJpbmctaHRtbCcpKCdib2xkJywgZnVuY3Rpb24gKGNyZWF0ZUhUTUwpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIGJvbGQoKSB7XG4gICAgcmV0dXJuIGNyZWF0ZUhUTUwodGhpcywgJ2InLCAnJywgJycpO1xuICB9O1xufSk7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///195\n")},function(module,exports,__webpack_require__){"use strict";eval("\n// B.2.3.6 String.prototype.fixed()\n__webpack_require__(13)('fixed', function (createHTML) {\n  return function fixed() {\n    return createHTML(this, 'tt', '', '');\n  };\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTk2LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuc3RyaW5nLmZpeGVkLmpzP2QyNjMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuLy8gQi4yLjMuNiBTdHJpbmcucHJvdG90eXBlLmZpeGVkKClcbnJlcXVpcmUoJy4vX3N0cmluZy1odG1sJykoJ2ZpeGVkJywgZnVuY3Rpb24gKGNyZWF0ZUhUTUwpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIGZpeGVkKCkge1xuICAgIHJldHVybiBjcmVhdGVIVE1MKHRoaXMsICd0dCcsICcnLCAnJyk7XG4gIH07XG59KTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///196\n")},function(module,exports,__webpack_require__){"use strict";eval("\n// B.2.3.7 String.prototype.fontcolor(color)\n__webpack_require__(13)('fontcolor', function (createHTML) {\n  return function fontcolor(color) {\n    return createHTML(this, 'font', 'color', color);\n  };\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTk3LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuc3RyaW5nLmZvbnRjb2xvci5qcz82YzM3Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0Jztcbi8vIEIuMi4zLjcgU3RyaW5nLnByb3RvdHlwZS5mb250Y29sb3IoY29sb3IpXG5yZXF1aXJlKCcuL19zdHJpbmctaHRtbCcpKCdmb250Y29sb3InLCBmdW5jdGlvbiAoY3JlYXRlSFRNTCkge1xuICByZXR1cm4gZnVuY3Rpb24gZm9udGNvbG9yKGNvbG9yKSB7XG4gICAgcmV0dXJuIGNyZWF0ZUhUTUwodGhpcywgJ2ZvbnQnLCAnY29sb3InLCBjb2xvcik7XG4gIH07XG59KTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///197\n")},function(module,exports,__webpack_require__){"use strict";eval("\n// B.2.3.8 String.prototype.fontsize(size)\n__webpack_require__(13)('fontsize', function (createHTML) {\n  return function fontsize(size) {\n    return createHTML(this, 'font', 'size', size);\n  };\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTk4LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuc3RyaW5nLmZvbnRzaXplLmpzPzllYzgiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuLy8gQi4yLjMuOCBTdHJpbmcucHJvdG90eXBlLmZvbnRzaXplKHNpemUpXG5yZXF1aXJlKCcuL19zdHJpbmctaHRtbCcpKCdmb250c2l6ZScsIGZ1bmN0aW9uIChjcmVhdGVIVE1MKSB7XG4gIHJldHVybiBmdW5jdGlvbiBmb250c2l6ZShzaXplKSB7XG4gICAgcmV0dXJuIGNyZWF0ZUhUTUwodGhpcywgJ2ZvbnQnLCAnc2l6ZScsIHNpemUpO1xuICB9O1xufSk7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///198\n")},function(module,exports,__webpack_require__){"use strict";eval("\n// B.2.3.9 String.prototype.italics()\n__webpack_require__(13)('italics', function (createHTML) {\n  return function italics() {\n    return createHTML(this, 'i', '', '');\n  };\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTk5LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuc3RyaW5nLml0YWxpY3MuanM/ZDBiMCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG4vLyBCLjIuMy45IFN0cmluZy5wcm90b3R5cGUuaXRhbGljcygpXG5yZXF1aXJlKCcuL19zdHJpbmctaHRtbCcpKCdpdGFsaWNzJywgZnVuY3Rpb24gKGNyZWF0ZUhUTUwpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIGl0YWxpY3MoKSB7XG4gICAgcmV0dXJuIGNyZWF0ZUhUTUwodGhpcywgJ2knLCAnJywgJycpO1xuICB9O1xufSk7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///199\n")},function(module,exports,__webpack_require__){"use strict";eval("\n// B.2.3.10 String.prototype.link(url)\n__webpack_require__(13)('link', function (createHTML) {\n  return function link(url) {\n    return createHTML(this, 'a', 'href', url);\n  };\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjAwLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuc3RyaW5nLmxpbmsuanM/YjU0YSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG4vLyBCLjIuMy4xMCBTdHJpbmcucHJvdG90eXBlLmxpbmsodXJsKVxucmVxdWlyZSgnLi9fc3RyaW5nLWh0bWwnKSgnbGluaycsIGZ1bmN0aW9uIChjcmVhdGVIVE1MKSB7XG4gIHJldHVybiBmdW5jdGlvbiBsaW5rKHVybCkge1xuICAgIHJldHVybiBjcmVhdGVIVE1MKHRoaXMsICdhJywgJ2hyZWYnLCB1cmwpO1xuICB9O1xufSk7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///200\n")},function(module,exports,__webpack_require__){"use strict";eval("\n// B.2.3.11 String.prototype.small()\n__webpack_require__(13)('small', function (createHTML) {\n  return function small() {\n    return createHTML(this, 'small', '', '');\n  };\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjAxLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuc3RyaW5nLnNtYWxsLmpzP2YzODYiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuLy8gQi4yLjMuMTEgU3RyaW5nLnByb3RvdHlwZS5zbWFsbCgpXG5yZXF1aXJlKCcuL19zdHJpbmctaHRtbCcpKCdzbWFsbCcsIGZ1bmN0aW9uIChjcmVhdGVIVE1MKSB7XG4gIHJldHVybiBmdW5jdGlvbiBzbWFsbCgpIHtcbiAgICByZXR1cm4gY3JlYXRlSFRNTCh0aGlzLCAnc21hbGwnLCAnJywgJycpO1xuICB9O1xufSk7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///201\n")},function(module,exports,__webpack_require__){"use strict";eval("\n// B.2.3.12 String.prototype.strike()\n__webpack_require__(13)('strike', function (createHTML) {\n  return function strike() {\n    return createHTML(this, 'strike', '', '');\n  };\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjAyLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuc3RyaW5nLnN0cmlrZS5qcz8xNDQ4Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0Jztcbi8vIEIuMi4zLjEyIFN0cmluZy5wcm90b3R5cGUuc3RyaWtlKClcbnJlcXVpcmUoJy4vX3N0cmluZy1odG1sJykoJ3N0cmlrZScsIGZ1bmN0aW9uIChjcmVhdGVIVE1MKSB7XG4gIHJldHVybiBmdW5jdGlvbiBzdHJpa2UoKSB7XG4gICAgcmV0dXJuIGNyZWF0ZUhUTUwodGhpcywgJ3N0cmlrZScsICcnLCAnJyk7XG4gIH07XG59KTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///202\n")},function(module,exports,__webpack_require__){"use strict";eval("\n// B.2.3.13 String.prototype.sub()\n__webpack_require__(13)('sub', function (createHTML) {\n  return function sub() {\n    return createHTML(this, 'sub', '', '');\n  };\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjAzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuc3RyaW5nLnN1Yi5qcz82NzNlIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0Jztcbi8vIEIuMi4zLjEzIFN0cmluZy5wcm90b3R5cGUuc3ViKClcbnJlcXVpcmUoJy4vX3N0cmluZy1odG1sJykoJ3N1YicsIGZ1bmN0aW9uIChjcmVhdGVIVE1MKSB7XG4gIHJldHVybiBmdW5jdGlvbiBzdWIoKSB7XG4gICAgcmV0dXJuIGNyZWF0ZUhUTUwodGhpcywgJ3N1YicsICcnLCAnJyk7XG4gIH07XG59KTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///203\n")},function(module,exports,__webpack_require__){"use strict";eval("\n// B.2.3.14 String.prototype.sup()\n__webpack_require__(13)('sup', function (createHTML) {\n  return function sup() {\n    return createHTML(this, 'sup', '', '');\n  };\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjA0LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuc3RyaW5nLnN1cC5qcz8yNDJhIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0Jztcbi8vIEIuMi4zLjE0IFN0cmluZy5wcm90b3R5cGUuc3VwKClcbnJlcXVpcmUoJy4vX3N0cmluZy1odG1sJykoJ3N1cCcsIGZ1bmN0aW9uIChjcmVhdGVIVE1MKSB7XG4gIHJldHVybiBmdW5jdGlvbiBzdXAoKSB7XG4gICAgcmV0dXJuIGNyZWF0ZUhUTUwodGhpcywgJ3N1cCcsICcnLCAnJyk7XG4gIH07XG59KTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///204\n")},function(module,exports,__webpack_require__){eval("// 20.3.3.1 / 15.9.4.4 Date.now()\nvar $export = __webpack_require__(1);\n\n$export($export.S, 'Date', { now: function () { return new Date().getTime(); } });\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjA1LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuZGF0ZS5ub3cuanM/NzhjZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyAyMC4zLjMuMSAvIDE1LjkuNC40IERhdGUubm93KClcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnRGF0ZScsIHsgbm93OiBmdW5jdGlvbiAoKSB7IHJldHVybiBuZXcgRGF0ZSgpLmdldFRpbWUoKTsgfSB9KTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///205\n")},function(module,exports,__webpack_require__){"use strict";eval("\nvar $export = __webpack_require__(1);\nvar toObject = __webpack_require__(11);\nvar toPrimitive = __webpack_require__(27);\n\n$export($export.P + $export.F * __webpack_require__(3)(function () {\n  return new Date(NaN).toJSON() !== null\n    || Date.prototype.toJSON.call({ toISOString: function () { return 1; } }) !== 1;\n}), 'Date', {\n  // eslint-disable-next-line no-unused-vars\n  toJSON: function toJSON(key) {\n    var O = toObject(this);\n    var pv = toPrimitive(O);\n    return typeof pv == 'number' && !isFinite(pv) ? null : O.toISOString();\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjA2LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuZGF0ZS50by1qc29uLmpzPzAyOTgiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciB0b09iamVjdCA9IHJlcXVpcmUoJy4vX3RvLW9iamVjdCcpO1xudmFyIHRvUHJpbWl0aXZlID0gcmVxdWlyZSgnLi9fdG8tcHJpbWl0aXZlJyk7XG5cbiRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogcmVxdWlyZSgnLi9fZmFpbHMnKShmdW5jdGlvbiAoKSB7XG4gIHJldHVybiBuZXcgRGF0ZShOYU4pLnRvSlNPTigpICE9PSBudWxsXG4gICAgfHwgRGF0ZS5wcm90b3R5cGUudG9KU09OLmNhbGwoeyB0b0lTT1N0cmluZzogZnVuY3Rpb24gKCkgeyByZXR1cm4gMTsgfSB9KSAhPT0gMTtcbn0pLCAnRGF0ZScsIHtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVudXNlZC12YXJzXG4gIHRvSlNPTjogZnVuY3Rpb24gdG9KU09OKGtleSkge1xuICAgIHZhciBPID0gdG9PYmplY3QodGhpcyk7XG4gICAgdmFyIHB2ID0gdG9QcmltaXRpdmUoTyk7XG4gICAgcmV0dXJuIHR5cGVvZiBwdiA9PSAnbnVtYmVyJyAmJiAhaXNGaW5pdGUocHYpID8gbnVsbCA6IE8udG9JU09TdHJpbmcoKTtcbiAgfVxufSk7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///206\n")},function(module,exports,__webpack_require__){eval("// 20.3.4.36 / 15.9.5.43 Date.prototype.toISOString()\nvar $export = __webpack_require__(1);\nvar toISOString = __webpack_require__(208);\n\n// PhantomJS / old WebKit has a broken implementations\n$export($export.P + $export.F * (Date.prototype.toISOString !== toISOString), 'Date', {\n  toISOString: toISOString\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjA3LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuZGF0ZS50by1pc28tc3RyaW5nLmpzPzhlYTUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gMjAuMy40LjM2IC8gMTUuOS41LjQzIERhdGUucHJvdG90eXBlLnRvSVNPU3RyaW5nKClcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgdG9JU09TdHJpbmcgPSByZXF1aXJlKCcuL19kYXRlLXRvLWlzby1zdHJpbmcnKTtcblxuLy8gUGhhbnRvbUpTIC8gb2xkIFdlYktpdCBoYXMgYSBicm9rZW4gaW1wbGVtZW50YXRpb25zXG4kZXhwb3J0KCRleHBvcnQuUCArICRleHBvcnQuRiAqIChEYXRlLnByb3RvdHlwZS50b0lTT1N0cmluZyAhPT0gdG9JU09TdHJpbmcpLCAnRGF0ZScsIHtcbiAgdG9JU09TdHJpbmc6IHRvSVNPU3RyaW5nXG59KTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///207\n")},function(module,exports,__webpack_require__){"use strict";eval("\n// 20.3.4.36 / 15.9.5.43 Date.prototype.toISOString()\nvar fails = __webpack_require__(3);\nvar getTime = Date.prototype.getTime;\nvar $toISOString = Date.prototype.toISOString;\n\nvar lz = function (num) {\n  return num > 9 ? num : '0' + num;\n};\n\n// PhantomJS / old WebKit has a broken implementations\nmodule.exports = (fails(function () {\n  return $toISOString.call(new Date(-5e13 - 1)) != '0385-07-25T07:06:39.999Z';\n}) || !fails(function () {\n  $toISOString.call(new Date(NaN));\n})) ? function toISOString() {\n  if (!isFinite(getTime.call(this))) throw RangeError('Invalid time value');\n  var d = this;\n  var y = d.getUTCFullYear();\n  var m = d.getUTCMilliseconds();\n  var s = y < 0 ? '-' : y > 9999 ? '+' : '';\n  return s + ('00000' + Math.abs(y)).slice(s ? -6 : -4) +\n    '-' + lz(d.getUTCMonth() + 1) + '-' + lz(d.getUTCDate()) +\n    'T' + lz(d.getUTCHours()) + ':' + lz(d.getUTCMinutes()) +\n    ':' + lz(d.getUTCSeconds()) + '.' + (m > 99 ? m : '0' + lz(m)) + 'Z';\n} : $toISOString;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjA4LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fZGF0ZS10by1pc28tc3RyaW5nLmpzPzhlZDAiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuLy8gMjAuMy40LjM2IC8gMTUuOS41LjQzIERhdGUucHJvdG90eXBlLnRvSVNPU3RyaW5nKClcbnZhciBmYWlscyA9IHJlcXVpcmUoJy4vX2ZhaWxzJyk7XG52YXIgZ2V0VGltZSA9IERhdGUucHJvdG90eXBlLmdldFRpbWU7XG52YXIgJHRvSVNPU3RyaW5nID0gRGF0ZS5wcm90b3R5cGUudG9JU09TdHJpbmc7XG5cbnZhciBseiA9IGZ1bmN0aW9uIChudW0pIHtcbiAgcmV0dXJuIG51bSA+IDkgPyBudW0gOiAnMCcgKyBudW07XG59O1xuXG4vLyBQaGFudG9tSlMgLyBvbGQgV2ViS2l0IGhhcyBhIGJyb2tlbiBpbXBsZW1lbnRhdGlvbnNcbm1vZHVsZS5leHBvcnRzID0gKGZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuICR0b0lTT1N0cmluZy5jYWxsKG5ldyBEYXRlKC01ZTEzIC0gMSkpICE9ICcwMzg1LTA3LTI1VDA3OjA2OjM5Ljk5OVonO1xufSkgfHwgIWZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgJHRvSVNPU3RyaW5nLmNhbGwobmV3IERhdGUoTmFOKSk7XG59KSkgPyBmdW5jdGlvbiB0b0lTT1N0cmluZygpIHtcbiAgaWYgKCFpc0Zpbml0ZShnZXRUaW1lLmNhbGwodGhpcykpKSB0aHJvdyBSYW5nZUVycm9yKCdJbnZhbGlkIHRpbWUgdmFsdWUnKTtcbiAgdmFyIGQgPSB0aGlzO1xuICB2YXIgeSA9IGQuZ2V0VVRDRnVsbFllYXIoKTtcbiAgdmFyIG0gPSBkLmdldFVUQ01pbGxpc2Vjb25kcygpO1xuICB2YXIgcyA9IHkgPCAwID8gJy0nIDogeSA+IDk5OTkgPyAnKycgOiAnJztcbiAgcmV0dXJuIHMgKyAoJzAwMDAwJyArIE1hdGguYWJzKHkpKS5zbGljZShzID8gLTYgOiAtNCkgK1xuICAgICctJyArIGx6KGQuZ2V0VVRDTW9udGgoKSArIDEpICsgJy0nICsgbHooZC5nZXRVVENEYXRlKCkpICtcbiAgICAnVCcgKyBseihkLmdldFVUQ0hvdXJzKCkpICsgJzonICsgbHooZC5nZXRVVENNaW51dGVzKCkpICtcbiAgICAnOicgKyBseihkLmdldFVUQ1NlY29uZHMoKSkgKyAnLicgKyAobSA+IDk5ID8gbSA6ICcwJyArIGx6KG0pKSArICdaJztcbn0gOiAkdG9JU09TdHJpbmc7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///208\n")},function(module,exports,__webpack_require__){eval("var DateProto = Date.prototype;\nvar INVALID_DATE = 'Invalid Date';\nvar TO_STRING = 'toString';\nvar $toString = DateProto[TO_STRING];\nvar getTime = DateProto.getTime;\nif (new Date(NaN) + '' != INVALID_DATE) {\n  __webpack_require__(12)(DateProto, TO_STRING, function toString() {\n    var value = getTime.call(this);\n    // eslint-disable-next-line no-self-compare\n    return value === value ? $toString.call(this) : INVALID_DATE;\n  });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjA5LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuZGF0ZS50by1zdHJpbmcuanM/ODdiMyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgRGF0ZVByb3RvID0gRGF0ZS5wcm90b3R5cGU7XG52YXIgSU5WQUxJRF9EQVRFID0gJ0ludmFsaWQgRGF0ZSc7XG52YXIgVE9fU1RSSU5HID0gJ3RvU3RyaW5nJztcbnZhciAkdG9TdHJpbmcgPSBEYXRlUHJvdG9bVE9fU1RSSU5HXTtcbnZhciBnZXRUaW1lID0gRGF0ZVByb3RvLmdldFRpbWU7XG5pZiAobmV3IERhdGUoTmFOKSArICcnICE9IElOVkFMSURfREFURSkge1xuICByZXF1aXJlKCcuL19yZWRlZmluZScpKERhdGVQcm90bywgVE9fU1RSSU5HLCBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICB2YXIgdmFsdWUgPSBnZXRUaW1lLmNhbGwodGhpcyk7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXNlbGYtY29tcGFyZVxuICAgIHJldHVybiB2YWx1ZSA9PT0gdmFsdWUgPyAkdG9TdHJpbmcuY2FsbCh0aGlzKSA6IElOVkFMSURfREFURTtcbiAgfSk7XG59XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///209\n")},function(module,exports,__webpack_require__){eval("var TO_PRIMITIVE = __webpack_require__(6)('toPrimitive');\nvar proto = Date.prototype;\n\nif (!(TO_PRIMITIVE in proto)) __webpack_require__(15)(proto, TO_PRIMITIVE, __webpack_require__(211));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjEwLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuZGF0ZS50by1wcmltaXRpdmUuanM/YzhjZSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgVE9fUFJJTUlUSVZFID0gcmVxdWlyZSgnLi9fd2tzJykoJ3RvUHJpbWl0aXZlJyk7XG52YXIgcHJvdG8gPSBEYXRlLnByb3RvdHlwZTtcblxuaWYgKCEoVE9fUFJJTUlUSVZFIGluIHByb3RvKSkgcmVxdWlyZSgnLi9faGlkZScpKHByb3RvLCBUT19QUklNSVRJVkUsIHJlcXVpcmUoJy4vX2RhdGUtdG8tcHJpbWl0aXZlJykpO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///210\n")},function(module,exports,__webpack_require__){"use strict";eval("\nvar anObject = __webpack_require__(4);\nvar toPrimitive = __webpack_require__(27);\nvar NUMBER = 'number';\n\nmodule.exports = function (hint) {\n  if (hint !== 'string' && hint !== NUMBER && hint !== 'default') throw TypeError('Incorrect hint');\n  return toPrimitive(anObject(this), hint != NUMBER);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjExLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fZGF0ZS10by1wcmltaXRpdmUuanM/ODM4MSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbnZhciB0b1ByaW1pdGl2ZSA9IHJlcXVpcmUoJy4vX3RvLXByaW1pdGl2ZScpO1xudmFyIE5VTUJFUiA9ICdudW1iZXInO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChoaW50KSB7XG4gIGlmIChoaW50ICE9PSAnc3RyaW5nJyAmJiBoaW50ICE9PSBOVU1CRVIgJiYgaGludCAhPT0gJ2RlZmF1bHQnKSB0aHJvdyBUeXBlRXJyb3IoJ0luY29ycmVjdCBoaW50Jyk7XG4gIHJldHVybiB0b1ByaW1pdGl2ZShhbk9iamVjdCh0aGlzKSwgaGludCAhPSBOVU1CRVIpO1xufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///211\n")},function(module,exports,__webpack_require__){eval("// 22.1.2.2 / 15.4.3.2 Array.isArray(arg)\nvar $export = __webpack_require__(1);\n\n$export($export.S, 'Array', { isArray: __webpack_require__(52) });\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjEyLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuYXJyYXkuaXMtYXJyYXkuanM/MmNhZiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyAyMi4xLjIuMiAvIDE1LjQuMy4yIEFycmF5LmlzQXJyYXkoYXJnKVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcblxuJGV4cG9ydCgkZXhwb3J0LlMsICdBcnJheScsIHsgaXNBcnJheTogcmVxdWlyZSgnLi9faXMtYXJyYXknKSB9KTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///212\n")},function(module,exports,__webpack_require__){"use strict";eval("\nvar ctx = __webpack_require__(18);\nvar $export = __webpack_require__(1);\nvar toObject = __webpack_require__(11);\nvar call = __webpack_require__(106);\nvar isArrayIter = __webpack_require__(77);\nvar toLength = __webpack_require__(7);\nvar createProperty = __webpack_require__(78);\nvar getIterFn = __webpack_require__(79);\n\n$export($export.S + $export.F * !__webpack_require__(53)(function (iter) { Array.from(iter); }), 'Array', {\n  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)\n  from: function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {\n    var O = toObject(arrayLike);\n    var C = typeof this == 'function' ? this : Array;\n    var aLen = arguments.length;\n    var mapfn = aLen > 1 ? arguments[1] : undefined;\n    var mapping = mapfn !== undefined;\n    var index = 0;\n    var iterFn = getIterFn(O);\n    var length, result, step, iterator;\n    if (mapping) mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);\n    // if object isn't iterable or it's array with default iterator - use simple case\n    if (iterFn != undefined && !(C == Array && isArrayIter(iterFn))) {\n      for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {\n        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);\n      }\n    } else {\n      length = toLength(O.length);\n      for (result = new C(length); length > index; index++) {\n        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);\n      }\n    }\n    result.length = index;\n    return result;\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjEzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuYXJyYXkuZnJvbS5qcz8xYzRjIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcbnZhciBjdHggPSByZXF1aXJlKCcuL19jdHgnKTtcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgdG9PYmplY3QgPSByZXF1aXJlKCcuL190by1vYmplY3QnKTtcbnZhciBjYWxsID0gcmVxdWlyZSgnLi9faXRlci1jYWxsJyk7XG52YXIgaXNBcnJheUl0ZXIgPSByZXF1aXJlKCcuL19pcy1hcnJheS1pdGVyJyk7XG52YXIgdG9MZW5ndGggPSByZXF1aXJlKCcuL190by1sZW5ndGgnKTtcbnZhciBjcmVhdGVQcm9wZXJ0eSA9IHJlcXVpcmUoJy4vX2NyZWF0ZS1wcm9wZXJ0eScpO1xudmFyIGdldEl0ZXJGbiA9IHJlcXVpcmUoJy4vY29yZS5nZXQtaXRlcmF0b3ItbWV0aG9kJyk7XG5cbiRleHBvcnQoJGV4cG9ydC5TICsgJGV4cG9ydC5GICogIXJlcXVpcmUoJy4vX2l0ZXItZGV0ZWN0JykoZnVuY3Rpb24gKGl0ZXIpIHsgQXJyYXkuZnJvbShpdGVyKTsgfSksICdBcnJheScsIHtcbiAgLy8gMjIuMS4yLjEgQXJyYXkuZnJvbShhcnJheUxpa2UsIG1hcGZuID0gdW5kZWZpbmVkLCB0aGlzQXJnID0gdW5kZWZpbmVkKVxuICBmcm9tOiBmdW5jdGlvbiBmcm9tKGFycmF5TGlrZSAvKiAsIG1hcGZuID0gdW5kZWZpbmVkLCB0aGlzQXJnID0gdW5kZWZpbmVkICovKSB7XG4gICAgdmFyIE8gPSB0b09iamVjdChhcnJheUxpa2UpO1xuICAgIHZhciBDID0gdHlwZW9mIHRoaXMgPT0gJ2Z1bmN0aW9uJyA/IHRoaXMgOiBBcnJheTtcbiAgICB2YXIgYUxlbiA9IGFyZ3VtZW50cy5sZW5ndGg7XG4gICAgdmFyIG1hcGZuID0gYUxlbiA+IDEgPyBhcmd1bWVudHNbMV0gOiB1bmRlZmluZWQ7XG4gICAgdmFyIG1hcHBpbmcgPSBtYXBmbiAhPT0gdW5kZWZpbmVkO1xuICAgIHZhciBpbmRleCA9IDA7XG4gICAgdmFyIGl0ZXJGbiA9IGdldEl0ZXJGbihPKTtcbiAgICB2YXIgbGVuZ3RoLCByZXN1bHQsIHN0ZXAsIGl0ZXJhdG9yO1xuICAgIGlmIChtYXBwaW5nKSBtYXBmbiA9IGN0eChtYXBmbiwgYUxlbiA+IDIgPyBhcmd1bWVudHNbMl0gOiB1bmRlZmluZWQsIDIpO1xuICAgIC8vIGlmIG9iamVjdCBpc24ndCBpdGVyYWJsZSBvciBpdCdzIGFycmF5IHdpdGggZGVmYXVsdCBpdGVyYXRvciAtIHVzZSBzaW1wbGUgY2FzZVxuICAgIGlmIChpdGVyRm4gIT0gdW5kZWZpbmVkICYmICEoQyA9PSBBcnJheSAmJiBpc0FycmF5SXRlcihpdGVyRm4pKSkge1xuICAgICAgZm9yIChpdGVyYXRvciA9IGl0ZXJGbi5jYWxsKE8pLCByZXN1bHQgPSBuZXcgQygpOyAhKHN0ZXAgPSBpdGVyYXRvci5uZXh0KCkpLmRvbmU7IGluZGV4KyspIHtcbiAgICAgICAgY3JlYXRlUHJvcGVydHkocmVzdWx0LCBpbmRleCwgbWFwcGluZyA/IGNhbGwoaXRlcmF0b3IsIG1hcGZuLCBbc3RlcC52YWx1ZSwgaW5kZXhdLCB0cnVlKSA6IHN0ZXAudmFsdWUpO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBsZW5ndGggPSB0b0xlbmd0aChPLmxlbmd0aCk7XG4gICAgICBmb3IgKHJlc3VsdCA9IG5ldyBDKGxlbmd0aCk7IGxlbmd0aCA+IGluZGV4OyBpbmRleCsrKSB7XG4gICAgICAgIGNyZWF0ZVByb3BlcnR5KHJlc3VsdCwgaW5kZXgsIG1hcHBpbmcgPyBtYXBmbihPW2luZGV4XSwgaW5kZXgpIDogT1tpbmRleF0pO1xuICAgICAgfVxuICAgIH1cbiAgICByZXN1bHQubGVuZ3RoID0gaW5kZXg7XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfVxufSk7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///213\n")},function(module,exports,__webpack_require__){"use strict";eval("\nvar $export = __webpack_require__(1);\nvar createProperty = __webpack_require__(78);\n\n// WebKit Array.of isn't generic\n$export($export.S + $export.F * __webpack_require__(3)(function () {\n  function F() { /* empty */ }\n  return !(Array.of.call(F) instanceof F);\n}), 'Array', {\n  // 22.1.2.3 Array.of( ...items)\n  of: function of(/* ...args */) {\n    var index = 0;\n    var aLen = arguments.length;\n    var result = new (typeof this == 'function' ? this : Array)(aLen);\n    while (aLen > index) createProperty(result, index, arguments[index++]);\n    result.length = aLen;\n    return result;\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjE0LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuYXJyYXkub2YuanM/ZTgwNCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIGNyZWF0ZVByb3BlcnR5ID0gcmVxdWlyZSgnLi9fY3JlYXRlLXByb3BlcnR5Jyk7XG5cbi8vIFdlYktpdCBBcnJheS5vZiBpc24ndCBnZW5lcmljXG4kZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqIHJlcXVpcmUoJy4vX2ZhaWxzJykoZnVuY3Rpb24gKCkge1xuICBmdW5jdGlvbiBGKCkgeyAvKiBlbXB0eSAqLyB9XG4gIHJldHVybiAhKEFycmF5Lm9mLmNhbGwoRikgaW5zdGFuY2VvZiBGKTtcbn0pLCAnQXJyYXknLCB7XG4gIC8vIDIyLjEuMi4zIEFycmF5Lm9mKCAuLi5pdGVtcylcbiAgb2Y6IGZ1bmN0aW9uIG9mKC8qIC4uLmFyZ3MgKi8pIHtcbiAgICB2YXIgaW5kZXggPSAwO1xuICAgIHZhciBhTGVuID0gYXJndW1lbnRzLmxlbmd0aDtcbiAgICB2YXIgcmVzdWx0ID0gbmV3ICh0eXBlb2YgdGhpcyA9PSAnZnVuY3Rpb24nID8gdGhpcyA6IEFycmF5KShhTGVuKTtcbiAgICB3aGlsZSAoYUxlbiA+IGluZGV4KSBjcmVhdGVQcm9wZXJ0eShyZXN1bHQsIGluZGV4LCBhcmd1bWVudHNbaW5kZXgrK10pO1xuICAgIHJlc3VsdC5sZW5ndGggPSBhTGVuO1xuICAgIHJldHVybiByZXN1bHQ7XG4gIH1cbn0pO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///214\n")},function(module,exports,__webpack_require__){"use strict";eval("\n// 22.1.3.13 Array.prototype.join(separator)\nvar $export = __webpack_require__(1);\nvar toIObject = __webpack_require__(16);\nvar arrayJoin = [].join;\n\n// fallback for not array-like strings\n$export($export.P + $export.F * (__webpack_require__(45) != Object || !__webpack_require__(17)(arrayJoin)), 'Array', {\n  join: function join(separator) {\n    return arrayJoin.call(toIObject(this), separator === undefined ? ',' : separator);\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjE1LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuYXJyYXkuam9pbi5qcz8zNzNmIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0Jztcbi8vIDIyLjEuMy4xMyBBcnJheS5wcm90b3R5cGUuam9pbihzZXBhcmF0b3IpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIHRvSU9iamVjdCA9IHJlcXVpcmUoJy4vX3RvLWlvYmplY3QnKTtcbnZhciBhcnJheUpvaW4gPSBbXS5qb2luO1xuXG4vLyBmYWxsYmFjayBmb3Igbm90IGFycmF5LWxpa2Ugc3RyaW5nc1xuJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LkYgKiAocmVxdWlyZSgnLi9faW9iamVjdCcpICE9IE9iamVjdCB8fCAhcmVxdWlyZSgnLi9fc3RyaWN0LW1ldGhvZCcpKGFycmF5Sm9pbikpLCAnQXJyYXknLCB7XG4gIGpvaW46IGZ1bmN0aW9uIGpvaW4oc2VwYXJhdG9yKSB7XG4gICAgcmV0dXJuIGFycmF5Sm9pbi5jYWxsKHRvSU9iamVjdCh0aGlzKSwgc2VwYXJhdG9yID09PSB1bmRlZmluZWQgPyAnLCcgOiBzZXBhcmF0b3IpO1xuICB9XG59KTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///215\n")},function(module,exports,__webpack_require__){"use strict";eval("\nvar $export = __webpack_require__(1);\nvar html = __webpack_require__(65);\nvar cof = __webpack_require__(24);\nvar toAbsoluteIndex = __webpack_require__(33);\nvar toLength = __webpack_require__(7);\nvar arraySlice = [].slice;\n\n// fallback for not array-like ES3 strings and DOM objects\n$export($export.P + $export.F * __webpack_require__(3)(function () {\n  if (html) arraySlice.call(html);\n}), 'Array', {\n  slice: function slice(begin, end) {\n    var len = toLength(this.length);\n    var klass = cof(this);\n    end = end === undefined ? len : end;\n    if (klass == 'Array') return arraySlice.call(this, begin, end);\n    var start = toAbsoluteIndex(begin, len);\n    var upTo = toAbsoluteIndex(end, len);\n    var size = toLength(upTo - start);\n    var cloned = new Array(size);\n    var i = 0;\n    for (; i < size; i++) cloned[i] = klass == 'String'\n      ? this.charAt(start + i)\n      : this[start + i];\n    return cloned;\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjE2LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuYXJyYXkuc2xpY2UuanM/MjNiZiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIGh0bWwgPSByZXF1aXJlKCcuL19odG1sJyk7XG52YXIgY29mID0gcmVxdWlyZSgnLi9fY29mJyk7XG52YXIgdG9BYnNvbHV0ZUluZGV4ID0gcmVxdWlyZSgnLi9fdG8tYWJzb2x1dGUtaW5kZXgnKTtcbnZhciB0b0xlbmd0aCA9IHJlcXVpcmUoJy4vX3RvLWxlbmd0aCcpO1xudmFyIGFycmF5U2xpY2UgPSBbXS5zbGljZTtcblxuLy8gZmFsbGJhY2sgZm9yIG5vdCBhcnJheS1saWtlIEVTMyBzdHJpbmdzIGFuZCBET00gb2JqZWN0c1xuJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LkYgKiByZXF1aXJlKCcuL19mYWlscycpKGZ1bmN0aW9uICgpIHtcbiAgaWYgKGh0bWwpIGFycmF5U2xpY2UuY2FsbChodG1sKTtcbn0pLCAnQXJyYXknLCB7XG4gIHNsaWNlOiBmdW5jdGlvbiBzbGljZShiZWdpbiwgZW5kKSB7XG4gICAgdmFyIGxlbiA9IHRvTGVuZ3RoKHRoaXMubGVuZ3RoKTtcbiAgICB2YXIga2xhc3MgPSBjb2YodGhpcyk7XG4gICAgZW5kID0gZW5kID09PSB1bmRlZmluZWQgPyBsZW4gOiBlbmQ7XG4gICAgaWYgKGtsYXNzID09ICdBcnJheScpIHJldHVybiBhcnJheVNsaWNlLmNhbGwodGhpcywgYmVnaW4sIGVuZCk7XG4gICAgdmFyIHN0YXJ0ID0gdG9BYnNvbHV0ZUluZGV4KGJlZ2luLCBsZW4pO1xuICAgIHZhciB1cFRvID0gdG9BYnNvbHV0ZUluZGV4KGVuZCwgbGVuKTtcbiAgICB2YXIgc2l6ZSA9IHRvTGVuZ3RoKHVwVG8gLSBzdGFydCk7XG4gICAgdmFyIGNsb25lZCA9IG5ldyBBcnJheShzaXplKTtcbiAgICB2YXIgaSA9IDA7XG4gICAgZm9yICg7IGkgPCBzaXplOyBpKyspIGNsb25lZFtpXSA9IGtsYXNzID09ICdTdHJpbmcnXG4gICAgICA/IHRoaXMuY2hhckF0KHN0YXJ0ICsgaSlcbiAgICAgIDogdGhpc1tzdGFydCArIGldO1xuICAgIHJldHVybiBjbG9uZWQ7XG4gIH1cbn0pO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///216\n")},function(module,exports,__webpack_require__){"use strict";eval("\nvar $export = __webpack_require__(1);\nvar aFunction = __webpack_require__(19);\nvar toObject = __webpack_require__(11);\nvar fails = __webpack_require__(3);\nvar $sort = [].sort;\nvar test = [1, 2, 3];\n\n$export($export.P + $export.F * (fails(function () {\n  // IE8-\n  test.sort(undefined);\n}) || !fails(function () {\n  // V8 bug\n  test.sort(null);\n  // Old WebKit\n}) || !__webpack_require__(17)($sort)), 'Array', {\n  // 22.1.3.25 Array.prototype.sort(comparefn)\n  sort: function sort(comparefn) {\n    return comparefn === undefined\n      ? $sort.call(toObject(this))\n      : $sort.call(toObject(this), aFunction(comparefn));\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjE3LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuYXJyYXkuc29ydC5qcz81NWRkIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgYUZ1bmN0aW9uID0gcmVxdWlyZSgnLi9fYS1mdW5jdGlvbicpO1xudmFyIHRvT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8tb2JqZWN0Jyk7XG52YXIgZmFpbHMgPSByZXF1aXJlKCcuL19mYWlscycpO1xudmFyICRzb3J0ID0gW10uc29ydDtcbnZhciB0ZXN0ID0gWzEsIDIsIDNdO1xuXG4kZXhwb3J0KCRleHBvcnQuUCArICRleHBvcnQuRiAqIChmYWlscyhmdW5jdGlvbiAoKSB7XG4gIC8vIElFOC1cbiAgdGVzdC5zb3J0KHVuZGVmaW5lZCk7XG59KSB8fCAhZmFpbHMoZnVuY3Rpb24gKCkge1xuICAvLyBWOCBidWdcbiAgdGVzdC5zb3J0KG51bGwpO1xuICAvLyBPbGQgV2ViS2l0XG59KSB8fCAhcmVxdWlyZSgnLi9fc3RyaWN0LW1ldGhvZCcpKCRzb3J0KSksICdBcnJheScsIHtcbiAgLy8gMjIuMS4zLjI1IEFycmF5LnByb3RvdHlwZS5zb3J0KGNvbXBhcmVmbilcbiAgc29ydDogZnVuY3Rpb24gc29ydChjb21wYXJlZm4pIHtcbiAgICByZXR1cm4gY29tcGFyZWZuID09PSB1bmRlZmluZWRcbiAgICAgID8gJHNvcnQuY2FsbCh0b09iamVjdCh0aGlzKSlcbiAgICAgIDogJHNvcnQuY2FsbCh0b09iamVjdCh0aGlzKSwgYUZ1bmN0aW9uKGNvbXBhcmVmbikpO1xuICB9XG59KTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///217\n")},function(module,exports,__webpack_require__){"use strict";eval("\nvar $export = __webpack_require__(1);\nvar $forEach = __webpack_require__(23)(0);\nvar STRICT = __webpack_require__(17)([].forEach, true);\n\n$export($export.P + $export.F * !STRICT, 'Array', {\n  // 22.1.3.10 / 15.4.4.18 Array.prototype.forEach(callbackfn [, thisArg])\n  forEach: function forEach(callbackfn /* , thisArg */) {\n    return $forEach(this, callbackfn, arguments[1]);\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjE4LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuYXJyYXkuZm9yLWVhY2guanM/ZjNlMiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyICRmb3JFYWNoID0gcmVxdWlyZSgnLi9fYXJyYXktbWV0aG9kcycpKDApO1xudmFyIFNUUklDVCA9IHJlcXVpcmUoJy4vX3N0cmljdC1tZXRob2QnKShbXS5mb3JFYWNoLCB0cnVlKTtcblxuJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LkYgKiAhU1RSSUNULCAnQXJyYXknLCB7XG4gIC8vIDIyLjEuMy4xMCAvIDE1LjQuNC4xOCBBcnJheS5wcm90b3R5cGUuZm9yRWFjaChjYWxsYmFja2ZuIFssIHRoaXNBcmddKVxuICBmb3JFYWNoOiBmdW5jdGlvbiBmb3JFYWNoKGNhbGxiYWNrZm4gLyogLCB0aGlzQXJnICovKSB7XG4gICAgcmV0dXJuICRmb3JFYWNoKHRoaXMsIGNhbGxiYWNrZm4sIGFyZ3VtZW50c1sxXSk7XG4gIH1cbn0pO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///218\n")},function(module,exports,__webpack_require__){eval("var isObject = __webpack_require__(5);\nvar isArray = __webpack_require__(52);\nvar SPECIES = __webpack_require__(6)('species');\n\nmodule.exports = function (original) {\n  var C;\n  if (isArray(original)) {\n    C = original.constructor;\n    // cross-realm fallback\n    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;\n    if (isObject(C)) {\n      C = C[SPECIES];\n      if (C === null) C = undefined;\n    }\n  } return C === undefined ? Array : C;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjE5LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fYXJyYXktc3BlY2llcy1jb25zdHJ1Y3Rvci5qcz9lODUzIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xudmFyIGlzQXJyYXkgPSByZXF1aXJlKCcuL19pcy1hcnJheScpO1xudmFyIFNQRUNJRVMgPSByZXF1aXJlKCcuL193a3MnKSgnc3BlY2llcycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChvcmlnaW5hbCkge1xuICB2YXIgQztcbiAgaWYgKGlzQXJyYXkob3JpZ2luYWwpKSB7XG4gICAgQyA9IG9yaWdpbmFsLmNvbnN0cnVjdG9yO1xuICAgIC8vIGNyb3NzLXJlYWxtIGZhbGxiYWNrXG4gICAgaWYgKHR5cGVvZiBDID09ICdmdW5jdGlvbicgJiYgKEMgPT09IEFycmF5IHx8IGlzQXJyYXkoQy5wcm90b3R5cGUpKSkgQyA9IHVuZGVmaW5lZDtcbiAgICBpZiAoaXNPYmplY3QoQykpIHtcbiAgICAgIEMgPSBDW1NQRUNJRVNdO1xuICAgICAgaWYgKEMgPT09IG51bGwpIEMgPSB1bmRlZmluZWQ7XG4gICAgfVxuICB9IHJldHVybiBDID09PSB1bmRlZmluZWQgPyBBcnJheSA6IEM7XG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///219\n")},function(module,exports,__webpack_require__){"use strict";eval("\nvar $export = __webpack_require__(1);\nvar $map = __webpack_require__(23)(1);\n\n$export($export.P + $export.F * !__webpack_require__(17)([].map, true), 'Array', {\n  // 22.1.3.15 / 15.4.4.19 Array.prototype.map(callbackfn [, thisArg])\n  map: function map(callbackfn /* , thisArg */) {\n    return $map(this, callbackfn, arguments[1]);\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjIwLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuYXJyYXkubWFwLmpzPzZkNjciXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciAkbWFwID0gcmVxdWlyZSgnLi9fYXJyYXktbWV0aG9kcycpKDEpO1xuXG4kZXhwb3J0KCRleHBvcnQuUCArICRleHBvcnQuRiAqICFyZXF1aXJlKCcuL19zdHJpY3QtbWV0aG9kJykoW10ubWFwLCB0cnVlKSwgJ0FycmF5Jywge1xuICAvLyAyMi4xLjMuMTUgLyAxNS40LjQuMTkgQXJyYXkucHJvdG90eXBlLm1hcChjYWxsYmFja2ZuIFssIHRoaXNBcmddKVxuICBtYXA6IGZ1bmN0aW9uIG1hcChjYWxsYmFja2ZuIC8qICwgdGhpc0FyZyAqLykge1xuICAgIHJldHVybiAkbWFwKHRoaXMsIGNhbGxiYWNrZm4sIGFyZ3VtZW50c1sxXSk7XG4gIH1cbn0pO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///220\n")},function(module,exports,__webpack_require__){"use strict";eval("\nvar $export = __webpack_require__(1);\nvar $filter = __webpack_require__(23)(2);\n\n$export($export.P + $export.F * !__webpack_require__(17)([].filter, true), 'Array', {\n  // 22.1.3.7 / 15.4.4.20 Array.prototype.filter(callbackfn [, thisArg])\n  filter: function filter(callbackfn /* , thisArg */) {\n    return $filter(this, callbackfn, arguments[1]);\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjIxLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuYXJyYXkuZmlsdGVyLmpzP2QyNWYiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciAkZmlsdGVyID0gcmVxdWlyZSgnLi9fYXJyYXktbWV0aG9kcycpKDIpO1xuXG4kZXhwb3J0KCRleHBvcnQuUCArICRleHBvcnQuRiAqICFyZXF1aXJlKCcuL19zdHJpY3QtbWV0aG9kJykoW10uZmlsdGVyLCB0cnVlKSwgJ0FycmF5Jywge1xuICAvLyAyMi4xLjMuNyAvIDE1LjQuNC4yMCBBcnJheS5wcm90b3R5cGUuZmlsdGVyKGNhbGxiYWNrZm4gWywgdGhpc0FyZ10pXG4gIGZpbHRlcjogZnVuY3Rpb24gZmlsdGVyKGNhbGxiYWNrZm4gLyogLCB0aGlzQXJnICovKSB7XG4gICAgcmV0dXJuICRmaWx0ZXIodGhpcywgY2FsbGJhY2tmbiwgYXJndW1lbnRzWzFdKTtcbiAgfVxufSk7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///221\n")},function(module,exports,__webpack_require__){"use strict";eval("\nvar $export = __webpack_require__(1);\nvar $some = __webpack_require__(23)(3);\n\n$export($export.P + $export.F * !__webpack_require__(17)([].some, true), 'Array', {\n  // 22.1.3.23 / 15.4.4.17 Array.prototype.some(callbackfn [, thisArg])\n  some: function some(callbackfn /* , thisArg */) {\n    return $some(this, callbackfn, arguments[1]);\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjIyLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuYXJyYXkuc29tZS5qcz83NTlmIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgJHNvbWUgPSByZXF1aXJlKCcuL19hcnJheS1tZXRob2RzJykoMyk7XG5cbiRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogIXJlcXVpcmUoJy4vX3N0cmljdC1tZXRob2QnKShbXS5zb21lLCB0cnVlKSwgJ0FycmF5Jywge1xuICAvLyAyMi4xLjMuMjMgLyAxNS40LjQuMTcgQXJyYXkucHJvdG90eXBlLnNvbWUoY2FsbGJhY2tmbiBbLCB0aGlzQXJnXSlcbiAgc29tZTogZnVuY3Rpb24gc29tZShjYWxsYmFja2ZuIC8qICwgdGhpc0FyZyAqLykge1xuICAgIHJldHVybiAkc29tZSh0aGlzLCBjYWxsYmFja2ZuLCBhcmd1bWVudHNbMV0pO1xuICB9XG59KTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///222\n")},function(module,exports,__webpack_require__){"use strict";eval("\nvar $export = __webpack_require__(1);\nvar $every = __webpack_require__(23)(4);\n\n$export($export.P + $export.F * !__webpack_require__(17)([].every, true), 'Array', {\n  // 22.1.3.5 / 15.4.4.16 Array.prototype.every(callbackfn [, thisArg])\n  every: function every(callbackfn /* , thisArg */) {\n    return $every(this, callbackfn, arguments[1]);\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjIzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuYXJyYXkuZXZlcnkuanM/NjA5NSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyICRldmVyeSA9IHJlcXVpcmUoJy4vX2FycmF5LW1ldGhvZHMnKSg0KTtcblxuJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LkYgKiAhcmVxdWlyZSgnLi9fc3RyaWN0LW1ldGhvZCcpKFtdLmV2ZXJ5LCB0cnVlKSwgJ0FycmF5Jywge1xuICAvLyAyMi4xLjMuNSAvIDE1LjQuNC4xNiBBcnJheS5wcm90b3R5cGUuZXZlcnkoY2FsbGJhY2tmbiBbLCB0aGlzQXJnXSlcbiAgZXZlcnk6IGZ1bmN0aW9uIGV2ZXJ5KGNhbGxiYWNrZm4gLyogLCB0aGlzQXJnICovKSB7XG4gICAgcmV0dXJuICRldmVyeSh0aGlzLCBjYWxsYmFja2ZuLCBhcmd1bWVudHNbMV0pO1xuICB9XG59KTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///223\n")},function(module,exports,__webpack_require__){"use strict";eval("\nvar $export = __webpack_require__(1);\nvar $reduce = __webpack_require__(108);\n\n$export($export.P + $export.F * !__webpack_require__(17)([].reduce, true), 'Array', {\n  // 22.1.3.18 / 15.4.4.21 Array.prototype.reduce(callbackfn [, initialValue])\n  reduce: function reduce(callbackfn /* , initialValue */) {\n    return $reduce(this, callbackfn, arguments.length, arguments[1], false);\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjI0LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuYXJyYXkucmVkdWNlLmpzPzBjZDgiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciAkcmVkdWNlID0gcmVxdWlyZSgnLi9fYXJyYXktcmVkdWNlJyk7XG5cbiRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogIXJlcXVpcmUoJy4vX3N0cmljdC1tZXRob2QnKShbXS5yZWR1Y2UsIHRydWUpLCAnQXJyYXknLCB7XG4gIC8vIDIyLjEuMy4xOCAvIDE1LjQuNC4yMSBBcnJheS5wcm90b3R5cGUucmVkdWNlKGNhbGxiYWNrZm4gWywgaW5pdGlhbFZhbHVlXSlcbiAgcmVkdWNlOiBmdW5jdGlvbiByZWR1Y2UoY2FsbGJhY2tmbiAvKiAsIGluaXRpYWxWYWx1ZSAqLykge1xuICAgIHJldHVybiAkcmVkdWNlKHRoaXMsIGNhbGxiYWNrZm4sIGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3VtZW50c1sxXSwgZmFsc2UpO1xuICB9XG59KTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///224\n")},function(module,exports,__webpack_require__){"use strict";eval("\nvar $export = __webpack_require__(1);\nvar $reduce = __webpack_require__(108);\n\n$export($export.P + $export.F * !__webpack_require__(17)([].reduceRight, true), 'Array', {\n  // 22.1.3.19 / 15.4.4.22 Array.prototype.reduceRight(callbackfn [, initialValue])\n  reduceRight: function reduceRight(callbackfn /* , initialValue */) {\n    return $reduce(this, callbackfn, arguments.length, arguments[1], true);\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjI1LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuYXJyYXkucmVkdWNlLXJpZ2h0LmpzPzQ4ZjgiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciAkcmVkdWNlID0gcmVxdWlyZSgnLi9fYXJyYXktcmVkdWNlJyk7XG5cbiRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogIXJlcXVpcmUoJy4vX3N0cmljdC1tZXRob2QnKShbXS5yZWR1Y2VSaWdodCwgdHJ1ZSksICdBcnJheScsIHtcbiAgLy8gMjIuMS4zLjE5IC8gMTUuNC40LjIyIEFycmF5LnByb3RvdHlwZS5yZWR1Y2VSaWdodChjYWxsYmFja2ZuIFssIGluaXRpYWxWYWx1ZV0pXG4gIHJlZHVjZVJpZ2h0OiBmdW5jdGlvbiByZWR1Y2VSaWdodChjYWxsYmFja2ZuIC8qICwgaW5pdGlhbFZhbHVlICovKSB7XG4gICAgcmV0dXJuICRyZWR1Y2UodGhpcywgY2FsbGJhY2tmbiwgYXJndW1lbnRzLmxlbmd0aCwgYXJndW1lbnRzWzFdLCB0cnVlKTtcbiAgfVxufSk7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///225\n")},function(module,exports,__webpack_require__){"use strict";eval("\nvar $export = __webpack_require__(1);\nvar $indexOf = __webpack_require__(50)(false);\nvar $native = [].indexOf;\nvar NEGATIVE_ZERO = !!$native && 1 / [1].indexOf(1, -0) < 0;\n\n$export($export.P + $export.F * (NEGATIVE_ZERO || !__webpack_require__(17)($native)), 'Array', {\n  // 22.1.3.11 / 15.4.4.14 Array.prototype.indexOf(searchElement [, fromIndex])\n  indexOf: function indexOf(searchElement /* , fromIndex = 0 */) {\n    return NEGATIVE_ZERO\n      // convert -0 to +0\n      ? $native.apply(this, arguments) || 0\n      : $indexOf(this, searchElement, arguments[1]);\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjI2LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuYXJyYXkuaW5kZXgtb2YuanM/NTdlNyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyICRpbmRleE9mID0gcmVxdWlyZSgnLi9fYXJyYXktaW5jbHVkZXMnKShmYWxzZSk7XG52YXIgJG5hdGl2ZSA9IFtdLmluZGV4T2Y7XG52YXIgTkVHQVRJVkVfWkVSTyA9ICEhJG5hdGl2ZSAmJiAxIC8gWzFdLmluZGV4T2YoMSwgLTApIDwgMDtcblxuJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LkYgKiAoTkVHQVRJVkVfWkVSTyB8fCAhcmVxdWlyZSgnLi9fc3RyaWN0LW1ldGhvZCcpKCRuYXRpdmUpKSwgJ0FycmF5Jywge1xuICAvLyAyMi4xLjMuMTEgLyAxNS40LjQuMTQgQXJyYXkucHJvdG90eXBlLmluZGV4T2Yoc2VhcmNoRWxlbWVudCBbLCBmcm9tSW5kZXhdKVxuICBpbmRleE9mOiBmdW5jdGlvbiBpbmRleE9mKHNlYXJjaEVsZW1lbnQgLyogLCBmcm9tSW5kZXggPSAwICovKSB7XG4gICAgcmV0dXJuIE5FR0FUSVZFX1pFUk9cbiAgICAgIC8vIGNvbnZlcnQgLTAgdG8gKzBcbiAgICAgID8gJG5hdGl2ZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IDBcbiAgICAgIDogJGluZGV4T2YodGhpcywgc2VhcmNoRWxlbWVudCwgYXJndW1lbnRzWzFdKTtcbiAgfVxufSk7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///226\n")},function(module,exports,__webpack_require__){"use strict";eval("\nvar $export = __webpack_require__(1);\nvar toIObject = __webpack_require__(16);\nvar toInteger = __webpack_require__(20);\nvar toLength = __webpack_require__(7);\nvar $native = [].lastIndexOf;\nvar NEGATIVE_ZERO = !!$native && 1 / [1].lastIndexOf(1, -0) < 0;\n\n$export($export.P + $export.F * (NEGATIVE_ZERO || !__webpack_require__(17)($native)), 'Array', {\n  // 22.1.3.14 / 15.4.4.15 Array.prototype.lastIndexOf(searchElement [, fromIndex])\n  lastIndexOf: function lastIndexOf(searchElement /* , fromIndex = @[*-1] */) {\n    // convert -0 to +0\n    if (NEGATIVE_ZERO) return $native.apply(this, arguments) || 0;\n    var O = toIObject(this);\n    var length = toLength(O.length);\n    var index = length - 1;\n    if (arguments.length > 1) index = Math.min(index, toInteger(arguments[1]));\n    if (index < 0) index = length + index;\n    for (;index >= 0; index--) if (index in O) if (O[index] === searchElement) return index || 0;\n    return -1;\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjI3LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuYXJyYXkubGFzdC1pbmRleC1vZi5qcz85ODY1Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgdG9JT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8taW9iamVjdCcpO1xudmFyIHRvSW50ZWdlciA9IHJlcXVpcmUoJy4vX3RvLWludGVnZXInKTtcbnZhciB0b0xlbmd0aCA9IHJlcXVpcmUoJy4vX3RvLWxlbmd0aCcpO1xudmFyICRuYXRpdmUgPSBbXS5sYXN0SW5kZXhPZjtcbnZhciBORUdBVElWRV9aRVJPID0gISEkbmF0aXZlICYmIDEgLyBbMV0ubGFzdEluZGV4T2YoMSwgLTApIDwgMDtcblxuJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LkYgKiAoTkVHQVRJVkVfWkVSTyB8fCAhcmVxdWlyZSgnLi9fc3RyaWN0LW1ldGhvZCcpKCRuYXRpdmUpKSwgJ0FycmF5Jywge1xuICAvLyAyMi4xLjMuMTQgLyAxNS40LjQuMTUgQXJyYXkucHJvdG90eXBlLmxhc3RJbmRleE9mKHNlYXJjaEVsZW1lbnQgWywgZnJvbUluZGV4XSlcbiAgbGFzdEluZGV4T2Y6IGZ1bmN0aW9uIGxhc3RJbmRleE9mKHNlYXJjaEVsZW1lbnQgLyogLCBmcm9tSW5kZXggPSBAWyotMV0gKi8pIHtcbiAgICAvLyBjb252ZXJ0IC0wIHRvICswXG4gICAgaWYgKE5FR0FUSVZFX1pFUk8pIHJldHVybiAkbmF0aXZlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgMDtcbiAgICB2YXIgTyA9IHRvSU9iamVjdCh0aGlzKTtcbiAgICB2YXIgbGVuZ3RoID0gdG9MZW5ndGgoTy5sZW5ndGgpO1xuICAgIHZhciBpbmRleCA9IGxlbmd0aCAtIDE7XG4gICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPiAxKSBpbmRleCA9IE1hdGgubWluKGluZGV4LCB0b0ludGVnZXIoYXJndW1lbnRzWzFdKSk7XG4gICAgaWYgKGluZGV4IDwgMCkgaW5kZXggPSBsZW5ndGggKyBpbmRleDtcbiAgICBmb3IgKDtpbmRleCA+PSAwOyBpbmRleC0tKSBpZiAoaW5kZXggaW4gTykgaWYgKE9baW5kZXhdID09PSBzZWFyY2hFbGVtZW50KSByZXR1cm4gaW5kZXggfHwgMDtcbiAgICByZXR1cm4gLTE7XG4gIH1cbn0pO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///227\n")},function(module,exports,__webpack_require__){eval("// 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)\nvar $export = __webpack_require__(1);\n\n$export($export.P, 'Array', { copyWithin: __webpack_require__(109) });\n\n__webpack_require__(37)('copyWithin');\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjI4LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuYXJyYXkuY29weS13aXRoaW4uanM/NzQ0ZiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyAyMi4xLjMuMyBBcnJheS5wcm90b3R5cGUuY29weVdpdGhpbih0YXJnZXQsIHN0YXJ0LCBlbmQgPSB0aGlzLmxlbmd0aClcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG5cbiRleHBvcnQoJGV4cG9ydC5QLCAnQXJyYXknLCB7IGNvcHlXaXRoaW46IHJlcXVpcmUoJy4vX2FycmF5LWNvcHktd2l0aGluJykgfSk7XG5cbnJlcXVpcmUoJy4vX2FkZC10by11bnNjb3BhYmxlcycpKCdjb3B5V2l0aGluJyk7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///228\n")},function(module,exports,__webpack_require__){eval("// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\nvar $export = __webpack_require__(1);\n\n$export($export.P, 'Array', { fill: __webpack_require__(80) });\n\n__webpack_require__(37)('fill');\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjI5LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuYXJyYXkuZmlsbC5qcz82YzdiIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIDIyLjEuMy42IEFycmF5LnByb3RvdHlwZS5maWxsKHZhbHVlLCBzdGFydCA9IDAsIGVuZCA9IHRoaXMubGVuZ3RoKVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcblxuJGV4cG9ydCgkZXhwb3J0LlAsICdBcnJheScsIHsgZmlsbDogcmVxdWlyZSgnLi9fYXJyYXktZmlsbCcpIH0pO1xuXG5yZXF1aXJlKCcuL19hZGQtdG8tdW5zY29wYWJsZXMnKSgnZmlsbCcpO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///229\n")},function(module,exports,__webpack_require__){"use strict";eval("\n// 22.1.3.8 Array.prototype.find(predicate, thisArg = undefined)\nvar $export = __webpack_require__(1);\nvar $find = __webpack_require__(23)(5);\nvar KEY = 'find';\nvar forced = true;\n// Shouldn't skip holes\nif (KEY in []) Array(1)[KEY](function () { forced = false; });\n$export($export.P + $export.F * forced, 'Array', {\n  find: function find(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n__webpack_require__(37)(KEY);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjMwLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuYXJyYXkuZmluZC5qcz83NTE0Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0Jztcbi8vIDIyLjEuMy44IEFycmF5LnByb3RvdHlwZS5maW5kKHByZWRpY2F0ZSwgdGhpc0FyZyA9IHVuZGVmaW5lZClcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgJGZpbmQgPSByZXF1aXJlKCcuL19hcnJheS1tZXRob2RzJykoNSk7XG52YXIgS0VZID0gJ2ZpbmQnO1xudmFyIGZvcmNlZCA9IHRydWU7XG4vLyBTaG91bGRuJ3Qgc2tpcCBob2xlc1xuaWYgKEtFWSBpbiBbXSkgQXJyYXkoMSlbS0VZXShmdW5jdGlvbiAoKSB7IGZvcmNlZCA9IGZhbHNlOyB9KTtcbiRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogZm9yY2VkLCAnQXJyYXknLCB7XG4gIGZpbmQ6IGZ1bmN0aW9uIGZpbmQoY2FsbGJhY2tmbiAvKiAsIHRoYXQgPSB1bmRlZmluZWQgKi8pIHtcbiAgICByZXR1cm4gJGZpbmQodGhpcywgY2FsbGJhY2tmbiwgYXJndW1lbnRzLmxlbmd0aCA+IDEgPyBhcmd1bWVudHNbMV0gOiB1bmRlZmluZWQpO1xuICB9XG59KTtcbnJlcXVpcmUoJy4vX2FkZC10by11bnNjb3BhYmxlcycpKEtFWSk7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///230\n")},function(module,exports,__webpack_require__){"use strict";eval("\n// 22.1.3.9 Array.prototype.findIndex(predicate, thisArg = undefined)\nvar $export = __webpack_require__(1);\nvar $find = __webpack_require__(23)(6);\nvar KEY = 'findIndex';\nvar forced = true;\n// Shouldn't skip holes\nif (KEY in []) Array(1)[KEY](function () { forced = false; });\n$export($export.P + $export.F * forced, 'Array', {\n  findIndex: function findIndex(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n__webpack_require__(37)(KEY);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjMxLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuYXJyYXkuZmluZC1pbmRleC5qcz8yMGQ2Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0Jztcbi8vIDIyLjEuMy45IEFycmF5LnByb3RvdHlwZS5maW5kSW5kZXgocHJlZGljYXRlLCB0aGlzQXJnID0gdW5kZWZpbmVkKVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciAkZmluZCA9IHJlcXVpcmUoJy4vX2FycmF5LW1ldGhvZHMnKSg2KTtcbnZhciBLRVkgPSAnZmluZEluZGV4JztcbnZhciBmb3JjZWQgPSB0cnVlO1xuLy8gU2hvdWxkbid0IHNraXAgaG9sZXNcbmlmIChLRVkgaW4gW10pIEFycmF5KDEpW0tFWV0oZnVuY3Rpb24gKCkgeyBmb3JjZWQgPSBmYWxzZTsgfSk7XG4kZXhwb3J0KCRleHBvcnQuUCArICRleHBvcnQuRiAqIGZvcmNlZCwgJ0FycmF5Jywge1xuICBmaW5kSW5kZXg6IGZ1bmN0aW9uIGZpbmRJbmRleChjYWxsYmFja2ZuIC8qICwgdGhhdCA9IHVuZGVmaW5lZCAqLykge1xuICAgIHJldHVybiAkZmluZCh0aGlzLCBjYWxsYmFja2ZuLCBhcmd1bWVudHMubGVuZ3RoID4gMSA/IGFyZ3VtZW50c1sxXSA6IHVuZGVmaW5lZCk7XG4gIH1cbn0pO1xucmVxdWlyZSgnLi9fYWRkLXRvLXVuc2NvcGFibGVzJykoS0VZKTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///231\n")},function(module,exports,__webpack_require__){eval("__webpack_require__(42)('Array');\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjMyLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuYXJyYXkuc3BlY2llcy5qcz9kMDRmIl0sInNvdXJjZXNDb250ZW50IjpbInJlcXVpcmUoJy4vX3NldC1zcGVjaWVzJykoJ0FycmF5Jyk7XG4iXSwibWFwcGluZ3MiOiJBQUFBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///232\n")},function(module,exports,__webpack_require__){eval("var global = __webpack_require__(2);\nvar inheritIfRequired = __webpack_require__(68);\nvar dP = __webpack_require__(9).f;\nvar gOPN = __webpack_require__(35).f;\nvar isRegExp = __webpack_require__(75);\nvar $flags = __webpack_require__(54);\nvar $RegExp = global.RegExp;\nvar Base = $RegExp;\nvar proto = $RegExp.prototype;\nvar re1 = /a/g;\nvar re2 = /a/g;\n// \"new\" creates a new object, old webkit buggy here\nvar CORRECT_NEW = new $RegExp(re1) !== re1;\n\nif (__webpack_require__(10) && (!CORRECT_NEW || __webpack_require__(3)(function () {\n  re2[__webpack_require__(6)('match')] = false;\n  // RegExp constructor can alter flags and IsRegExp works correct with @@match\n  return $RegExp(re1) != re1 || $RegExp(re2) == re2 || $RegExp(re1, 'i') != '/a/i';\n}))) {\n  $RegExp = function RegExp(p, f) {\n    var tiRE = this instanceof $RegExp;\n    var piRE = isRegExp(p);\n    var fiU = f === undefined;\n    return !tiRE && piRE && p.constructor === $RegExp && fiU ? p\n      : inheritIfRequired(CORRECT_NEW\n        ? new Base(piRE && !fiU ? p.source : p, f)\n        : Base((piRE = p instanceof $RegExp) ? p.source : p, piRE && fiU ? $flags.call(p) : f)\n      , tiRE ? this : proto, $RegExp);\n  };\n  var proxy = function (key) {\n    key in $RegExp || dP($RegExp, key, {\n      configurable: true,\n      get: function () { return Base[key]; },\n      set: function (it) { Base[key] = it; }\n    });\n  };\n  for (var keys = gOPN(Base), i = 0; keys.length > i;) proxy(keys[i++]);\n  proto.constructor = $RegExp;\n  $RegExp.prototype = proto;\n  __webpack_require__(12)(global, 'RegExp', $RegExp);\n}\n\n__webpack_require__(42)('RegExp');\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjMzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYucmVnZXhwLmNvbnN0cnVjdG9yLmpzPzNiMmIiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpO1xudmFyIGluaGVyaXRJZlJlcXVpcmVkID0gcmVxdWlyZSgnLi9faW5oZXJpdC1pZi1yZXF1aXJlZCcpO1xudmFyIGRQID0gcmVxdWlyZSgnLi9fb2JqZWN0LWRwJykuZjtcbnZhciBnT1BOID0gcmVxdWlyZSgnLi9fb2JqZWN0LWdvcG4nKS5mO1xudmFyIGlzUmVnRXhwID0gcmVxdWlyZSgnLi9faXMtcmVnZXhwJyk7XG52YXIgJGZsYWdzID0gcmVxdWlyZSgnLi9fZmxhZ3MnKTtcbnZhciAkUmVnRXhwID0gZ2xvYmFsLlJlZ0V4cDtcbnZhciBCYXNlID0gJFJlZ0V4cDtcbnZhciBwcm90byA9ICRSZWdFeHAucHJvdG90eXBlO1xudmFyIHJlMSA9IC9hL2c7XG52YXIgcmUyID0gL2EvZztcbi8vIFwibmV3XCIgY3JlYXRlcyBhIG5ldyBvYmplY3QsIG9sZCB3ZWJraXQgYnVnZ3kgaGVyZVxudmFyIENPUlJFQ1RfTkVXID0gbmV3ICRSZWdFeHAocmUxKSAhPT0gcmUxO1xuXG5pZiAocmVxdWlyZSgnLi9fZGVzY3JpcHRvcnMnKSAmJiAoIUNPUlJFQ1RfTkVXIHx8IHJlcXVpcmUoJy4vX2ZhaWxzJykoZnVuY3Rpb24gKCkge1xuICByZTJbcmVxdWlyZSgnLi9fd2tzJykoJ21hdGNoJyldID0gZmFsc2U7XG4gIC8vIFJlZ0V4cCBjb25zdHJ1Y3RvciBjYW4gYWx0ZXIgZmxhZ3MgYW5kIElzUmVnRXhwIHdvcmtzIGNvcnJlY3Qgd2l0aCBAQG1hdGNoXG4gIHJldHVybiAkUmVnRXhwKHJlMSkgIT0gcmUxIHx8ICRSZWdFeHAocmUyKSA9PSByZTIgfHwgJFJlZ0V4cChyZTEsICdpJykgIT0gJy9hL2knO1xufSkpKSB7XG4gICRSZWdFeHAgPSBmdW5jdGlvbiBSZWdFeHAocCwgZikge1xuICAgIHZhciB0aVJFID0gdGhpcyBpbnN0YW5jZW9mICRSZWdFeHA7XG4gICAgdmFyIHBpUkUgPSBpc1JlZ0V4cChwKTtcbiAgICB2YXIgZmlVID0gZiA9PT0gdW5kZWZpbmVkO1xuICAgIHJldHVybiAhdGlSRSAmJiBwaVJFICYmIHAuY29uc3RydWN0b3IgPT09ICRSZWdFeHAgJiYgZmlVID8gcFxuICAgICAgOiBpbmhlcml0SWZSZXF1aXJlZChDT1JSRUNUX05FV1xuICAgICAgICA/IG5ldyBCYXNlKHBpUkUgJiYgIWZpVSA/IHAuc291cmNlIDogcCwgZilcbiAgICAgICAgOiBCYXNlKChwaVJFID0gcCBpbnN0YW5jZW9mICRSZWdFeHApID8gcC5zb3VyY2UgOiBwLCBwaVJFICYmIGZpVSA/ICRmbGFncy5jYWxsKHApIDogZilcbiAgICAgICwgdGlSRSA/IHRoaXMgOiBwcm90bywgJFJlZ0V4cCk7XG4gIH07XG4gIHZhciBwcm94eSA9IGZ1bmN0aW9uIChrZXkpIHtcbiAgICBrZXkgaW4gJFJlZ0V4cCB8fCBkUCgkUmVnRXhwLCBrZXksIHtcbiAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gQmFzZVtrZXldOyB9LFxuICAgICAgc2V0OiBmdW5jdGlvbiAoaXQpIHsgQmFzZVtrZXldID0gaXQ7IH1cbiAgICB9KTtcbiAgfTtcbiAgZm9yICh2YXIga2V5cyA9IGdPUE4oQmFzZSksIGkgPSAwOyBrZXlzLmxlbmd0aCA+IGk7KSBwcm94eShrZXlzW2krK10pO1xuICBwcm90by5jb25zdHJ1Y3RvciA9ICRSZWdFeHA7XG4gICRSZWdFeHAucHJvdG90eXBlID0gcHJvdG87XG4gIHJlcXVpcmUoJy4vX3JlZGVmaW5lJykoZ2xvYmFsLCAnUmVnRXhwJywgJFJlZ0V4cCk7XG59XG5cbnJlcXVpcmUoJy4vX3NldC1zcGVjaWVzJykoJ1JlZ0V4cCcpO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///233\n")},function(module,exports,__webpack_require__){"use strict";eval("\n__webpack_require__(112);\nvar anObject = __webpack_require__(4);\nvar $flags = __webpack_require__(54);\nvar DESCRIPTORS = __webpack_require__(10);\nvar TO_STRING = 'toString';\nvar $toString = /./[TO_STRING];\n\nvar define = function (fn) {\n  __webpack_require__(12)(RegExp.prototype, TO_STRING, fn, true);\n};\n\n// 21.2.5.14 RegExp.prototype.toString()\nif (__webpack_require__(3)(function () { return $toString.call({ source: 'a', flags: 'b' }) != '/a/b'; })) {\n  define(function toString() {\n    var R = anObject(this);\n    return '/'.concat(R.source, '/',\n      'flags' in R ? R.flags : !DESCRIPTORS && R instanceof RegExp ? $flags.call(R) : undefined);\n  });\n// FF44- RegExp#toString has a wrong name\n} else if ($toString.name != TO_STRING) {\n  define(function toString() {\n    return $toString.call(this);\n  });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjM0LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYucmVnZXhwLnRvLXN0cmluZy5qcz82YjU0Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcbnJlcXVpcmUoJy4vZXM2LnJlZ2V4cC5mbGFncycpO1xudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG52YXIgJGZsYWdzID0gcmVxdWlyZSgnLi9fZmxhZ3MnKTtcbnZhciBERVNDUklQVE9SUyA9IHJlcXVpcmUoJy4vX2Rlc2NyaXB0b3JzJyk7XG52YXIgVE9fU1RSSU5HID0gJ3RvU3RyaW5nJztcbnZhciAkdG9TdHJpbmcgPSAvLi9bVE9fU1RSSU5HXTtcblxudmFyIGRlZmluZSA9IGZ1bmN0aW9uIChmbikge1xuICByZXF1aXJlKCcuL19yZWRlZmluZScpKFJlZ0V4cC5wcm90b3R5cGUsIFRPX1NUUklORywgZm4sIHRydWUpO1xufTtcblxuLy8gMjEuMi41LjE0IFJlZ0V4cC5wcm90b3R5cGUudG9TdHJpbmcoKVxuaWYgKHJlcXVpcmUoJy4vX2ZhaWxzJykoZnVuY3Rpb24gKCkgeyByZXR1cm4gJHRvU3RyaW5nLmNhbGwoeyBzb3VyY2U6ICdhJywgZmxhZ3M6ICdiJyB9KSAhPSAnL2EvYic7IH0pKSB7XG4gIGRlZmluZShmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICB2YXIgUiA9IGFuT2JqZWN0KHRoaXMpO1xuICAgIHJldHVybiAnLycuY29uY2F0KFIuc291cmNlLCAnLycsXG4gICAgICAnZmxhZ3MnIGluIFIgPyBSLmZsYWdzIDogIURFU0NSSVBUT1JTICYmIFIgaW5zdGFuY2VvZiBSZWdFeHAgPyAkZmxhZ3MuY2FsbChSKSA6IHVuZGVmaW5lZCk7XG4gIH0pO1xuLy8gRkY0NC0gUmVnRXhwI3RvU3RyaW5nIGhhcyBhIHdyb25nIG5hbWVcbn0gZWxzZSBpZiAoJHRvU3RyaW5nLm5hbWUgIT0gVE9fU1RSSU5HKSB7XG4gIGRlZmluZShmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gJHRvU3RyaW5nLmNhbGwodGhpcyk7XG4gIH0pO1xufVxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///234\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nvar anObject = __webpack_require__(4);\nvar toLength = __webpack_require__(7);\nvar advanceStringIndex = __webpack_require__(83);\nvar regExpExec = __webpack_require__(55);\n\n// @@match logic\n__webpack_require__(56)('match', 1, function (defined, MATCH, $match, maybeCallNative) {\n  return [\n    // `String.prototype.match` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.match\n    function match(regexp) {\n      var O = defined(this);\n      var fn = regexp == undefined ? undefined : regexp[MATCH];\n      return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[MATCH](String(O));\n    },\n    // `RegExp.prototype[@@match]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@match\n    function (regexp) {\n      var res = maybeCallNative($match, regexp, this);\n      if (res.done) return res.value;\n      var rx = anObject(regexp);\n      var S = String(this);\n      if (!rx.global) return regExpExec(rx, S);\n      var fullUnicode = rx.unicode;\n      rx.lastIndex = 0;\n      var A = [];\n      var n = 0;\n      var result;\n      while ((result = regExpExec(rx, S)) !== null) {\n        var matchStr = String(result[0]);\n        A[n] = matchStr;\n        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\n        n++;\n      }\n      return n === 0 ? null : A;\n    }\n  ];\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjM1LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYucmVnZXhwLm1hdGNoLmpzPzQ5MTciXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbnZhciB0b0xlbmd0aCA9IHJlcXVpcmUoJy4vX3RvLWxlbmd0aCcpO1xudmFyIGFkdmFuY2VTdHJpbmdJbmRleCA9IHJlcXVpcmUoJy4vX2FkdmFuY2Utc3RyaW5nLWluZGV4Jyk7XG52YXIgcmVnRXhwRXhlYyA9IHJlcXVpcmUoJy4vX3JlZ2V4cC1leGVjLWFic3RyYWN0Jyk7XG5cbi8vIEBAbWF0Y2ggbG9naWNcbnJlcXVpcmUoJy4vX2ZpeC1yZS13a3MnKSgnbWF0Y2gnLCAxLCBmdW5jdGlvbiAoZGVmaW5lZCwgTUFUQ0gsICRtYXRjaCwgbWF5YmVDYWxsTmF0aXZlKSB7XG4gIHJldHVybiBbXG4gICAgLy8gYFN0cmluZy5wcm90b3R5cGUubWF0Y2hgIG1ldGhvZFxuICAgIC8vIGh0dHBzOi8vdGMzOS5naXRodWIuaW8vZWNtYTI2Mi8jc2VjLXN0cmluZy5wcm90b3R5cGUubWF0Y2hcbiAgICBmdW5jdGlvbiBtYXRjaChyZWdleHApIHtcbiAgICAgIHZhciBPID0gZGVmaW5lZCh0aGlzKTtcbiAgICAgIHZhciBmbiA9IHJlZ2V4cCA9PSB1bmRlZmluZWQgPyB1bmRlZmluZWQgOiByZWdleHBbTUFUQ0hdO1xuICAgICAgcmV0dXJuIGZuICE9PSB1bmRlZmluZWQgPyBmbi5jYWxsKHJlZ2V4cCwgTykgOiBuZXcgUmVnRXhwKHJlZ2V4cClbTUFUQ0hdKFN0cmluZyhPKSk7XG4gICAgfSxcbiAgICAvLyBgUmVnRXhwLnByb3RvdHlwZVtAQG1hdGNoXWAgbWV0aG9kXG4gICAgLy8gaHR0cHM6Ly90YzM5LmdpdGh1Yi5pby9lY21hMjYyLyNzZWMtcmVnZXhwLnByb3RvdHlwZS1AQG1hdGNoXG4gICAgZnVuY3Rpb24gKHJlZ2V4cCkge1xuICAgICAgdmFyIHJlcyA9IG1heWJlQ2FsbE5hdGl2ZSgkbWF0Y2gsIHJlZ2V4cCwgdGhpcyk7XG4gICAgICBpZiAocmVzLmRvbmUpIHJldHVybiByZXMudmFsdWU7XG4gICAgICB2YXIgcnggPSBhbk9iamVjdChyZWdleHApO1xuICAgICAgdmFyIFMgPSBTdHJpbmcodGhpcyk7XG4gICAgICBpZiAoIXJ4Lmdsb2JhbCkgcmV0dXJuIHJlZ0V4cEV4ZWMocngsIFMpO1xuICAgICAgdmFyIGZ1bGxVbmljb2RlID0gcngudW5pY29kZTtcbiAgICAgIHJ4Lmxhc3RJbmRleCA9IDA7XG4gICAgICB2YXIgQSA9IFtdO1xuICAgICAgdmFyIG4gPSAwO1xuICAgICAgdmFyIHJlc3VsdDtcbiAgICAgIHdoaWxlICgocmVzdWx0ID0gcmVnRXhwRXhlYyhyeCwgUykpICE9PSBudWxsKSB7XG4gICAgICAgIHZhciBtYXRjaFN0ciA9IFN0cmluZyhyZXN1bHRbMF0pO1xuICAgICAgICBBW25dID0gbWF0Y2hTdHI7XG4gICAgICAgIGlmIChtYXRjaFN0ciA9PT0gJycpIHJ4Lmxhc3RJbmRleCA9IGFkdmFuY2VTdHJpbmdJbmRleChTLCB0b0xlbmd0aChyeC5sYXN0SW5kZXgpLCBmdWxsVW5pY29kZSk7XG4gICAgICAgIG4rKztcbiAgICAgIH1cbiAgICAgIHJldHVybiBuID09PSAwID8gbnVsbCA6IEE7XG4gICAgfVxuICBdO1xufSk7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///235\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nvar anObject = __webpack_require__(4);\nvar toObject = __webpack_require__(11);\nvar toLength = __webpack_require__(7);\nvar toInteger = __webpack_require__(20);\nvar advanceStringIndex = __webpack_require__(83);\nvar regExpExec = __webpack_require__(55);\nvar max = Math.max;\nvar min = Math.min;\nvar floor = Math.floor;\nvar SUBSTITUTION_SYMBOLS = /\\$([$&`']|\\d\\d?|<[^>]*>)/g;\nvar SUBSTITUTION_SYMBOLS_NO_NAMED = /\\$([$&`']|\\d\\d?)/g;\n\nvar maybeToString = function (it) {\n  return it === undefined ? it : String(it);\n};\n\n// @@replace logic\n__webpack_require__(56)('replace', 2, function (defined, REPLACE, $replace, maybeCallNative) {\n  return [\n    // `String.prototype.replace` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.replace\n    function replace(searchValue, replaceValue) {\n      var O = defined(this);\n      var fn = searchValue == undefined ? undefined : searchValue[REPLACE];\n      return fn !== undefined\n        ? fn.call(searchValue, O, replaceValue)\n        : $replace.call(String(O), searchValue, replaceValue);\n    },\n    // `RegExp.prototype[@@replace]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@replace\n    function (regexp, replaceValue) {\n      var res = maybeCallNative($replace, regexp, this, replaceValue);\n      if (res.done) return res.value;\n\n      var rx = anObject(regexp);\n      var S = String(this);\n      var functionalReplace = typeof replaceValue === 'function';\n      if (!functionalReplace) replaceValue = String(replaceValue);\n      var global = rx.global;\n      if (global) {\n        var fullUnicode = rx.unicode;\n        rx.lastIndex = 0;\n      }\n      var results = [];\n      while (true) {\n        var result = regExpExec(rx, S);\n        if (result === null) break;\n        results.push(result);\n        if (!global) break;\n        var matchStr = String(result[0]);\n        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\n      }\n      var accumulatedResult = '';\n      var nextSourcePosition = 0;\n      for (var i = 0; i < results.length; i++) {\n        result = results[i];\n        var matched = String(result[0]);\n        var position = max(min(toInteger(result.index), S.length), 0);\n        var captures = [];\n        // NOTE: This is equivalent to\n        //   captures = result.slice(1).map(maybeToString)\n        // but for some reason `nativeSlice.call(result, 1, result.length)` (called in\n        // the slice polyfill when slicing native arrays) \"doesn't work\" in safari 9 and\n        // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.\n        for (var j = 1; j < result.length; j++) captures.push(maybeToString(result[j]));\n        var namedCaptures = result.groups;\n        if (functionalReplace) {\n          var replacerArgs = [matched].concat(captures, position, S);\n          if (namedCaptures !== undefined) replacerArgs.push(namedCaptures);\n          var replacement = String(replaceValue.apply(undefined, replacerArgs));\n        } else {\n          replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);\n        }\n        if (position >= nextSourcePosition) {\n          accumulatedResult += S.slice(nextSourcePosition, position) + replacement;\n          nextSourcePosition = position + matched.length;\n        }\n      }\n      return accumulatedResult + S.slice(nextSourcePosition);\n    }\n  ];\n\n    // https://tc39.github.io/ecma262/#sec-getsubstitution\n  function getSubstitution(matched, str, position, captures, namedCaptures, replacement) {\n    var tailPos = position + matched.length;\n    var m = captures.length;\n    var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;\n    if (namedCaptures !== undefined) {\n      namedCaptures = toObject(namedCaptures);\n      symbols = SUBSTITUTION_SYMBOLS;\n    }\n    return $replace.call(replacement, symbols, function (match, ch) {\n      var capture;\n      switch (ch.charAt(0)) {\n        case '$': return '$';\n        case '&': return matched;\n        case '`': return str.slice(0, position);\n        case \"'\": return str.slice(tailPos);\n        case '<':\n          capture = namedCaptures[ch.slice(1, -1)];\n          break;\n        default: // \\d\\d?\n          var n = +ch;\n          if (n === 0) return match;\n          if (n > m) {\n            var f = floor(n / 10);\n            if (f === 0) return match;\n            if (f <= m) return captures[f - 1] === undefined ? ch.charAt(1) : captures[f - 1] + ch.charAt(1);\n            return match;\n          }\n          capture = captures[n - 1];\n      }\n      return capture === undefined ? '' : capture;\n    });\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjM2LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYucmVnZXhwLnJlcGxhY2UuanM/YTQ4MSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpO1xudmFyIHRvT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8tb2JqZWN0Jyk7XG52YXIgdG9MZW5ndGggPSByZXF1aXJlKCcuL190by1sZW5ndGgnKTtcbnZhciB0b0ludGVnZXIgPSByZXF1aXJlKCcuL190by1pbnRlZ2VyJyk7XG52YXIgYWR2YW5jZVN0cmluZ0luZGV4ID0gcmVxdWlyZSgnLi9fYWR2YW5jZS1zdHJpbmctaW5kZXgnKTtcbnZhciByZWdFeHBFeGVjID0gcmVxdWlyZSgnLi9fcmVnZXhwLWV4ZWMtYWJzdHJhY3QnKTtcbnZhciBtYXggPSBNYXRoLm1heDtcbnZhciBtaW4gPSBNYXRoLm1pbjtcbnZhciBmbG9vciA9IE1hdGguZmxvb3I7XG52YXIgU1VCU1RJVFVUSU9OX1NZTUJPTFMgPSAvXFwkKFskJmAnXXxcXGRcXGQ/fDxbXj5dKj4pL2c7XG52YXIgU1VCU1RJVFVUSU9OX1NZTUJPTFNfTk9fTkFNRUQgPSAvXFwkKFskJmAnXXxcXGRcXGQ/KS9nO1xuXG52YXIgbWF5YmVUb1N0cmluZyA9IGZ1bmN0aW9uIChpdCkge1xuICByZXR1cm4gaXQgPT09IHVuZGVmaW5lZCA/IGl0IDogU3RyaW5nKGl0KTtcbn07XG5cbi8vIEBAcmVwbGFjZSBsb2dpY1xucmVxdWlyZSgnLi9fZml4LXJlLXdrcycpKCdyZXBsYWNlJywgMiwgZnVuY3Rpb24gKGRlZmluZWQsIFJFUExBQ0UsICRyZXBsYWNlLCBtYXliZUNhbGxOYXRpdmUpIHtcbiAgcmV0dXJuIFtcbiAgICAvLyBgU3RyaW5nLnByb3RvdHlwZS5yZXBsYWNlYCBtZXRob2RcbiAgICAvLyBodHRwczovL3RjMzkuZ2l0aHViLmlvL2VjbWEyNjIvI3NlYy1zdHJpbmcucHJvdG90eXBlLnJlcGxhY2VcbiAgICBmdW5jdGlvbiByZXBsYWNlKHNlYXJjaFZhbHVlLCByZXBsYWNlVmFsdWUpIHtcbiAgICAgIHZhciBPID0gZGVmaW5lZCh0aGlzKTtcbiAgICAgIHZhciBmbiA9IHNlYXJjaFZhbHVlID09IHVuZGVmaW5lZCA/IHVuZGVmaW5lZCA6IHNlYXJjaFZhbHVlW1JFUExBQ0VdO1xuICAgICAgcmV0dXJuIGZuICE9PSB1bmRlZmluZWRcbiAgICAgICAgPyBmbi5jYWxsKHNlYXJjaFZhbHVlLCBPLCByZXBsYWNlVmFsdWUpXG4gICAgICAgIDogJHJlcGxhY2UuY2FsbChTdHJpbmcoTyksIHNlYXJjaFZhbHVlLCByZXBsYWNlVmFsdWUpO1xuICAgIH0sXG4gICAgLy8gYFJlZ0V4cC5wcm90b3R5cGVbQEByZXBsYWNlXWAgbWV0aG9kXG4gICAgLy8gaHR0cHM6Ly90YzM5LmdpdGh1Yi5pby9lY21hMjYyLyNzZWMtcmVnZXhwLnByb3RvdHlwZS1AQHJlcGxhY2VcbiAgICBmdW5jdGlvbiAocmVnZXhwLCByZXBsYWNlVmFsdWUpIHtcbiAgICAgIHZhciByZXMgPSBtYXliZUNhbGxOYXRpdmUoJHJlcGxhY2UsIHJlZ2V4cCwgdGhpcywgcmVwbGFjZVZhbHVlKTtcbiAgICAgIGlmIChyZXMuZG9uZSkgcmV0dXJuIHJlcy52YWx1ZTtcblxuICAgICAgdmFyIHJ4ID0gYW5PYmplY3QocmVnZXhwKTtcbiAgICAgIHZhciBTID0gU3RyaW5nKHRoaXMpO1xuICAgICAgdmFyIGZ1bmN0aW9uYWxSZXBsYWNlID0gdHlwZW9mIHJlcGxhY2VWYWx1ZSA9PT0gJ2Z1bmN0aW9uJztcbiAgICAgIGlmICghZnVuY3Rpb25hbFJlcGxhY2UpIHJlcGxhY2VWYWx1ZSA9IFN0cmluZyhyZXBsYWNlVmFsdWUpO1xuICAgICAgdmFyIGdsb2JhbCA9IHJ4Lmdsb2JhbDtcbiAgICAgIGlmIChnbG9iYWwpIHtcbiAgICAgICAgdmFyIGZ1bGxVbmljb2RlID0gcngudW5pY29kZTtcbiAgICAgICAgcngubGFzdEluZGV4ID0gMDtcbiAgICAgIH1cbiAgICAgIHZhciByZXN1bHRzID0gW107XG4gICAgICB3aGlsZSAodHJ1ZSkge1xuICAgICAgICB2YXIgcmVzdWx0ID0gcmVnRXhwRXhlYyhyeCwgUyk7XG4gICAgICAgIGlmIChyZXN1bHQgPT09IG51bGwpIGJyZWFrO1xuICAgICAgICByZXN1bHRzLnB1c2gocmVzdWx0KTtcbiAgICAgICAgaWYgKCFnbG9iYWwpIGJyZWFrO1xuICAgICAgICB2YXIgbWF0Y2hTdHIgPSBTdHJpbmcocmVzdWx0WzBdKTtcbiAgICAgICAgaWYgKG1hdGNoU3RyID09PSAnJykgcngubGFzdEluZGV4ID0gYWR2YW5jZVN0cmluZ0luZGV4KFMsIHRvTGVuZ3RoKHJ4Lmxhc3RJbmRleCksIGZ1bGxVbmljb2RlKTtcbiAgICAgIH1cbiAgICAgIHZhciBhY2N1bXVsYXRlZFJlc3VsdCA9ICcnO1xuICAgICAgdmFyIG5leHRTb3VyY2VQb3NpdGlvbiA9IDA7XG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHJlc3VsdHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgcmVzdWx0ID0gcmVzdWx0c1tpXTtcbiAgICAgICAgdmFyIG1hdGNoZWQgPSBTdHJpbmcocmVzdWx0WzBdKTtcbiAgICAgICAgdmFyIHBvc2l0aW9uID0gbWF4KG1pbih0b0ludGVnZXIocmVzdWx0LmluZGV4KSwgUy5sZW5ndGgpLCAwKTtcbiAgICAgICAgdmFyIGNhcHR1cmVzID0gW107XG4gICAgICAgIC8vIE5PVEU6IFRoaXMgaXMgZXF1aXZhbGVudCB0b1xuICAgICAgICAvLyAgIGNhcHR1cmVzID0gcmVzdWx0LnNsaWNlKDEpLm1hcChtYXliZVRvU3RyaW5nKVxuICAgICAgICAvLyBidXQgZm9yIHNvbWUgcmVhc29uIGBuYXRpdmVTbGljZS5jYWxsKHJlc3VsdCwgMSwgcmVzdWx0Lmxlbmd0aClgIChjYWxsZWQgaW5cbiAgICAgICAgLy8gdGhlIHNsaWNlIHBvbHlmaWxsIHdoZW4gc2xpY2luZyBuYXRpdmUgYXJyYXlzKSBcImRvZXNuJ3Qgd29ya1wiIGluIHNhZmFyaSA5IGFuZFxuICAgICAgICAvLyBjYXVzZXMgYSBjcmFzaCAoaHR0cHM6Ly9wYXN0ZWJpbi5jb20vTjIxUXplUUEpIHdoZW4gdHJ5aW5nIHRvIGRlYnVnIGl0LlxuICAgICAgICBmb3IgKHZhciBqID0gMTsgaiA8IHJlc3VsdC5sZW5ndGg7IGorKykgY2FwdHVyZXMucHVzaChtYXliZVRvU3RyaW5nKHJlc3VsdFtqXSkpO1xuICAgICAgICB2YXIgbmFtZWRDYXB0dXJlcyA9IHJlc3VsdC5ncm91cHM7XG4gICAgICAgIGlmIChmdW5jdGlvbmFsUmVwbGFjZSkge1xuICAgICAgICAgIHZhciByZXBsYWNlckFyZ3MgPSBbbWF0Y2hlZF0uY29uY2F0KGNhcHR1cmVzLCBwb3NpdGlvbiwgUyk7XG4gICAgICAgICAgaWYgKG5hbWVkQ2FwdHVyZXMgIT09IHVuZGVmaW5lZCkgcmVwbGFjZXJBcmdzLnB1c2gobmFtZWRDYXB0dXJlcyk7XG4gICAgICAgICAgdmFyIHJlcGxhY2VtZW50ID0gU3RyaW5nKHJlcGxhY2VWYWx1ZS5hcHBseSh1bmRlZmluZWQsIHJlcGxhY2VyQXJncykpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJlcGxhY2VtZW50ID0gZ2V0U3Vic3RpdHV0aW9uKG1hdGNoZWQsIFMsIHBvc2l0aW9uLCBjYXB0dXJlcywgbmFtZWRDYXB0dXJlcywgcmVwbGFjZVZhbHVlKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAocG9zaXRpb24gPj0gbmV4dFNvdXJjZVBvc2l0aW9uKSB7XG4gICAgICAgICAgYWNjdW11bGF0ZWRSZXN1bHQgKz0gUy5zbGljZShuZXh0U291cmNlUG9zaXRpb24sIHBvc2l0aW9uKSArIHJlcGxhY2VtZW50O1xuICAgICAgICAgIG5leHRTb3VyY2VQb3NpdGlvbiA9IHBvc2l0aW9uICsgbWF0Y2hlZC5sZW5ndGg7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHJldHVybiBhY2N1bXVsYXRlZFJlc3VsdCArIFMuc2xpY2UobmV4dFNvdXJjZVBvc2l0aW9uKTtcbiAgICB9XG4gIF07XG5cbiAgICAvLyBodHRwczovL3RjMzkuZ2l0aHViLmlvL2VjbWEyNjIvI3NlYy1nZXRzdWJzdGl0dXRpb25cbiAgZnVuY3Rpb24gZ2V0U3Vic3RpdHV0aW9uKG1hdGNoZWQsIHN0ciwgcG9zaXRpb24sIGNhcHR1cmVzLCBuYW1lZENhcHR1cmVzLCByZXBsYWNlbWVudCkge1xuICAgIHZhciB0YWlsUG9zID0gcG9zaXRpb24gKyBtYXRjaGVkLmxlbmd0aDtcbiAgICB2YXIgbSA9IGNhcHR1cmVzLmxlbmd0aDtcbiAgICB2YXIgc3ltYm9scyA9IFNVQlNUSVRVVElPTl9TWU1CT0xTX05PX05BTUVEO1xuICAgIGlmIChuYW1lZENhcHR1cmVzICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIG5hbWVkQ2FwdHVyZXMgPSB0b09iamVjdChuYW1lZENhcHR1cmVzKTtcbiAgICAgIHN5bWJvbHMgPSBTVUJTVElUVVRJT05fU1lNQk9MUztcbiAgICB9XG4gICAgcmV0dXJuICRyZXBsYWNlLmNhbGwocmVwbGFjZW1lbnQsIHN5bWJvbHMsIGZ1bmN0aW9uIChtYXRjaCwgY2gpIHtcbiAgICAgIHZhciBjYXB0dXJlO1xuICAgICAgc3dpdGNoIChjaC5jaGFyQXQoMCkpIHtcbiAgICAgICAgY2FzZSAnJCc6IHJldHVybiAnJCc7XG4gICAgICAgIGNhc2UgJyYnOiByZXR1cm4gbWF0Y2hlZDtcbiAgICAgICAgY2FzZSAnYCc6IHJldHVybiBzdHIuc2xpY2UoMCwgcG9zaXRpb24pO1xuICAgICAgICBjYXNlIFwiJ1wiOiByZXR1cm4gc3RyLnNsaWNlKHRhaWxQb3MpO1xuICAgICAgICBjYXNlICc8JzpcbiAgICAgICAgICBjYXB0dXJlID0gbmFtZWRDYXB0dXJlc1tjaC5zbGljZSgxLCAtMSldO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBkZWZhdWx0OiAvLyBcXGRcXGQ/XG4gICAgICAgICAgdmFyIG4gPSArY2g7XG4gICAgICAgICAgaWYgKG4gPT09IDApIHJldHVybiBtYXRjaDtcbiAgICAgICAgICBpZiAobiA+IG0pIHtcbiAgICAgICAgICAgIHZhciBmID0gZmxvb3IobiAvIDEwKTtcbiAgICAgICAgICAgIGlmIChmID09PSAwKSByZXR1cm4gbWF0Y2g7XG4gICAgICAgICAgICBpZiAoZiA8PSBtKSByZXR1cm4gY2FwdHVyZXNbZiAtIDFdID09PSB1bmRlZmluZWQgPyBjaC5jaGFyQXQoMSkgOiBjYXB0dXJlc1tmIC0gMV0gKyBjaC5jaGFyQXQoMSk7XG4gICAgICAgICAgICByZXR1cm4gbWF0Y2g7XG4gICAgICAgICAgfVxuICAgICAgICAgIGNhcHR1cmUgPSBjYXB0dXJlc1tuIC0gMV07XG4gICAgICB9XG4gICAgICByZXR1cm4gY2FwdHVyZSA9PT0gdW5kZWZpbmVkID8gJycgOiBjYXB0dXJlO1xuICAgIH0pO1xuICB9XG59KTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///236\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nvar anObject = __webpack_require__(4);\nvar sameValue = __webpack_require__(97);\nvar regExpExec = __webpack_require__(55);\n\n// @@search logic\n__webpack_require__(56)('search', 1, function (defined, SEARCH, $search, maybeCallNative) {\n  return [\n    // `String.prototype.search` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.search\n    function search(regexp) {\n      var O = defined(this);\n      var fn = regexp == undefined ? undefined : regexp[SEARCH];\n      return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[SEARCH](String(O));\n    },\n    // `RegExp.prototype[@@search]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@search\n    function (regexp) {\n      var res = maybeCallNative($search, regexp, this);\n      if (res.done) return res.value;\n      var rx = anObject(regexp);\n      var S = String(this);\n      var previousLastIndex = rx.lastIndex;\n      if (!sameValue(previousLastIndex, 0)) rx.lastIndex = 0;\n      var result = regExpExec(rx, S);\n      if (!sameValue(rx.lastIndex, previousLastIndex)) rx.lastIndex = previousLastIndex;\n      return result === null ? -1 : result.index;\n    }\n  ];\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjM3LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYucmVnZXhwLnNlYXJjaC5qcz8zODZkIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG52YXIgc2FtZVZhbHVlID0gcmVxdWlyZSgnLi9fc2FtZS12YWx1ZScpO1xudmFyIHJlZ0V4cEV4ZWMgPSByZXF1aXJlKCcuL19yZWdleHAtZXhlYy1hYnN0cmFjdCcpO1xuXG4vLyBAQHNlYXJjaCBsb2dpY1xucmVxdWlyZSgnLi9fZml4LXJlLXdrcycpKCdzZWFyY2gnLCAxLCBmdW5jdGlvbiAoZGVmaW5lZCwgU0VBUkNILCAkc2VhcmNoLCBtYXliZUNhbGxOYXRpdmUpIHtcbiAgcmV0dXJuIFtcbiAgICAvLyBgU3RyaW5nLnByb3RvdHlwZS5zZWFyY2hgIG1ldGhvZFxuICAgIC8vIGh0dHBzOi8vdGMzOS5naXRodWIuaW8vZWNtYTI2Mi8jc2VjLXN0cmluZy5wcm90b3R5cGUuc2VhcmNoXG4gICAgZnVuY3Rpb24gc2VhcmNoKHJlZ2V4cCkge1xuICAgICAgdmFyIE8gPSBkZWZpbmVkKHRoaXMpO1xuICAgICAgdmFyIGZuID0gcmVnZXhwID09IHVuZGVmaW5lZCA/IHVuZGVmaW5lZCA6IHJlZ2V4cFtTRUFSQ0hdO1xuICAgICAgcmV0dXJuIGZuICE9PSB1bmRlZmluZWQgPyBmbi5jYWxsKHJlZ2V4cCwgTykgOiBuZXcgUmVnRXhwKHJlZ2V4cClbU0VBUkNIXShTdHJpbmcoTykpO1xuICAgIH0sXG4gICAgLy8gYFJlZ0V4cC5wcm90b3R5cGVbQEBzZWFyY2hdYCBtZXRob2RcbiAgICAvLyBodHRwczovL3RjMzkuZ2l0aHViLmlvL2VjbWEyNjIvI3NlYy1yZWdleHAucHJvdG90eXBlLUBAc2VhcmNoXG4gICAgZnVuY3Rpb24gKHJlZ2V4cCkge1xuICAgICAgdmFyIHJlcyA9IG1heWJlQ2FsbE5hdGl2ZSgkc2VhcmNoLCByZWdleHAsIHRoaXMpO1xuICAgICAgaWYgKHJlcy5kb25lKSByZXR1cm4gcmVzLnZhbHVlO1xuICAgICAgdmFyIHJ4ID0gYW5PYmplY3QocmVnZXhwKTtcbiAgICAgIHZhciBTID0gU3RyaW5nKHRoaXMpO1xuICAgICAgdmFyIHByZXZpb3VzTGFzdEluZGV4ID0gcngubGFzdEluZGV4O1xuICAgICAgaWYgKCFzYW1lVmFsdWUocHJldmlvdXNMYXN0SW5kZXgsIDApKSByeC5sYXN0SW5kZXggPSAwO1xuICAgICAgdmFyIHJlc3VsdCA9IHJlZ0V4cEV4ZWMocngsIFMpO1xuICAgICAgaWYgKCFzYW1lVmFsdWUocngubGFzdEluZGV4LCBwcmV2aW91c0xhc3RJbmRleCkpIHJ4Lmxhc3RJbmRleCA9IHByZXZpb3VzTGFzdEluZGV4O1xuICAgICAgcmV0dXJuIHJlc3VsdCA9PT0gbnVsbCA/IC0xIDogcmVzdWx0LmluZGV4O1xuICAgIH1cbiAgXTtcbn0pO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///237\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nvar isRegExp = __webpack_require__(75);\nvar anObject = __webpack_require__(4);\nvar speciesConstructor = __webpack_require__(48);\nvar advanceStringIndex = __webpack_require__(83);\nvar toLength = __webpack_require__(7);\nvar callRegExpExec = __webpack_require__(55);\nvar regexpExec = __webpack_require__(82);\nvar fails = __webpack_require__(3);\nvar $min = Math.min;\nvar $push = [].push;\nvar $SPLIT = 'split';\nvar LENGTH = 'length';\nvar LAST_INDEX = 'lastIndex';\nvar MAX_UINT32 = 0xffffffff;\n\n// babel-minify transpiles RegExp('x', 'y') -> /x/y and it causes SyntaxError\nvar SUPPORTS_Y = !fails(function () { RegExp(MAX_UINT32, 'y'); });\n\n// @@split logic\n__webpack_require__(56)('split', 2, function (defined, SPLIT, $split, maybeCallNative) {\n  var internalSplit;\n  if (\n    'abbc'[$SPLIT](/(b)*/)[1] == 'c' ||\n    'test'[$SPLIT](/(?:)/, -1)[LENGTH] != 4 ||\n    'ab'[$SPLIT](/(?:ab)*/)[LENGTH] != 2 ||\n    '.'[$SPLIT](/(.?)(.?)/)[LENGTH] != 4 ||\n    '.'[$SPLIT](/()()/)[LENGTH] > 1 ||\n    ''[$SPLIT](/.?/)[LENGTH]\n  ) {\n    // based on es5-shim implementation, need to rework it\n    internalSplit = function (separator, limit) {\n      var string = String(this);\n      if (separator === undefined && limit === 0) return [];\n      // If `separator` is not a regex, use native split\n      if (!isRegExp(separator)) return $split.call(string, separator, limit);\n      var output = [];\n      var flags = (separator.ignoreCase ? 'i' : '') +\n                  (separator.multiline ? 'm' : '') +\n                  (separator.unicode ? 'u' : '') +\n                  (separator.sticky ? 'y' : '');\n      var lastLastIndex = 0;\n      var splitLimit = limit === undefined ? MAX_UINT32 : limit >>> 0;\n      // Make `global` and avoid `lastIndex` issues by working with a copy\n      var separatorCopy = new RegExp(separator.source, flags + 'g');\n      var match, lastIndex, lastLength;\n      while (match = regexpExec.call(separatorCopy, string)) {\n        lastIndex = separatorCopy[LAST_INDEX];\n        if (lastIndex > lastLastIndex) {\n          output.push(string.slice(lastLastIndex, match.index));\n          if (match[LENGTH] > 1 && match.index < string[LENGTH]) $push.apply(output, match.slice(1));\n          lastLength = match[0][LENGTH];\n          lastLastIndex = lastIndex;\n          if (output[LENGTH] >= splitLimit) break;\n        }\n        if (separatorCopy[LAST_INDEX] === match.index) separatorCopy[LAST_INDEX]++; // Avoid an infinite loop\n      }\n      if (lastLastIndex === string[LENGTH]) {\n        if (lastLength || !separatorCopy.test('')) output.push('');\n      } else output.push(string.slice(lastLastIndex));\n      return output[LENGTH] > splitLimit ? output.slice(0, splitLimit) : output;\n    };\n  // Chakra, V8\n  } else if ('0'[$SPLIT](undefined, 0)[LENGTH]) {\n    internalSplit = function (separator, limit) {\n      return separator === undefined && limit === 0 ? [] : $split.call(this, separator, limit);\n    };\n  } else {\n    internalSplit = $split;\n  }\n\n  return [\n    // `String.prototype.split` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.split\n    function split(separator, limit) {\n      var O = defined(this);\n      var splitter = separator == undefined ? undefined : separator[SPLIT];\n      return splitter !== undefined\n        ? splitter.call(separator, O, limit)\n        : internalSplit.call(String(O), separator, limit);\n    },\n    // `RegExp.prototype[@@split]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@split\n    //\n    // NOTE: This cannot be properly polyfilled in engines that don't support\n    // the 'y' flag.\n    function (regexp, limit) {\n      var res = maybeCallNative(internalSplit, regexp, this, limit, internalSplit !== $split);\n      if (res.done) return res.value;\n\n      var rx = anObject(regexp);\n      var S = String(this);\n      var C = speciesConstructor(rx, RegExp);\n\n      var unicodeMatching = rx.unicode;\n      var flags = (rx.ignoreCase ? 'i' : '') +\n                  (rx.multiline ? 'm' : '') +\n                  (rx.unicode ? 'u' : '') +\n                  (SUPPORTS_Y ? 'y' : 'g');\n\n      // ^(? + rx + ) is needed, in combination with some S slicing, to\n      // simulate the 'y' flag.\n      var splitter = new C(SUPPORTS_Y ? rx : '^(?:' + rx.source + ')', flags);\n      var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;\n      if (lim === 0) return [];\n      if (S.length === 0) return callRegExpExec(splitter, S) === null ? [S] : [];\n      var p = 0;\n      var q = 0;\n      var A = [];\n      while (q < S.length) {\n        splitter.lastIndex = SUPPORTS_Y ? q : 0;\n        var z = callRegExpExec(splitter, SUPPORTS_Y ? S : S.slice(q));\n        var e;\n        if (\n          z === null ||\n          (e = $min(toLength(splitter.lastIndex + (SUPPORTS_Y ? 0 : q)), S.length)) === p\n        ) {\n          q = advanceStringIndex(S, q, unicodeMatching);\n        } else {\n          A.push(S.slice(p, q));\n          if (A.length === lim) return A;\n          for (var i = 1; i <= z.length - 1; i++) {\n            A.push(z[i]);\n            if (A.length === lim) return A;\n          }\n          q = p = e;\n        }\n      }\n      A.push(S.slice(p));\n      return A;\n    }\n  ];\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///238\n")},function(module,exports,__webpack_require__){eval("var global = __webpack_require__(2);\nvar macrotask = __webpack_require__(84).set;\nvar Observer = global.MutationObserver || global.WebKitMutationObserver;\nvar process = global.process;\nvar Promise = global.Promise;\nvar isNode = __webpack_require__(24)(process) == 'process';\n\nmodule.exports = function () {\n  var head, last, notify;\n\n  var flush = function () {\n    var parent, fn;\n    if (isNode && (parent = process.domain)) parent.exit();\n    while (head) {\n      fn = head.fn;\n      head = head.next;\n      try {\n        fn();\n      } catch (e) {\n        if (head) notify();\n        else last = undefined;\n        throw e;\n      }\n    } last = undefined;\n    if (parent) parent.enter();\n  };\n\n  // Node.js\n  if (isNode) {\n    notify = function () {\n      process.nextTick(flush);\n    };\n  // browsers with MutationObserver, except iOS Safari - https://github.com/zloirock/core-js/issues/339\n  } else if (Observer && !(global.navigator && global.navigator.standalone)) {\n    var toggle = true;\n    var node = document.createTextNode('');\n    new Observer(flush).observe(node, { characterData: true }); // eslint-disable-line no-new\n    notify = function () {\n      node.data = toggle = !toggle;\n    };\n  // environments with maybe non-completely correct, but existent Promise\n  } else if (Promise && Promise.resolve) {\n    // Promise.resolve without an argument throws an error in LG WebOS 2\n    var promise = Promise.resolve(undefined);\n    notify = function () {\n      promise.then(flush);\n    };\n  // for other environments - macrotask based on:\n  // - setImmediate\n  // - MessageChannel\n  // - window.postMessag\n  // - onreadystatechange\n  // - setTimeout\n  } else {\n    notify = function () {\n      // strange IE + webpack dev server bug - use .call(global)\n      macrotask.call(global, flush);\n    };\n  }\n\n  return function (fn) {\n    var task = { fn: fn, next: undefined };\n    if (last) last.next = task;\n    if (!head) {\n      head = task;\n      notify();\n    } last = task;\n  };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjM5LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fbWljcm90YXNrLmpzPzgwNzkiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpO1xudmFyIG1hY3JvdGFzayA9IHJlcXVpcmUoJy4vX3Rhc2snKS5zZXQ7XG52YXIgT2JzZXJ2ZXIgPSBnbG9iYWwuTXV0YXRpb25PYnNlcnZlciB8fCBnbG9iYWwuV2ViS2l0TXV0YXRpb25PYnNlcnZlcjtcbnZhciBwcm9jZXNzID0gZ2xvYmFsLnByb2Nlc3M7XG52YXIgUHJvbWlzZSA9IGdsb2JhbC5Qcm9taXNlO1xudmFyIGlzTm9kZSA9IHJlcXVpcmUoJy4vX2NvZicpKHByb2Nlc3MpID09ICdwcm9jZXNzJztcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoKSB7XG4gIHZhciBoZWFkLCBsYXN0LCBub3RpZnk7XG5cbiAgdmFyIGZsdXNoID0gZnVuY3Rpb24gKCkge1xuICAgIHZhciBwYXJlbnQsIGZuO1xuICAgIGlmIChpc05vZGUgJiYgKHBhcmVudCA9IHByb2Nlc3MuZG9tYWluKSkgcGFyZW50LmV4aXQoKTtcbiAgICB3aGlsZSAoaGVhZCkge1xuICAgICAgZm4gPSBoZWFkLmZuO1xuICAgICAgaGVhZCA9IGhlYWQubmV4dDtcbiAgICAgIHRyeSB7XG4gICAgICAgIGZuKCk7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIGlmIChoZWFkKSBub3RpZnkoKTtcbiAgICAgICAgZWxzZSBsYXN0ID0gdW5kZWZpbmVkO1xuICAgICAgICB0aHJvdyBlO1xuICAgICAgfVxuICAgIH0gbGFzdCA9IHVuZGVmaW5lZDtcbiAgICBpZiAocGFyZW50KSBwYXJlbnQuZW50ZXIoKTtcbiAgfTtcblxuICAvLyBOb2RlLmpzXG4gIGlmIChpc05vZGUpIHtcbiAgICBub3RpZnkgPSBmdW5jdGlvbiAoKSB7XG4gICAgICBwcm9jZXNzLm5leHRUaWNrKGZsdXNoKTtcbiAgICB9O1xuICAvLyBicm93c2VycyB3aXRoIE11dGF0aW9uT2JzZXJ2ZXIsIGV4Y2VwdCBpT1MgU2FmYXJpIC0gaHR0cHM6Ly9naXRodWIuY29tL3psb2lyb2NrL2NvcmUtanMvaXNzdWVzLzMzOVxuICB9IGVsc2UgaWYgKE9ic2VydmVyICYmICEoZ2xvYmFsLm5hdmlnYXRvciAmJiBnbG9iYWwubmF2aWdhdG9yLnN0YW5kYWxvbmUpKSB7XG4gICAgdmFyIHRvZ2dsZSA9IHRydWU7XG4gICAgdmFyIG5vZGUgPSBkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZSgnJyk7XG4gICAgbmV3IE9ic2VydmVyKGZsdXNoKS5vYnNlcnZlKG5vZGUsIHsgY2hhcmFjdGVyRGF0YTogdHJ1ZSB9KTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1uZXdcbiAgICBub3RpZnkgPSBmdW5jdGlvbiAoKSB7XG4gICAgICBub2RlLmRhdGEgPSB0b2dnbGUgPSAhdG9nZ2xlO1xuICAgIH07XG4gIC8vIGVudmlyb25tZW50cyB3aXRoIG1heWJlIG5vbi1jb21wbGV0ZWx5IGNvcnJlY3QsIGJ1dCBleGlzdGVudCBQcm9taXNlXG4gIH0gZWxzZSBpZiAoUHJvbWlzZSAmJiBQcm9taXNlLnJlc29sdmUpIHtcbiAgICAvLyBQcm9taXNlLnJlc29sdmUgd2l0aG91dCBhbiBhcmd1bWVudCB0aHJvd3MgYW4gZXJyb3IgaW4gTEcgV2ViT1MgMlxuICAgIHZhciBwcm9taXNlID0gUHJvbWlzZS5yZXNvbHZlKHVuZGVmaW5lZCk7XG4gICAgbm90aWZ5ID0gZnVuY3Rpb24gKCkge1xuICAgICAgcHJvbWlzZS50aGVuKGZsdXNoKTtcbiAgICB9O1xuICAvLyBmb3Igb3RoZXIgZW52aXJvbm1lbnRzIC0gbWFjcm90YXNrIGJhc2VkIG9uOlxuICAvLyAtIHNldEltbWVkaWF0ZVxuICAvLyAtIE1lc3NhZ2VDaGFubmVsXG4gIC8vIC0gd2luZG93LnBvc3RNZXNzYWdcbiAgLy8gLSBvbnJlYWR5c3RhdGVjaGFuZ2VcbiAgLy8gLSBzZXRUaW1lb3V0XG4gIH0gZWxzZSB7XG4gICAgbm90aWZ5ID0gZnVuY3Rpb24gKCkge1xuICAgICAgLy8gc3RyYW5nZSBJRSArIHdlYnBhY2sgZGV2IHNlcnZlciBidWcgLSB1c2UgLmNhbGwoZ2xvYmFsKVxuICAgICAgbWFjcm90YXNrLmNhbGwoZ2xvYmFsLCBmbHVzaCk7XG4gICAgfTtcbiAgfVxuXG4gIHJldHVybiBmdW5jdGlvbiAoZm4pIHtcbiAgICB2YXIgdGFzayA9IHsgZm46IGZuLCBuZXh0OiB1bmRlZmluZWQgfTtcbiAgICBpZiAobGFzdCkgbGFzdC5uZXh0ID0gdGFzaztcbiAgICBpZiAoIWhlYWQpIHtcbiAgICAgIGhlYWQgPSB0YXNrO1xuICAgICAgbm90aWZ5KCk7XG4gICAgfSBsYXN0ID0gdGFzaztcbiAgfTtcbn07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///239\n")},function(module,exports){eval("module.exports = function (exec) {\n  try {\n    return { e: false, v: exec() };\n  } catch (e) {\n    return { e: true, v: e };\n  }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjQwLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fcGVyZm9ybS5qcz85YzgwIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGV4ZWMpIHtcbiAgdHJ5IHtcbiAgICByZXR1cm4geyBlOiBmYWxzZSwgdjogZXhlYygpIH07XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICByZXR1cm4geyBlOiB0cnVlLCB2OiBlIH07XG4gIH1cbn07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///240\n")},function(module,exports,__webpack_require__){"use strict";eval("\nvar strong = __webpack_require__(116);\nvar validate = __webpack_require__(38);\nvar MAP = 'Map';\n\n// 23.1 Map Objects\nmodule.exports = __webpack_require__(59)(MAP, function (get) {\n  return function Map() { return get(this, arguments.length > 0 ? arguments[0] : undefined); };\n}, {\n  // 23.1.3.6 Map.prototype.get(key)\n  get: function get(key) {\n    var entry = strong.getEntry(validate(this, MAP), key);\n    return entry && entry.v;\n  },\n  // 23.1.3.9 Map.prototype.set(key, value)\n  set: function set(key, value) {\n    return strong.def(validate(this, MAP), key === 0 ? 0 : key, value);\n  }\n}, strong, true);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjQxLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYubWFwLmpzP2Y0MDAiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xudmFyIHN0cm9uZyA9IHJlcXVpcmUoJy4vX2NvbGxlY3Rpb24tc3Ryb25nJyk7XG52YXIgdmFsaWRhdGUgPSByZXF1aXJlKCcuL192YWxpZGF0ZS1jb2xsZWN0aW9uJyk7XG52YXIgTUFQID0gJ01hcCc7XG5cbi8vIDIzLjEgTWFwIE9iamVjdHNcbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9fY29sbGVjdGlvbicpKE1BUCwgZnVuY3Rpb24gKGdldCkge1xuICByZXR1cm4gZnVuY3Rpb24gTWFwKCkgeyByZXR1cm4gZ2V0KHRoaXMsIGFyZ3VtZW50cy5sZW5ndGggPiAwID8gYXJndW1lbnRzWzBdIDogdW5kZWZpbmVkKTsgfTtcbn0sIHtcbiAgLy8gMjMuMS4zLjYgTWFwLnByb3RvdHlwZS5nZXQoa2V5KVxuICBnZXQ6IGZ1bmN0aW9uIGdldChrZXkpIHtcbiAgICB2YXIgZW50cnkgPSBzdHJvbmcuZ2V0RW50cnkodmFsaWRhdGUodGhpcywgTUFQKSwga2V5KTtcbiAgICByZXR1cm4gZW50cnkgJiYgZW50cnkudjtcbiAgfSxcbiAgLy8gMjMuMS4zLjkgTWFwLnByb3RvdHlwZS5zZXQoa2V5LCB2YWx1ZSlcbiAgc2V0OiBmdW5jdGlvbiBzZXQoa2V5LCB2YWx1ZSkge1xuICAgIHJldHVybiBzdHJvbmcuZGVmKHZhbGlkYXRlKHRoaXMsIE1BUCksIGtleSA9PT0gMCA/IDAgOiBrZXksIHZhbHVlKTtcbiAgfVxufSwgc3Ryb25nLCB0cnVlKTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///241\n")},function(module,exports,__webpack_require__){"use strict";eval("\nvar strong = __webpack_require__(116);\nvar validate = __webpack_require__(38);\nvar SET = 'Set';\n\n// 23.2 Set Objects\nmodule.exports = __webpack_require__(59)(SET, function (get) {\n  return function Set() { return get(this, arguments.length > 0 ? arguments[0] : undefined); };\n}, {\n  // 23.2.3.1 Set.prototype.add(value)\n  add: function add(value) {\n    return strong.def(validate(this, SET), value = value === 0 ? 0 : value, value);\n  }\n}, strong);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjQyLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuc2V0LmpzPzRmN2YiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xudmFyIHN0cm9uZyA9IHJlcXVpcmUoJy4vX2NvbGxlY3Rpb24tc3Ryb25nJyk7XG52YXIgdmFsaWRhdGUgPSByZXF1aXJlKCcuL192YWxpZGF0ZS1jb2xsZWN0aW9uJyk7XG52YXIgU0VUID0gJ1NldCc7XG5cbi8vIDIzLjIgU2V0IE9iamVjdHNcbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9fY29sbGVjdGlvbicpKFNFVCwgZnVuY3Rpb24gKGdldCkge1xuICByZXR1cm4gZnVuY3Rpb24gU2V0KCkgeyByZXR1cm4gZ2V0KHRoaXMsIGFyZ3VtZW50cy5sZW5ndGggPiAwID8gYXJndW1lbnRzWzBdIDogdW5kZWZpbmVkKTsgfTtcbn0sIHtcbiAgLy8gMjMuMi4zLjEgU2V0LnByb3RvdHlwZS5hZGQodmFsdWUpXG4gIGFkZDogZnVuY3Rpb24gYWRkKHZhbHVlKSB7XG4gICAgcmV0dXJuIHN0cm9uZy5kZWYodmFsaWRhdGUodGhpcywgU0VUKSwgdmFsdWUgPSB2YWx1ZSA9PT0gMCA/IDAgOiB2YWx1ZSwgdmFsdWUpO1xuICB9XG59LCBzdHJvbmcpO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///242\n")},function(module,exports,__webpack_require__){"use strict";eval("\nvar global = __webpack_require__(2);\nvar each = __webpack_require__(23)(0);\nvar redefine = __webpack_require__(12);\nvar meta = __webpack_require__(28);\nvar assign = __webpack_require__(96);\nvar weak = __webpack_require__(117);\nvar isObject = __webpack_require__(5);\nvar validate = __webpack_require__(38);\nvar NATIVE_WEAK_MAP = __webpack_require__(38);\nvar IS_IE11 = !global.ActiveXObject && 'ActiveXObject' in global;\nvar WEAK_MAP = 'WeakMap';\nvar getWeak = meta.getWeak;\nvar isExtensible = Object.isExtensible;\nvar uncaughtFrozenStore = weak.ufstore;\nvar InternalMap;\n\nvar wrapper = function (get) {\n  return function WeakMap() {\n    return get(this, arguments.length > 0 ? arguments[0] : undefined);\n  };\n};\n\nvar methods = {\n  // 23.3.3.3 WeakMap.prototype.get(key)\n  get: function get(key) {\n    if (isObject(key)) {\n      var data = getWeak(key);\n      if (data === true) return uncaughtFrozenStore(validate(this, WEAK_MAP)).get(key);\n      return data ? data[this._i] : undefined;\n    }\n  },\n  // 23.3.3.5 WeakMap.prototype.set(key, value)\n  set: function set(key, value) {\n    return weak.def(validate(this, WEAK_MAP), key, value);\n  }\n};\n\n// 23.3 WeakMap Objects\nvar $WeakMap = module.exports = __webpack_require__(59)(WEAK_MAP, wrapper, methods, weak, true, true);\n\n// IE11 WeakMap frozen keys fix\nif (NATIVE_WEAK_MAP && IS_IE11) {\n  InternalMap = weak.getConstructor(wrapper, WEAK_MAP);\n  assign(InternalMap.prototype, methods);\n  meta.NEED = true;\n  each(['delete', 'has', 'get', 'set'], function (key) {\n    var proto = $WeakMap.prototype;\n    var method = proto[key];\n    redefine(proto, key, function (a, b) {\n      // store frozen objects on internal weakmap shim\n      if (isObject(a) && !isExtensible(a)) {\n        if (!this._f) this._f = new InternalMap();\n        var result = this._f[key](a, b);\n        return key == 'set' ? this : result;\n      // store all the rest on native weakmap\n      } return method.call(this, a, b);\n    });\n  });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjQzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYud2Vhay1tYXAuanM/MTBhZCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG52YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi9fZ2xvYmFsJyk7XG52YXIgZWFjaCA9IHJlcXVpcmUoJy4vX2FycmF5LW1ldGhvZHMnKSgwKTtcbnZhciByZWRlZmluZSA9IHJlcXVpcmUoJy4vX3JlZGVmaW5lJyk7XG52YXIgbWV0YSA9IHJlcXVpcmUoJy4vX21ldGEnKTtcbnZhciBhc3NpZ24gPSByZXF1aXJlKCcuL19vYmplY3QtYXNzaWduJyk7XG52YXIgd2VhayA9IHJlcXVpcmUoJy4vX2NvbGxlY3Rpb24td2VhaycpO1xudmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7XG52YXIgdmFsaWRhdGUgPSByZXF1aXJlKCcuL192YWxpZGF0ZS1jb2xsZWN0aW9uJyk7XG52YXIgTkFUSVZFX1dFQUtfTUFQID0gcmVxdWlyZSgnLi9fdmFsaWRhdGUtY29sbGVjdGlvbicpO1xudmFyIElTX0lFMTEgPSAhZ2xvYmFsLkFjdGl2ZVhPYmplY3QgJiYgJ0FjdGl2ZVhPYmplY3QnIGluIGdsb2JhbDtcbnZhciBXRUFLX01BUCA9ICdXZWFrTWFwJztcbnZhciBnZXRXZWFrID0gbWV0YS5nZXRXZWFrO1xudmFyIGlzRXh0ZW5zaWJsZSA9IE9iamVjdC5pc0V4dGVuc2libGU7XG52YXIgdW5jYXVnaHRGcm96ZW5TdG9yZSA9IHdlYWsudWZzdG9yZTtcbnZhciBJbnRlcm5hbE1hcDtcblxudmFyIHdyYXBwZXIgPSBmdW5jdGlvbiAoZ2V0KSB7XG4gIHJldHVybiBmdW5jdGlvbiBXZWFrTWFwKCkge1xuICAgIHJldHVybiBnZXQodGhpcywgYXJndW1lbnRzLmxlbmd0aCA+IDAgPyBhcmd1bWVudHNbMF0gOiB1bmRlZmluZWQpO1xuICB9O1xufTtcblxudmFyIG1ldGhvZHMgPSB7XG4gIC8vIDIzLjMuMy4zIFdlYWtNYXAucHJvdG90eXBlLmdldChrZXkpXG4gIGdldDogZnVuY3Rpb24gZ2V0KGtleSkge1xuICAgIGlmIChpc09iamVjdChrZXkpKSB7XG4gICAgICB2YXIgZGF0YSA9IGdldFdlYWsoa2V5KTtcbiAgICAgIGlmIChkYXRhID09PSB0cnVlKSByZXR1cm4gdW5jYXVnaHRGcm96ZW5TdG9yZSh2YWxpZGF0ZSh0aGlzLCBXRUFLX01BUCkpLmdldChrZXkpO1xuICAgICAgcmV0dXJuIGRhdGEgPyBkYXRhW3RoaXMuX2ldIDogdW5kZWZpbmVkO1xuICAgIH1cbiAgfSxcbiAgLy8gMjMuMy4zLjUgV2Vha01hcC5wcm90b3R5cGUuc2V0KGtleSwgdmFsdWUpXG4gIHNldDogZnVuY3Rpb24gc2V0KGtleSwgdmFsdWUpIHtcbiAgICByZXR1cm4gd2Vhay5kZWYodmFsaWRhdGUodGhpcywgV0VBS19NQVApLCBrZXksIHZhbHVlKTtcbiAgfVxufTtcblxuLy8gMjMuMyBXZWFrTWFwIE9iamVjdHNcbnZhciAkV2Vha01hcCA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9fY29sbGVjdGlvbicpKFdFQUtfTUFQLCB3cmFwcGVyLCBtZXRob2RzLCB3ZWFrLCB0cnVlLCB0cnVlKTtcblxuLy8gSUUxMSBXZWFrTWFwIGZyb3plbiBrZXlzIGZpeFxuaWYgKE5BVElWRV9XRUFLX01BUCAmJiBJU19JRTExKSB7XG4gIEludGVybmFsTWFwID0gd2Vhay5nZXRDb25zdHJ1Y3Rvcih3cmFwcGVyLCBXRUFLX01BUCk7XG4gIGFzc2lnbihJbnRlcm5hbE1hcC5wcm90b3R5cGUsIG1ldGhvZHMpO1xuICBtZXRhLk5FRUQgPSB0cnVlO1xuICBlYWNoKFsnZGVsZXRlJywgJ2hhcycsICdnZXQnLCAnc2V0J10sIGZ1bmN0aW9uIChrZXkpIHtcbiAgICB2YXIgcHJvdG8gPSAkV2Vha01hcC5wcm90b3R5cGU7XG4gICAgdmFyIG1ldGhvZCA9IHByb3RvW2tleV07XG4gICAgcmVkZWZpbmUocHJvdG8sIGtleSwgZnVuY3Rpb24gKGEsIGIpIHtcbiAgICAgIC8vIHN0b3JlIGZyb3plbiBvYmplY3RzIG9uIGludGVybmFsIHdlYWttYXAgc2hpbVxuICAgICAgaWYgKGlzT2JqZWN0KGEpICYmICFpc0V4dGVuc2libGUoYSkpIHtcbiAgICAgICAgaWYgKCF0aGlzLl9mKSB0aGlzLl9mID0gbmV3IEludGVybmFsTWFwKCk7XG4gICAgICAgIHZhciByZXN1bHQgPSB0aGlzLl9mW2tleV0oYSwgYik7XG4gICAgICAgIHJldHVybiBrZXkgPT0gJ3NldCcgPyB0aGlzIDogcmVzdWx0O1xuICAgICAgLy8gc3RvcmUgYWxsIHRoZSByZXN0IG9uIG5hdGl2ZSB3ZWFrbWFwXG4gICAgICB9IHJldHVybiBtZXRob2QuY2FsbCh0aGlzLCBhLCBiKTtcbiAgICB9KTtcbiAgfSk7XG59XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///243\n")},function(module,exports,__webpack_require__){"use strict";eval("\nvar weak = __webpack_require__(117);\nvar validate = __webpack_require__(38);\nvar WEAK_SET = 'WeakSet';\n\n// 23.4 WeakSet Objects\n__webpack_require__(59)(WEAK_SET, function (get) {\n  return function WeakSet() { return get(this, arguments.length > 0 ? arguments[0] : undefined); };\n}, {\n  // 23.4.3.1 WeakSet.prototype.add(value)\n  add: function add(value) {\n    return weak.def(validate(this, WEAK_SET), value, true);\n  }\n}, weak, false, true);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjQ0LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYud2Vhay1zZXQuanM/YzAyYiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG52YXIgd2VhayA9IHJlcXVpcmUoJy4vX2NvbGxlY3Rpb24td2VhaycpO1xudmFyIHZhbGlkYXRlID0gcmVxdWlyZSgnLi9fdmFsaWRhdGUtY29sbGVjdGlvbicpO1xudmFyIFdFQUtfU0VUID0gJ1dlYWtTZXQnO1xuXG4vLyAyMy40IFdlYWtTZXQgT2JqZWN0c1xucmVxdWlyZSgnLi9fY29sbGVjdGlvbicpKFdFQUtfU0VULCBmdW5jdGlvbiAoZ2V0KSB7XG4gIHJldHVybiBmdW5jdGlvbiBXZWFrU2V0KCkgeyByZXR1cm4gZ2V0KHRoaXMsIGFyZ3VtZW50cy5sZW5ndGggPiAwID8gYXJndW1lbnRzWzBdIDogdW5kZWZpbmVkKTsgfTtcbn0sIHtcbiAgLy8gMjMuNC4zLjEgV2Vha1NldC5wcm90b3R5cGUuYWRkKHZhbHVlKVxuICBhZGQ6IGZ1bmN0aW9uIGFkZCh2YWx1ZSkge1xuICAgIHJldHVybiB3ZWFrLmRlZih2YWxpZGF0ZSh0aGlzLCBXRUFLX1NFVCksIHZhbHVlLCB0cnVlKTtcbiAgfVxufSwgd2VhaywgZmFsc2UsIHRydWUpO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///244\n")},function(module,exports,__webpack_require__){"use strict";eval("\nvar $export = __webpack_require__(1);\nvar $typed = __webpack_require__(60);\nvar buffer = __webpack_require__(85);\nvar anObject = __webpack_require__(4);\nvar toAbsoluteIndex = __webpack_require__(33);\nvar toLength = __webpack_require__(7);\nvar isObject = __webpack_require__(5);\nvar ArrayBuffer = __webpack_require__(2).ArrayBuffer;\nvar speciesConstructor = __webpack_require__(48);\nvar $ArrayBuffer = buffer.ArrayBuffer;\nvar $DataView = buffer.DataView;\nvar $isView = $typed.ABV && ArrayBuffer.isView;\nvar $slice = $ArrayBuffer.prototype.slice;\nvar VIEW = $typed.VIEW;\nvar ARRAY_BUFFER = 'ArrayBuffer';\n\n$export($export.G + $export.W + $export.F * (ArrayBuffer !== $ArrayBuffer), { ArrayBuffer: $ArrayBuffer });\n\n$export($export.S + $export.F * !$typed.CONSTR, ARRAY_BUFFER, {\n  // 24.1.3.1 ArrayBuffer.isView(arg)\n  isView: function isView(it) {\n    return $isView && $isView(it) || isObject(it) && VIEW in it;\n  }\n});\n\n$export($export.P + $export.U + $export.F * __webpack_require__(3)(function () {\n  return !new $ArrayBuffer(2).slice(1, undefined).byteLength;\n}), ARRAY_BUFFER, {\n  // 24.1.4.3 ArrayBuffer.prototype.slice(start, end)\n  slice: function slice(start, end) {\n    if ($slice !== undefined && end === undefined) return $slice.call(anObject(this), start); // FF fix\n    var len = anObject(this).byteLength;\n    var first = toAbsoluteIndex(start, len);\n    var fin = toAbsoluteIndex(end === undefined ? len : end, len);\n    var result = new (speciesConstructor(this, $ArrayBuffer))(toLength(fin - first));\n    var viewS = new $DataView(this);\n    var viewT = new $DataView(result);\n    var index = 0;\n    while (first < fin) {\n      viewT.setUint8(index++, viewS.getUint8(first++));\n    } return result;\n  }\n});\n\n__webpack_require__(42)(ARRAY_BUFFER);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjQ1LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYudHlwZWQuYXJyYXktYnVmZmVyLmpzP2M2NmYiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciAkdHlwZWQgPSByZXF1aXJlKCcuL190eXBlZCcpO1xudmFyIGJ1ZmZlciA9IHJlcXVpcmUoJy4vX3R5cGVkLWJ1ZmZlcicpO1xudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG52YXIgdG9BYnNvbHV0ZUluZGV4ID0gcmVxdWlyZSgnLi9fdG8tYWJzb2x1dGUtaW5kZXgnKTtcbnZhciB0b0xlbmd0aCA9IHJlcXVpcmUoJy4vX3RvLWxlbmd0aCcpO1xudmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7XG52YXIgQXJyYXlCdWZmZXIgPSByZXF1aXJlKCcuL19nbG9iYWwnKS5BcnJheUJ1ZmZlcjtcbnZhciBzcGVjaWVzQ29uc3RydWN0b3IgPSByZXF1aXJlKCcuL19zcGVjaWVzLWNvbnN0cnVjdG9yJyk7XG52YXIgJEFycmF5QnVmZmVyID0gYnVmZmVyLkFycmF5QnVmZmVyO1xudmFyICREYXRhVmlldyA9IGJ1ZmZlci5EYXRhVmlldztcbnZhciAkaXNWaWV3ID0gJHR5cGVkLkFCViAmJiBBcnJheUJ1ZmZlci5pc1ZpZXc7XG52YXIgJHNsaWNlID0gJEFycmF5QnVmZmVyLnByb3RvdHlwZS5zbGljZTtcbnZhciBWSUVXID0gJHR5cGVkLlZJRVc7XG52YXIgQVJSQVlfQlVGRkVSID0gJ0FycmF5QnVmZmVyJztcblxuJGV4cG9ydCgkZXhwb3J0LkcgKyAkZXhwb3J0LlcgKyAkZXhwb3J0LkYgKiAoQXJyYXlCdWZmZXIgIT09ICRBcnJheUJ1ZmZlciksIHsgQXJyYXlCdWZmZXI6ICRBcnJheUJ1ZmZlciB9KTtcblxuJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYgKiAhJHR5cGVkLkNPTlNUUiwgQVJSQVlfQlVGRkVSLCB7XG4gIC8vIDI0LjEuMy4xIEFycmF5QnVmZmVyLmlzVmlldyhhcmcpXG4gIGlzVmlldzogZnVuY3Rpb24gaXNWaWV3KGl0KSB7XG4gICAgcmV0dXJuICRpc1ZpZXcgJiYgJGlzVmlldyhpdCkgfHwgaXNPYmplY3QoaXQpICYmIFZJRVcgaW4gaXQ7XG4gIH1cbn0pO1xuXG4kZXhwb3J0KCRleHBvcnQuUCArICRleHBvcnQuVSArICRleHBvcnQuRiAqIHJlcXVpcmUoJy4vX2ZhaWxzJykoZnVuY3Rpb24gKCkge1xuICByZXR1cm4gIW5ldyAkQXJyYXlCdWZmZXIoMikuc2xpY2UoMSwgdW5kZWZpbmVkKS5ieXRlTGVuZ3RoO1xufSksIEFSUkFZX0JVRkZFUiwge1xuICAvLyAyNC4xLjQuMyBBcnJheUJ1ZmZlci5wcm90b3R5cGUuc2xpY2Uoc3RhcnQsIGVuZClcbiAgc2xpY2U6IGZ1bmN0aW9uIHNsaWNlKHN0YXJ0LCBlbmQpIHtcbiAgICBpZiAoJHNsaWNlICE9PSB1bmRlZmluZWQgJiYgZW5kID09PSB1bmRlZmluZWQpIHJldHVybiAkc2xpY2UuY2FsbChhbk9iamVjdCh0aGlzKSwgc3RhcnQpOyAvLyBGRiBmaXhcbiAgICB2YXIgbGVuID0gYW5PYmplY3QodGhpcykuYnl0ZUxlbmd0aDtcbiAgICB2YXIgZmlyc3QgPSB0b0Fic29sdXRlSW5kZXgoc3RhcnQsIGxlbik7XG4gICAgdmFyIGZpbiA9IHRvQWJzb2x1dGVJbmRleChlbmQgPT09IHVuZGVmaW5lZCA/IGxlbiA6IGVuZCwgbGVuKTtcbiAgICB2YXIgcmVzdWx0ID0gbmV3IChzcGVjaWVzQ29uc3RydWN0b3IodGhpcywgJEFycmF5QnVmZmVyKSkodG9MZW5ndGgoZmluIC0gZmlyc3QpKTtcbiAgICB2YXIgdmlld1MgPSBuZXcgJERhdGFWaWV3KHRoaXMpO1xuICAgIHZhciB2aWV3VCA9IG5ldyAkRGF0YVZpZXcocmVzdWx0KTtcbiAgICB2YXIgaW5kZXggPSAwO1xuICAgIHdoaWxlIChmaXJzdCA8IGZpbikge1xuICAgICAgdmlld1Quc2V0VWludDgoaW5kZXgrKywgdmlld1MuZ2V0VWludDgoZmlyc3QrKykpO1xuICAgIH0gcmV0dXJuIHJlc3VsdDtcbiAgfVxufSk7XG5cbnJlcXVpcmUoJy4vX3NldC1zcGVjaWVzJykoQVJSQVlfQlVGRkVSKTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///245\n")},function(module,exports,__webpack_require__){eval("var $export = __webpack_require__(1);\n$export($export.G + $export.W + $export.F * !__webpack_require__(60).ABV, {\n  DataView: __webpack_require__(85).DataView\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjQ2LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYudHlwZWQuZGF0YS12aWV3LmpzPzI2MmYiXSwic291cmNlc0NvbnRlbnQiOlsidmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbiRleHBvcnQoJGV4cG9ydC5HICsgJGV4cG9ydC5XICsgJGV4cG9ydC5GICogIXJlcXVpcmUoJy4vX3R5cGVkJykuQUJWLCB7XG4gIERhdGFWaWV3OiByZXF1aXJlKCcuL190eXBlZC1idWZmZXInKS5EYXRhVmlld1xufSk7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///246\n")},function(module,exports,__webpack_require__){eval("__webpack_require__(26)('Int8', 1, function (init) {\n  return function Int8Array(data, byteOffset, length) {\n    return init(this, data, byteOffset, length);\n  };\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjQ3LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYudHlwZWQuaW50OC1hcnJheS5qcz9iMDVjIl0sInNvdXJjZXNDb250ZW50IjpbInJlcXVpcmUoJy4vX3R5cGVkLWFycmF5JykoJ0ludDgnLCAxLCBmdW5jdGlvbiAoaW5pdCkge1xuICByZXR1cm4gZnVuY3Rpb24gSW50OEFycmF5KGRhdGEsIGJ5dGVPZmZzZXQsIGxlbmd0aCkge1xuICAgIHJldHVybiBpbml0KHRoaXMsIGRhdGEsIGJ5dGVPZmZzZXQsIGxlbmd0aCk7XG4gIH07XG59KTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///247\n")},function(module,exports,__webpack_require__){eval("__webpack_require__(26)('Uint8', 1, function (init) {\n  return function Uint8Array(data, byteOffset, length) {\n    return init(this, data, byteOffset, length);\n  };\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjQ4LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYudHlwZWQudWludDgtYXJyYXkuanM/MzRlZiJdLCJzb3VyY2VzQ29udGVudCI6WyJyZXF1aXJlKCcuL190eXBlZC1hcnJheScpKCdVaW50OCcsIDEsIGZ1bmN0aW9uIChpbml0KSB7XG4gIHJldHVybiBmdW5jdGlvbiBVaW50OEFycmF5KGRhdGEsIGJ5dGVPZmZzZXQsIGxlbmd0aCkge1xuICAgIHJldHVybiBpbml0KHRoaXMsIGRhdGEsIGJ5dGVPZmZzZXQsIGxlbmd0aCk7XG4gIH07XG59KTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///248\n")},function(module,exports,__webpack_require__){eval("__webpack_require__(26)('Uint8', 1, function (init) {\n  return function Uint8ClampedArray(data, byteOffset, length) {\n    return init(this, data, byteOffset, length);\n  };\n}, true);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjQ5LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYudHlwZWQudWludDgtY2xhbXBlZC1hcnJheS5qcz82YWEyIl0sInNvdXJjZXNDb250ZW50IjpbInJlcXVpcmUoJy4vX3R5cGVkLWFycmF5JykoJ1VpbnQ4JywgMSwgZnVuY3Rpb24gKGluaXQpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIFVpbnQ4Q2xhbXBlZEFycmF5KGRhdGEsIGJ5dGVPZmZzZXQsIGxlbmd0aCkge1xuICAgIHJldHVybiBpbml0KHRoaXMsIGRhdGEsIGJ5dGVPZmZzZXQsIGxlbmd0aCk7XG4gIH07XG59LCB0cnVlKTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///249\n")},function(module,exports,__webpack_require__){eval("__webpack_require__(26)('Int16', 2, function (init) {\n  return function Int16Array(data, byteOffset, length) {\n    return init(this, data, byteOffset, length);\n  };\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjUwLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYudHlwZWQuaW50MTYtYXJyYXkuanM/MTVhYyJdLCJzb3VyY2VzQ29udGVudCI6WyJyZXF1aXJlKCcuL190eXBlZC1hcnJheScpKCdJbnQxNicsIDIsIGZ1bmN0aW9uIChpbml0KSB7XG4gIHJldHVybiBmdW5jdGlvbiBJbnQxNkFycmF5KGRhdGEsIGJ5dGVPZmZzZXQsIGxlbmd0aCkge1xuICAgIHJldHVybiBpbml0KHRoaXMsIGRhdGEsIGJ5dGVPZmZzZXQsIGxlbmd0aCk7XG4gIH07XG59KTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///250\n")},function(module,exports,__webpack_require__){eval("__webpack_require__(26)('Uint16', 2, function (init) {\n  return function Uint16Array(data, byteOffset, length) {\n    return init(this, data, byteOffset, length);\n  };\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjUxLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYudHlwZWQudWludDE2LWFycmF5LmpzP2FmNTYiXSwic291cmNlc0NvbnRlbnQiOlsicmVxdWlyZSgnLi9fdHlwZWQtYXJyYXknKSgnVWludDE2JywgMiwgZnVuY3Rpb24gKGluaXQpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIFVpbnQxNkFycmF5KGRhdGEsIGJ5dGVPZmZzZXQsIGxlbmd0aCkge1xuICAgIHJldHVybiBpbml0KHRoaXMsIGRhdGEsIGJ5dGVPZmZzZXQsIGxlbmd0aCk7XG4gIH07XG59KTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///251\n")},function(module,exports,__webpack_require__){eval("__webpack_require__(26)('Int32', 4, function (init) {\n  return function Int32Array(data, byteOffset, length) {\n    return init(this, data, byteOffset, length);\n  };\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjUyLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYudHlwZWQuaW50MzItYXJyYXkuanM/YjZlNCJdLCJzb3VyY2VzQ29udGVudCI6WyJyZXF1aXJlKCcuL190eXBlZC1hcnJheScpKCdJbnQzMicsIDQsIGZ1bmN0aW9uIChpbml0KSB7XG4gIHJldHVybiBmdW5jdGlvbiBJbnQzMkFycmF5KGRhdGEsIGJ5dGVPZmZzZXQsIGxlbmd0aCkge1xuICAgIHJldHVybiBpbml0KHRoaXMsIGRhdGEsIGJ5dGVPZmZzZXQsIGxlbmd0aCk7XG4gIH07XG59KTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///252\n")},function(module,exports,__webpack_require__){eval("__webpack_require__(26)('Uint32', 4, function (init) {\n  return function Uint32Array(data, byteOffset, length) {\n    return init(this, data, byteOffset, length);\n  };\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjUzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYudHlwZWQudWludDMyLWFycmF5LmpzPzljMjkiXSwic291cmNlc0NvbnRlbnQiOlsicmVxdWlyZSgnLi9fdHlwZWQtYXJyYXknKSgnVWludDMyJywgNCwgZnVuY3Rpb24gKGluaXQpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIFVpbnQzMkFycmF5KGRhdGEsIGJ5dGVPZmZzZXQsIGxlbmd0aCkge1xuICAgIHJldHVybiBpbml0KHRoaXMsIGRhdGEsIGJ5dGVPZmZzZXQsIGxlbmd0aCk7XG4gIH07XG59KTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///253\n")},function(module,exports,__webpack_require__){eval("__webpack_require__(26)('Float32', 4, function (init) {\n  return function Float32Array(data, byteOffset, length) {\n    return init(this, data, byteOffset, length);\n  };\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjU0LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYudHlwZWQuZmxvYXQzMi1hcnJheS5qcz82M2Q5Il0sInNvdXJjZXNDb250ZW50IjpbInJlcXVpcmUoJy4vX3R5cGVkLWFycmF5JykoJ0Zsb2F0MzInLCA0LCBmdW5jdGlvbiAoaW5pdCkge1xuICByZXR1cm4gZnVuY3Rpb24gRmxvYXQzMkFycmF5KGRhdGEsIGJ5dGVPZmZzZXQsIGxlbmd0aCkge1xuICAgIHJldHVybiBpbml0KHRoaXMsIGRhdGEsIGJ5dGVPZmZzZXQsIGxlbmd0aCk7XG4gIH07XG59KTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///254\n")},function(module,exports,__webpack_require__){eval("__webpack_require__(26)('Float64', 8, function (init) {\n  return function Float64Array(data, byteOffset, length) {\n    return init(this, data, byteOffset, length);\n  };\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjU1LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYudHlwZWQuZmxvYXQ2NC1hcnJheS5qcz80ZGRhIl0sInNvdXJjZXNDb250ZW50IjpbInJlcXVpcmUoJy4vX3R5cGVkLWFycmF5JykoJ0Zsb2F0NjQnLCA4LCBmdW5jdGlvbiAoaW5pdCkge1xuICByZXR1cm4gZnVuY3Rpb24gRmxvYXQ2NEFycmF5KGRhdGEsIGJ5dGVPZmZzZXQsIGxlbmd0aCkge1xuICAgIHJldHVybiBpbml0KHRoaXMsIGRhdGEsIGJ5dGVPZmZzZXQsIGxlbmd0aCk7XG4gIH07XG59KTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///255\n")},function(module,exports,__webpack_require__){eval("// 26.1.1 Reflect.apply(target, thisArgument, argumentsList)\nvar $export = __webpack_require__(1);\nvar aFunction = __webpack_require__(19);\nvar anObject = __webpack_require__(4);\nvar rApply = (__webpack_require__(2).Reflect || {}).apply;\nvar fApply = Function.apply;\n// MS Edge argumentsList argument is optional\n$export($export.S + $export.F * !__webpack_require__(3)(function () {\n  rApply(function () { /* empty */ });\n}), 'Reflect', {\n  apply: function apply(target, thisArgument, argumentsList) {\n    var T = aFunction(target);\n    var L = anObject(argumentsList);\n    return rApply ? rApply(T, thisArgument, L) : fApply.call(T, thisArgument, L);\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjU2LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYucmVmbGVjdC5hcHBseS5qcz9kZjFiIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIDI2LjEuMSBSZWZsZWN0LmFwcGx5KHRhcmdldCwgdGhpc0FyZ3VtZW50LCBhcmd1bWVudHNMaXN0KVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciBhRnVuY3Rpb24gPSByZXF1aXJlKCcuL19hLWZ1bmN0aW9uJyk7XG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbnZhciByQXBwbHkgPSAocmVxdWlyZSgnLi9fZ2xvYmFsJykuUmVmbGVjdCB8fCB7fSkuYXBwbHk7XG52YXIgZkFwcGx5ID0gRnVuY3Rpb24uYXBwbHk7XG4vLyBNUyBFZGdlIGFyZ3VtZW50c0xpc3QgYXJndW1lbnQgaXMgb3B0aW9uYWxcbiRleHBvcnQoJGV4cG9ydC5TICsgJGV4cG9ydC5GICogIXJlcXVpcmUoJy4vX2ZhaWxzJykoZnVuY3Rpb24gKCkge1xuICByQXBwbHkoZnVuY3Rpb24gKCkgeyAvKiBlbXB0eSAqLyB9KTtcbn0pLCAnUmVmbGVjdCcsIHtcbiAgYXBwbHk6IGZ1bmN0aW9uIGFwcGx5KHRhcmdldCwgdGhpc0FyZ3VtZW50LCBhcmd1bWVudHNMaXN0KSB7XG4gICAgdmFyIFQgPSBhRnVuY3Rpb24odGFyZ2V0KTtcbiAgICB2YXIgTCA9IGFuT2JqZWN0KGFyZ3VtZW50c0xpc3QpO1xuICAgIHJldHVybiByQXBwbHkgPyByQXBwbHkoVCwgdGhpc0FyZ3VtZW50LCBMKSA6IGZBcHBseS5jYWxsKFQsIHRoaXNBcmd1bWVudCwgTCk7XG4gIH1cbn0pO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///256\n")},function(module,exports,__webpack_require__){eval("// 26.1.2 Reflect.construct(target, argumentsList [, newTarget])\nvar $export = __webpack_require__(1);\nvar create = __webpack_require__(34);\nvar aFunction = __webpack_require__(19);\nvar anObject = __webpack_require__(4);\nvar isObject = __webpack_require__(5);\nvar fails = __webpack_require__(3);\nvar bind = __webpack_require__(98);\nvar rConstruct = (__webpack_require__(2).Reflect || {}).construct;\n\n// MS Edge supports only 2 arguments and argumentsList argument is optional\n// FF Nightly sets third argument as `new.target`, but does not create `this` from it\nvar NEW_TARGET_BUG = fails(function () {\n  function F() { /* empty */ }\n  return !(rConstruct(function () { /* empty */ }, [], F) instanceof F);\n});\nvar ARGS_BUG = !fails(function () {\n  rConstruct(function () { /* empty */ });\n});\n\n$export($export.S + $export.F * (NEW_TARGET_BUG || ARGS_BUG), 'Reflect', {\n  construct: function construct(Target, args /* , newTarget */) {\n    aFunction(Target);\n    anObject(args);\n    var newTarget = arguments.length < 3 ? Target : aFunction(arguments[2]);\n    if (ARGS_BUG && !NEW_TARGET_BUG) return rConstruct(Target, args, newTarget);\n    if (Target == newTarget) {\n      // w/o altered newTarget, optimization for 0-4 arguments\n      switch (args.length) {\n        case 0: return new Target();\n        case 1: return new Target(args[0]);\n        case 2: return new Target(args[0], args[1]);\n        case 3: return new Target(args[0], args[1], args[2]);\n        case 4: return new Target(args[0], args[1], args[2], args[3]);\n      }\n      // w/o altered newTarget, lot of arguments case\n      var $args = [null];\n      $args.push.apply($args, args);\n      return new (bind.apply(Target, $args))();\n    }\n    // with altered newTarget, not support built-in constructors\n    var proto = newTarget.prototype;\n    var instance = create(isObject(proto) ? proto : Object.prototype);\n    var result = Function.apply.call(Target, instance, args);\n    return isObject(result) ? result : instance;\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjU3LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYucmVmbGVjdC5jb25zdHJ1Y3QuanM/MjM5NyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyAyNi4xLjIgUmVmbGVjdC5jb25zdHJ1Y3QodGFyZ2V0LCBhcmd1bWVudHNMaXN0IFssIG5ld1RhcmdldF0pXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIGNyZWF0ZSA9IHJlcXVpcmUoJy4vX29iamVjdC1jcmVhdGUnKTtcbnZhciBhRnVuY3Rpb24gPSByZXF1aXJlKCcuL19hLWZ1bmN0aW9uJyk7XG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xudmFyIGZhaWxzID0gcmVxdWlyZSgnLi9fZmFpbHMnKTtcbnZhciBiaW5kID0gcmVxdWlyZSgnLi9fYmluZCcpO1xudmFyIHJDb25zdHJ1Y3QgPSAocmVxdWlyZSgnLi9fZ2xvYmFsJykuUmVmbGVjdCB8fCB7fSkuY29uc3RydWN0O1xuXG4vLyBNUyBFZGdlIHN1cHBvcnRzIG9ubHkgMiBhcmd1bWVudHMgYW5kIGFyZ3VtZW50c0xpc3QgYXJndW1lbnQgaXMgb3B0aW9uYWxcbi8vIEZGIE5pZ2h0bHkgc2V0cyB0aGlyZCBhcmd1bWVudCBhcyBgbmV3LnRhcmdldGAsIGJ1dCBkb2VzIG5vdCBjcmVhdGUgYHRoaXNgIGZyb20gaXRcbnZhciBORVdfVEFSR0VUX0JVRyA9IGZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgZnVuY3Rpb24gRigpIHsgLyogZW1wdHkgKi8gfVxuICByZXR1cm4gIShyQ29uc3RydWN0KGZ1bmN0aW9uICgpIHsgLyogZW1wdHkgKi8gfSwgW10sIEYpIGluc3RhbmNlb2YgRik7XG59KTtcbnZhciBBUkdTX0JVRyA9ICFmYWlscyhmdW5jdGlvbiAoKSB7XG4gIHJDb25zdHJ1Y3QoZnVuY3Rpb24gKCkgeyAvKiBlbXB0eSAqLyB9KTtcbn0pO1xuXG4kZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqIChORVdfVEFSR0VUX0JVRyB8fCBBUkdTX0JVRyksICdSZWZsZWN0Jywge1xuICBjb25zdHJ1Y3Q6IGZ1bmN0aW9uIGNvbnN0cnVjdChUYXJnZXQsIGFyZ3MgLyogLCBuZXdUYXJnZXQgKi8pIHtcbiAgICBhRnVuY3Rpb24oVGFyZ2V0KTtcbiAgICBhbk9iamVjdChhcmdzKTtcbiAgICB2YXIgbmV3VGFyZ2V0ID0gYXJndW1lbnRzLmxlbmd0aCA8IDMgPyBUYXJnZXQgOiBhRnVuY3Rpb24oYXJndW1lbnRzWzJdKTtcbiAgICBpZiAoQVJHU19CVUcgJiYgIU5FV19UQVJHRVRfQlVHKSByZXR1cm4gckNvbnN0cnVjdChUYXJnZXQsIGFyZ3MsIG5ld1RhcmdldCk7XG4gICAgaWYgKFRhcmdldCA9PSBuZXdUYXJnZXQpIHtcbiAgICAgIC8vIHcvbyBhbHRlcmVkIG5ld1RhcmdldCwgb3B0aW1pemF0aW9uIGZvciAwLTQgYXJndW1lbnRzXG4gICAgICBzd2l0Y2ggKGFyZ3MubGVuZ3RoKSB7XG4gICAgICAgIGNhc2UgMDogcmV0dXJuIG5ldyBUYXJnZXQoKTtcbiAgICAgICAgY2FzZSAxOiByZXR1cm4gbmV3IFRhcmdldChhcmdzWzBdKTtcbiAgICAgICAgY2FzZSAyOiByZXR1cm4gbmV3IFRhcmdldChhcmdzWzBdLCBhcmdzWzFdKTtcbiAgICAgICAgY2FzZSAzOiByZXR1cm4gbmV3IFRhcmdldChhcmdzWzBdLCBhcmdzWzFdLCBhcmdzWzJdKTtcbiAgICAgICAgY2FzZSA0OiByZXR1cm4gbmV3IFRhcmdldChhcmdzWzBdLCBhcmdzWzFdLCBhcmdzWzJdLCBhcmdzWzNdKTtcbiAgICAgIH1cbiAgICAgIC8vIHcvbyBhbHRlcmVkIG5ld1RhcmdldCwgbG90IG9mIGFyZ3VtZW50cyBjYXNlXG4gICAgICB2YXIgJGFyZ3MgPSBbbnVsbF07XG4gICAgICAkYXJncy5wdXNoLmFwcGx5KCRhcmdzLCBhcmdzKTtcbiAgICAgIHJldHVybiBuZXcgKGJpbmQuYXBwbHkoVGFyZ2V0LCAkYXJncykpKCk7XG4gICAgfVxuICAgIC8vIHdpdGggYWx0ZXJlZCBuZXdUYXJnZXQsIG5vdCBzdXBwb3J0IGJ1aWx0LWluIGNvbnN0cnVjdG9yc1xuICAgIHZhciBwcm90byA9IG5ld1RhcmdldC5wcm90b3R5cGU7XG4gICAgdmFyIGluc3RhbmNlID0gY3JlYXRlKGlzT2JqZWN0KHByb3RvKSA/IHByb3RvIDogT2JqZWN0LnByb3RvdHlwZSk7XG4gICAgdmFyIHJlc3VsdCA9IEZ1bmN0aW9uLmFwcGx5LmNhbGwoVGFyZ2V0LCBpbnN0YW5jZSwgYXJncyk7XG4gICAgcmV0dXJuIGlzT2JqZWN0KHJlc3VsdCkgPyByZXN1bHQgOiBpbnN0YW5jZTtcbiAgfVxufSk7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///257\n")},function(module,exports,__webpack_require__){eval("// 26.1.3 Reflect.defineProperty(target, propertyKey, attributes)\nvar dP = __webpack_require__(9);\nvar $export = __webpack_require__(1);\nvar anObject = __webpack_require__(4);\nvar toPrimitive = __webpack_require__(27);\n\n// MS Edge has broken Reflect.defineProperty - throwing instead of returning false\n$export($export.S + $export.F * __webpack_require__(3)(function () {\n  // eslint-disable-next-line no-undef\n  Reflect.defineProperty(dP.f({}, 1, { value: 1 }), 1, { value: 2 });\n}), 'Reflect', {\n  defineProperty: function defineProperty(target, propertyKey, attributes) {\n    anObject(target);\n    propertyKey = toPrimitive(propertyKey, true);\n    anObject(attributes);\n    try {\n      dP.f(target, propertyKey, attributes);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjU4LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYucmVmbGVjdC5kZWZpbmUtcHJvcGVydHkuanM/ODhjYSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyAyNi4xLjMgUmVmbGVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIHByb3BlcnR5S2V5LCBhdHRyaWJ1dGVzKVxudmFyIGRQID0gcmVxdWlyZSgnLi9fb2JqZWN0LWRwJyk7XG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG52YXIgdG9QcmltaXRpdmUgPSByZXF1aXJlKCcuL190by1wcmltaXRpdmUnKTtcblxuLy8gTVMgRWRnZSBoYXMgYnJva2VuIFJlZmxlY3QuZGVmaW5lUHJvcGVydHkgLSB0aHJvd2luZyBpbnN0ZWFkIG9mIHJldHVybmluZyBmYWxzZVxuJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYgKiByZXF1aXJlKCcuL19mYWlscycpKGZ1bmN0aW9uICgpIHtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVuZGVmXG4gIFJlZmxlY3QuZGVmaW5lUHJvcGVydHkoZFAuZih7fSwgMSwgeyB2YWx1ZTogMSB9KSwgMSwgeyB2YWx1ZTogMiB9KTtcbn0pLCAnUmVmbGVjdCcsIHtcbiAgZGVmaW5lUHJvcGVydHk6IGZ1bmN0aW9uIGRlZmluZVByb3BlcnR5KHRhcmdldCwgcHJvcGVydHlLZXksIGF0dHJpYnV0ZXMpIHtcbiAgICBhbk9iamVjdCh0YXJnZXQpO1xuICAgIHByb3BlcnR5S2V5ID0gdG9QcmltaXRpdmUocHJvcGVydHlLZXksIHRydWUpO1xuICAgIGFuT2JqZWN0KGF0dHJpYnV0ZXMpO1xuICAgIHRyeSB7XG4gICAgICBkUC5mKHRhcmdldCwgcHJvcGVydHlLZXksIGF0dHJpYnV0ZXMpO1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfVxufSk7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///258\n")},function(module,exports,__webpack_require__){eval("// 26.1.4 Reflect.deleteProperty(target, propertyKey)\nvar $export = __webpack_require__(1);\nvar gOPD = __webpack_require__(21).f;\nvar anObject = __webpack_require__(4);\n\n$export($export.S, 'Reflect', {\n  deleteProperty: function deleteProperty(target, propertyKey) {\n    var desc = gOPD(anObject(target), propertyKey);\n    return desc && !desc.configurable ? false : delete target[propertyKey];\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjU5LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYucmVmbGVjdC5kZWxldGUtcHJvcGVydHkuanM/YmExNiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyAyNi4xLjQgUmVmbGVjdC5kZWxldGVQcm9wZXJ0eSh0YXJnZXQsIHByb3BlcnR5S2V5KVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciBnT1BEID0gcmVxdWlyZSgnLi9fb2JqZWN0LWdvcGQnKS5mO1xudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnUmVmbGVjdCcsIHtcbiAgZGVsZXRlUHJvcGVydHk6IGZ1bmN0aW9uIGRlbGV0ZVByb3BlcnR5KHRhcmdldCwgcHJvcGVydHlLZXkpIHtcbiAgICB2YXIgZGVzYyA9IGdPUEQoYW5PYmplY3QodGFyZ2V0KSwgcHJvcGVydHlLZXkpO1xuICAgIHJldHVybiBkZXNjICYmICFkZXNjLmNvbmZpZ3VyYWJsZSA/IGZhbHNlIDogZGVsZXRlIHRhcmdldFtwcm9wZXJ0eUtleV07XG4gIH1cbn0pO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///259\n")},function(module,exports,__webpack_require__){"use strict";eval("\n// 26.1.5 Reflect.enumerate(target)\nvar $export = __webpack_require__(1);\nvar anObject = __webpack_require__(4);\nvar Enumerate = function (iterated) {\n  this._t = anObject(iterated); // target\n  this._i = 0;                  // next index\n  var keys = this._k = [];      // keys\n  var key;\n  for (key in iterated) keys.push(key);\n};\n__webpack_require__(105)(Enumerate, 'Object', function () {\n  var that = this;\n  var keys = that._k;\n  var key;\n  do {\n    if (that._i >= keys.length) return { value: undefined, done: true };\n  } while (!((key = keys[that._i++]) in that._t));\n  return { value: key, done: false };\n});\n\n$export($export.S, 'Reflect', {\n  enumerate: function enumerate(target) {\n    return new Enumerate(target);\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjYwLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYucmVmbGVjdC5lbnVtZXJhdGUuanM/N2ZmNiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG4vLyAyNi4xLjUgUmVmbGVjdC5lbnVtZXJhdGUodGFyZ2V0KVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpO1xudmFyIEVudW1lcmF0ZSA9IGZ1bmN0aW9uIChpdGVyYXRlZCkge1xuICB0aGlzLl90ID0gYW5PYmplY3QoaXRlcmF0ZWQpOyAvLyB0YXJnZXRcbiAgdGhpcy5faSA9IDA7ICAgICAgICAgICAgICAgICAgLy8gbmV4dCBpbmRleFxuICB2YXIga2V5cyA9IHRoaXMuX2sgPSBbXTsgICAgICAvLyBrZXlzXG4gIHZhciBrZXk7XG4gIGZvciAoa2V5IGluIGl0ZXJhdGVkKSBrZXlzLnB1c2goa2V5KTtcbn07XG5yZXF1aXJlKCcuL19pdGVyLWNyZWF0ZScpKEVudW1lcmF0ZSwgJ09iamVjdCcsIGZ1bmN0aW9uICgpIHtcbiAgdmFyIHRoYXQgPSB0aGlzO1xuICB2YXIga2V5cyA9IHRoYXQuX2s7XG4gIHZhciBrZXk7XG4gIGRvIHtcbiAgICBpZiAodGhhdC5faSA+PSBrZXlzLmxlbmd0aCkgcmV0dXJuIHsgdmFsdWU6IHVuZGVmaW5lZCwgZG9uZTogdHJ1ZSB9O1xuICB9IHdoaWxlICghKChrZXkgPSBrZXlzW3RoYXQuX2krK10pIGluIHRoYXQuX3QpKTtcbiAgcmV0dXJuIHsgdmFsdWU6IGtleSwgZG9uZTogZmFsc2UgfTtcbn0pO1xuXG4kZXhwb3J0KCRleHBvcnQuUywgJ1JlZmxlY3QnLCB7XG4gIGVudW1lcmF0ZTogZnVuY3Rpb24gZW51bWVyYXRlKHRhcmdldCkge1xuICAgIHJldHVybiBuZXcgRW51bWVyYXRlKHRhcmdldCk7XG4gIH1cbn0pO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///260\n")},function(module,exports,__webpack_require__){eval("// 26.1.6 Reflect.get(target, propertyKey [, receiver])\nvar gOPD = __webpack_require__(21);\nvar getPrototypeOf = __webpack_require__(36);\nvar has = __webpack_require__(14);\nvar $export = __webpack_require__(1);\nvar isObject = __webpack_require__(5);\nvar anObject = __webpack_require__(4);\n\nfunction get(target, propertyKey /* , receiver */) {\n  var receiver = arguments.length < 3 ? target : arguments[2];\n  var desc, proto;\n  if (anObject(target) === receiver) return target[propertyKey];\n  if (desc = gOPD.f(target, propertyKey)) return has(desc, 'value')\n    ? desc.value\n    : desc.get !== undefined\n      ? desc.get.call(receiver)\n      : undefined;\n  if (isObject(proto = getPrototypeOf(target))) return get(proto, propertyKey, receiver);\n}\n\n$export($export.S, 'Reflect', { get: get });\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjYxLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYucmVmbGVjdC5nZXQuanM/ZDE4NSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyAyNi4xLjYgUmVmbGVjdC5nZXQodGFyZ2V0LCBwcm9wZXJ0eUtleSBbLCByZWNlaXZlcl0pXG52YXIgZ09QRCA9IHJlcXVpcmUoJy4vX29iamVjdC1nb3BkJyk7XG52YXIgZ2V0UHJvdG90eXBlT2YgPSByZXF1aXJlKCcuL19vYmplY3QtZ3BvJyk7XG52YXIgaGFzID0gcmVxdWlyZSgnLi9faGFzJyk7XG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7XG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcblxuZnVuY3Rpb24gZ2V0KHRhcmdldCwgcHJvcGVydHlLZXkgLyogLCByZWNlaXZlciAqLykge1xuICB2YXIgcmVjZWl2ZXIgPSBhcmd1bWVudHMubGVuZ3RoIDwgMyA/IHRhcmdldCA6IGFyZ3VtZW50c1syXTtcbiAgdmFyIGRlc2MsIHByb3RvO1xuICBpZiAoYW5PYmplY3QodGFyZ2V0KSA9PT0gcmVjZWl2ZXIpIHJldHVybiB0YXJnZXRbcHJvcGVydHlLZXldO1xuICBpZiAoZGVzYyA9IGdPUEQuZih0YXJnZXQsIHByb3BlcnR5S2V5KSkgcmV0dXJuIGhhcyhkZXNjLCAndmFsdWUnKVxuICAgID8gZGVzYy52YWx1ZVxuICAgIDogZGVzYy5nZXQgIT09IHVuZGVmaW5lZFxuICAgICAgPyBkZXNjLmdldC5jYWxsKHJlY2VpdmVyKVxuICAgICAgOiB1bmRlZmluZWQ7XG4gIGlmIChpc09iamVjdChwcm90byA9IGdldFByb3RvdHlwZU9mKHRhcmdldCkpKSByZXR1cm4gZ2V0KHByb3RvLCBwcm9wZXJ0eUtleSwgcmVjZWl2ZXIpO1xufVxuXG4kZXhwb3J0KCRleHBvcnQuUywgJ1JlZmxlY3QnLCB7IGdldDogZ2V0IH0pO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///261\n")},function(module,exports,__webpack_require__){eval("// 26.1.7 Reflect.getOwnPropertyDescriptor(target, propertyKey)\nvar gOPD = __webpack_require__(21);\nvar $export = __webpack_require__(1);\nvar anObject = __webpack_require__(4);\n\n$export($export.S, 'Reflect', {\n  getOwnPropertyDescriptor: function getOwnPropertyDescriptor(target, propertyKey) {\n    return gOPD.f(anObject(target), propertyKey);\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjYyLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYucmVmbGVjdC5nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3IuanM/ZWJkZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyAyNi4xLjcgUmVmbGVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IodGFyZ2V0LCBwcm9wZXJ0eUtleSlcbnZhciBnT1BEID0gcmVxdWlyZSgnLi9fb2JqZWN0LWdvcGQnKTtcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcblxuJGV4cG9ydCgkZXhwb3J0LlMsICdSZWZsZWN0Jywge1xuICBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I6IGZ1bmN0aW9uIGdldE93blByb3BlcnR5RGVzY3JpcHRvcih0YXJnZXQsIHByb3BlcnR5S2V5KSB7XG4gICAgcmV0dXJuIGdPUEQuZihhbk9iamVjdCh0YXJnZXQpLCBwcm9wZXJ0eUtleSk7XG4gIH1cbn0pO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///262\n")},function(module,exports,__webpack_require__){eval("// 26.1.8 Reflect.getPrototypeOf(target)\nvar $export = __webpack_require__(1);\nvar getProto = __webpack_require__(36);\nvar anObject = __webpack_require__(4);\n\n$export($export.S, 'Reflect', {\n  getPrototypeOf: function getPrototypeOf(target) {\n    return getProto(anObject(target));\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjYzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYucmVmbGVjdC5nZXQtcHJvdG90eXBlLW9mLmpzPzJkMzQiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gMjYuMS44IFJlZmxlY3QuZ2V0UHJvdG90eXBlT2YodGFyZ2V0KVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciBnZXRQcm90byA9IHJlcXVpcmUoJy4vX29iamVjdC1ncG8nKTtcbnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpO1xuXG4kZXhwb3J0KCRleHBvcnQuUywgJ1JlZmxlY3QnLCB7XG4gIGdldFByb3RvdHlwZU9mOiBmdW5jdGlvbiBnZXRQcm90b3R5cGVPZih0YXJnZXQpIHtcbiAgICByZXR1cm4gZ2V0UHJvdG8oYW5PYmplY3QodGFyZ2V0KSk7XG4gIH1cbn0pO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///263\n")},function(module,exports,__webpack_require__){eval("// 26.1.9 Reflect.has(target, propertyKey)\nvar $export = __webpack_require__(1);\n\n$export($export.S, 'Reflect', {\n  has: function has(target, propertyKey) {\n    return propertyKey in target;\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjY0LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYucmVmbGVjdC5oYXMuanM/ZjZiMyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyAyNi4xLjkgUmVmbGVjdC5oYXModGFyZ2V0LCBwcm9wZXJ0eUtleSlcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnUmVmbGVjdCcsIHtcbiAgaGFzOiBmdW5jdGlvbiBoYXModGFyZ2V0LCBwcm9wZXJ0eUtleSkge1xuICAgIHJldHVybiBwcm9wZXJ0eUtleSBpbiB0YXJnZXQ7XG4gIH1cbn0pO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///264\n")},function(module,exports,__webpack_require__){eval("// 26.1.10 Reflect.isExtensible(target)\nvar $export = __webpack_require__(1);\nvar anObject = __webpack_require__(4);\nvar $isExtensible = Object.isExtensible;\n\n$export($export.S, 'Reflect', {\n  isExtensible: function isExtensible(target) {\n    anObject(target);\n    return $isExtensible ? $isExtensible(target) : true;\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjY1LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYucmVmbGVjdC5pcy1leHRlbnNpYmxlLmpzPzIyNTEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gMjYuMS4xMCBSZWZsZWN0LmlzRXh0ZW5zaWJsZSh0YXJnZXQpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG52YXIgJGlzRXh0ZW5zaWJsZSA9IE9iamVjdC5pc0V4dGVuc2libGU7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnUmVmbGVjdCcsIHtcbiAgaXNFeHRlbnNpYmxlOiBmdW5jdGlvbiBpc0V4dGVuc2libGUodGFyZ2V0KSB7XG4gICAgYW5PYmplY3QodGFyZ2V0KTtcbiAgICByZXR1cm4gJGlzRXh0ZW5zaWJsZSA/ICRpc0V4dGVuc2libGUodGFyZ2V0KSA6IHRydWU7XG4gIH1cbn0pO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///265\n")},function(module,exports,__webpack_require__){eval("// 26.1.11 Reflect.ownKeys(target)\nvar $export = __webpack_require__(1);\n\n$export($export.S, 'Reflect', { ownKeys: __webpack_require__(119) });\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjY2LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYucmVmbGVjdC5vd24ta2V5cy5qcz9jNjk4Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIDI2LjEuMTEgUmVmbGVjdC5vd25LZXlzKHRhcmdldClcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnUmVmbGVjdCcsIHsgb3duS2V5czogcmVxdWlyZSgnLi9fb3duLWtleXMnKSB9KTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///266\n")},function(module,exports,__webpack_require__){eval("// 26.1.12 Reflect.preventExtensions(target)\nvar $export = __webpack_require__(1);\nvar anObject = __webpack_require__(4);\nvar $preventExtensions = Object.preventExtensions;\n\n$export($export.S, 'Reflect', {\n  preventExtensions: function preventExtensions(target) {\n    anObject(target);\n    try {\n      if ($preventExtensions) $preventExtensions(target);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjY3LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYucmVmbGVjdC5wcmV2ZW50LWV4dGVuc2lvbnMuanM/YTE5ZiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyAyNi4xLjEyIFJlZmxlY3QucHJldmVudEV4dGVuc2lvbnModGFyZ2V0KVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpO1xudmFyICRwcmV2ZW50RXh0ZW5zaW9ucyA9IE9iamVjdC5wcmV2ZW50RXh0ZW5zaW9ucztcblxuJGV4cG9ydCgkZXhwb3J0LlMsICdSZWZsZWN0Jywge1xuICBwcmV2ZW50RXh0ZW5zaW9uczogZnVuY3Rpb24gcHJldmVudEV4dGVuc2lvbnModGFyZ2V0KSB7XG4gICAgYW5PYmplY3QodGFyZ2V0KTtcbiAgICB0cnkge1xuICAgICAgaWYgKCRwcmV2ZW50RXh0ZW5zaW9ucykgJHByZXZlbnRFeHRlbnNpb25zKHRhcmdldCk7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9XG59KTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///267\n")},function(module,exports,__webpack_require__){eval("// 26.1.13 Reflect.set(target, propertyKey, V [, receiver])\nvar dP = __webpack_require__(9);\nvar gOPD = __webpack_require__(21);\nvar getPrototypeOf = __webpack_require__(36);\nvar has = __webpack_require__(14);\nvar $export = __webpack_require__(1);\nvar createDesc = __webpack_require__(29);\nvar anObject = __webpack_require__(4);\nvar isObject = __webpack_require__(5);\n\nfunction set(target, propertyKey, V /* , receiver */) {\n  var receiver = arguments.length < 4 ? target : arguments[3];\n  var ownDesc = gOPD.f(anObject(target), propertyKey);\n  var existingDescriptor, proto;\n  if (!ownDesc) {\n    if (isObject(proto = getPrototypeOf(target))) {\n      return set(proto, propertyKey, V, receiver);\n    }\n    ownDesc = createDesc(0);\n  }\n  if (has(ownDesc, 'value')) {\n    if (ownDesc.writable === false || !isObject(receiver)) return false;\n    if (existingDescriptor = gOPD.f(receiver, propertyKey)) {\n      if (existingDescriptor.get || existingDescriptor.set || existingDescriptor.writable === false) return false;\n      existingDescriptor.value = V;\n      dP.f(receiver, propertyKey, existingDescriptor);\n    } else dP.f(receiver, propertyKey, createDesc(0, V));\n    return true;\n  }\n  return ownDesc.set === undefined ? false : (ownDesc.set.call(receiver, V), true);\n}\n\n$export($export.S, 'Reflect', { set: set });\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjY4LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYucmVmbGVjdC5zZXQuanM/OTI1MyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyAyNi4xLjEzIFJlZmxlY3Quc2V0KHRhcmdldCwgcHJvcGVydHlLZXksIFYgWywgcmVjZWl2ZXJdKVxudmFyIGRQID0gcmVxdWlyZSgnLi9fb2JqZWN0LWRwJyk7XG52YXIgZ09QRCA9IHJlcXVpcmUoJy4vX29iamVjdC1nb3BkJyk7XG52YXIgZ2V0UHJvdG90eXBlT2YgPSByZXF1aXJlKCcuL19vYmplY3QtZ3BvJyk7XG52YXIgaGFzID0gcmVxdWlyZSgnLi9faGFzJyk7XG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIGNyZWF0ZURlc2MgPSByZXF1aXJlKCcuL19wcm9wZXJ0eS1kZXNjJyk7XG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xuXG5mdW5jdGlvbiBzZXQodGFyZ2V0LCBwcm9wZXJ0eUtleSwgViAvKiAsIHJlY2VpdmVyICovKSB7XG4gIHZhciByZWNlaXZlciA9IGFyZ3VtZW50cy5sZW5ndGggPCA0ID8gdGFyZ2V0IDogYXJndW1lbnRzWzNdO1xuICB2YXIgb3duRGVzYyA9IGdPUEQuZihhbk9iamVjdCh0YXJnZXQpLCBwcm9wZXJ0eUtleSk7XG4gIHZhciBleGlzdGluZ0Rlc2NyaXB0b3IsIHByb3RvO1xuICBpZiAoIW93bkRlc2MpIHtcbiAgICBpZiAoaXNPYmplY3QocHJvdG8gPSBnZXRQcm90b3R5cGVPZih0YXJnZXQpKSkge1xuICAgICAgcmV0dXJuIHNldChwcm90bywgcHJvcGVydHlLZXksIFYsIHJlY2VpdmVyKTtcbiAgICB9XG4gICAgb3duRGVzYyA9IGNyZWF0ZURlc2MoMCk7XG4gIH1cbiAgaWYgKGhhcyhvd25EZXNjLCAndmFsdWUnKSkge1xuICAgIGlmIChvd25EZXNjLndyaXRhYmxlID09PSBmYWxzZSB8fCAhaXNPYmplY3QocmVjZWl2ZXIpKSByZXR1cm4gZmFsc2U7XG4gICAgaWYgKGV4aXN0aW5nRGVzY3JpcHRvciA9IGdPUEQuZihyZWNlaXZlciwgcHJvcGVydHlLZXkpKSB7XG4gICAgICBpZiAoZXhpc3RpbmdEZXNjcmlwdG9yLmdldCB8fCBleGlzdGluZ0Rlc2NyaXB0b3Iuc2V0IHx8IGV4aXN0aW5nRGVzY3JpcHRvci53cml0YWJsZSA9PT0gZmFsc2UpIHJldHVybiBmYWxzZTtcbiAgICAgIGV4aXN0aW5nRGVzY3JpcHRvci52YWx1ZSA9IFY7XG4gICAgICBkUC5mKHJlY2VpdmVyLCBwcm9wZXJ0eUtleSwgZXhpc3RpbmdEZXNjcmlwdG9yKTtcbiAgICB9IGVsc2UgZFAuZihyZWNlaXZlciwgcHJvcGVydHlLZXksIGNyZWF0ZURlc2MoMCwgVikpO1xuICAgIHJldHVybiB0cnVlO1xuICB9XG4gIHJldHVybiBvd25EZXNjLnNldCA9PT0gdW5kZWZpbmVkID8gZmFsc2UgOiAob3duRGVzYy5zZXQuY2FsbChyZWNlaXZlciwgViksIHRydWUpO1xufVxuXG4kZXhwb3J0KCRleHBvcnQuUywgJ1JlZmxlY3QnLCB7IHNldDogc2V0IH0pO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///268\n")},function(module,exports,__webpack_require__){eval("// 26.1.14 Reflect.setPrototypeOf(target, proto)\nvar $export = __webpack_require__(1);\nvar setProto = __webpack_require__(66);\n\nif (setProto) $export($export.S, 'Reflect', {\n  setPrototypeOf: function setPrototypeOf(target, proto) {\n    setProto.check(target, proto);\n    try {\n      setProto.set(target, proto);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjY5LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYucmVmbGVjdC5zZXQtcHJvdG90eXBlLW9mLmpzPzkyNzUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gMjYuMS4xNCBSZWZsZWN0LnNldFByb3RvdHlwZU9mKHRhcmdldCwgcHJvdG8pXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIHNldFByb3RvID0gcmVxdWlyZSgnLi9fc2V0LXByb3RvJyk7XG5cbmlmIChzZXRQcm90bykgJGV4cG9ydCgkZXhwb3J0LlMsICdSZWZsZWN0Jywge1xuICBzZXRQcm90b3R5cGVPZjogZnVuY3Rpb24gc2V0UHJvdG90eXBlT2YodGFyZ2V0LCBwcm90bykge1xuICAgIHNldFByb3RvLmNoZWNrKHRhcmdldCwgcHJvdG8pO1xuICAgIHRyeSB7XG4gICAgICBzZXRQcm90by5zZXQodGFyZ2V0LCBwcm90byk7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9XG59KTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///269\n")},function(module,exports,__webpack_require__){eval("__webpack_require__(271);\nmodule.exports = __webpack_require__(8).Array.includes;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjcwLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvZm4vYXJyYXkvaW5jbHVkZXMuanM/MTQzYSJdLCJzb3VyY2VzQ29udGVudCI6WyJyZXF1aXJlKCcuLi8uLi9tb2R1bGVzL2VzNy5hcnJheS5pbmNsdWRlcycpO1xubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuLi8uLi9tb2R1bGVzL19jb3JlJykuQXJyYXkuaW5jbHVkZXM7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///270\n")},function(module,exports,__webpack_require__){"use strict";eval("\n// https://github.com/tc39/Array.prototype.includes\nvar $export = __webpack_require__(1);\nvar $includes = __webpack_require__(50)(true);\n\n$export($export.P, 'Array', {\n  includes: function includes(el /* , fromIndex = 0 */) {\n    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\n__webpack_require__(37)('includes');\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjcxLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczcuYXJyYXkuaW5jbHVkZXMuanM/Njc2MiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG4vLyBodHRwczovL2dpdGh1Yi5jb20vdGMzOS9BcnJheS5wcm90b3R5cGUuaW5jbHVkZXNcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgJGluY2x1ZGVzID0gcmVxdWlyZSgnLi9fYXJyYXktaW5jbHVkZXMnKSh0cnVlKTtcblxuJGV4cG9ydCgkZXhwb3J0LlAsICdBcnJheScsIHtcbiAgaW5jbHVkZXM6IGZ1bmN0aW9uIGluY2x1ZGVzKGVsIC8qICwgZnJvbUluZGV4ID0gMCAqLykge1xuICAgIHJldHVybiAkaW5jbHVkZXModGhpcywgZWwsIGFyZ3VtZW50cy5sZW5ndGggPiAxID8gYXJndW1lbnRzWzFdIDogdW5kZWZpbmVkKTtcbiAgfVxufSk7XG5cbnJlcXVpcmUoJy4vX2FkZC10by11bnNjb3BhYmxlcycpKCdpbmNsdWRlcycpO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///271\n")},function(module,exports,__webpack_require__){eval("__webpack_require__(273);\nmodule.exports = __webpack_require__(8).Array.flatMap;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjcyLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvZm4vYXJyYXkvZmxhdC1tYXAuanM/NjI5ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJyZXF1aXJlKCcuLi8uLi9tb2R1bGVzL2VzNy5hcnJheS5mbGF0LW1hcCcpO1xubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuLi8uLi9tb2R1bGVzL19jb3JlJykuQXJyYXkuZmxhdE1hcDtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///272\n")},function(module,exports,__webpack_require__){"use strict";eval("\n// https://tc39.github.io/proposal-flatMap/#sec-Array.prototype.flatMap\nvar $export = __webpack_require__(1);\nvar flattenIntoArray = __webpack_require__(274);\nvar toObject = __webpack_require__(11);\nvar toLength = __webpack_require__(7);\nvar aFunction = __webpack_require__(19);\nvar arraySpeciesCreate = __webpack_require__(107);\n\n$export($export.P, 'Array', {\n  flatMap: function flatMap(callbackfn /* , thisArg */) {\n    var O = toObject(this);\n    var sourceLen, A;\n    aFunction(callbackfn);\n    sourceLen = toLength(O.length);\n    A = arraySpeciesCreate(O, 0);\n    flattenIntoArray(A, O, O, sourceLen, 0, 1, callbackfn, arguments[1]);\n    return A;\n  }\n});\n\n__webpack_require__(37)('flatMap');\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjczLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczcuYXJyYXkuZmxhdC1tYXAuanM/ZTk1NiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG4vLyBodHRwczovL3RjMzkuZ2l0aHViLmlvL3Byb3Bvc2FsLWZsYXRNYXAvI3NlYy1BcnJheS5wcm90b3R5cGUuZmxhdE1hcFxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciBmbGF0dGVuSW50b0FycmF5ID0gcmVxdWlyZSgnLi9fZmxhdHRlbi1pbnRvLWFycmF5Jyk7XG52YXIgdG9PYmplY3QgPSByZXF1aXJlKCcuL190by1vYmplY3QnKTtcbnZhciB0b0xlbmd0aCA9IHJlcXVpcmUoJy4vX3RvLWxlbmd0aCcpO1xudmFyIGFGdW5jdGlvbiA9IHJlcXVpcmUoJy4vX2EtZnVuY3Rpb24nKTtcbnZhciBhcnJheVNwZWNpZXNDcmVhdGUgPSByZXF1aXJlKCcuL19hcnJheS1zcGVjaWVzLWNyZWF0ZScpO1xuXG4kZXhwb3J0KCRleHBvcnQuUCwgJ0FycmF5Jywge1xuICBmbGF0TWFwOiBmdW5jdGlvbiBmbGF0TWFwKGNhbGxiYWNrZm4gLyogLCB0aGlzQXJnICovKSB7XG4gICAgdmFyIE8gPSB0b09iamVjdCh0aGlzKTtcbiAgICB2YXIgc291cmNlTGVuLCBBO1xuICAgIGFGdW5jdGlvbihjYWxsYmFja2ZuKTtcbiAgICBzb3VyY2VMZW4gPSB0b0xlbmd0aChPLmxlbmd0aCk7XG4gICAgQSA9IGFycmF5U3BlY2llc0NyZWF0ZShPLCAwKTtcbiAgICBmbGF0dGVuSW50b0FycmF5KEEsIE8sIE8sIHNvdXJjZUxlbiwgMCwgMSwgY2FsbGJhY2tmbiwgYXJndW1lbnRzWzFdKTtcbiAgICByZXR1cm4gQTtcbiAgfVxufSk7XG5cbnJlcXVpcmUoJy4vX2FkZC10by11bnNjb3BhYmxlcycpKCdmbGF0TWFwJyk7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///273\n")},function(module,exports,__webpack_require__){"use strict";eval("\n// https://tc39.github.io/proposal-flatMap/#sec-FlattenIntoArray\nvar isArray = __webpack_require__(52);\nvar isObject = __webpack_require__(5);\nvar toLength = __webpack_require__(7);\nvar ctx = __webpack_require__(18);\nvar IS_CONCAT_SPREADABLE = __webpack_require__(6)('isConcatSpreadable');\n\nfunction flattenIntoArray(target, original, source, sourceLen, start, depth, mapper, thisArg) {\n  var targetIndex = start;\n  var sourceIndex = 0;\n  var mapFn = mapper ? ctx(mapper, thisArg, 3) : false;\n  var element, spreadable;\n\n  while (sourceIndex < sourceLen) {\n    if (sourceIndex in source) {\n      element = mapFn ? mapFn(source[sourceIndex], sourceIndex, original) : source[sourceIndex];\n\n      spreadable = false;\n      if (isObject(element)) {\n        spreadable = element[IS_CONCAT_SPREADABLE];\n        spreadable = spreadable !== undefined ? !!spreadable : isArray(element);\n      }\n\n      if (spreadable && depth > 0) {\n        targetIndex = flattenIntoArray(target, original, element, toLength(element.length), targetIndex, depth - 1) - 1;\n      } else {\n        if (targetIndex >= 0x1fffffffffffff) throw TypeError();\n        target[targetIndex] = element;\n      }\n\n      targetIndex++;\n    }\n    sourceIndex++;\n  }\n  return targetIndex;\n}\n\nmodule.exports = flattenIntoArray;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjc0LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fZmxhdHRlbi1pbnRvLWFycmF5LmpzP2M0NWYiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuLy8gaHR0cHM6Ly90YzM5LmdpdGh1Yi5pby9wcm9wb3NhbC1mbGF0TWFwLyNzZWMtRmxhdHRlbkludG9BcnJheVxudmFyIGlzQXJyYXkgPSByZXF1aXJlKCcuL19pcy1hcnJheScpO1xudmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7XG52YXIgdG9MZW5ndGggPSByZXF1aXJlKCcuL190by1sZW5ndGgnKTtcbnZhciBjdHggPSByZXF1aXJlKCcuL19jdHgnKTtcbnZhciBJU19DT05DQVRfU1BSRUFEQUJMRSA9IHJlcXVpcmUoJy4vX3drcycpKCdpc0NvbmNhdFNwcmVhZGFibGUnKTtcblxuZnVuY3Rpb24gZmxhdHRlbkludG9BcnJheSh0YXJnZXQsIG9yaWdpbmFsLCBzb3VyY2UsIHNvdXJjZUxlbiwgc3RhcnQsIGRlcHRoLCBtYXBwZXIsIHRoaXNBcmcpIHtcbiAgdmFyIHRhcmdldEluZGV4ID0gc3RhcnQ7XG4gIHZhciBzb3VyY2VJbmRleCA9IDA7XG4gIHZhciBtYXBGbiA9IG1hcHBlciA/IGN0eChtYXBwZXIsIHRoaXNBcmcsIDMpIDogZmFsc2U7XG4gIHZhciBlbGVtZW50LCBzcHJlYWRhYmxlO1xuXG4gIHdoaWxlIChzb3VyY2VJbmRleCA8IHNvdXJjZUxlbikge1xuICAgIGlmIChzb3VyY2VJbmRleCBpbiBzb3VyY2UpIHtcbiAgICAgIGVsZW1lbnQgPSBtYXBGbiA/IG1hcEZuKHNvdXJjZVtzb3VyY2VJbmRleF0sIHNvdXJjZUluZGV4LCBvcmlnaW5hbCkgOiBzb3VyY2Vbc291cmNlSW5kZXhdO1xuXG4gICAgICBzcHJlYWRhYmxlID0gZmFsc2U7XG4gICAgICBpZiAoaXNPYmplY3QoZWxlbWVudCkpIHtcbiAgICAgICAgc3ByZWFkYWJsZSA9IGVsZW1lbnRbSVNfQ09OQ0FUX1NQUkVBREFCTEVdO1xuICAgICAgICBzcHJlYWRhYmxlID0gc3ByZWFkYWJsZSAhPT0gdW5kZWZpbmVkID8gISFzcHJlYWRhYmxlIDogaXNBcnJheShlbGVtZW50KTtcbiAgICAgIH1cblxuICAgICAgaWYgKHNwcmVhZGFibGUgJiYgZGVwdGggPiAwKSB7XG4gICAgICAgIHRhcmdldEluZGV4ID0gZmxhdHRlbkludG9BcnJheSh0YXJnZXQsIG9yaWdpbmFsLCBlbGVtZW50LCB0b0xlbmd0aChlbGVtZW50Lmxlbmd0aCksIHRhcmdldEluZGV4LCBkZXB0aCAtIDEpIC0gMTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGlmICh0YXJnZXRJbmRleCA+PSAweDFmZmZmZmZmZmZmZmZmKSB0aHJvdyBUeXBlRXJyb3IoKTtcbiAgICAgICAgdGFyZ2V0W3RhcmdldEluZGV4XSA9IGVsZW1lbnQ7XG4gICAgICB9XG5cbiAgICAgIHRhcmdldEluZGV4Kys7XG4gICAgfVxuICAgIHNvdXJjZUluZGV4Kys7XG4gIH1cbiAgcmV0dXJuIHRhcmdldEluZGV4O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZsYXR0ZW5JbnRvQXJyYXk7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///274\n")},function(module,exports,__webpack_require__){eval("__webpack_require__(276);\nmodule.exports = __webpack_require__(8).String.padStart;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjc1LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvZm4vc3RyaW5nL3BhZC1zdGFydC5qcz9jMThjIl0sInNvdXJjZXNDb250ZW50IjpbInJlcXVpcmUoJy4uLy4uL21vZHVsZXMvZXM3LnN0cmluZy5wYWQtc3RhcnQnKTtcbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi4vLi4vbW9kdWxlcy9fY29yZScpLlN0cmluZy5wYWRTdGFydDtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///275\n")},function(module,exports,__webpack_require__){"use strict";eval("\n// https://github.com/tc39/proposal-string-pad-start-end\nvar $export = __webpack_require__(1);\nvar $pad = __webpack_require__(120);\nvar userAgent = __webpack_require__(58);\n\n// https://github.com/zloirock/core-js/issues/280\nvar WEBKIT_BUG = /Version\\/10\\.\\d+(\\.\\d+)?( Mobile\\/\\w+)? Safari\\//.test(userAgent);\n\n$export($export.P + $export.F * WEBKIT_BUG, 'String', {\n  padStart: function padStart(maxLength /* , fillString = ' ' */) {\n    return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, true);\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjc2LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczcuc3RyaW5nLnBhZC1zdGFydC5qcz9mNTc2Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0Jztcbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS90YzM5L3Byb3Bvc2FsLXN0cmluZy1wYWQtc3RhcnQtZW5kXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyICRwYWQgPSByZXF1aXJlKCcuL19zdHJpbmctcGFkJyk7XG52YXIgdXNlckFnZW50ID0gcmVxdWlyZSgnLi9fdXNlci1hZ2VudCcpO1xuXG4vLyBodHRwczovL2dpdGh1Yi5jb20vemxvaXJvY2svY29yZS1qcy9pc3N1ZXMvMjgwXG52YXIgV0VCS0lUX0JVRyA9IC9WZXJzaW9uXFwvMTBcXC5cXGQrKFxcLlxcZCspPyggTW9iaWxlXFwvXFx3Kyk/IFNhZmFyaVxcLy8udGVzdCh1c2VyQWdlbnQpO1xuXG4kZXhwb3J0KCRleHBvcnQuUCArICRleHBvcnQuRiAqIFdFQktJVF9CVUcsICdTdHJpbmcnLCB7XG4gIHBhZFN0YXJ0OiBmdW5jdGlvbiBwYWRTdGFydChtYXhMZW5ndGggLyogLCBmaWxsU3RyaW5nID0gJyAnICovKSB7XG4gICAgcmV0dXJuICRwYWQodGhpcywgbWF4TGVuZ3RoLCBhcmd1bWVudHMubGVuZ3RoID4gMSA/IGFyZ3VtZW50c1sxXSA6IHVuZGVmaW5lZCwgdHJ1ZSk7XG4gIH1cbn0pO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///276\n")},function(module,exports,__webpack_require__){eval("__webpack_require__(278);\nmodule.exports = __webpack_require__(8).String.padEnd;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjc3LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvZm4vc3RyaW5nL3BhZC1lbmQuanM/NDBkYyJdLCJzb3VyY2VzQ29udGVudCI6WyJyZXF1aXJlKCcuLi8uLi9tb2R1bGVzL2VzNy5zdHJpbmcucGFkLWVuZCcpO1xubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuLi8uLi9tb2R1bGVzL19jb3JlJykuU3RyaW5nLnBhZEVuZDtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///277\n")},function(module,exports,__webpack_require__){"use strict";eval("\n// https://github.com/tc39/proposal-string-pad-start-end\nvar $export = __webpack_require__(1);\nvar $pad = __webpack_require__(120);\nvar userAgent = __webpack_require__(58);\n\n// https://github.com/zloirock/core-js/issues/280\nvar WEBKIT_BUG = /Version\\/10\\.\\d+(\\.\\d+)?( Mobile\\/\\w+)? Safari\\//.test(userAgent);\n\n$export($export.P + $export.F * WEBKIT_BUG, 'String', {\n  padEnd: function padEnd(maxLength /* , fillString = ' ' */) {\n    return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, false);\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjc4LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczcuc3RyaW5nLnBhZC1lbmQuanM/ZWQ1MCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG4vLyBodHRwczovL2dpdGh1Yi5jb20vdGMzOS9wcm9wb3NhbC1zdHJpbmctcGFkLXN0YXJ0LWVuZFxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciAkcGFkID0gcmVxdWlyZSgnLi9fc3RyaW5nLXBhZCcpO1xudmFyIHVzZXJBZ2VudCA9IHJlcXVpcmUoJy4vX3VzZXItYWdlbnQnKTtcblxuLy8gaHR0cHM6Ly9naXRodWIuY29tL3psb2lyb2NrL2NvcmUtanMvaXNzdWVzLzI4MFxudmFyIFdFQktJVF9CVUcgPSAvVmVyc2lvblxcLzEwXFwuXFxkKyhcXC5cXGQrKT8oIE1vYmlsZVxcL1xcdyspPyBTYWZhcmlcXC8vLnRlc3QodXNlckFnZW50KTtcblxuJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LkYgKiBXRUJLSVRfQlVHLCAnU3RyaW5nJywge1xuICBwYWRFbmQ6IGZ1bmN0aW9uIHBhZEVuZChtYXhMZW5ndGggLyogLCBmaWxsU3RyaW5nID0gJyAnICovKSB7XG4gICAgcmV0dXJuICRwYWQodGhpcywgbWF4TGVuZ3RoLCBhcmd1bWVudHMubGVuZ3RoID4gMSA/IGFyZ3VtZW50c1sxXSA6IHVuZGVmaW5lZCwgZmFsc2UpO1xuICB9XG59KTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///278\n")},function(module,exports,__webpack_require__){eval("__webpack_require__(280);\nmodule.exports = __webpack_require__(8).String.trimLeft;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjc5LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvZm4vc3RyaW5nL3RyaW0tc3RhcnQuanM/MjMzYiJdLCJzb3VyY2VzQ29udGVudCI6WyJyZXF1aXJlKCcuLi8uLi9tb2R1bGVzL2VzNy5zdHJpbmcudHJpbS1sZWZ0Jyk7XG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4uLy4uL21vZHVsZXMvX2NvcmUnKS5TdHJpbmcudHJpbUxlZnQ7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///279\n")},function(module,exports,__webpack_require__){"use strict";eval("\n// https://github.com/sebmarkbage/ecmascript-string-left-right-trim\n__webpack_require__(40)('trimLeft', function ($trim) {\n  return function trimLeft() {\n    return $trim(this, 1);\n  };\n}, 'trimStart');\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjgwLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczcuc3RyaW5nLnRyaW0tbGVmdC5qcz8yM2JlIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0Jztcbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9zZWJtYXJrYmFnZS9lY21hc2NyaXB0LXN0cmluZy1sZWZ0LXJpZ2h0LXRyaW1cbnJlcXVpcmUoJy4vX3N0cmluZy10cmltJykoJ3RyaW1MZWZ0JywgZnVuY3Rpb24gKCR0cmltKSB7XG4gIHJldHVybiBmdW5jdGlvbiB0cmltTGVmdCgpIHtcbiAgICByZXR1cm4gJHRyaW0odGhpcywgMSk7XG4gIH07XG59LCAndHJpbVN0YXJ0Jyk7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///280\n")},function(module,exports,__webpack_require__){eval("__webpack_require__(282);\nmodule.exports = __webpack_require__(8).String.trimRight;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjgxLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvZm4vc3RyaW5nL3RyaW0tZW5kLmpzPzk2N2QiXSwic291cmNlc0NvbnRlbnQiOlsicmVxdWlyZSgnLi4vLi4vbW9kdWxlcy9lczcuc3RyaW5nLnRyaW0tcmlnaHQnKTtcbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi4vLi4vbW9kdWxlcy9fY29yZScpLlN0cmluZy50cmltUmlnaHQ7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///281\n")},function(module,exports,__webpack_require__){"use strict";eval("\n// https://github.com/sebmarkbage/ecmascript-string-left-right-trim\n__webpack_require__(40)('trimRight', function ($trim) {\n  return function trimRight() {\n    return $trim(this, 2);\n  };\n}, 'trimEnd');\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjgyLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczcuc3RyaW5nLnRyaW0tcmlnaHQuanM/N2MwZSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG4vLyBodHRwczovL2dpdGh1Yi5jb20vc2VibWFya2JhZ2UvZWNtYXNjcmlwdC1zdHJpbmctbGVmdC1yaWdodC10cmltXG5yZXF1aXJlKCcuL19zdHJpbmctdHJpbScpKCd0cmltUmlnaHQnLCBmdW5jdGlvbiAoJHRyaW0pIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIHRyaW1SaWdodCgpIHtcbiAgICByZXR1cm4gJHRyaW0odGhpcywgMik7XG4gIH07XG59LCAndHJpbUVuZCcpO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///282\n")},function(module,exports,__webpack_require__){eval("__webpack_require__(284);\nmodule.exports = __webpack_require__(62).f('asyncIterator');\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjgzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvZm4vc3ltYm9sL2FzeW5jLWl0ZXJhdG9yLmpzP2MwM2MiXSwic291cmNlc0NvbnRlbnQiOlsicmVxdWlyZSgnLi4vLi4vbW9kdWxlcy9lczcuc3ltYm9sLmFzeW5jLWl0ZXJhdG9yJyk7XG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4uLy4uL21vZHVsZXMvX3drcy1leHQnKS5mKCdhc3luY0l0ZXJhdG9yJyk7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///283\n")},function(module,exports,__webpack_require__){eval("__webpack_require__(92)('asyncIterator');\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjg0LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczcuc3ltYm9sLmFzeW5jLWl0ZXJhdG9yLmpzP2FjNGQiXSwic291cmNlc0NvbnRlbnQiOlsicmVxdWlyZSgnLi9fd2tzLWRlZmluZScpKCdhc3luY0l0ZXJhdG9yJyk7XG4iXSwibWFwcGluZ3MiOiJBQUFBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///284\n")},function(module,exports,__webpack_require__){eval("__webpack_require__(286);\nmodule.exports = __webpack_require__(8).Object.getOwnPropertyDescriptors;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjg1LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvZm4vb2JqZWN0L2dldC1vd24tcHJvcGVydHktZGVzY3JpcHRvcnMuanM/Zjk3OSJdLCJzb3VyY2VzQ29udGVudCI6WyJyZXF1aXJlKCcuLi8uLi9tb2R1bGVzL2VzNy5vYmplY3QuZ2V0LW93bi1wcm9wZXJ0eS1kZXNjcmlwdG9ycycpO1xubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuLi8uLi9tb2R1bGVzL19jb3JlJykuT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnM7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///285\n")},function(module,exports,__webpack_require__){eval("// https://github.com/tc39/proposal-object-getownpropertydescriptors\nvar $export = __webpack_require__(1);\nvar ownKeys = __webpack_require__(119);\nvar toIObject = __webpack_require__(16);\nvar gOPD = __webpack_require__(21);\nvar createProperty = __webpack_require__(78);\n\n$export($export.S, 'Object', {\n  getOwnPropertyDescriptors: function getOwnPropertyDescriptors(object) {\n    var O = toIObject(object);\n    var getDesc = gOPD.f;\n    var keys = ownKeys(O);\n    var result = {};\n    var i = 0;\n    var key, desc;\n    while (keys.length > i) {\n      desc = getDesc(O, key = keys[i++]);\n      if (desc !== undefined) createProperty(result, key, desc);\n    }\n    return result;\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjg2LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczcub2JqZWN0LmdldC1vd24tcHJvcGVydHktZGVzY3JpcHRvcnMuanM/OGU2ZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBodHRwczovL2dpdGh1Yi5jb20vdGMzOS9wcm9wb3NhbC1vYmplY3QtZ2V0b3ducHJvcGVydHlkZXNjcmlwdG9yc1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciBvd25LZXlzID0gcmVxdWlyZSgnLi9fb3duLWtleXMnKTtcbnZhciB0b0lPYmplY3QgPSByZXF1aXJlKCcuL190by1pb2JqZWN0Jyk7XG52YXIgZ09QRCA9IHJlcXVpcmUoJy4vX29iamVjdC1nb3BkJyk7XG52YXIgY3JlYXRlUHJvcGVydHkgPSByZXF1aXJlKCcuL19jcmVhdGUtcHJvcGVydHknKTtcblxuJGV4cG9ydCgkZXhwb3J0LlMsICdPYmplY3QnLCB7XG4gIGdldE93blByb3BlcnR5RGVzY3JpcHRvcnM6IGZ1bmN0aW9uIGdldE93blByb3BlcnR5RGVzY3JpcHRvcnMob2JqZWN0KSB7XG4gICAgdmFyIE8gPSB0b0lPYmplY3Qob2JqZWN0KTtcbiAgICB2YXIgZ2V0RGVzYyA9IGdPUEQuZjtcbiAgICB2YXIga2V5cyA9IG93bktleXMoTyk7XG4gICAgdmFyIHJlc3VsdCA9IHt9O1xuICAgIHZhciBpID0gMDtcbiAgICB2YXIga2V5LCBkZXNjO1xuICAgIHdoaWxlIChrZXlzLmxlbmd0aCA+IGkpIHtcbiAgICAgIGRlc2MgPSBnZXREZXNjKE8sIGtleSA9IGtleXNbaSsrXSk7XG4gICAgICBpZiAoZGVzYyAhPT0gdW5kZWZpbmVkKSBjcmVhdGVQcm9wZXJ0eShyZXN1bHQsIGtleSwgZGVzYyk7XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG4gIH1cbn0pO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///286\n")},function(module,exports,__webpack_require__){eval("__webpack_require__(288);\nmodule.exports = __webpack_require__(8).Object.values;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjg3LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvZm4vb2JqZWN0L3ZhbHVlcy5qcz9jYzUxIl0sInNvdXJjZXNDb250ZW50IjpbInJlcXVpcmUoJy4uLy4uL21vZHVsZXMvZXM3Lm9iamVjdC52YWx1ZXMnKTtcbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi4vLi4vbW9kdWxlcy9fY29yZScpLk9iamVjdC52YWx1ZXM7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///287\n")},function(module,exports,__webpack_require__){eval("// https://github.com/tc39/proposal-object-values-entries\nvar $export = __webpack_require__(1);\nvar $values = __webpack_require__(121)(false);\n\n$export($export.S, 'Object', {\n  values: function values(it) {\n    return $values(it);\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjg4LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczcub2JqZWN0LnZhbHVlcy5qcz84NjE1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGh0dHBzOi8vZ2l0aHViLmNvbS90YzM5L3Byb3Bvc2FsLW9iamVjdC12YWx1ZXMtZW50cmllc1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciAkdmFsdWVzID0gcmVxdWlyZSgnLi9fb2JqZWN0LXRvLWFycmF5JykoZmFsc2UpO1xuXG4kZXhwb3J0KCRleHBvcnQuUywgJ09iamVjdCcsIHtcbiAgdmFsdWVzOiBmdW5jdGlvbiB2YWx1ZXMoaXQpIHtcbiAgICByZXR1cm4gJHZhbHVlcyhpdCk7XG4gIH1cbn0pO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///288\n")},function(module,exports,__webpack_require__){eval("__webpack_require__(290);\nmodule.exports = __webpack_require__(8).Object.entries;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjg5LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvZm4vb2JqZWN0L2VudHJpZXMuanM/MjViNCJdLCJzb3VyY2VzQ29udGVudCI6WyJyZXF1aXJlKCcuLi8uLi9tb2R1bGVzL2VzNy5vYmplY3QuZW50cmllcycpO1xubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuLi8uLi9tb2R1bGVzL19jb3JlJykuT2JqZWN0LmVudHJpZXM7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///289\n")},function(module,exports,__webpack_require__){eval("// https://github.com/tc39/proposal-object-values-entries\nvar $export = __webpack_require__(1);\nvar $entries = __webpack_require__(121)(true);\n\n$export($export.S, 'Object', {\n  entries: function entries(it) {\n    return $entries(it);\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjkwLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczcub2JqZWN0LmVudHJpZXMuanM/ZmZjMSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBodHRwczovL2dpdGh1Yi5jb20vdGMzOS9wcm9wb3NhbC1vYmplY3QtdmFsdWVzLWVudHJpZXNcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgJGVudHJpZXMgPSByZXF1aXJlKCcuL19vYmplY3QtdG8tYXJyYXknKSh0cnVlKTtcblxuJGV4cG9ydCgkZXhwb3J0LlMsICdPYmplY3QnLCB7XG4gIGVudHJpZXM6IGZ1bmN0aW9uIGVudHJpZXMoaXQpIHtcbiAgICByZXR1cm4gJGVudHJpZXMoaXQpO1xuICB9XG59KTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///290\n")},function(module,exports,__webpack_require__){"use strict";eval("\n__webpack_require__(113);\n__webpack_require__(292);\nmodule.exports = __webpack_require__(8).Promise['finally'];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjkxLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvZm4vcHJvbWlzZS9maW5hbGx5LmpzPzRjOGEiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xucmVxdWlyZSgnLi4vLi4vbW9kdWxlcy9lczYucHJvbWlzZScpO1xucmVxdWlyZSgnLi4vLi4vbW9kdWxlcy9lczcucHJvbWlzZS5maW5hbGx5Jyk7XG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4uLy4uL21vZHVsZXMvX2NvcmUnKS5Qcm9taXNlWydmaW5hbGx5J107XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///291\n")},function(module,exports,__webpack_require__){"use strict";eval("// https://github.com/tc39/proposal-promise-finally\n\nvar $export = __webpack_require__(1);\nvar core = __webpack_require__(8);\nvar global = __webpack_require__(2);\nvar speciesConstructor = __webpack_require__(48);\nvar promiseResolve = __webpack_require__(115);\n\n$export($export.P + $export.R, 'Promise', { 'finally': function (onFinally) {\n  var C = speciesConstructor(this, core.Promise || global.Promise);\n  var isFunction = typeof onFinally == 'function';\n  return this.then(\n    isFunction ? function (x) {\n      return promiseResolve(C, onFinally()).then(function () { return x; });\n    } : onFinally,\n    isFunction ? function (e) {\n      return promiseResolve(C, onFinally()).then(function () { throw e; });\n    } : onFinally\n  );\n} });\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjkyLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczcucHJvbWlzZS5maW5hbGx5LmpzPzA5N2QiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gaHR0cHM6Ly9naXRodWIuY29tL3RjMzkvcHJvcG9zYWwtcHJvbWlzZS1maW5hbGx5XG4ndXNlIHN0cmljdCc7XG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIGNvcmUgPSByZXF1aXJlKCcuL19jb3JlJyk7XG52YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi9fZ2xvYmFsJyk7XG52YXIgc3BlY2llc0NvbnN0cnVjdG9yID0gcmVxdWlyZSgnLi9fc3BlY2llcy1jb25zdHJ1Y3RvcicpO1xudmFyIHByb21pc2VSZXNvbHZlID0gcmVxdWlyZSgnLi9fcHJvbWlzZS1yZXNvbHZlJyk7XG5cbiRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5SLCAnUHJvbWlzZScsIHsgJ2ZpbmFsbHknOiBmdW5jdGlvbiAob25GaW5hbGx5KSB7XG4gIHZhciBDID0gc3BlY2llc0NvbnN0cnVjdG9yKHRoaXMsIGNvcmUuUHJvbWlzZSB8fCBnbG9iYWwuUHJvbWlzZSk7XG4gIHZhciBpc0Z1bmN0aW9uID0gdHlwZW9mIG9uRmluYWxseSA9PSAnZnVuY3Rpb24nO1xuICByZXR1cm4gdGhpcy50aGVuKFxuICAgIGlzRnVuY3Rpb24gPyBmdW5jdGlvbiAoeCkge1xuICAgICAgcmV0dXJuIHByb21pc2VSZXNvbHZlKEMsIG9uRmluYWxseSgpKS50aGVuKGZ1bmN0aW9uICgpIHsgcmV0dXJuIHg7IH0pO1xuICAgIH0gOiBvbkZpbmFsbHksXG4gICAgaXNGdW5jdGlvbiA/IGZ1bmN0aW9uIChlKSB7XG4gICAgICByZXR1cm4gcHJvbWlzZVJlc29sdmUoQywgb25GaW5hbGx5KCkpLnRoZW4oZnVuY3Rpb24gKCkgeyB0aHJvdyBlOyB9KTtcbiAgICB9IDogb25GaW5hbGx5XG4gICk7XG59IH0pO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///292\n")},function(module,exports,__webpack_require__){eval("__webpack_require__(294);\n__webpack_require__(295);\n__webpack_require__(296);\nmodule.exports = __webpack_require__(8);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjkzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvd2ViL2luZGV4LmpzPzE3MTUiXSwic291cmNlc0NvbnRlbnQiOlsicmVxdWlyZSgnLi4vbW9kdWxlcy93ZWIudGltZXJzJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL3dlYi5pbW1lZGlhdGUnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvd2ViLmRvbS5pdGVyYWJsZScpO1xubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuLi9tb2R1bGVzL19jb3JlJyk7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///293\n")},function(module,exports,__webpack_require__){eval("// ie9- setTimeout & setInterval additional parameters fix\nvar global = __webpack_require__(2);\nvar $export = __webpack_require__(1);\nvar userAgent = __webpack_require__(58);\nvar slice = [].slice;\nvar MSIE = /MSIE .\\./.test(userAgent); // <- dirty ie9- check\nvar wrap = function (set) {\n  return function (fn, time /* , ...args */) {\n    var boundArgs = arguments.length > 2;\n    var args = boundArgs ? slice.call(arguments, 2) : false;\n    return set(boundArgs ? function () {\n      // eslint-disable-next-line no-new-func\n      (typeof fn == 'function' ? fn : Function(fn)).apply(this, args);\n    } : fn, time);\n  };\n};\n$export($export.G + $export.B + $export.F * MSIE, {\n  setTimeout: wrap(global.setTimeout),\n  setInterval: wrap(global.setInterval)\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjk0LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy93ZWIudGltZXJzLmpzPzQ3OTUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gaWU5LSBzZXRUaW1lb3V0ICYgc2V0SW50ZXJ2YWwgYWRkaXRpb25hbCBwYXJhbWV0ZXJzIGZpeFxudmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpO1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciB1c2VyQWdlbnQgPSByZXF1aXJlKCcuL191c2VyLWFnZW50Jyk7XG52YXIgc2xpY2UgPSBbXS5zbGljZTtcbnZhciBNU0lFID0gL01TSUUgLlxcLi8udGVzdCh1c2VyQWdlbnQpOyAvLyA8LSBkaXJ0eSBpZTktIGNoZWNrXG52YXIgd3JhcCA9IGZ1bmN0aW9uIChzZXQpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIChmbiwgdGltZSAvKiAsIC4uLmFyZ3MgKi8pIHtcbiAgICB2YXIgYm91bmRBcmdzID0gYXJndW1lbnRzLmxlbmd0aCA+IDI7XG4gICAgdmFyIGFyZ3MgPSBib3VuZEFyZ3MgPyBzbGljZS5jYWxsKGFyZ3VtZW50cywgMikgOiBmYWxzZTtcbiAgICByZXR1cm4gc2V0KGJvdW5kQXJncyA/IGZ1bmN0aW9uICgpIHtcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1uZXctZnVuY1xuICAgICAgKHR5cGVvZiBmbiA9PSAnZnVuY3Rpb24nID8gZm4gOiBGdW5jdGlvbihmbikpLmFwcGx5KHRoaXMsIGFyZ3MpO1xuICAgIH0gOiBmbiwgdGltZSk7XG4gIH07XG59O1xuJGV4cG9ydCgkZXhwb3J0LkcgKyAkZXhwb3J0LkIgKyAkZXhwb3J0LkYgKiBNU0lFLCB7XG4gIHNldFRpbWVvdXQ6IHdyYXAoZ2xvYmFsLnNldFRpbWVvdXQpLFxuICBzZXRJbnRlcnZhbDogd3JhcChnbG9iYWwuc2V0SW50ZXJ2YWwpXG59KTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///294\n")},function(module,exports,__webpack_require__){eval("var $export = __webpack_require__(1);\nvar $task = __webpack_require__(84);\n$export($export.G + $export.B, {\n  setImmediate: $task.set,\n  clearImmediate: $task.clear\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjk1LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy93ZWIuaW1tZWRpYXRlLmpzPzEzMGYiXSwic291cmNlc0NvbnRlbnQiOlsidmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciAkdGFzayA9IHJlcXVpcmUoJy4vX3Rhc2snKTtcbiRleHBvcnQoJGV4cG9ydC5HICsgJGV4cG9ydC5CLCB7XG4gIHNldEltbWVkaWF0ZTogJHRhc2suc2V0LFxuICBjbGVhckltbWVkaWF0ZTogJHRhc2suY2xlYXJcbn0pO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///295\n")},function(module,exports,__webpack_require__){eval("var $iterators = __webpack_require__(81);\nvar getKeys = __webpack_require__(32);\nvar redefine = __webpack_require__(12);\nvar global = __webpack_require__(2);\nvar hide = __webpack_require__(15);\nvar Iterators = __webpack_require__(41);\nvar wks = __webpack_require__(6);\nvar ITERATOR = wks('iterator');\nvar TO_STRING_TAG = wks('toStringTag');\nvar ArrayValues = Iterators.Array;\n\nvar DOMIterables = {\n  CSSRuleList: true, // TODO: Not spec compliant, should be false.\n  CSSStyleDeclaration: false,\n  CSSValueList: false,\n  ClientRectList: false,\n  DOMRectList: false,\n  DOMStringList: false,\n  DOMTokenList: true,\n  DataTransferItemList: false,\n  FileList: false,\n  HTMLAllCollection: false,\n  HTMLCollection: false,\n  HTMLFormElement: false,\n  HTMLSelectElement: false,\n  MediaList: true, // TODO: Not spec compliant, should be false.\n  MimeTypeArray: false,\n  NamedNodeMap: false,\n  NodeList: true,\n  PaintRequestList: false,\n  Plugin: false,\n  PluginArray: false,\n  SVGLengthList: false,\n  SVGNumberList: false,\n  SVGPathSegList: false,\n  SVGPointList: false,\n  SVGStringList: false,\n  SVGTransformList: false,\n  SourceBufferList: false,\n  StyleSheetList: true, // TODO: Not spec compliant, should be false.\n  TextTrackCueList: false,\n  TextTrackList: false,\n  TouchList: false\n};\n\nfor (var collections = getKeys(DOMIterables), i = 0; i < collections.length; i++) {\n  var NAME = collections[i];\n  var explicit = DOMIterables[NAME];\n  var Collection = global[NAME];\n  var proto = Collection && Collection.prototype;\n  var key;\n  if (proto) {\n    if (!proto[ITERATOR]) hide(proto, ITERATOR, ArrayValues);\n    if (!proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);\n    Iterators[NAME] = ArrayValues;\n    if (explicit) for (key in $iterators) if (!proto[key]) redefine(proto, key, $iterators[key], true);\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjk2LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy93ZWIuZG9tLml0ZXJhYmxlLmpzP2FjNmEiXSwic291cmNlc0NvbnRlbnQiOlsidmFyICRpdGVyYXRvcnMgPSByZXF1aXJlKCcuL2VzNi5hcnJheS5pdGVyYXRvcicpO1xudmFyIGdldEtleXMgPSByZXF1aXJlKCcuL19vYmplY3Qta2V5cycpO1xudmFyIHJlZGVmaW5lID0gcmVxdWlyZSgnLi9fcmVkZWZpbmUnKTtcbnZhciBnbG9iYWwgPSByZXF1aXJlKCcuL19nbG9iYWwnKTtcbnZhciBoaWRlID0gcmVxdWlyZSgnLi9faGlkZScpO1xudmFyIEl0ZXJhdG9ycyA9IHJlcXVpcmUoJy4vX2l0ZXJhdG9ycycpO1xudmFyIHdrcyA9IHJlcXVpcmUoJy4vX3drcycpO1xudmFyIElURVJBVE9SID0gd2tzKCdpdGVyYXRvcicpO1xudmFyIFRPX1NUUklOR19UQUcgPSB3a3MoJ3RvU3RyaW5nVGFnJyk7XG52YXIgQXJyYXlWYWx1ZXMgPSBJdGVyYXRvcnMuQXJyYXk7XG5cbnZhciBET01JdGVyYWJsZXMgPSB7XG4gIENTU1J1bGVMaXN0OiB0cnVlLCAvLyBUT0RPOiBOb3Qgc3BlYyBjb21wbGlhbnQsIHNob3VsZCBiZSBmYWxzZS5cbiAgQ1NTU3R5bGVEZWNsYXJhdGlvbjogZmFsc2UsXG4gIENTU1ZhbHVlTGlzdDogZmFsc2UsXG4gIENsaWVudFJlY3RMaXN0OiBmYWxzZSxcbiAgRE9NUmVjdExpc3Q6IGZhbHNlLFxuICBET01TdHJpbmdMaXN0OiBmYWxzZSxcbiAgRE9NVG9rZW5MaXN0OiB0cnVlLFxuICBEYXRhVHJhbnNmZXJJdGVtTGlzdDogZmFsc2UsXG4gIEZpbGVMaXN0OiBmYWxzZSxcbiAgSFRNTEFsbENvbGxlY3Rpb246IGZhbHNlLFxuICBIVE1MQ29sbGVjdGlvbjogZmFsc2UsXG4gIEhUTUxGb3JtRWxlbWVudDogZmFsc2UsXG4gIEhUTUxTZWxlY3RFbGVtZW50OiBmYWxzZSxcbiAgTWVkaWFMaXN0OiB0cnVlLCAvLyBUT0RPOiBOb3Qgc3BlYyBjb21wbGlhbnQsIHNob3VsZCBiZSBmYWxzZS5cbiAgTWltZVR5cGVBcnJheTogZmFsc2UsXG4gIE5hbWVkTm9kZU1hcDogZmFsc2UsXG4gIE5vZGVMaXN0OiB0cnVlLFxuICBQYWludFJlcXVlc3RMaXN0OiBmYWxzZSxcbiAgUGx1Z2luOiBmYWxzZSxcbiAgUGx1Z2luQXJyYXk6IGZhbHNlLFxuICBTVkdMZW5ndGhMaXN0OiBmYWxzZSxcbiAgU1ZHTnVtYmVyTGlzdDogZmFsc2UsXG4gIFNWR1BhdGhTZWdMaXN0OiBmYWxzZSxcbiAgU1ZHUG9pbnRMaXN0OiBmYWxzZSxcbiAgU1ZHU3RyaW5nTGlzdDogZmFsc2UsXG4gIFNWR1RyYW5zZm9ybUxpc3Q6IGZhbHNlLFxuICBTb3VyY2VCdWZmZXJMaXN0OiBmYWxzZSxcbiAgU3R5bGVTaGVldExpc3Q6IHRydWUsIC8vIFRPRE86IE5vdCBzcGVjIGNvbXBsaWFudCwgc2hvdWxkIGJlIGZhbHNlLlxuICBUZXh0VHJhY2tDdWVMaXN0OiBmYWxzZSxcbiAgVGV4dFRyYWNrTGlzdDogZmFsc2UsXG4gIFRvdWNoTGlzdDogZmFsc2Vcbn07XG5cbmZvciAodmFyIGNvbGxlY3Rpb25zID0gZ2V0S2V5cyhET01JdGVyYWJsZXMpLCBpID0gMDsgaSA8IGNvbGxlY3Rpb25zLmxlbmd0aDsgaSsrKSB7XG4gIHZhciBOQU1FID0gY29sbGVjdGlvbnNbaV07XG4gIHZhciBleHBsaWNpdCA9IERPTUl0ZXJhYmxlc1tOQU1FXTtcbiAgdmFyIENvbGxlY3Rpb24gPSBnbG9iYWxbTkFNRV07XG4gIHZhciBwcm90byA9IENvbGxlY3Rpb24gJiYgQ29sbGVjdGlvbi5wcm90b3R5cGU7XG4gIHZhciBrZXk7XG4gIGlmIChwcm90bykge1xuICAgIGlmICghcHJvdG9bSVRFUkFUT1JdKSBoaWRlKHByb3RvLCBJVEVSQVRPUiwgQXJyYXlWYWx1ZXMpO1xuICAgIGlmICghcHJvdG9bVE9fU1RSSU5HX1RBR10pIGhpZGUocHJvdG8sIFRPX1NUUklOR19UQUcsIE5BTUUpO1xuICAgIEl0ZXJhdG9yc1tOQU1FXSA9IEFycmF5VmFsdWVzO1xuICAgIGlmIChleHBsaWNpdCkgZm9yIChrZXkgaW4gJGl0ZXJhdG9ycykgaWYgKCFwcm90b1trZXldKSByZWRlZmluZShwcm90bywga2V5LCAkaXRlcmF0b3JzW2tleV0sIHRydWUpO1xuICB9XG59XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///296\n")},function(module,exports,__webpack_require__){eval('/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  "use strict";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === "function" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || "@@iterator";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";\n  var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there\'s no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don\'t have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: "normal", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: "throw", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = "suspendedStart";\n  var GenStateSuspendedYield = "suspendedYield";\n  var GenStateExecuting = "executing";\n  var GenStateCompleted = "completed";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don\'t natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = "GeneratorFunction";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    ["next", "throw", "return"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === "function" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === "GeneratorFunction"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = "GeneratorFunction";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, "__await")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === "throw") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === "object" &&\n            hasOwn.call(value, "__await")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke("next", value, resolve, reject);\n          }, function(err) {\n            invoke("throw", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke("throw", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error("Generator is already running");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === "throw") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === "next") {\n          // Setting context._sent for legacy support of Babel\'s\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === "throw") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === "return") {\n          context.abrupt("return", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === "normal") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === "throw") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = "throw";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === "throw") {\n        // Note: ["return"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator["return"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = "return";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === "throw") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // "return" to "throw", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = "throw";\n        context.arg = new TypeError(\n          "The iterator does not provide a \'throw\' method");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === "throw") {\n      context.method = "throw";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = "throw";\n      context.arg = new TypeError("iterator result is not an object");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was "throw" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was "next", forget context.arg since it has been\n      // "consumed" by the delegate iterator. If context.method was\n      // "return", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== "return") {\n        context.method = "next";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = "Generator";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers\' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn\'t happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return "[object Generator]";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = "normal";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: "root" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === "function") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel\'s\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = "next";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === "t" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === "throw") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = "throw";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = "next";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === "root") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle("end");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, "catchLoc");\n          var hasFinally = hasOwn.call(entry, "finallyLoc");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error("try statement without catch or finally");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, "finallyLoc") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === "break" ||\n           type === "continue") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = "next";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === "throw") {\n        throw record.arg;\n      }\n\n      if (record.type === "break" ||\n          record.type === "continue") {\n        this.next = record.arg;\n      } else if (record.type === "return") {\n        this.rval = this.arg = record.arg;\n        this.method = "return";\n        this.next = "end";\n      } else if (record.type === "normal" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    "catch": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === "throw") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error("illegal catch attempt");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === "next") {\n        // Deliberately forget the last sent value so that we don\'t\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n   true ? module.exports : undefined\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you\'ve misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you\'re not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function("r", "regeneratorRuntime = r")(runtime);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///297\n')},function(module,exports,__webpack_require__){eval("__webpack_require__(299);\nmodule.exports = __webpack_require__(122).global;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjk4LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9mbi9nbG9iYWwuanM/NTZjNSJdLCJzb3VyY2VzQ29udGVudCI6WyJyZXF1aXJlKCcuLi9tb2R1bGVzL2VzNy5nbG9iYWwnKTtcbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi4vbW9kdWxlcy9fY29yZScpLmdsb2JhbDtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///298\n")},function(module,exports,__webpack_require__){eval("// https://github.com/tc39/proposal-global\nvar $export = __webpack_require__(300);\n\n$export($export.G, { global: __webpack_require__(86) });\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjk5LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL2VzNy5nbG9iYWwuanM/ZWNmMiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBodHRwczovL2dpdGh1Yi5jb20vdGMzOS9wcm9wb3NhbC1nbG9iYWxcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG5cbiRleHBvcnQoJGV4cG9ydC5HLCB7IGdsb2JhbDogcmVxdWlyZSgnLi9fZ2xvYmFsJykgfSk7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///299\n")},function(module,exports,__webpack_require__){eval("var global = __webpack_require__(86);\nvar core = __webpack_require__(122);\nvar ctx = __webpack_require__(301);\nvar hide = __webpack_require__(303);\nvar has = __webpack_require__(310);\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var IS_WRAP = type & $export.W;\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE];\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];\n  var key, own, out;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    if (own && has(exports, key)) continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function (C) {\n      var F = function (a, b, c) {\n        if (this instanceof C) {\n          switch (arguments.length) {\n            case 0: return new C();\n            case 1: return new C(a);\n            case 2: return new C(a, b);\n          } return new C(a, b, c);\n        } return C.apply(this, arguments);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n    if (IS_PROTO) {\n      (exports.virtual || (exports.virtual = {}))[key] = out;\n      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);\n    }\n  }\n};\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nmodule.exports = $export;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzAwLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19leHBvcnQuanM/NjNiNiJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi9fZ2xvYmFsJyk7XG52YXIgY29yZSA9IHJlcXVpcmUoJy4vX2NvcmUnKTtcbnZhciBjdHggPSByZXF1aXJlKCcuL19jdHgnKTtcbnZhciBoaWRlID0gcmVxdWlyZSgnLi9faGlkZScpO1xudmFyIGhhcyA9IHJlcXVpcmUoJy4vX2hhcycpO1xudmFyIFBST1RPVFlQRSA9ICdwcm90b3R5cGUnO1xuXG52YXIgJGV4cG9ydCA9IGZ1bmN0aW9uICh0eXBlLCBuYW1lLCBzb3VyY2UpIHtcbiAgdmFyIElTX0ZPUkNFRCA9IHR5cGUgJiAkZXhwb3J0LkY7XG4gIHZhciBJU19HTE9CQUwgPSB0eXBlICYgJGV4cG9ydC5HO1xuICB2YXIgSVNfU1RBVElDID0gdHlwZSAmICRleHBvcnQuUztcbiAgdmFyIElTX1BST1RPID0gdHlwZSAmICRleHBvcnQuUDtcbiAgdmFyIElTX0JJTkQgPSB0eXBlICYgJGV4cG9ydC5CO1xuICB2YXIgSVNfV1JBUCA9IHR5cGUgJiAkZXhwb3J0Llc7XG4gIHZhciBleHBvcnRzID0gSVNfR0xPQkFMID8gY29yZSA6IGNvcmVbbmFtZV0gfHwgKGNvcmVbbmFtZV0gPSB7fSk7XG4gIHZhciBleHBQcm90byA9IGV4cG9ydHNbUFJPVE9UWVBFXTtcbiAgdmFyIHRhcmdldCA9IElTX0dMT0JBTCA/IGdsb2JhbCA6IElTX1NUQVRJQyA/IGdsb2JhbFtuYW1lXSA6IChnbG9iYWxbbmFtZV0gfHwge30pW1BST1RPVFlQRV07XG4gIHZhciBrZXksIG93biwgb3V0O1xuICBpZiAoSVNfR0xPQkFMKSBzb3VyY2UgPSBuYW1lO1xuICBmb3IgKGtleSBpbiBzb3VyY2UpIHtcbiAgICAvLyBjb250YWlucyBpbiBuYXRpdmVcbiAgICBvd24gPSAhSVNfRk9SQ0VEICYmIHRhcmdldCAmJiB0YXJnZXRba2V5XSAhPT0gdW5kZWZpbmVkO1xuICAgIGlmIChvd24gJiYgaGFzKGV4cG9ydHMsIGtleSkpIGNvbnRpbnVlO1xuICAgIC8vIGV4cG9ydCBuYXRpdmUgb3IgcGFzc2VkXG4gICAgb3V0ID0gb3duID8gdGFyZ2V0W2tleV0gOiBzb3VyY2Vba2V5XTtcbiAgICAvLyBwcmV2ZW50IGdsb2JhbCBwb2xsdXRpb24gZm9yIG5hbWVzcGFjZXNcbiAgICBleHBvcnRzW2tleV0gPSBJU19HTE9CQUwgJiYgdHlwZW9mIHRhcmdldFtrZXldICE9ICdmdW5jdGlvbicgPyBzb3VyY2Vba2V5XVxuICAgIC8vIGJpbmQgdGltZXJzIHRvIGdsb2JhbCBmb3IgY2FsbCBmcm9tIGV4cG9ydCBjb250ZXh0XG4gICAgOiBJU19CSU5EICYmIG93biA/IGN0eChvdXQsIGdsb2JhbClcbiAgICAvLyB3cmFwIGdsb2JhbCBjb25zdHJ1Y3RvcnMgZm9yIHByZXZlbnQgY2hhbmdlIHRoZW0gaW4gbGlicmFyeVxuICAgIDogSVNfV1JBUCAmJiB0YXJnZXRba2V5XSA9PSBvdXQgPyAoZnVuY3Rpb24gKEMpIHtcbiAgICAgIHZhciBGID0gZnVuY3Rpb24gKGEsIGIsIGMpIHtcbiAgICAgICAgaWYgKHRoaXMgaW5zdGFuY2VvZiBDKSB7XG4gICAgICAgICAgc3dpdGNoIChhcmd1bWVudHMubGVuZ3RoKSB7XG4gICAgICAgICAgICBjYXNlIDA6IHJldHVybiBuZXcgQygpO1xuICAgICAgICAgICAgY2FzZSAxOiByZXR1cm4gbmV3IEMoYSk7XG4gICAgICAgICAgICBjYXNlIDI6IHJldHVybiBuZXcgQyhhLCBiKTtcbiAgICAgICAgICB9IHJldHVybiBuZXcgQyhhLCBiLCBjKTtcbiAgICAgICAgfSByZXR1cm4gQy5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgICAgfTtcbiAgICAgIEZbUFJPVE9UWVBFXSA9IENbUFJPVE9UWVBFXTtcbiAgICAgIHJldHVybiBGO1xuICAgIC8vIG1ha2Ugc3RhdGljIHZlcnNpb25zIGZvciBwcm90b3R5cGUgbWV0aG9kc1xuICAgIH0pKG91dCkgOiBJU19QUk9UTyAmJiB0eXBlb2Ygb3V0ID09ICdmdW5jdGlvbicgPyBjdHgoRnVuY3Rpb24uY2FsbCwgb3V0KSA6IG91dDtcbiAgICAvLyBleHBvcnQgcHJvdG8gbWV0aG9kcyB0byBjb3JlLiVDT05TVFJVQ1RPUiUubWV0aG9kcy4lTkFNRSVcbiAgICBpZiAoSVNfUFJPVE8pIHtcbiAgICAgIChleHBvcnRzLnZpcnR1YWwgfHwgKGV4cG9ydHMudmlydHVhbCA9IHt9KSlba2V5XSA9IG91dDtcbiAgICAgIC8vIGV4cG9ydCBwcm90byBtZXRob2RzIHRvIGNvcmUuJUNPTlNUUlVDVE9SJS5wcm90b3R5cGUuJU5BTUUlXG4gICAgICBpZiAodHlwZSAmICRleHBvcnQuUiAmJiBleHBQcm90byAmJiAhZXhwUHJvdG9ba2V5XSkgaGlkZShleHBQcm90bywga2V5LCBvdXQpO1xuICAgIH1cbiAgfVxufTtcbi8vIHR5cGUgYml0bWFwXG4kZXhwb3J0LkYgPSAxOyAgIC8vIGZvcmNlZFxuJGV4cG9ydC5HID0gMjsgICAvLyBnbG9iYWxcbiRleHBvcnQuUyA9IDQ7ICAgLy8gc3RhdGljXG4kZXhwb3J0LlAgPSA4OyAgIC8vIHByb3RvXG4kZXhwb3J0LkIgPSAxNjsgIC8vIGJpbmRcbiRleHBvcnQuVyA9IDMyOyAgLy8gd3JhcFxuJGV4cG9ydC5VID0gNjQ7ICAvLyBzYWZlXG4kZXhwb3J0LlIgPSAxMjg7IC8vIHJlYWwgcHJvdG8gbWV0aG9kIGZvciBgbGlicmFyeWBcbm1vZHVsZS5leHBvcnRzID0gJGV4cG9ydDtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///300\n")},function(module,exports,__webpack_require__){eval("// optional / simple context binding\nvar aFunction = __webpack_require__(302);\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzAxLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19jdHguanM/ZDg2NCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBvcHRpb25hbCAvIHNpbXBsZSBjb250ZXh0IGJpbmRpbmdcbnZhciBhRnVuY3Rpb24gPSByZXF1aXJlKCcuL19hLWZ1bmN0aW9uJyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChmbiwgdGhhdCwgbGVuZ3RoKSB7XG4gIGFGdW5jdGlvbihmbik7XG4gIGlmICh0aGF0ID09PSB1bmRlZmluZWQpIHJldHVybiBmbjtcbiAgc3dpdGNoIChsZW5ndGgpIHtcbiAgICBjYXNlIDE6IHJldHVybiBmdW5jdGlvbiAoYSkge1xuICAgICAgcmV0dXJuIGZuLmNhbGwodGhhdCwgYSk7XG4gICAgfTtcbiAgICBjYXNlIDI6IHJldHVybiBmdW5jdGlvbiAoYSwgYikge1xuICAgICAgcmV0dXJuIGZuLmNhbGwodGhhdCwgYSwgYik7XG4gICAgfTtcbiAgICBjYXNlIDM6IHJldHVybiBmdW5jdGlvbiAoYSwgYiwgYykge1xuICAgICAgcmV0dXJuIGZuLmNhbGwodGhhdCwgYSwgYiwgYyk7XG4gICAgfTtcbiAgfVxuICByZXR1cm4gZnVuY3Rpb24gKC8qIC4uLmFyZ3MgKi8pIHtcbiAgICByZXR1cm4gZm4uYXBwbHkodGhhdCwgYXJndW1lbnRzKTtcbiAgfTtcbn07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///301\n")},function(module,exports){eval("module.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzAyLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19hLWZ1bmN0aW9uLmpzPzc5YWEiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQpIHtcbiAgaWYgKHR5cGVvZiBpdCAhPSAnZnVuY3Rpb24nKSB0aHJvdyBUeXBlRXJyb3IoaXQgKyAnIGlzIG5vdCBhIGZ1bmN0aW9uIScpO1xuICByZXR1cm4gaXQ7XG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///302\n")},function(module,exports,__webpack_require__){eval("var dP = __webpack_require__(304);\nvar createDesc = __webpack_require__(309);\nmodule.exports = __webpack_require__(88) ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzAzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19oaWRlLmpzPzM1ZTgiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGRQID0gcmVxdWlyZSgnLi9fb2JqZWN0LWRwJyk7XG52YXIgY3JlYXRlRGVzYyA9IHJlcXVpcmUoJy4vX3Byb3BlcnR5LWRlc2MnKTtcbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9fZGVzY3JpcHRvcnMnKSA/IGZ1bmN0aW9uIChvYmplY3QsIGtleSwgdmFsdWUpIHtcbiAgcmV0dXJuIGRQLmYob2JqZWN0LCBrZXksIGNyZWF0ZURlc2MoMSwgdmFsdWUpKTtcbn0gOiBmdW5jdGlvbiAob2JqZWN0LCBrZXksIHZhbHVlKSB7XG4gIG9iamVjdFtrZXldID0gdmFsdWU7XG4gIHJldHVybiBvYmplY3Q7XG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///303\n")},function(module,exports,__webpack_require__){eval("var anObject = __webpack_require__(305);\nvar IE8_DOM_DEFINE = __webpack_require__(306);\nvar toPrimitive = __webpack_require__(308);\nvar dP = Object.defineProperty;\n\nexports.f = __webpack_require__(88) ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzA0LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19vYmplY3QtZHAuanM/ZDlmNiJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbnZhciBJRThfRE9NX0RFRklORSA9IHJlcXVpcmUoJy4vX2llOC1kb20tZGVmaW5lJyk7XG52YXIgdG9QcmltaXRpdmUgPSByZXF1aXJlKCcuL190by1wcmltaXRpdmUnKTtcbnZhciBkUCA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eTtcblxuZXhwb3J0cy5mID0gcmVxdWlyZSgnLi9fZGVzY3JpcHRvcnMnKSA/IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSA6IGZ1bmN0aW9uIGRlZmluZVByb3BlcnR5KE8sIFAsIEF0dHJpYnV0ZXMpIHtcbiAgYW5PYmplY3QoTyk7XG4gIFAgPSB0b1ByaW1pdGl2ZShQLCB0cnVlKTtcbiAgYW5PYmplY3QoQXR0cmlidXRlcyk7XG4gIGlmIChJRThfRE9NX0RFRklORSkgdHJ5IHtcbiAgICByZXR1cm4gZFAoTywgUCwgQXR0cmlidXRlcyk7XG4gIH0gY2F0Y2ggKGUpIHsgLyogZW1wdHkgKi8gfVxuICBpZiAoJ2dldCcgaW4gQXR0cmlidXRlcyB8fCAnc2V0JyBpbiBBdHRyaWJ1dGVzKSB0aHJvdyBUeXBlRXJyb3IoJ0FjY2Vzc29ycyBub3Qgc3VwcG9ydGVkIScpO1xuICBpZiAoJ3ZhbHVlJyBpbiBBdHRyaWJ1dGVzKSBPW1BdID0gQXR0cmlidXRlcy52YWx1ZTtcbiAgcmV0dXJuIE87XG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///304\n")},function(module,exports,__webpack_require__){eval("var isObject = __webpack_require__(87);\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzA1LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19hbi1vYmplY3QuanM/ZTRhZSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIGlmICghaXNPYmplY3QoaXQpKSB0aHJvdyBUeXBlRXJyb3IoaXQgKyAnIGlzIG5vdCBhbiBvYmplY3QhJyk7XG4gIHJldHVybiBpdDtcbn07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///305\n")},function(module,exports,__webpack_require__){eval("module.exports = !__webpack_require__(88) && !__webpack_require__(123)(function () {\n  return Object.defineProperty(__webpack_require__(307)('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzA2LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19pZTgtZG9tLWRlZmluZS5qcz83OTRiIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gIXJlcXVpcmUoJy4vX2Rlc2NyaXB0b3JzJykgJiYgIXJlcXVpcmUoJy4vX2ZhaWxzJykoZnVuY3Rpb24gKCkge1xuICByZXR1cm4gT2JqZWN0LmRlZmluZVByb3BlcnR5KHJlcXVpcmUoJy4vX2RvbS1jcmVhdGUnKSgnZGl2JyksICdhJywgeyBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIDc7IH0gfSkuYSAhPSA3O1xufSk7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///306\n")},function(module,exports,__webpack_require__){eval("var isObject = __webpack_require__(87);\nvar document = __webpack_require__(86).document;\n// typeof document.createElement is 'object' in old IE\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzA3LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19kb20tY3JlYXRlLmpzPzFlYzkiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7XG52YXIgZG9jdW1lbnQgPSByZXF1aXJlKCcuL19nbG9iYWwnKS5kb2N1bWVudDtcbi8vIHR5cGVvZiBkb2N1bWVudC5jcmVhdGVFbGVtZW50IGlzICdvYmplY3QnIGluIG9sZCBJRVxudmFyIGlzID0gaXNPYmplY3QoZG9jdW1lbnQpICYmIGlzT2JqZWN0KGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQpIHtcbiAgcmV0dXJuIGlzID8gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChpdCkgOiB7fTtcbn07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///307\n")},function(module,exports,__webpack_require__){eval("// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = __webpack_require__(87);\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzA4LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL190by1wcmltaXRpdmUuanM/MWJjMyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyA3LjEuMSBUb1ByaW1pdGl2ZShpbnB1dCBbLCBQcmVmZXJyZWRUeXBlXSlcbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xuLy8gaW5zdGVhZCBvZiB0aGUgRVM2IHNwZWMgdmVyc2lvbiwgd2UgZGlkbid0IGltcGxlbWVudCBAQHRvUHJpbWl0aXZlIGNhc2Vcbi8vIGFuZCB0aGUgc2Vjb25kIGFyZ3VtZW50IC0gZmxhZyAtIHByZWZlcnJlZCB0eXBlIGlzIGEgc3RyaW5nXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCwgUykge1xuICBpZiAoIWlzT2JqZWN0KGl0KSkgcmV0dXJuIGl0O1xuICB2YXIgZm4sIHZhbDtcbiAgaWYgKFMgJiYgdHlwZW9mIChmbiA9IGl0LnRvU3RyaW5nKSA9PSAnZnVuY3Rpb24nICYmICFpc09iamVjdCh2YWwgPSBmbi5jYWxsKGl0KSkpIHJldHVybiB2YWw7XG4gIGlmICh0eXBlb2YgKGZuID0gaXQudmFsdWVPZikgPT0gJ2Z1bmN0aW9uJyAmJiAhaXNPYmplY3QodmFsID0gZm4uY2FsbChpdCkpKSByZXR1cm4gdmFsO1xuICBpZiAoIVMgJiYgdHlwZW9mIChmbiA9IGl0LnRvU3RyaW5nKSA9PSAnZnVuY3Rpb24nICYmICFpc09iamVjdCh2YWwgPSBmbi5jYWxsKGl0KSkpIHJldHVybiB2YWw7XG4gIHRocm93IFR5cGVFcnJvcihcIkNhbid0IGNvbnZlcnQgb2JqZWN0IHRvIHByaW1pdGl2ZSB2YWx1ZVwiKTtcbn07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///308\n")},function(module,exports){eval("module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzA5LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19wcm9wZXJ0eS1kZXNjLmpzP2FlYmQiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoYml0bWFwLCB2YWx1ZSkge1xuICByZXR1cm4ge1xuICAgIGVudW1lcmFibGU6ICEoYml0bWFwICYgMSksXG4gICAgY29uZmlndXJhYmxlOiAhKGJpdG1hcCAmIDIpLFxuICAgIHdyaXRhYmxlOiAhKGJpdG1hcCAmIDQpLFxuICAgIHZhbHVlOiB2YWx1ZVxuICB9O1xufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///309\n")},function(module,exports){eval("var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzEwLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19oYXMuanM/MDdlMyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgaGFzT3duUHJvcGVydHkgPSB7fS5oYXNPd25Qcm9wZXJ0eTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0LCBrZXkpIHtcbiAgcmV0dXJuIGhhc093blByb3BlcnR5LmNhbGwoaXQsIGtleSk7XG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///310\n")},function(module,exports,__webpack_require__){eval("/* WEBPACK VAR INJECTION */(function(process) {// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe =\n    /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\nvar splitPath = function(filename) {\n  return splitPathRe.exec(filename).slice(1);\n};\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function(path) {\n  var result = splitPath(path),\n      root = result[0],\n      dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.substr(0, dir.length - 1);\n  }\n\n  return root + dir;\n};\n\n\nexports.basename = function(path, ext) {\n  var f = splitPath(path)[2];\n  // TODO: make this comparison case-insensitive on windows?\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\n\nexports.extname = function(path) {\n  return splitPath(path)[3];\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(312)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///311\n")},function(module,exports){eval("// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///312\n")},function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: ./node_modules/loglevel/lib/loglevel.js\nvar loglevel = __webpack_require__(0);\nvar loglevel_default = /*#__PURE__*/__webpack_require__.n(loglevel);\n\n// CONCATENATED MODULE: ./src/logLevels.js\n\nvar a = loglevel_default.a.getLogger('address-allocation');\nvar b = loglevel_default.a.getLogger('Bus');\nvar c = loglevel_default.a.getLogger('MessageBus');\nvar d = loglevel_default.a.getLogger('CoreDiscovery');\nvar e = loglevel_default.a.getLogger('StorageManager');\nvar f = loglevel_default.a.getLogger('HypertyResourcesStorage');\nvar g = loglevel_default.a.getLogger('IdentityModule');\nvar h = loglevel_default.a.getLogger('PEP');\nvar logLevels_i = loglevel_default.a.getLogger('P2PConnectionResolve');\nvar j = loglevel_default.a.getLogger('Registry');\nvar k = loglevel_default.a.getLogger('RuntimeUA');\nvar l = loglevel_default.a.getLogger('Loader');\nvar m = loglevel_default.a.getLogger('Descriptors');\nvar n = loglevel_default.a.getLogger('DataObjectsStorage');\nvar o = loglevel_default.a.getLogger('Subscription');\nvar p = loglevel_default.a.getLogger('SubscriptionManager');\nvar q = loglevel_default.a.getLogger('ObserverObject');\nvar r = loglevel_default.a.getLogger('ReporterObject');\nvar s = loglevel_default.a.getLogger('SynSubscription');\nvar t = loglevel_default.a.getLogger('SyncherManager');\nvar u = loglevel_default.a.getLogger('IdentityHandler');\nvar v = loglevel_default.a.getLogger('CryptoManager');\nvar x = loglevel_default.a.getLogger('Pipeline');\nvar f1 = loglevel_default.a.getLogger('Syncher');\nvar f2 = loglevel_default.a.getLogger('RuntimeCatalogue');\n\n/**\n  0 actual logging methods, ordered and available as:\n\n      0 - log.trace(msg)\n      1 - log.debug(msg)\n      2 - log.info(msg)\n      3 - log.warn(msg)\n      4 - log.error(msg)\n\n  log.log(msg) is also available, as an alias for log.debug(msg), to improve compatibility with console, and make migration easier.\n\n  Exact output formatting of these will depend on the console available in the current context of your application. For example, many environments will include a full stack trace with all trace() calls, and icons or similar to highlight other calls.\n\n  These methods should never fail in any environment, even if no console object is currently available, and should always fall back to an available log method even if the specific method called (e.g. warn) isn't available.\n\n  Be aware that all this means that these method won't necessarily always produce exactly the output you expect in every environment; loglevel only guarantees that these methods will never explode on you, and that it will call the most relevant method it can find, with your argument. Firefox is a notable example here: due to a current Firefox bug log.trace(msg) calls in Firefox will print only the stacktrace, and won't include any passed message arguments.\n\n*/\n// address-allocation\n\na.setLevel(0); // Bus\n\nb.setLevel(3); // MessageBus\n\nc.setLevel(3); // CoreDiscovery\n\nd.setLevel(5); // StorageManager\n\ne.setLevel(0); // HypertyResourcesStorage\n\nf.setLevel(3); // IdentityModule\n\ng.setLevel(0); // PEP\n\nh.setLevel(3); // P2PConnectionResolve\n\nlogLevels_i.setLevel(3); // Registry\n\nj.setLevel(0); // RuntimeUA\n\nk.setLevel(0); // Loader\n\nl.setLevel(0); // Descriptors\n\nm.setLevel(3); // DataObjectsStorage\n\nn.setLevel(0); // Subscription\n\no.setLevel(3); // SubscriptionManager\n\np.setLevel(3); // ObserverObject\n\nq.setLevel(0); // ReporterObject\n\nr.setLevel(0); // SynSubscription\n\ns.setLevel(3); // SyncherManager\n\nt.setLevel(0); // IdentityHandler\n\nu.setLevel(3); // CryptoManager\n\nv.setLevel(0); // Pipeline\n\nx.setLevel(0); // Syncher\n\nf1.setLevel(0); // Syncher DataObjectObserver\n\nf1.setLevel(0); // RuntimeCatalogue\n\nf2.setLevel(0);\n// CONCATENATED MODULE: ./src/runtime/runtimeUtils.js\nvar runtimeUtils = {\n  runtimeDescriptor: {},\n  runtimeCapabilities: {\n    constraints: {}\n  }\n};\n// CONCATENATED MODULE: ./src/utils/utils.js\n/**\n* Copyright 2016 PT Inovação e Sistemas SA\n* Copyright 2016 INESC-ID\n* Copyright 2016 QUOBIS NETWORKS SL\n* Copyright 2016 FRAUNHOFER-GESELLSCHAFT ZUR FOERDERUNG DER ANGEWANDTEN FORSCHUNG E.V\n* Copyright 2016 ORANGE SA\n* Copyright 2016 Deutsche Telekom AG\n* Copyright 2016 Apizee\n* Copyright 2016 TECHNISCHE UNIVERSITAT BERLIN\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n**/\n\n/**\n * Support module with some functions will be useful\n * @module utils\n */\n\n/**\n * @typedef divideURL\n * @type Object\n * @property {string} type The type of URL\n * @property {string} domain The domain of URL\n * @property {string} identity The identity of URL\n */\n\n/**\n * Divide an url in type, domain and identity\n * @param  {URL.URL} url - url address\n * @return {divideURL} the result of divideURL\n */\nfunction divideURL(url) {\n  function recurse(value) {\n    var regex = /([a-zA-Z-]*)(:\\/\\/(?:\\.)?|:)([-a-zA-Z0-9@:%._+~#=]{2,256})([-a-zA-Z0-9@:%._+~#=/]*)/gi;\n    var subst = '$1,$3,$4';\n    var parts = value.replace(regex, subst).split(',');\n    return parts;\n  }\n\n  var parts = recurse(url); // If the url has no scheme\n\n  if (parts[0] === url && !parts[0].includes('@')) {\n    var _result = {\n      type: '',\n      domain: url,\n      identity: ''\n    };\n    console.warn('[DivideURL] DivideURL don\\'t support url without scheme. Please review your url address', url);\n    return _result;\n  } // check if the url has the scheme and includes an @\n\n\n  if (parts[0] === url && parts[0].includes('@')) {\n    var scheme = parts[0] === url ? 'smtp' : parts[0];\n    parts = recurse(scheme + '://' + parts[0]);\n  } // if the domain includes an @, divide it to domain and identity respectively\n\n\n  if (parts[1].includes('@')) {\n    parts[2] = parts[0] + '://' + parts[1];\n    parts[1] = parts[1].substr(parts[1].indexOf('@') + 1);\n  }\n  /*else if (parts[2].includes('/')) {\n  parts[2] = parts[2].substr(parts[2].lastIndexOf('/')+1);\n  }*/\n\n\n  var result = {\n    type: parts[0],\n    domain: parts[1],\n    identity: parts[2]\n  };\n  return result;\n}\n/**\n * Check if an Object is empty\n * @param  {Object} object Object to be checked\n * @return {Boolean}       status of Object, empty or not (true|false);\n */\n\nfunction emptyObject(object) {\n  return Object.keys(object).length > 0 ? false : true;\n}\nfunction secondsSinceEpoch() {\n  return Math.floor(Date.now() / 1000);\n}\n/**\n * Make a COPY of the original data\n * @param  {Object}  obj - object to be cloned\n * @return {Object}\n */\n\nfunction deepClone(obj) {\n  //TODO: simple but inefficient JSON deep clone...\n  if (obj) return JSON.parse(JSON.stringify(obj));\n}\nfunction removePathFromURL(url) {\n  var splitURL = url.split('/');\n  return splitURL[0] + '//' + splitURL[2] + '/' + splitURL[3];\n}\n/**\n * Obtains the user URL that corresponds to a given email\n * @param  {string} userEmail The user email\n * @return {URL.URL} userURL The user URL\n */\n\nfunction getUserURLFromEmail(userEmail) {\n  var indexOfAt = userEmail.indexOf('@');\n  return 'user://' + userEmail.substring(indexOfAt + 1, userEmail.length) + '/' + userEmail.substring(0, indexOfAt);\n}\n/**\n * Obtains the user email that corresponds to a given URL\n * @param  {URL.URL} userURL The user URL\n * @return {string} userEmail The user email\n */\n\nfunction getUserEmailFromURL(userURL) {\n  var url = divideURL(userURL);\n  return url.identity.replace('/', '') + '@' + url.domain; // identity field has '/exampleID' instead of 'exampleID'\n}\n/**\n * Check if the user identifier is already in the URL format, if not, convert to URL format\n * @param  {string}   identifier  user identifier\n * @return {string}   userURL    the user URL\n */\n\nfunction convertToUserURL(identifier) {\n  // check if the identifier is already in the url format\n  if (identifier.substring(0, 7) === 'user://') {\n    var dividedURL = divideURL(identifier); //check if the url is well formated\n\n    if (dividedURL.domain && dividedURL.identity) {\n      return identifier;\n    } else {\n      throw 'userURL with wrong format';\n    } //if not, convert the user email to URL format\n\n  } else {\n    return getUserURLFromEmail(identifier);\n  }\n}\nfunction isDataObjectURL(url) {\n  var schemasToIgnore = ['domain-idp', 'runtime', 'domain', 'hyperty'];\n  var splitURL = url.split('://');\n  var urlSchema = splitURL[0];\n  return schemasToIgnore.indexOf(urlSchema) === -1;\n}\nfunction utils_isLegacy(url) {\n  if (url.split('@').length > 1) {\n    return true;\n  } else {\n    return false;\n  }\n}\nfunction isURL(url) {\n  return url.split('/').length >= 3;\n}\nfunction isUserURL(url) {\n  return divideURL(url).type === 'user';\n}\nfunction utils_isHypertyURL(url) {\n  return divideURL(url).type === 'hyperty';\n}\n/**\n * get information relative each component configured on runtime configuration;\n * @param  {object} configuration object with all configuration\n * @param  {string} component     string with the component to get the configuration, like, runtimeURLS, catalogueURLs, msgNodeURL, domainRegistryURL;\n * @param  {string} resource      type of resource to get, like, catalogue, runtimeUA, protocolstub, idpProxy\n * @return {object}               return an object with all configurations;\n */\n\nfunction getConfigurationResources(configuration, component, resource) {\n  var objectResource = configuration[component];\n  var resourceType = objectResource[resource];\n  return resourceType;\n}\n/**\n * Build a full url with the runtime configuration;\n * @param  {object} configuration object with all configuration\n * @param  {string} component     string with the component to get the configuration, like, runtimeURLS, catalogueURLs, msgNodeURL, domainRegistryURL;\n * @param  {string} resource      type of resource to get, like, catalogue, runtimeUA, protocolstub, idpProxy\n * @param  {string} type          resource to get, like a hyperty name or protocolstub name;\n * @param  {boolean} useFallback  if true the function will check if have a fallback url;\n * @return {string}               partial url to contact the resource;\n */\n\nfunction buildURL(configuration, component, resource, type) {\n  var useFallback = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n  var objectResource = configuration[component];\n  var url;\n\n  if (!objectResource.hasOwnProperty(resource)) {\n    throw Error('The configuration ' + JSON.stringify(objectResource, '', 2) + ' don\\'t have the ' + resource + ' resource you are looking for');\n  }\n\n  var resourceType = objectResource[resource];\n\n  if (type) {\n    url = resourceType.prefix + configuration.domain + resourceType.suffix + type;\n\n    if (resourceType.hasOwnProperty('fallback') && useFallback) {\n      if (resourceType.fallback.indexOf('%domain%')) {\n        url = resourceType.fallback.replace(/(%domain%)/g, configuration.domain) + type;\n      } else {\n        url = resourceType.fallback + type;\n      }\n    }\n  } else {\n    url = resourceType.prefix + configuration.domain + resourceType.suffix;\n  } // console.log(url);\n\n\n  return url;\n}\n/**\n * Generate a Global Unique ID\n *\n * @returns String;\n */\n\nfunction generateGUID() {\n  function s4() {\n    return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n  }\n\n  return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\n}\nfunction getUserIdentityDomain(url) {\n  var dividedURL = divideURL(url);\n  var splitedDomain = dividedURL.domain.split('.');\n  var splitedLength = splitedDomain.length;\n\n  if (splitedLength == 1) {\n    return splitedDomain[splitedLength - 1];\n  }\n\n  var domain = splitedDomain[splitedLength - 2] + '.' + splitedDomain[splitedLength - 1];\n  return domain;\n}\n/**\n * Check if URL is from a backend service\n * @param  {string} url     URL to be processed\n * @return {boolean}\n */\n\nfunction isBackendServiceURL(url) {\n  var dividedURL = divideURL(url);\n  var splitedDomain = dividedURL.domain.split('.');\n  var backendSchemes = ['domain', 'global', 'domain-idp']; // should be defined in the runtime configuration\n\n  var backendSubDomains = ['registry', 'msg-node']; // should be defined in the runtime configuration\n\n  var subDomain;\n\n  if (splitedDomain.length > 1) {\n    subDomain = splitedDomain.filter(function (item) {\n      return backendSubDomains.indexOf(item) !== -1;\n    })[0];\n  }\n\n  if (subDomain && backendSubDomains.indexOf(subDomain) !== -1) {\n    return true;\n  }\n\n  if (dividedURL.type) {\n    return backendSchemes.indexOf(dividedURL.type) !== -1;\n  }\n\n  return false;\n}\nfunction divideEmail(email) {\n  var indexOfAt = email.indexOf('@');\n  var result = {\n    username: email.substring(0, indexOfAt),\n    domain: email.substring(indexOfAt + 1, email.length)\n  };\n  return result;\n}\nfunction utils_assign(obj, keyPath, value) {\n  if (!obj) obj = {};\n  if (typeof keyPath === 'string') keyPath = parseAttributes(keyPath);\n  var lastKeyIndex = keyPath.length - 1;\n\n  for (var i = 0; i < lastKeyIndex; ++i) {\n    var key = keyPath[i];\n\n    if (!(key in obj)) {\n      obj[key] = {};\n    }\n\n    obj = obj[key];\n  }\n\n  obj[keyPath[lastKeyIndex]] = value;\n}\nfunction splitObjectURL(dataObjectURL) {\n  console.info('[utils - splitObjectURL]: ', dataObjectURL);\n  var splitedURL = dataObjectURL.split('/');\n  var url = splitedURL[0] + '//' + splitedURL[2] + '/' + splitedURL[3];\n  var resource = splitedURL[5];\n  var result = {\n    url: url,\n    resource: resource\n  };\n  console.info('[utils - splitObjectURL]: ', result);\n  return result;\n}\nfunction checkAttribute(path) {\n  var regex = /((([a-zA-Z]+):\\/\\/([0-9a-zA-Z][-\\w]*[0-9a-zA-Z]\\.)+[a-zA-Z]{2,9})\\/[a-zA-Z0-9.]+@[a-zA-Z0-9]+(-)?[a-zA-Z0-9]+(\\.)?[a-zA-Z0-9]{2,10}?\\.[a-zA-Z]{2,10})(.+(?=.identity))?/gm;\n  var list = [];\n  var _final = [];\n  var test = path.match(regex);\n\n  if (test == null) {\n    _final = path.split('.');\n  } else {\n    var m;\n\n    while ((m = regex.exec(path)) !== null) {\n      // This is necessary to avoid infinite loops with zero-width matches\n      if (m.index === regex.lastIndex) {\n        regex.lastIndex++;\n      } // The result can be accessed through the `m`-variable.\n\n\n      m.forEach(function (match, groupIndex) {\n        if (groupIndex === 0) {\n          list.push(match);\n        }\n      });\n    }\n\n    var result;\n    list.forEach(function (url) {\n      result = path.replace(url, '*-*');\n      _final = result.split('.').map(function (item) {\n        if (item === '*-*') {\n          return url;\n        }\n\n        return item;\n      });\n    });\n  }\n\n  console.log('[RuntimeCore.Utils.checkAttribute]', _final);\n  return _final;\n}\nfunction parseAttributes(path) {\n  var regex = /([0-9a-zA-Z][-\\w]*):\\/\\//g;\n  var string3 = 'identity';\n\n  if (!path.includes('://')) {\n    return path.split('.');\n  } else {\n    var string1 = path.split(regex)[0];\n    var array1 = string1.split('.');\n    var string2 = path.replace(string1, '');\n\n    if (path.includes(string3)) {\n      var array2 = string2.split(string3 + '.');\n      console.log('array2 ' + array2);\n      string2 = array2[0].slice('.', -1);\n      array2 = array2[1].split('.');\n      array1.push(string2, string3);\n      array1 = array1.concat(array2);\n    } else {\n      array1.push(string2);\n    }\n\n    return array1.filter(Boolean);\n  }\n}\nfunction isEmpty(obj) {\n  for (var prop in obj) {\n    if (obj.hasOwnProperty(prop)) {\n      return false;\n    }\n  }\n\n  return JSON.stringify(obj) === JSON.stringify({});\n}\nfunction chatkeysToStringCloner(sessionKeys) {\n  var dataObjectSessionKeysClone = {};\n  var fields = Object.keys(sessionKeys);\n\n  if (fields) {\n    try {\n      for (var i = 0; i < fields.length; i++) {\n        var field = fields[i];\n        dataObjectSessionKeysClone[field] = {};\n        dataObjectSessionKeysClone[field].sessionKey = sessionKeys[field].sessionKey.toString();\n        dataObjectSessionKeysClone[field].isToEncrypt = sessionKeys[field].isToEncrypt;\n      }\n    } catch (err) {\n      console.error('_chatkeysToStringCloner:err', err);\n    }\n  }\n\n  return dataObjectSessionKeysClone;\n}\nfunction chatkeysToArrayCloner(sessionKeys) {\n  var dataObjectSessionKeysClone = {};\n  var fields = Object.keys(sessionKeys);\n\n  if (fields) {\n    try {\n      for (var i = 0; i < fields.length; i++) {\n        var field = fields[i];\n        dataObjectSessionKeysClone[field] = {};\n        var arrayValues = JSON.parse('[' + sessionKeys[field].sessionKey + ']');\n        dataObjectSessionKeysClone[field].sessionKey = new Uint8Array(arrayValues);\n        dataObjectSessionKeysClone[field].isToEncrypt = sessionKeys[field].isToEncrypt;\n      }\n    } catch (err) {\n      console.error('_chatkeysToArrayCloner:err', err);\n    }\n  }\n\n  return dataObjectSessionKeysClone;\n}\nfunction parseMessageURL(URL) {\n  var splitedToURL = URL.split('/');\n\n  if (splitedToURL.length <= 6) {\n    return splitedToURL[0] + '//' + splitedToURL[2] + '/' + splitedToURL[3];\n  } else {\n    return splitedToURL[0] + '//' + splitedToURL[2] + '/' + splitedToURL[3] + '/' + splitedToURL[4];\n  }\n}\nfunction availableSpace(usage, quota) {\n  var available = (usage / quota).toFixed(2);\n  return {\n    quota: quota,\n    usage: usage,\n    percent: Number(available)\n  };\n}\n/**\n* Encodes a JS object to base 64 encode\n* @param   {Object}    value    byteArray value\n* @return  {string}   encoded value\n*/\n\nfunction encode(value) {\n  try {\n    var stringValue = stringify(value);\n    return btoa(stringValue);\n  } catch (err) {\n    console.error('[Utils.encode:err] ' + err);\n    throw err;\n  }\n}\n/**\n  * Decode a base64 string to object\n  * @param   {string_b64}    value    value encoded in base 64\n  * @return  {Object} decodedValue\n  */\n\nfunction decode(value) {\n  try {\n    return JSON.parse(atob(value));\n  } catch (err) {\n    console.log('[Utils.decode:err] ' + err);\n    throw err;\n  }\n}\n/**\n* Decode a base64 string to Uint8Array\n* @param   {string_b64}    value    byteArray value\n* @return  {Uint8Array}   encoded value\n*/\n\nfunction decodeToUint8Array(value) {\n  try {\n    return new Uint8Array(decode(value));\n  } catch (err) {\n    console.error('[Utils.decodeToUint8Array:err] ' + err);\n    throw err;\n  }\n}\n/**\n* Converts a JS object to string\n* NOTE: Special conversion for Uint8Arrays\n* @param   {Object}    value    byteArray value\n* @return  {Uint8Array}   encoded value\n*/\n\nfunction stringify(value) {\n  try {\n    var stringValue;\n\n    if (value.constructor === Uint8Array) {\n      stringValue = '[' + value.toString() + ']'; // the [] is for JSON.parse compatibility\n    } else {\n      stringValue = JSON.stringify(value);\n    }\n\n    return stringValue;\n  } catch (err) {\n    console.error('[Utils.stringify:err] ' + err);\n    throw err;\n  }\n}\n/**\n* Converts a stringified object to object\n* @param   {String}    value    byteArray value\n* @return  {Object}   encoded value\n*/\n\nfunction parse(value) {\n  try {\n    return JSON.parse(value);\n  } catch (err) {\n    console.error('[Utils.parse:err]' + err);\n    console.trace();\n    console.error('That that cause the error:', value);\n    throw err;\n  }\n}\n/**\n* Converts a stringified object to object\n* @param   {String}    value    byteArray value\n* @return  {Uint8Array}   encoded value\n*/\n\nfunction parseToUint8Array(value) {\n  try {\n    return new Uint8Array(parse(value));\n  } catch (err) {\n    console.error('[Utils.parseToUint8Array:err]' + err);\n    throw err;\n  }\n}\n// EXTERNAL MODULE: ./node_modules/proxy-observe/index.js\nvar proxy_observe = __webpack_require__(89);\n\n// CONCATENATED MODULE: ./src/syncher/ProxyObject.js\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\nvar ProxyObject_objectType = {\n  ARRAY: '[object Array]',\n  OBJECT: '[object Object]'\n};\n/**\n * @access private\n * Main class that maintains a JSON object, and observes changes in this object, recursively.\n * Internal objects and arrays are also observed.\n */\n\nvar ProxyObject_SyncObject =\n/*#__PURE__*/\nfunction () {\n  function SyncObject(initialData) {\n    _classCallCheck(this, SyncObject);\n\n    var _this = this;\n\n    _this._observers = [];\n    _this._filters = {};\n    this._data = initialData || {};\n\n    this._internalObserve(this._data);\n  }\n\n  _createClass(SyncObject, [{\n    key: \"observe\",\n    value: function observe(callback) {\n      this._observers.push(callback);\n    }\n  }, {\n    key: \"find\",\n    value: function find(path) {\n      var list = parseAttributes(path);\n      return this._findWithSplit(list);\n    }\n  }, {\n    key: \"findBefore\",\n    value: function findBefore(path) {\n      var result = {};\n      var list = parseAttributes(path);\n      result.last = list.pop();\n      result.obj = this._findWithSplit(list);\n      return result;\n    }\n  }, {\n    key: \"_findWithSplit\",\n    value: function _findWithSplit(list) {\n      var obj = this._data;\n      list.forEach(function (value) {\n        obj = obj[value];\n      });\n      return obj;\n    }\n  }, {\n    key: \"_internalObserve\",\n    value: function _internalObserve(object) {\n      var _this2 = this;\n\n      var handler = function handler(changeset) {\n        changeset.every(function (change) {\n          _this2._onChanges(change);\n        });\n      };\n\n      this._data = Object.deepObserve(object, handler);\n    }\n  }, {\n    key: \"_fireEvent\",\n    value: function _fireEvent(event) {\n      this._observers.forEach(function (callback) {\n        callback(event);\n      });\n    }\n  }, {\n    key: \"_onChanges\",\n    value: function _onChanges(change) {\n      var obj = change.object;\n      var objType;\n\n      if (obj.constructor === Object) {\n        objType = ObjectType.OBJECT;\n      }\n\n      if (obj.constructor === Array) {\n        objType = ObjectType.ARRAY;\n      }\n\n      var fieldString = change.keypath; // console.log('Field:', fieldString);\n      // console.log('type:', change.type);\n      //let oldValue = change.oldValue;\n\n      var newValue = obj[change.name]; // console.info(change.type + ' | Field: ' + fieldString + ' | New Value:', JSON.stringify(newValue), fieldString.includes('length'));\n\n      if (change.type === 'update' && !fieldString.includes('.length')) {\n        this._fireEvent({\n          cType: ChangeType.UPDATE,\n          oType: objType,\n          field: fieldString,\n          data: newValue\n        });\n      }\n\n      if (change.type === 'add') {\n        this._fireEvent({\n          cType: ChangeType.ADD,\n          oType: objType,\n          field: fieldString,\n          data: newValue\n        });\n      }\n\n      if (change.type === 'delete') {\n        this._fireEvent({\n          cType: ChangeType.REMOVE,\n          oType: objType,\n          field: fieldString\n        });\n      }\n    }\n  }, {\n    key: \"data\",\n    get: function get() {\n      return this._data;\n    }\n  }]);\n\n  return SyncObject;\n}();\n\nvar ChangeType = {\n  UPDATE: 'update',\n  ADD: 'add',\n  REMOVE: 'remove'\n};\nvar ObjectType = {\n  OBJECT: 'object',\n  ARRAY: 'array'\n};\n/* harmony default export */ var ProxyObject = (ProxyObject_SyncObject);\n// CONCATENATED MODULE: ./src/syncher/DataObjectChild.js\nfunction DataObjectChild_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction DataObjectChild_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction DataObjectChild_createClass(Constructor, protoProps, staticProps) { if (protoProps) DataObjectChild_defineProperties(Constructor.prototype, protoProps); if (staticProps) DataObjectChild_defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n* Copyright 2016 PT Inovação e Sistemas SA\n* Copyright 2016 INESC-ID\n* Copyright 2016 QUOBIS NETWORKS SL\n* Copyright 2016 FRAUNHOFER-GESELLSCHAFT ZUR FOERDERUNG DER ANGEWANDTEN FORSCHUNG E.V\n* Copyright 2016 ORANGE SA\n* Copyright 2016 Deutsche Telekom AG\n* Copyright 2016 Apizee\n* Copyright 2016 TECHNISCHE UNIVERSITAT BERLIN\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n**/\n// Log System\n\nvar DataObjectChild_log = loglevel[\"getLogger\"]('DataObjectChild');\n\n\n/**\n * The class returned from the DataObject addChildren call or from onAddChildren if remotely created.\n */\n\nvar DataObjectChild_DataObjectChild\n/* implements SyncStatus */\n=\n/*#__PURE__*/\nfunction () {\n  /* private\n   ----event handlers----\n  _onResponseHandler: (event) => void\n  */\n\n  /**\n   * @ignore\n   * Should not be used directly by Hyperties. It's called by the DataObject.addChild\n   */\n  function DataObjectChild(input) {\n    DataObjectChild_classCallCheck(this, DataObjectChild);\n\n    var _this = this;\n\n    function throwMandatoryParmMissingError(par) {\n      throw '[DataObjectChild] ' + par + ' mandatory parameter is missing';\n    }\n\n    input.parent ? _this._parent = input.parent : throwMandatoryParmMissingError('parent');\n    input.url ? _this._url = input.url : throwMandatoryParmMissingError('url');\n    input.created ? _this._created = input.created : throwMandatoryParmMissingError('created');\n    input.reporter ? _this._reporter = input.reporter : throwMandatoryParmMissingError('reporter');\n    input.runtime ? _this._runtime = input.runtime : throwMandatoryParmMissingError('runtime');\n    input.schema ? _this._schema = input.schema : throwMandatoryParmMissingError('schema');\n    input.parentObject ? _this._parentObject = input.parentObject : throwMandatoryParmMissingError('parentObject');\n    if (input.name) _this._name = input.name;\n    if (input.description) _this._description = input.description;\n    if (input.tags) _this._tags = input.tags;\n    if (input.resources) _this._resources = input.resources;\n    if (input.observerStorage) _this._observerStorage = input.observerStorage;\n    if (input.publicObservation) _this._publicObservation = input.publicObservation;\n    _this._childId = input.url;\n\n    if (input.data) {\n      _this._syncObj = new ProxyObject(input.data);\n    } else {\n      _this._syncObj = new ProxyObject({});\n    }\n\n    DataObjectChild_log.log('[DataObjectChild -  Constructor] - ', _this._syncObj);\n    _this._bus = _this._parentObject._bus;\n    _this._owner = _this._parentObject._owner;\n\n    _this._allocateListeners();\n\n    _this._metadata = input; // delete _this._metadata.data;\n\n    delete _this._metadata.parentObject;\n    _this._sharingStatus = false;\n  }\n\n  DataObjectChild_createClass(DataObjectChild, [{\n    key: \"share\",\n\n    /**\n     * This function is used to share the child Object among authorised Hyperties\n     * @param  {boolean}     reporter  If true the child object is only shared to Parent reporter\n     * @return {Promise<JSON>}        It returns a promise with the sharing results.\n     */\n    value: function share(toReporter) {\n      var _this = this;\n\n      _this._sharingStatus = new Promise(function (resolve, reject) {\n        var to;\n        var reporter = toReporter;\n\n        if (reporter) {\n          to = _this.metadata.parent;\n        } else to = _this.metadata.parent + '/children/';\n\n        var childValue = _this.metadata;\n        childValue.data = _this.data; //FLOW-OUT: this message will be sent directly to a resource child address: MessageBus\n\n        var requestMsg = {\n          type: 'create',\n          from: _this.metadata.reporter,\n          to: to,\n          body: {\n            resource: childValue.url,\n            value: childValue\n          }\n        };\n\n        if (_this.identity) {\n          requestMsg.body.identity = _this.identity;\n        } //to be used to disable mutual authentication for legacy users\n\n\n        if (_this._parentObject.data.hasOwnProperty('mutual')) requestMsg.body.mutual = _this._parentObject.data.mutual;\n\n        if (_this._parentObject.metadata.reporter === _this.metadata.reporter) {\n          _this._bus.postMessage(deepClone(requestMsg));\n\n          return resolve();\n        } else {\n          var callback = function callback(reply) {\n            if (reply.to === _this._reporter) {\n              _this._bus.removeResponseListener(requestMsg.from, reply.id);\n\n              DataObjectChild_log.log('[Syncher.DataObjectChild.share] Parent reporter reply ', reply);\n              var result = {\n                code: reply.body && reply.body.code ? reply.body.code : 500,\n                desc: reply.body && reply.body.desc ? reply.body.desc : 'Unknown'\n              };\n\n              if (reply.body.code < 300) {\n                return resolve(result);\n              } else return reject(result);\n            }\n          };\n\n          var id = _this._bus.postMessage(deepClone(requestMsg), callback, false);\n\n          setTimeout(function () {\n            // If Reporter does  not reply the promise is rejected\n            _this._bus.removeResponseListener(requestMsg.from, id);\n\n            var result = {\n              code: 408,\n              desc: 'timout'\n            };\n            return reject(result);\n          }, 3000);\n        }\n      });\n    }\n    /**\n       * This function is used to share the child Object among authorised Hyperties\n       * @param  {boolean}     reporter  If true the child object is only shared to Parent reporter\n       * @return {Promise<JSON>}        It returns a promise with the sharing results.\n       */\n\n  }, {\n    key: \"store\",\n    value: function store() {\n      var _this = this;\n\n      var child = {};\n      var key = _this.metadata.children + '.' + _this.metadata.url;\n      child.value = _this.metadata;\n      child.identity = _this.identity;\n      var msg = {\n        from: _this.metadata.reporter,\n        to: _this._parentObject._syncher._subURL,\n        type: 'create',\n        body: {\n          resource: _this.metadata.parent,\n          attribute: key,\n          value: child\n        }\n      };\n      DataObjectChild_log.log('[DataObjectChild.store]:', msg);\n\n      _this._bus.postMessage(msg);\n    }\n  }, {\n    key: \"_allocateListeners\",\n    value: function _allocateListeners() {\n      var _this = this; //this is only needed for children reporters\n\n\n      if (_this._reporter === _this._owner) {\n        _this._listener = _this._bus.addListener(_this._reporter, function (msg) {\n          if (msg.type === 'response' && msg.id === _this._msgId) {\n            DataObjectChild_log.log('DataObjectChild.onResponse:', msg);\n\n            _this._onResponse(msg);\n          }\n        });\n      }\n    }\n  }, {\n    key: \"_releaseListeners\",\n    value: function _releaseListeners() {\n      var _this = this;\n\n      if (_this._listener) {\n        _this._listener.remove();\n      }\n    }\n    /**\n     * Release and delete object data\n     */\n\n  }, {\n    key: \"delete\",\n    value: function _delete() {\n      var _this = this;\n\n      _this._releaseListeners(); //TODO: send delete message ?\n      // nothing to be done\n      // return new Promise((resolve) => {\n      //   log.log('[DataObjectChild.delete]');\n      //   resolve();\n      // });\n\n    }\n    /**\n     * All Metadata about the Child Data Object\n     * @type {Object} -\n     */\n\n  }, {\n    key: \"onChange\",\n\n    /**\n     * Register the change listeners sent by the reporter child\n     * @param {function(event: MsgEvent)} callback\n     */\n    value: function onChange(callback) {\n      this._syncObj.observe(function (event) {\n        DataObjectChild_log.log('[DataObjectChild - observer] - ', event);\n        callback(event);\n      });\n    }\n    /**\n     * Setup the callback to process response notifications of the creates\n     * @param {function(event: MsgEvent)} callback\n     */\n\n  }, {\n    key: \"onResponse\",\n    value: function onResponse(callback) {\n      this._onResponseHandler = callback;\n    } //FLOW-IN: message received from a remote DataObject -> _onChildCreate\n\n  }, {\n    key: \"_onResponse\",\n    value: function _onResponse(msg) {\n      var _this = this;\n\n      var event = {\n        type: msg.type,\n        url: msg.body.source,\n        code: msg.body.code\n      };\n\n      if (_this._onResponseHandler) {\n        _this._onResponseHandler(event);\n      }\n    }\n  }, {\n    key: \"shareable\",\n    get: function get() {\n      var shareable = this.metadata;\n      shareable.data = this.data;\n      return shareable;\n    }\n  }, {\n    key: \"metadata\",\n    get: function get() {\n      return this._metadata;\n    }\n    /**\n     * Children ID generated on addChildren. Unique identifier\n     * @type {URL} - URL of the format <HypertyURL>#<numeric-sequence>\n     */\n\n  }, {\n    key: \"childId\",\n    get: function get() {\n      return this._childId;\n    }\n    /**\n     * Data Structure to be synchronized.\n     * @type {JSON} - JSON structure that should follow the defined schema, if any.\n     */\n\n  }, {\n    key: \"sharingStatus\",\n    get: function get() {\n      return this._sharingStatus;\n    }\n    /**\n      * Data Structure to be synchronized.\n      * @type {JSON} - JSON structure that should follow the defined schema, if any.\n      */\n\n  }, {\n    key: \"data\",\n    get: function get() {\n      return this._syncObj.data;\n    }\n    /**\n     * Set for this dataObjectChild an identity\n     * @method identity\n     * @param  {Identity} identity identity from who created the message\n     */\n\n  }, {\n    key: \"identity\",\n    set: function set(identity) {\n      this._identity = identity;\n    }\n    /**\n     * Get for this dataObjectChild an identity\n     * @method identity\n     * @return {Identity} identity from who created the message\n     */\n    ,\n    get: function get() {\n      return this._identity;\n    }\n  }]);\n\n  return DataObjectChild;\n}();\n\n/* harmony default export */ var syncher_DataObjectChild = (DataObjectChild_DataObjectChild);\n// CONCATENATED MODULE: ./src/hyperty-resource/HypertyResource.js\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction HypertyResource_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction HypertyResource_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction HypertyResource_createClass(Constructor, protoProps, staticProps) { if (protoProps) HypertyResource_defineProperties(Constructor.prototype, protoProps); if (staticProps) HypertyResource_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n* The Hyperty Resource Data Model is used to model resouces handled by Hyperties and Data Objects including chat messages, files, real time human audio and video..\n*\n*/\n// Log System\n\nvar HypertyResource_log = loglevel[\"getLogger\"]('HypertyResource');\n\n\n\nvar HypertyResource_HypertyResource =\n/*#__PURE__*/\nfunction (_DataObjectChild) {\n  _inherits(HypertyResource, _DataObjectChild);\n\n  /**\n  * HypertyResource constructor\n  *\n  * @param  {URL} localRuntimeURL RuntimeURL of local runtime\n  * @param  {URL} input.owner HypertyURL of the Hyperty handling this resource\n  * @param  {URL} input.runtime Runtime URL where this resource is hosted\n  * @param  {Bus} input.bus sandbox message bus\n  * @param  {DataObject} input.parent Parent Data Object where the HypertyResource is handled as a child\n  * @param  {Boolean} isSender indicates if parent is Reporter or an Observer\n  * @param  {Array} input optional input parameters\n  */\n  function HypertyResource(isSender, input) {\n    var _this2;\n\n    HypertyResource_classCallCheck(this, HypertyResource);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(HypertyResource).call(this, input));\n\n    var _this = _assertThisInitialized(_this2);\n\n    _this.arraybufferSizeLimit = 5242880; //above this limit content is not saved as ArrayBuffer\n\n    _this._isSender = isSender;\n    _this._localStorageURL = _this._parentObject._syncher._runtimeUrl + '/storage';\n    return _this2;\n  }\n\n  HypertyResource_createClass(HypertyResource, [{\n    key: \"save\",\n\n    /*\n    set parent(parent) {\n      let _this = this;\n      _this._parent = parent;\n    }*/\n    value: function save() {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        var msg = {\n          from: _this._owner,\n          to: _this._localStorageURL,\n          type: 'create',\n          body: {\n            value: deepClone(_this._metadata)\n          }\n        };\n\n        var callback = function callback(reply) {\n          HypertyResource_log.info('[HypertyResource.save] reply: ', reply);\n\n          _this._bus.removeResponseListener(_this._owner, reply.id);\n\n          if (reply.body.code === 200) {\n            if (reply.body.value) {\n              if (!_this._metadata.contentURL) _this._metadata.contentURL = [];\n\n              _this._metadata.contentURL.push(reply.body.value);\n            }\n\n            resolve();\n          } else reject(reply.body.code + ' ' + reply.body.desc);\n        };\n\n        msg.body.value.content = _this._content;\n\n        _this._bus.postMessage(msg, callback, false);\n      });\n    }\n    /**\n    * Function to Read HypertyResource\n    *\n    * @param  {} callback callback to be called with progress information in terms of percentage\n    * @return  {Promise}  input optional input parameters\n    */\n\n  }, {\n    key: \"read\",\n    value: function read(callback) {\n      var _this = this;\n\n      HypertyResource_log.info('[HypertyResource.read] ', this);\n      return new Promise(function (resolve, reject) {\n        if (_this.content) {\n          resolve(_this);\n        } else {\n          //TODO: use an iteration to get online runtime storages when some are offline\n          var storage = _this._getBestContentURL(_this._metadata.contentURL);\n\n          HypertyResource_log.log('Storage:', storage);\n          var msg = {\n            from: _this._owner,\n            to: storage.url,\n            type: 'read',\n            body: {\n              resource: storage.url + '/' + storage.resource,\n              p2p: true\n            }\n          };\n\n          if (_this.metadata.p2pRequester && _this.metadata.p2pHandler) {\n            msg.body.p2pRequester = _this.metadata.p2pRequester;\n            msg.body.p2pHandler = _this.metadata.p2pHandler;\n          } // get the resource first on the Local Hyperty Resource Storage;\n\n\n          _this._getBestResource(msg, callback).then(function (reply) {\n            HypertyResource_log.info('[HypertyResource] - get locally the resource:', reply);\n            resolve(_this);\n          })[\"catch\"](function (reply) {\n            HypertyResource_log.warn('[HypertyResource] - get locally the resource fail', reply); // Generate new message to not use the same id of the last one;\n\n            var msg = {\n              from: _this._owner,\n              to: storage.remoteURL,\n              type: 'read',\n              body: {\n                resource: storage.remoteURL + '/' + storage.resource,\n                p2p: true\n              }\n            };\n\n            if (_this.metadata.p2pRequester && _this.metadata.p2pHandler) {\n              msg.body.p2pRequester = _this.metadata.p2pRequester;\n              msg.body.p2pHandler = _this.metadata.p2pHandler;\n            } // get the resource on the Remote Hyperty Resource Storage;\n\n\n            _this._getBestResource(msg, callback).then(function (reply) {\n              HypertyResource_log.warn('[HypertyResource] - get remotely the resource', reply);\n              resolve(_this);\n            })[\"catch\"](function (reply) {\n              HypertyResource_log.warn('[HypertyResource] - get remotely the resource fail', reply);\n              reject(reply.body.code + ' ' + reply.body.desc);\n            });\n          });\n        }\n      });\n    }\n  }, {\n    key: \"_getBestResource\",\n    value: function _getBestResource(msg, inProgressCallback) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        var waitForResponse = setTimeout(function () {\n          // If Reporter does  not reply the promise is rejected\n          _this._bus.removeResponseListener(_this._owner, id);\n\n          msg.body.code = 408;\n          msg.body.desc = 'Response timeout';\n          return reject(msg);\n        }, 3000);\n\n        var callback = function callback(reply) {\n          HypertyResource_log.log('[HypertyResource.read] reply: ', reply);\n          var id = reply.id;\n          clearTimeout(waitForResponse);\n\n          switch (reply.body.code) {\n            case 200:\n              _this._content = reply.body.value.content; // save locally if not too big\n\n              if (reply.body.value.size < _this.arraybufferSizeLimit) {\n                _this.save();\n              }\n\n              _this._bus.removeResponseListener(_this._owner, id);\n\n              resolve(reply);\n              break;\n\n            case 183:\n              inProgressCallback(reply.body.value);\n              break;\n\n            default:\n              _this._bus.removeResponseListener(_this._owner, id);\n\n              reject(reply);\n              break;\n          }\n        };\n\n        var id = _this._bus.postMessage(msg, callback, false);\n      });\n    } // Remove Hyperty from the local storage\n\n  }, {\n    key: \"delete\",\n    value: function _delete() {\n      var _this = this;\n\n      HypertyResource_log.info('[HypertyResource.delete]', _this.metadata);\n      var msg = {\n        from: _this._owner,\n        to: _this._localStorageURL,\n        type: 'delete',\n        body: {\n          resources: _this.metadata.contentURL\n        }\n      };\n      return new Promise(function (resolve) {\n        _this._bus.postMessage(msg, function (reply) {\n          if (reply.body.code < 300) resolve(true);else resolve(false);\n        });\n      });\n    }\n  }, {\n    key: \"_getBestContentURL\",\n    value: function _getBestContentURL(contentURLList) {\n      var _this = this;\n\n      var contentURL = contentURLList[0];\n      var splitedResource = contentURL.substr(contentURL.lastIndexOf('/') + 1);\n      var url = _this._localStorageURL; // contentURL.substr(0, contentURL.lastIndexOf('/'));\n\n      var remoteResource = contentURL.substr(0, contentURL.lastIndexOf('/'));\n      return {\n        url: url,\n        resource: splitedResource,\n        remoteURL: remoteResource\n      };\n    }\n  }, {\n    key: \"resourceType\",\n    get: function get() {\n      var _this = this;\n\n      return _this.metadata.resourceType;\n    }\n  }, {\n    key: \"mimetype\",\n    get: function get() {\n      var _this = this;\n\n      return _this._metadata.type;\n    }\n  }, {\n    key: \"content\",\n    get: function get() {\n      var _this = this;\n\n      return _this._content;\n    }\n  }, {\n    key: \"contentURL\",\n    get: function get() {\n      var _this = this;\n\n      return _this._metadata.contentURL;\n    }\n  }, {\n    key: \"shareable\",\n    get: function get() {\n      var _this = this;\n\n      var shareable = _get(_getPrototypeOf(HypertyResource.prototype), \"metadata\", this);\n\n      shareable.resourceType = _this.resourceType;\n      return shareable;\n    }\n  }]);\n\n  return HypertyResource;\n}(syncher_DataObjectChild);\n\n/* harmony default export */ var hyperty_resource_HypertyResource = (HypertyResource_HypertyResource);\n// CONCATENATED MODULE: ./src/utils/ImageTools.js\nfunction ImageTools_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction ImageTools_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction ImageTools_createClass(Constructor, protoProps, staticProps) { if (protoProps) ImageTools_defineProperties(Constructor.prototype, protoProps); if (staticProps) ImageTools_defineProperties(Constructor, staticProps); return Constructor; }\n\nvar hasBlobConstructor = typeof Blob !== 'undefined' && function () {\n  try {\n    return Boolean(new Blob());\n  } catch (e) {\n    return false;\n  }\n}();\n\nvar hasArrayBufferViewSupport = hasBlobConstructor && typeof Uint8Array !== 'undefined' && function () {\n  try {\n    return new Blob([new Uint8Array(100)]).size === 100;\n  } catch (e) {\n    return false;\n  }\n}();\n\nvar hasToBlobSupport = typeof HTMLCanvasElement !== \"undefined\" ? HTMLCanvasElement.prototype.toBlob : false;\nvar hasBlobSupport = hasToBlobSupport || typeof Uint8Array !== 'undefined' && typeof ArrayBuffer !== 'undefined' && typeof atob !== 'undefined';\nvar hasReaderSupport = typeof FileReader !== 'undefined' || typeof URL !== 'undefined';\n\nvar ImageTools =\n/*#__PURE__*/\nfunction () {\n  function ImageTools() {\n    ImageTools_classCallCheck(this, ImageTools);\n  }\n\n  ImageTools_createClass(ImageTools, null, [{\n    key: \"resize\",\n    value: function resize(file, maxDimensions, callback) {\n      if (typeof maxDimensions === 'function') {\n        callback = maxDimensions;\n        maxDimensions = {\n          width: 640,\n          height: 480\n        };\n      }\n\n      var maxWidth = maxDimensions.width;\n      var maxHeight = maxDimensions.height;\n\n      if (!ImageTools.isSupported() || !file.type.match(/image.*/)) {\n        callback(file, false);\n        return false;\n      }\n\n      if (file.type.match(/image\\/gif/)) {\n        // Not attempting, could be an animated gif\n        callback(file, false); // TODO: use https://github.com/antimatter15/whammy to convert gif to webm\n\n        return false;\n      }\n\n      var image = document.createElement('img');\n\n      image.onload = function (imgEvt) {\n        var width = image.width;\n        var height = image.height;\n        var isTooLarge = false;\n\n        if (width >= height && width > maxDimensions.width) {\n          // width is the largest dimension, and it's too big.\n          height *= maxDimensions.width / width;\n          width = maxDimensions.width;\n          isTooLarge = true;\n        } else if (height > maxDimensions.height) {\n          // either width wasn't over-size or height is the largest dimension\n          // and the height is over-size\n          width *= maxDimensions.height / height;\n          height = maxDimensions.height;\n          isTooLarge = true;\n        }\n\n        if (!isTooLarge) {\n          // early exit; no need to resize\n          callback(file, false);\n          return;\n        }\n\n        var canvas = document.createElement('canvas');\n        canvas.width = width;\n        canvas.height = height;\n        var ctx = canvas.getContext('2d');\n        ctx.drawImage(image, 0, 0, width, height);\n\n        if (hasToBlobSupport) {\n          canvas.toBlob(function (blob) {\n            callback(blob, true);\n          }, file.type);\n        } else {\n          var blob = ImageTools._toBlob(canvas, file.type);\n\n          callback(blob, true);\n        }\n      };\n\n      ImageTools._loadImage(image, file);\n\n      return true;\n    }\n  }, {\n    key: \"_toBlob\",\n    value: function _toBlob(canvas, type) {\n      var dataURI = canvas.toDataURL(type);\n      var dataURIParts = dataURI.split(',');\n      var byteString;\n\n      if (dataURIParts[0].indexOf('base64') >= 0) {\n        // Convert base64 to raw binary data held in a string:\n        byteString = atob(dataURIParts[1]);\n      } else {\n        // Convert base64/URLEncoded data component to raw binary data:\n        byteString = decodeURIComponent(dataURIParts[1]);\n      }\n\n      var arrayBuffer = new ArrayBuffer(byteString.length);\n      var intArray = new Uint8Array(arrayBuffer);\n\n      for (var i = 0; i < byteString.length; i += 1) {\n        intArray[i] = byteString.charCodeAt(i);\n      }\n\n      var mimeString = dataURIParts[0].split(':')[1].split(';')[0];\n      var blob = null;\n\n      if (hasBlobConstructor) {\n        blob = new Blob([hasArrayBufferViewSupport ? intArray : arrayBuffer], {\n          type: mimeString\n        });\n      } else {\n        var bb = new BlobBuilder();\n        bb.append(arrayBuffer);\n        blob = bb.getBlob(mimeString);\n      }\n\n      return blob;\n    }\n  }, {\n    key: \"_loadImage\",\n    value: function _loadImage(image, file, callback) {\n      if (typeof URL === 'undefined') {\n        var reader = new FileReader();\n\n        reader.onload = function (evt) {\n          image.src = evt.target.result;\n\n          if (callback) {\n            callback();\n          }\n        };\n\n        reader.readAsDataURL(file);\n      } else {\n        image.src = URL.createObjectURL(file);\n\n        if (callback) {\n          callback();\n        }\n      }\n    }\n  }, {\n    key: \"isSupported\",\n    value: function isSupported() {\n      return typeof HTMLCanvasElement !== 'undefined' && hasBlobSupport && hasReaderSupport;\n    }\n  }]);\n\n  return ImageTools;\n}();\n\n\n// CONCATENATED MODULE: ./src/hyperty-resource/FileHypertyResource.js\nfunction FileHypertyResource_typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { FileHypertyResource_typeof = function _typeof(obj) { return typeof obj; }; } else { FileHypertyResource_typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return FileHypertyResource_typeof(obj); }\n\nfunction FileHypertyResource_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction FileHypertyResource_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction FileHypertyResource_createClass(Constructor, protoProps, staticProps) { if (protoProps) FileHypertyResource_defineProperties(Constructor.prototype, protoProps); if (staticProps) FileHypertyResource_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction FileHypertyResource_possibleConstructorReturn(self, call) { if (call && (FileHypertyResource_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return FileHypertyResource_assertThisInitialized(self); }\n\nfunction FileHypertyResource_getPrototypeOf(o) { FileHypertyResource_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return FileHypertyResource_getPrototypeOf(o); }\n\nfunction FileHypertyResource_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction FileHypertyResource_inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) FileHypertyResource_setPrototypeOf(subClass, superClass); }\n\nfunction FileHypertyResource_setPrototypeOf(o, p) { FileHypertyResource_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return FileHypertyResource_setPrototypeOf(o, p); }\n\n/**\n* The Hyperty Resource Data Model is used to model resouces handled by Hyperties and Data Objects including chat messages, files, real time human audio and video..\n*\n*/\n// Log System\n\nvar FileHypertyResource_log = loglevel[\"getLogger\"]('FileHypertyResource');\n\n\n\n\nvar FileHypertyResource_FileHypertyResource =\n/*#__PURE__*/\nfunction (_HypertyResource) {\n  FileHypertyResource_inherits(FileHypertyResource, _HypertyResource);\n\n  /**\n  * FileHypertyResource constructor\n  *\n  * @param  {URL} owner HypertyURL of the Hyperty handling this resource\n  * @param  {URL} runtime Runtime URL where this resource is hosted\n  * @param  {Bus} bus sandbox message bus\n  * @param  {DataObject} parent Parent Data Object where the HypertyResource is handled as a child\n  * @param  {File} file file to be encoded as HypertyResource\n  * @param  {Boolean} isReporter indicates if parent is Reporter or an Observer\n  * @param  {Array} input optional input parameters\n  */\n  function FileHypertyResource(isSender, input) {\n    var _this2;\n\n    FileHypertyResource_classCallCheck(this, FileHypertyResource);\n\n    _this2 = FileHypertyResource_possibleConstructorReturn(this, FileHypertyResource_getPrototypeOf(FileHypertyResource).call(this, isSender, input));\n\n    var _this = FileHypertyResource_assertThisInitialized(_this2);\n\n    _this.metadata.resourceType = 'file';\n    return _this2;\n  }\n\n  FileHypertyResource_createClass(FileHypertyResource, [{\n    key: \"init\",\n    value: function init(file) {\n      var _this = this;\n\n      if (!file) throw new Error('[FileHypertyResource.constructor] missing mandatory *file* input ');\n      return new Promise(function (resolve, reject) {\n        _this._metadata.name = file.name;\n        _this._metadata.lastModified = file.lastModified;\n        _this._metadata.size = file.size;\n        _this._metadata.mimetype = file.type;\n        FileHypertyResource_log.log('[FileHypertyResource.init] file: ', file);\n\n        if (_this._isSender) {\n          var mimetype = file.type.split('/')[0];\n\n          switch (mimetype) {\n            case 'image':\n              _this._getImagePreview(file).then(function (preview) {\n                _this._metadata.preview = preview;\n                _this._content = file;\n                resolve();\n              });\n\n              break;\n\n            default:\n              _this._content = file;\n              resolve();\n              break;\n          } // if too big lets store as File and asArray Buffer\n          //  if (file.size > _this.arraybufferSizeLimit) {\n\n          /*  } else {\n               let reader = new FileReader();\n               reader.onload = function(theFile) {\n                 log.log('[FileHypertyResource.init] file loaded ', theFile);\n                 _this._content = theFile.target.result;\n                resolve();\n               }\n               reader.readAsArrayBuffer(file);\n             }*/\n\n        } else {\n          _this._content = file.content;\n          if (file.preview) _this._metadata.preview = file.preview;\n          resolve();\n        }\n      });\n    }\n  }, {\n    key: \"_getImagePreview\",\n    value: function _getImagePreview(image) {\n      var reader = new FileReader();\n      return new Promise(function (resolve, reject) {\n        ImageTools.resize(image, {\n          width: 100,\n          // maximum width\n          height: 100 // maximum height\n\n        }, function (blob, didItResize) {\n          // didItResize will be true if it managed to resize it, otherwise false (and will return the original file as 'blob')\n          if (didItResize) {\n            reader.readAsDataURL(blob);\n\n            reader.onload = function (theImage) {\n              resolve(theImage.target.result);\n            };\n          } else {\n            FileHypertyResource_log.warn('[FileHypertyResource._getImagePreview] unable to create image preview from original image ');\n            resolve(undefined);\n          }\n        });\n      });\n    }\n  }, {\n    key: \"toMessage\",\n\n    /**\n    * Share file as a data object child of a data object parent\n    *\n    * @param  {string} children Data Object Parent children name where the file is shared\n    */\n\n    /*  share(children) {\n        let _this = this;\n    \n        return new Promise(function(resolve, reject) {\n          //to be improved and adapted\n    \n          if (!_this._isSender) return reject('[FileHypertyResource.share] Observers can not share files');\n    \n          let file2share = _this._metadata;\n          file2share.type = _this._type;\n    \n          _this._parent.addChild(children, file2share).then(function(dataObjectChild) {\n            log.log('[FileHypertyResource.share] object child: ', dataObjectChild);\n    \n            let sharedFile = dataObjectChild.data;\n    \n            resolve(sharedFile);\n    \n          }).catch(function(reason) {\n            log.error('Reason:', reason);\n            reject(reason);\n          });\n    \n        });\n    \n      }*/\n\n    /**\n    * Returns file content optimised to be displayed in a message line\n    *\n    * @param  {string} children Data Object Parent children name where the file is shared\n    */\n    value: function toMessage() {//TODO: to be implemented. It should return HTML with img attribute as a thumbnail plus the name.\n    }\n  }, {\n    key: \"name\",\n    get: function get() {\n      var _this = this;\n\n      return _this._metadata.name;\n    }\n  }, {\n    key: \"preview\",\n    get: function get() {\n      var _this = this;\n\n      return _this._metadata.preview;\n    }\n  }]);\n\n  return FileHypertyResource;\n}(hyperty_resource_HypertyResource);\n\n/* harmony default export */ var hyperty_resource_FileHypertyResource = (FileHypertyResource_FileHypertyResource);\n// CONCATENATED MODULE: ./src/hyperty-resource/HypertyResourceFactory.js\nfunction HypertyResourceFactory_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction HypertyResourceFactory_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction HypertyResourceFactory_createClass(Constructor, protoProps, staticProps) { if (protoProps) HypertyResourceFactory_defineProperties(Constructor.prototype, protoProps); if (staticProps) HypertyResourceFactory_defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n* The Hyperty Resource Data Model is used to model resouces handled by Hyperties and Data Objects including chat messages, files, real time human audio and video..\n*\n*/\n\n\nvar HypertyResourceFactory_HypertyResourceFactory =\n/*#__PURE__*/\nfunction () {\n  /**\n  * HypertyResourceFactory constructor\n  *\n  */\n  function HypertyResourceFactory() {\n    HypertyResourceFactory_classCallCheck(this, HypertyResourceFactory);\n  }\n\n  HypertyResourceFactory_createClass(HypertyResourceFactory, [{\n    key: \"createHypertyResource\",\n    value: function createHypertyResource(isSender, type, metadata) {\n      var newHypertyResource;\n\n      switch (type) {\n        case 'file':\n          newHypertyResource = new hyperty_resource_FileHypertyResource(isSender, metadata);\n          break;\n\n        default:\n          throw new Error('[HypertyResourceFactory.createHypertyResource] not supported type: ', type);\n          break;\n      }\n\n      return newHypertyResource;\n    }\n  }, {\n    key: \"createHypertyResourceWithContent\",\n    value: function createHypertyResourceWithContent(isSender, type, content, metadata) {\n      var newHypertyResource;\n      return new Promise(function (resolve) {\n        switch (type) {\n          case 'file':\n            newHypertyResource = new hyperty_resource_FileHypertyResource(isSender, metadata);\n            break;\n\n          default:\n            reject();\n            break;\n        }\n\n        newHypertyResource.init(content).then(function () {\n          return newHypertyResource.save(); // skip save?\n        }).then(function () {\n          resolve(newHypertyResource);\n        });\n      });\n    }\n  }]);\n\n  return HypertyResourceFactory;\n}();\n\n/* harmony default export */ var hyperty_resource_HypertyResourceFactory = (HypertyResourceFactory_HypertyResourceFactory);\n// CONCATENATED MODULE: ./src/syncher/DataObject.js\nfunction DataObject_typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { DataObject_typeof = function _typeof(obj) { return typeof obj; }; } else { DataObject_typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return DataObject_typeof(obj); }\n\nfunction DataObject_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction DataObject_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction DataObject_createClass(Constructor, protoProps, staticProps) { if (protoProps) DataObject_defineProperties(Constructor.prototype, protoProps); if (staticProps) DataObject_defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n* Copyright 2016 PT Inovação e Sistemas SA\n* Copyright 2016 INESC-ID\n* Copyright 2016 QUOBIS NETWORKS SL\n* Copyright 2016 FRAUNHOFER-GESELLSCHAFT ZUR FOERDERUNG DER ANGEWANDTEN FORSCHUNG E.V\n* Copyright 2016 ORANGE SA\n* Copyright 2016 Deutsche Telekom AG\n* Copyright 2016 Apizee\n* Copyright 2016 TECHNISCHE UNIVERSITAT BERLIN\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n**/\n// Log System\n\nvar DataObject_log = loglevel[\"getLogger\"]('DataObject');\n\n //import HeartBeat from './HeartBeat';\n\n\n\n/**\n * Main extension class for observers and reporters, with common properties and methods.\n * Children management is common for observers and reporters.\n */\n\nvar DataObject_DataObject =\n/*#__PURE__*/\nfunction () {\n  /* private\n  _version: number\n   _owner: HypertyURL\n  _url: ObjectURL\n  _schema: Schema\n  _bus: MiniBus\n  _status: on | paused\n  _syncObj: SyncData\n   _children: { id: DataObjectChild }\n  _childrenListener: [MsgListener]\n   ----event handlers----\n  _onAddChildHandler: (event) => void\n  */\n\n  /**\n   * @ignore\n   * Should not be used directly by Hyperties. It's called by the Syncher create or subscribe method's\n   */\n  function DataObject(input) {\n    DataObject_classCallCheck(this, DataObject);\n\n    var _this = this;\n\n    function throwMandatoryParmMissingError(par) {\n      throw '[DataObject] ' + par + ' mandatory parameter is missing';\n    }\n\n    input.syncher ? _this._syncher = input.syncher : throwMandatoryParmMissingError('syncher');\n    input.url ? _this._url = input.url : throwMandatoryParmMissingError('url');\n    input.created ? _this._created = input.created : throwMandatoryParmMissingError('created');\n    input.reporter ? _this._reporter = input.reporter : throwMandatoryParmMissingError('reporter');\n    input.runtime ? _this._runtime = input.runtime : throwMandatoryParmMissingError('runtime');\n    input.schema ? _this._schema = input.schema : throwMandatoryParmMissingError('schema');\n    input.name ? _this._name = input.name : throwMandatoryParmMissingError('name');\n    _this._status = input.status;\n\n    if (input.data) {\n      _this._syncObj = new ProxyObject(input.data);\n    } else {\n      _this._syncObj = new ProxyObject({});\n    }\n\n    _this._childrens = input.childrens; //TODO: For Further Study\n\n    _this._mutual = input.mutual;\n    _this._version = 0;\n    _this._childId = 1;\n    _this._childrenListener; //bus listener for children\n\n    _this._onAddChildrenHandler; //Hyperty side handlers to process child objects created by remote Hyperties\n\n    _this._resumed = input.resume;\n\n    if (input.resume) {\n      _this._version = input.version;\n    }\n\n    _this._owner = input.syncher._owner;\n    _this._bus = input.syncher._bus;\n    if (input.description) _this._description = input.description;\n    if (input.tags) _this._tags = input.tags;\n    if (input.resources) _this._resources = input.resources;\n    if (input.observerStorage) _this._observerStorage = input.observerStorage;\n    if (input.publicObservation) _this._publicObservation = input.publicObservation;\n    _this._metadata = Object.assign(input); //    console.log('[DataObject] mutual ', _this._metadata.mutual);\n\n    if (!input.hasOwnProperty('resume') || input.hasOwnProperty('resume') && !input.resume) {\n      _this._metadata.lastModified = _this._metadata.created;\n    }\n\n    delete _this._metadata.data;\n    delete _this._metadata.syncher;\n    delete _this._metadata.authorise;\n    _this._hypertyResourceFactory = new hyperty_resource_HypertyResourceFactory();\n    _this._childrenObjects = {};\n    _this._sharedChilds = []; //childObjects that were not sent yet to Reporters\n\n    /*    if (input.backup && _this._childrens) {\n          let lastHeartbeat = (input.hasOwnProperty('childrenObjects') && input.childrenObjects.hasOwnProperty('heartbeat'))\n            ? input.childrenObjects.heartbeat : 0;\n          _this._heartBeat = new HeartBeat(_this._bus, _this._owner, _this._syncher._runtimeUrl, this, 15, lastHeartbeat);\n          if (_this._resumed) _this._heartBeat.start(true, _this.metadata.isReporter);\n          else _this._heartBeat.start(false, _this.metadata.isReporter);\n    \n        }*/\n  }\n\n  DataObject_createClass(DataObject, [{\n    key: \"_getLastChildId\",\n    value: function _getLastChildId() {\n      var _this = this;\n\n      var childIdInt = 0;\n      var childIdString = _this._owner + '#' + childIdInt;\n      Object.keys(_this._childrens).filter(function (key) {\n        if (_this._childrens[key].childId > childIdString) {\n          childIdString = _this._childrens[key].childId;\n        }\n      });\n      return childIdInt = Number(childIdString.split('#')[1]);\n    }\n  }, {\n    key: \"_allocateListeners\",\n    value: function _allocateListeners() {\n      var _this2 = this;\n\n      var _this = this;\n\n      var childBaseURL = _this._url + '/children/';\n      DataObject_log.log('[Data Object - AllocateListeners] - ', _this._childrens);\n\n      if (_this._childrens) {\n        //      _this._childrens.forEach((child) => {\n        var childURL = childBaseURL;\n\n        var listener = _this._bus.addListener(childURL, function (msg) {\n          //ignore msg sent by himself\n          if (msg.from !== _this2._owner) {\n            DataObject_log.log('DataObject-Children-RCV: ', msg);\n\n            switch (msg.type) {\n              case 'create':\n                _this._onChildCreate(msg);\n\n                break;\n\n              case 'delete':\n                DataObject_log.log(msg);\n                break;\n\n              default:\n                _this._changeChildren(msg);\n\n                break;\n            }\n          } //        });\n\n\n          _this._childrenListener = listener;\n        });\n      }\n    }\n  }, {\n    key: \"_releaseListeners\",\n    value: function _releaseListeners() {\n      var _this = this;\n\n      if (_this._childrenListener) {\n        _this._childrenListener.remove();\n\n        Object.keys(_this._childrenObjects).forEach(function (child) {\n          /*      if (children === 'resources') {\n                  Object.keys(_this._childrenObjects[children]).forEach((child) => {\n                    _this._childrenObjects[children][child]._releaseListeners();\n                  });\n                } else {*/\n          _this._childrenObjects[child]._releaseListeners(); //      }\n\n        });\n      }\n    }\n    /**\n     * Sync Data Object Observer with last version of Data Object Reporter. Useful for Resumes\n     * remove since hyperties can directly use syncher read?\n     */\n\n  }, {\n    key: \"sync\",\n    value: function sync() {\n      var _this = this;\n\n      DataObject_log.info('[DataObject.sync] synchronising ');\n      return new Promise(function (resolve, reject) {\n        var criteria = {}; //      if (this.metadata.backupRevision) criteria.backupRevision = this.metadata.backupRevision;\n\n        _this._syncher.read(_this._metadata.url, criteria).then(function (value) {\n          console.log('[DataObject.sync] value to sync: ', value);\n          Object.assign(_this.data, deepClone(value.data));\n          _this._version = value.version;\n          _this._metadata.lastModified = value.lastModified; //TODO: check first if there are new childrenObjects to avoid overhead\n\n          if (value.childrenObjects) {\n            _this.resumeChildrens(value.childrenObjects); //          _this._storeChildrens();\n\n\n            resolve(true);\n          } else resolve(true);\n          /*if (value.version != _this._version) {\n            log.info('[DataObject.sync] updating existing data: ', _this.data);\n             Object.assign(_this.data || {}, deepClone(value.data));\n             _this._metadata = deepClone(value);\n             delete _this._metadata.data;\n             _this._version = value.version;\n           } else {\n            log.info('[DataObject.sync] existing data is updated: ', value);\n          }*/\n\n        })[\"catch\"](function (reason) {\n          DataObject_log.info('[DataObject.sync] sync failed: ', reason);\n          resolve(false);\n        });\n      });\n    }\n    /**\n     *\n     */\n\n  }, {\n    key: \"resumeChildrens\",\n    value: function resumeChildrens(childrens) {\n      var _this3 = this;\n\n      var _this = this;\n\n      var childIdString = this._owner.split('/')[3] + '#' + this._childId; //setup childrens data from subscription\n      //    Object.keys(childrens).forEach((childrenResource) => {\n      //      let children = childrens[childrenResource];\n\n\n      var children = childrens; //_this._childrenObjects[childrenResource] = {};\n\n      Object.keys(children).forEach(function (childId) {\n        var newChild = false;\n        /*        if (!_this._childrenObjects.hasOwnProperty(childrenResource))\n                  _this._childrenObjects[childrenResource] = {};*/\n        // check if it is the last heartbeat\n\n        if (childId === 'heartbeat') {//          _this._heartBeat.onNewHeartbeat(children[childId].value);\n          //          _this._heartBeat.start(true);\n        } else if (children[childId].hasOwnProperty('value') && children[childId].value.resourceType && !_this._childrenObjects.hasOwnProperty(childId)) {\n          _this._childrenObjects[childId] = _this._resumeHypertyResource(children[childId]);\n          newChild = true;\n        } else if (!_this._childrenObjects.hasOwnProperty(childId)) {\n          _this._childrenObjects[childId] = _this._resumeChild(children[childId]);\n          DataObject_log.log('[DataObject.resumeChildrens] new DataObjectChild: ', _this._childrenObjects[childId]);\n          newChild = true;\n        }\n\n        if (newChild && childId > childIdString) {\n          childIdString = childId;\n          DataObject_log.log('[DataObjectReporter.resumeChildrens] - resuming: ', _this3._childrenObjects[childId]);\n        }\n      }); //    });\n\n      this._childId = Number(childIdString.split('#')[1]);\n    }\n  }, {\n    key: \"_resumeChild\",\n    value: function _resumeChild(input) {\n      var _this = this;\n\n      var childInput = input.value;\n      childInput.parentObject = _this;\n      childInput.parent = _this._url;\n      var child = new syncher_DataObjectChild(childInput);\n      child.identity = input.identity;\n      var event = {\n        type: 'create',\n        from: child.reporter,\n        url: child.parent,\n        value: child.data,\n        childId: child.url,\n        identity: child.identity,\n        child: child\n      };\n\n      if (child.resourceType) {\n        event.resource = child;\n      }\n\n      if (_this._onAddChildrenHandler) _this._onAddChildrenHandler(event);\n      return child;\n    }\n  }, {\n    key: \"_resumeHypertyResource\",\n    value: function _resumeHypertyResource(input) {\n      var _this = this;\n\n      var childInput = input.value;\n      childInput.parentObject = _this;\n      childInput.parent = _this._url;\n\n      var hypertyResource = _this._hypertyResourceFactory.createHypertyResource(false, childInput.resourceType, childInput);\n\n      hypertyResource.identity = input.identity;\n      var event = {\n        type: 'create',\n        from: hypertyResource.reporter,\n        url: hypertyResource.parent,\n        value: hypertyResource.data,\n        childId: hypertyResource.url,\n        identity: hypertyResource.identity,\n        child: hypertyResource\n      };\n\n      if (hypertyResource.resourceType) {\n        event.resource = hypertyResource;\n      }\n\n      if (_this._onAddChildrenHandler) _this._onAddChildrenHandler(event);\n      return hypertyResource;\n    }\n    /**\n     * All Metadata about the Data Object\n     * @type {Object} -\n     */\n\n  }, {\n    key: \"pause\",\n\n    /**\n     * @ignore\n     */\n    value: function pause() {\n      //TODO: this feature needs more analise\n      throw 'Not implemented';\n    }\n    /**\n     * @ignore\n     */\n\n  }, {\n    key: \"resume\",\n    value: function resume() {\n      //TODO: this feature needs more analise\n      throw 'Not implemented';\n    }\n    /**\n     * @ignore\n     */\n\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      //TODO: should remove the subscription and send message unsubscribe?\n      throw 'Not implemented';\n    }\n    /**\n     * Create and add a DataObjectChild to a children collection.\n     * @param {JSON} initialData - Initial data of the child\n     * @param  {MessageBodyIdentity} identity - (optional) identity data to be added to identity the user reporter. To be used for legacy identities.\n     * @param  {SyncChildMetadata} input - (optional) All additional metadata about the DataObjectChild.\n     * @return {Promise<DataObjectChild>} - Return Promise to a new DataObjectChild.\n     */\n\n  }, {\n    key: \"addChild\",\n    value: function addChild(initialData, identity, input) {\n      var _this = this;\n\n      var newChild; //returns promise, in the future, the API may change to asynchronous call\n\n      return new Promise(function (resolve) {\n        var msgChildPath = _this._url + '/children/';\n\n        var childInput = _this._getChildInput(input);\n\n        childInput.data = initialData; //      childInput.children = children;\n\n        newChild = new syncher_DataObjectChild(childInput);\n        if (identity) newChild.identity = identity;\n        newChild.share();\n        console.log('[DataObject.addChild] added ', newChild);\n        newChild.onChange(function (event) {\n          _this._onChange(event, {\n            path: msgChildPath,\n            childId: childInput.url\n          });\n        }); //     if (!_this._childrenObjects.hasOwnProperty(children)) _this._childrenObjects[children] = {};\n\n        _this._childrenObjects[childInput.url] = newChild;\n        resolve(newChild);\n      });\n    }\n  }, {\n    key: \"_deleteChildrens\",\n    value: function _deleteChildrens() {\n      var _this = this;\n\n      var deletePromises = [];\n      return new Promise(function (resolve) {\n        if (_this.childrens) {\n          DataObject_log.log('[DataObject.deleteChildrens]', _this.childrens);\n          var child;\n\n          for (child in _this.childrens) {\n            //          let child;\n\n            /*          if (children === 'resources') {\n                        for (child in _this.childrens[children]) {\n                          let childObj = _this.childrens[children][child];\n                          log.log('[DataObject._deleteChildrens] child',childObj);\n                          if (childObj.metadata.hasOwnProperty('resourceType'))\n                            deletePromises.push(_this.childrens[children][child].delete());\n                        }\n                       } else {*/\n            var childObj = _this.childrens[child];\n            DataObject_log.log('[DataObject._deleteChildrens] child', childObj);\n            if (childObj.metadata.hasOwnProperty('resourceType')) deletePromises.push(_this.childrens[child][\"delete\"]());\n          } //        }\n\n\n          DataObject_log.log('[DataObject._deleteChildrens] promises ', deletePromises);\n\n          if (deletePromises.length > 0) {\n            Promise.all(deletePromises).then(function () {\n              resolve('[DataObject._deleteChildrens] done');\n            });\n          } else resolve('[DataObject._deleteChildrens] nothing to delete');\n        }\n      });\n    }\n  }, {\n    key: \"_getChildInput\",\n    value: function _getChildInput(input) {\n      var _this = this;\n\n      var childInput = Object.assign({}, input);\n      _this._childId++; //removing domain from childId to avoid backup issues with '.'\n\n      var start = Math.floor(Date.now());\n      console.log('[DataObject._getChildInput] start ', start);\n      childInput.url = start + '-' + _this._owner.split('/')[3] + '#' + _this._childId;\n      childInput.parentObject = _this;\n      childInput.reporter = _this._owner;\n      childInput.created = new Date().toISOString();\n      childInput.runtime = _this._syncher._runtimeUrl;\n      childInput.p2pHandler = _this._syncher._p2pHandler;\n      childInput.p2pRequester = _this._syncher._p2pRequester;\n      childInput.schema = _this._schema;\n      childInput.parent = _this.url;\n      childInput.mutual = _this.metadata.mutual; //    console.log('[DataObject._getChildInput] mutual ', childInput.mutual);\n\n      return childInput;\n    }\n  }, {\n    key: \"addHypertyResource\",\n    value: function addHypertyResource(type, resource, identity, input) {\n      var _this = this; //returns promise, in the future, the API may change to asynchronous call\n\n\n      return new Promise(function (resolve) {\n        var hypertyResource;\n        var msgChildPath = _this._url + '/children/';\n\n        var childInput = _this._getChildInput(input); //      childInput.children = children;\n\n\n        _this._hypertyResourceFactory.createHypertyResourceWithContent(true, type, resource, childInput).then(function (resource) {\n          hypertyResource = resource;\n          if (identity) hypertyResource.identity = identity;\n          hypertyResource.share();\n          DataObject_log.log('[DataObject.addHypertyResource] added ', hypertyResource);\n          hypertyResource.onChange(function (event) {\n            _this._onChange(event, {\n              path: msgChildPath,\n              childId: hypertyResource.childId\n            });\n          }); //        if (!_this._childrenObjects.hasOwnProperty(children)) _this._childrenObjects[children] = {};\n\n          _this._childrenObjects[hypertyResource.childId] = hypertyResource;\n          resolve(hypertyResource);\n        });\n      });\n    }\n    /**\n     * Setup the callback to process create and delete of childrens.\n     * @param {function(event: MsgEvent)} callback\n     * TODO: add childrenId to support different handlers per children\n     */\n\n  }, {\n    key: \"onAddChild\",\n    value: function onAddChild(callback) {\n      this._onAddChildrenHandler = callback;\n    } //FLOW-IN: message received from a remote DataObject -> addChild\n\n  }, {\n    key: \"_onChildCreate\",\n    value: function _onChildCreate(msg) {\n      var _this = this; //    console.log('[DataObject._onChildCreate] receivedBy ' + _this._owner + ' : ', msg);\n      // if this is an heartbeat msg foward it to heatbeat handler\n\n\n      if (msg.body.resource === 'heartbeat') {//      console.log('[DataObject._onChildCreate] new heartbeat received ' + msg.body.value);\n        //      this._heartBeat.onNewHeartbeat(msg.body.value);\n      } else {\n        console.log('[DataObject._onChildCreate] new child receivedBy ' + _this._owner + ' : ', msg);\n        var response = {\n          from: msg.to,\n          to: msg.from,\n          type: 'response',\n          id: msg.id,\n          body: {\n            code: 100\n          }\n        };\n\n        _this._bus.postMessage(response);\n\n        if (msg.body.value.resourceType) {\n          _this._onHypertyResourceAdded(msg);\n        } else _this._onChildAdded(msg);\n      }\n    }\n  }, {\n    key: \"_onChildAdded\",\n    value: function _onChildAdded(msg) {\n      var _this = this;\n\n      var childInput = deepClone(msg.body.value);\n      childInput.parentObject = _this; //    let children = childInput.children;\n\n      var newChild = new syncher_DataObjectChild(childInput);\n      newChild.identity = msg.body.identity; //    if (!_this._childrenObjects.hasOwnProperty(children)) _this._childrenObjects[children] = {};\n\n      _this._childrenObjects[childInput.url] = newChild;\n      if (msg.to === _this.metadata.url) newChild.store();\n\n      _this._hypertyEvt(msg, newChild);\n    }\n  }, {\n    key: \"_onHypertyResourceAdded\",\n    value: function _onHypertyResourceAdded(msg) {\n      var _this = this;\n\n      var input = msg.body.value;\n      var hypertyResource; //    let children = input.children;\n\n      input.parentObject = _this;\n      hypertyResource = _this._hypertyResourceFactory.createHypertyResource(false, input.resourceType, input);\n      hypertyResource.identity = msg.body.identity; //    if (!_this._childrenObjects.hasOwnProperty(children)) _this._childrenObjects[children] = {};\n\n      _this._childrenObjects[hypertyResource.childId] = hypertyResource;\n\n      _this._hypertyEvt(msg, hypertyResource); // locally store messages that are directly sent to the hyperty\n      // ie to sync with messages sent when offline\n\n\n      if (msg.to === _this.metadata.url) hypertyResource.store();\n    }\n  }, {\n    key: \"_hypertyEvt\",\n    value: function _hypertyEvt(msg, child) {\n      var _this = this;\n\n      var event = {\n        type: msg.type,\n        from: msg.from,\n        url: msg.to,\n        value: child.data,\n        childId: child.url,\n        identity: msg.body.identity,\n        child: child\n      };\n\n      if (child.resourceType) {\n        event.resource = child;\n      }\n\n      if (_this._onAddChildrenHandler) _this._onAddChildrenHandler(event);\n    } //send delta messages to subscriptions\n\n  }, {\n    key: \"_onChange\",\n    value: function _onChange(event, childInfo) {\n      var _this = this;\n\n      _this._metadata.lastModified = new Date().toISOString();\n      _this._version++;\n\n      if (_this._status === 'live') {\n        //FLOW-OUT: this message will be sent directly to a resource changes address: MessageBus\n        var changeMsg = {\n          type: 'update',\n          from: _this._url,\n          to: _this._url + '/changes',\n          body: {\n            version: _this._version,\n            source: _this._owner,\n            attribute: event.field,\n            lastModified: _this._metadata.lastModified\n          }\n        };\n        DataObject_log.log('[DataObject - _onChange] - ', event, childInfo, changeMsg);\n\n        if (event.oType === ObjectType.OBJECT) {\n          if (event.cType !== ChangeType.REMOVE) {\n            changeMsg.body.value = deepClone(event.data);\n          }\n        } else {\n          changeMsg.body.attributeType = event.oType;\n          changeMsg.body.value = event.data;\n\n          if (event.cType !== ChangeType.UPDATE) {\n            changeMsg.body.operation = event.cType;\n          }\n        } //childInfo must have (path, childId)\n\n\n        if (childInfo) {\n          changeMsg.to = childInfo.path;\n          changeMsg.body.resource = childInfo.childId;\n        } //TODO: For Further Study\n\n\n        if (!_this.data._mutual) changeMsg.body.mutual = _this._mutual;\n\n        _this._bus.postMessage(changeMsg);\n      }\n    } //FLOW-IN: delta message received from a remote DataObjectReporter or DataObjectChild when changing data\n\n  }, {\n    key: \"_changeObject\",\n    value: function _changeObject(syncObj, msg) {\n      var _this = this; //TODO: update version ?\n      //how to handle an incorrect version ? Example: receive a version 3 when the observer is in version 1, where is the version 2 ?\n      //will we need to confirm the reception ?\n\n\n      if (_this._version + 1 <= msg.body.version) {\n        _this._version = msg.body.version;\n        var path = msg.body.attribute;\n        var value;\n        if (DataObject_typeof(msg.body.value) === 'object') value = deepClone(msg.body.value);else value = msg.body.value;\n        var findResult = syncObj.findBefore(path);\n\n        if (msg.body.lastModified) {\n          _this._metadata.lastModified = msg.body.lastModified;\n        } else {\n          _this._metadata.lastModified = new Date().toISOString();\n        }\n\n        if (msg.body.attributeType === ObjectType.ARRAY) {\n          if (msg.body.operation === ChangeType.ADD) {\n            var arr = findResult.obj;\n            var index = findResult.last;\n            Array.prototype.splice.apply(arr, [index, 0].concat(value));\n          } else if (msg.body.operation === ChangeType.REMOVE) {\n            var _arr = findResult.obj;\n            var _index = findResult.last;\n\n            _arr.splice(_index, value);\n          } else {\n            findResult.obj[findResult.last] = value; // UPDATE\n          }\n        } else {\n          if (msg.body.hasOwnProperty('value')) {\n            findResult.obj[findResult.last] = value; // UPDATE or ADD\n          } else {\n            delete findResult.obj[findResult.last]; // REMOVE\n          }\n        }\n      } else {\n        //TODO: how to handle unsynchronized versions?\n        DataObject_log.log('UNSYNCHRONIZED VERSION: (data => ' + _this._version + ', msg => ' + msg.body.version + ')');\n      }\n    } //FLOW-IN: message received from a remote DataObjectChild when changing data\n\n  }, {\n    key: \"_changeChildren\",\n    value: function _changeChildren(msg) {\n      var _this = this;\n\n      var dividedURL = divideURL(msg.to);\n      var identity = dividedURL.identity; //    const resource = identity ? identity.substring(identity.lastIndexOf('/') + 1) : undefined;\n\n      var childId = msg.body.resource;\n      var children = _this._childrenObjects[childId];\n      DataObject_log.log('Change children: ', _this._owner, msg, resource);\n\n      if (children) {\n        _this._changeObject(children._syncObj, msg);\n      } else {\n        DataObject_log.warn('No children found for: ', childId);\n      }\n    }\n  }, {\n    key: \"metadata\",\n    get: function get() {\n      return this._metadata;\n    }\n    /**\n     * Object URL of reporter or observer\n     * @type {ObjectURL}\n     */\n\n  }, {\n    key: \"url\",\n    get: function get() {\n      return this._url;\n    }\n    /**\n     * Object schema URL (this field is not yet stable, and is subsject to change)\n     * @type {SchemaURL}\n     */\n\n  }, {\n    key: \"schema\",\n    get: function get() {\n      return this._schema;\n    }\n    /**\n     * Status of the reporter or observer connection (this field is not yet stable, and is subsject to change)\n     * @type {Status} - Enum of: on | paused\n     */\n\n  }, {\n    key: \"status\",\n    get: function get() {\n      return this._status;\n    }\n    /**\n     * Data structure to be synchronized.\n     * @type {JSON} - JSON structure that should follow the defined schema, if any.\n     */\n\n  }, {\n    key: \"data\",\n    get: function get() {\n      return this._syncObj.data;\n    }\n    /**\n     * All created children's since the subscription, doesn't contain all children's since reporter creation.\n     * @type {Object<ChildId, DataObjectChild>}\n     */\n\n  }, {\n    key: \"childrens\",\n    get: function get() {\n      return this._childrenObjects;\n    }\n  }]);\n\n  return DataObject;\n}();\n\n/* harmony default export */ var syncher_DataObject = (DataObject_DataObject);\n// CONCATENATED MODULE: ./src/syncher/DataObjectReporter.js\nfunction DataObjectReporter_typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { DataObjectReporter_typeof = function _typeof(obj) { return typeof obj; }; } else { DataObjectReporter_typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return DataObjectReporter_typeof(obj); }\n\nfunction DataObjectReporter_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction DataObjectReporter_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction DataObjectReporter_createClass(Constructor, protoProps, staticProps) { if (protoProps) DataObjectReporter_defineProperties(Constructor.prototype, protoProps); if (staticProps) DataObjectReporter_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction DataObjectReporter_possibleConstructorReturn(self, call) { if (call && (DataObjectReporter_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return DataObjectReporter_assertThisInitialized(self); }\n\nfunction DataObjectReporter_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction DataObjectReporter_get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { DataObjectReporter_get = Reflect.get; } else { DataObjectReporter_get = function _get(target, property, receiver) { var base = DataObjectReporter_superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return DataObjectReporter_get(target, property, receiver || target); }\n\nfunction DataObjectReporter_superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = DataObjectReporter_getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction DataObjectReporter_getPrototypeOf(o) { DataObjectReporter_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return DataObjectReporter_getPrototypeOf(o); }\n\nfunction DataObjectReporter_inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) DataObjectReporter_setPrototypeOf(subClass, superClass); }\n\nfunction DataObjectReporter_setPrototypeOf(o, p) { DataObjectReporter_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return DataObjectReporter_setPrototypeOf(o, p); }\n\n/**\n* Copyright 2016 PT Inovação e Sistemas SA\n* Copyright 2016 INESC-ID\n* Copyright 2016 QUOBIS NETWORKS SL\n* Copyright 2016 FRAUNHOFER-GESELLSCHAFT ZUR FOERDERUNG DER ANGEWANDTEN FORSCHUNG E.V\n* Copyright 2016 ORANGE SA\n* Copyright 2016 Deutsche Telekom AG\n* Copyright 2016 Apizee\n* Copyright 2016 TECHNISCHE UNIVERSITAT BERLIN\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n**/\n// Log System\n\nvar DataObjectReporter_log = loglevel[\"getLogger\"]('DataObjectReporter');\n\n\n/**\n * The class returned from the Syncher create call.\n * To be used as a reporter point, changes will be submited to DataObjectObserver instances.\n */\n\nvar DataObjectReporter_DataObjectReporter =\n/*#__PURE__*/\nfunction (_DataObject) {\n  DataObjectReporter_inherits(DataObjectReporter, _DataObject);\n\n  /* private\n  _subscriptions: <hypertyUrl: { status: string } }>\n   ----event handlers----\n  _onSubscriptionHandler: (event) => void\n  _onResponseHandler: (event) => void\n  _onReadHandler: (event) => void\n  */\n\n  /**\n   * @ignore\n   * Should not be used directly by Hyperties. It's called by the Syncher.create method\n   */\n  //constructor(syncher, url, created, reporter, runtime, schema, name, initialStatus, initialData, childrens, mutual = true, resumed = false, description, tags, resources, observerStorage, publicObservation) {\n  function DataObjectReporter(input) {\n    var _this2;\n\n    DataObjectReporter_classCallCheck(this, DataObjectReporter);\n\n    _this2 = DataObjectReporter_possibleConstructorReturn(this, DataObjectReporter_getPrototypeOf(DataObjectReporter).call(this, input));\n\n    var _this = DataObjectReporter_assertThisInitialized(_this2);\n\n    _this._subscriptions = {};\n\n    _this._syncObj.observe(function (event) {\n      DataObjectReporter_log.log('[Syncher.DataObjectReporter] ' + _this.url + ' publish change: ', event);\n\n      _this._onChange(event);\n    });\n\n    _this._allocateListeners();\n\n    _this.invitations = []; // array of promises with pending invitations\n\n    _this._childrenSizeThreshold = 50000; // to be used when replying to sync requests to ensure each response msg is not too large\n\n    return _this2;\n  }\n\n  DataObjectReporter_createClass(DataObjectReporter, [{\n    key: \"_allocateListeners\",\n    value: function _allocateListeners() {\n      DataObjectReporter_get(DataObjectReporter_getPrototypeOf(DataObjectReporter.prototype), \"_allocateListeners\", this).call(this);\n\n      var _this = this;\n\n      _this._objectListener = _this._bus.addListener(_this._url, function (msg) {\n        DataObjectReporter_log.log('[Syncher.DataObjectReporter] listener ' + _this._url + ' Received: ', msg);\n\n        switch (msg.type) {\n          case 'response':\n            _this._onResponse(msg);\n\n            break;\n\n          case 'read':\n            _this._onRead(msg);\n\n            break;\n\n          case 'execute':\n            _this._onExecute(msg);\n\n            break;\n\n          case 'create':\n            _this._onChildCreate(msg);\n\n            break;\n          // to create child objects that were sent whenn offline\n        }\n      });\n      _this._runtimeStatusListener = _this._bus.addListener(_this._syncher._runtimeUrl + '/status', function (evt) {\n        console.log('[Syncher.DataObjectReporter] runtime status event received ' + evt);\n        /*      if (evt.body && evt.body.resource && evt.body.resource === _this._url && \n                evt.body.value && evt.body.value.backupRevision ) {\n                  // broadcast backupRevision update\n        \n                  _this.data.backupRevision = evt.body.value.backupRevision;\n                  console.log('[Syncher.DataObjectReporter] DO updated with backup revision ' + _this.data.backupRevision);\n                }*/\n      });\n    }\n  }, {\n    key: \"_releaseListeners\",\n    value: function _releaseListeners() {\n      DataObjectReporter_get(DataObjectReporter_getPrototypeOf(DataObjectReporter.prototype), \"_releaseListeners\", this).call(this);\n\n      var _this = this;\n\n      _this._objectListener.remove();\n    }\n    /**\n     * Send invitations (create messages) to hyperties, observers list.\n     * @param  {HypertyURL[]} observers List of Hyperty URL's\n     */\n\n  }, {\n    key: \"inviteObservers\",\n    value: function inviteObservers(observers, p2p) {\n      var _this = this; //FLOW-OUT: this message will be sent to the runtime instance of SyncherManager -> _onCreate\n      // TODO: remove value and add resources? should similar to 1st create\n\n\n      var toInvite = observers; // let invitePromises = [];\n\n      /*  observers.forEach((observer)=> {\n        if (!_this.invitations[observer]) {\n          toInvite.push(observer);\n          _this.invitations[observer] = observer;\n        }\n      });*/\n\n      if (toInvite.length > 0) {\n        DataObjectReporter_log.log('[Syncher.DataObjectReporter] InviteObservers ', toInvite, _this._metadata);\n        toInvite.forEach(function (observer) {\n          var invitation = new Promise(function (resolve, reject) {\n            var inviteMsg = {\n              type: 'create',\n              from: _this._syncher._owner,\n              to: _this._syncher._subURL,\n              body: {\n                resume: false,\n                resource: _this._url,\n                schema: _this._schema,\n                value: _this._metadata,\n                authorise: [observer]\n              }\n            };\n            if (p2p) inviteMsg.body.p2p = p2p;\n            if (!_this.data.mutual) inviteMsg.body.mutual = _this.data.mutual;\n\n            _this._bus.postMessage(inviteMsg, function (reply) {\n              DataObjectReporter_log.log('[Syncher.DataObjectReporter] Invitation reply ', reply);\n              var result = {\n                invited: observer,\n                code: reply.body && reply.body.code ? reply.body.code : 500,\n                desc: reply.body && reply.body.desc ? reply.body.desc : 'Unknown'\n              };\n              if (result.code < 300) resolve(result);\n              /*            else if (result.code >= 300) {\n                            if (_this.metadata.offline) {\n                              resolve(_this._processOfflineInvitation(inviteMsg));\n                            }*/\n              else reject(result); //            } \n            });\n          });\n\n          _this.invitations.push(invitation);\n        }); //      return(invitePromises);\n      }\n    }\n    /**\n     * Release and delete object data\n     */\n\n  }, {\n    key: \"delete\",\n    value: function _delete() {\n      var _this = this;\n\n      if (_this._heartBeat) _this._heartBeat.stop();\n\n      _this._deleteChildrens().then(function (result) {\n        DataObjectReporter_log.log(result); //FLOW-OUT: this message will be sent to the runtime instance of SyncherManager -> _onDelete\n\n        var deleteMsg = {\n          type: 'delete',\n          from: _this._owner,\n          to: _this._syncher._subURL,\n          body: {\n            resource: _this._url\n          }\n        };\n\n        _this._bus.postMessage(deleteMsg, function (reply) {\n          DataObjectReporter_log.log('DataObjectReporter-DELETE: ', reply);\n\n          if (reply.body.code === 200) {\n            _this._releaseListeners();\n\n            delete _this._syncher._reporters[_this._url]; //_this._syncObj.unobserve();\n\n            _this._syncObj = {};\n          }\n        });\n      });\n    }\n    /**\n     * Subscriptions requested and accepted to this reporter\n     * @type {Object<HypertyURL, SyncSubscription>}\n     */\n\n  }, {\n    key: \"onSubscription\",\n\n    /**\n     * Setup the callback to process subscribe and unsubscribe notifications\n     * @param {function(event: MsgEvent)} callback function to receive events\n     */\n    value: function onSubscription(callback) {\n      this._onSubscriptionHandler = callback;\n    }\n    /**\n     * Setup the callback to process response notifications of the create's\n     * @param {function(event: MsgEvent)} callback function to receive events\n     */\n\n  }, {\n    key: \"onResponse\",\n    value: function onResponse(callback) {\n      this._onResponseHandler = callback;\n    }\n    /**\n     * Setup the callback to process read notifications\n     * @param {function(event: MsgEvent)} callback\n     */\n\n  }, {\n    key: \"onRead\",\n    value: function onRead(callback) {\n      this._onReadHandler = callback;\n    }\n    /**\n     * Setup the callback to process execute notifications\n     * @param {function(event: MsgEvent)} callback\n     */\n\n  }, {\n    key: \"onExecute\",\n    value: function onExecute(callback) {\n      this._onExecuteHandler = callback;\n    } //FLOW-IN: message received from parent Syncher -> _onForward\n\n  }, {\n    key: \"_onForward\",\n    value: function _onForward(msg) {\n      var _this = this;\n\n      DataObjectReporter_log.log('DataObjectReporter-RCV: ', msg);\n\n      switch (msg.body.type) {\n        case 'subscribe':\n          _this._onSubscribe(msg);\n\n          break;\n\n        case 'unsubscribe':\n          _this._onUnSubscribe(msg);\n\n          break;\n      }\n    } //FLOW-IN: message received from this -> _onForward: emitted by a remote Syncher -> subscribe\n\n  }, {\n    key: \"_onSubscribe\",\n    value: function _onSubscribe(msg) {\n      var _this = this;\n\n      var hypertyUrl = msg.body.from;\n      var dividedURL = divideURL(hypertyUrl);\n      var domain = dividedURL.domain;\n      var mutual = true;\n      if (msg.body.hasOwnProperty('mutual') && !msg.body.mutual) mutual = false;\n      console.log('[DataObjectReporter._onSubscribe]', msg, domain, dividedURL);\n      var event = {\n        type: msg.body.type,\n        url: hypertyUrl,\n        domain: domain,\n        identity: msg.body.identity,\n        nutual: mutual,\n        accept: function accept() {\n          //create new subscription\n          var sub = {\n            url: hypertyUrl,\n            status: 'live'\n          };\n          _this._subscriptions[hypertyUrl] = sub;\n\n          if (_this.metadata.subscriptions) {\n            _this.metadata.subscriptions.push(sub.url);\n          }\n\n          var msgValue = deepClone(_this._metadata);\n          msgValue.data = deepClone(_this.data);\n          msgValue.version = _this._version; //process and send childrens data\n          // let childrenValues = {};\n          //\n          // if (_this._childrenObjects) {\n          //   Object.keys(_this._childrenObjects).forEach((childrenId) => {\n          //     let childrenData = _this._childrenObjects[childrenId];\n          //     childrenValues[childrenId] = deepClone(childrenData);\n          //   });\n          //   msgValue.childrenObjects = childrenValues;\n          // }\n\n          var sendMsg = {\n            id: msg.id,\n            type: 'response',\n            from: msg.to,\n            to: msg.from,\n            body: {\n              code: 200,\n              schema: _this._schema,\n              value: msgValue\n            }\n          }; //TODO: For Further Study\n\n          if (msg.body.hasOwnProperty('mutual') && !msg.body.mutual) {\n            sendMsg.body.mutual = msg.body.mutual; // TODO: remove?\n\n            _this.data.mutual = false;\n          }\n\n          if (_this._heartBeat) {\n            sendMsg.body.value.childrenObjects = {};\n            sendMsg.body.value.childrenObjects.heartbeat = _this._heartBeat.heartbeat;\n          }\n\n          console.log('[DataObjectReporter._onSubscribe.accept] sending response: ', sendMsg); //send ok response message\n\n          _this._bus.postMessage(sendMsg);\n\n          return sub;\n        },\n        reject: function reject(reason) {\n          //send reject response message\n          _this._bus.postMessage({\n            id: msg.id,\n            type: 'response',\n            from: msg.to,\n            to: msg.from,\n            body: {\n              code: 403,\n              desc: reason\n            }\n          });\n        }\n      };\n\n      if (_this._onSubscriptionHandler) {\n        DataObjectReporter_log.log('SUBSCRIPTION-EVENT: ', event);\n\n        _this._onSubscriptionHandler(event);\n      }\n    } //FLOW-IN: message received from this -> _onForward: emitted by a remote DataObjectObserver -> unsubscribe\n\n  }, {\n    key: \"_onUnSubscribe\",\n    value: function _onUnSubscribe(msg) {\n      var _this = this;\n\n      var hypertyUrl = msg.body.from;\n      var dividedURL = divideURL(hypertyUrl);\n      var domain = dividedURL.domain;\n      DataObjectReporter_log.log('[DataObjectReporter._onUnSubscribe]', msg, domain, dividedURL); //let sub = _this._subscriptions[hypertyUrl];\n\n      delete _this._subscriptions[hypertyUrl];\n      delete _this.invitations[hypertyUrl];\n      var event = {\n        type: msg.body.type,\n        url: hypertyUrl,\n        domain: domain,\n        identity: msg.body.identity\n      }; // TODO: check if the _onSubscriptionHandler it is the same of the subscriptions???\n\n      if (_this._onSubscriptionHandler) {\n        DataObjectReporter_log.log('UN-SUBSCRIPTION-EVENT: ', event);\n\n        _this._onSubscriptionHandler(event);\n      }\n    } //FLOW-IN: message received from ReporterURL address: emited by a remote Syncher -> _onRemoteCreate -> event.ack\n\n  }, {\n    key: \"_onResponse\",\n    value: function _onResponse(msg) {\n      var _this = this;\n\n      var event = {\n        type: msg.type,\n        url: msg.from,\n        code: msg.body.code\n      };\n\n      if (_this._onResponseHandler) {\n        DataObjectReporter_log.log('RESPONSE-EVENT: ', event);\n\n        _this._onResponseHandler(event);\n      }\n    } //FLOW-IN: message received from ReporterURL address: emited by a remote Syncher -> read\n\n  }, {\n    key: \"_onRead\",\n    value: function _onRead(msg) {\n      var _this = this;\n\n      var childrensSize = JSON.stringify(_this.childrensJSON).length;\n      var largeObject = childrensSize > _this._childrenSizeThreshold ? true : false;\n      var event = {\n        type: msg.type,\n        url: msg.from,\n        accept: function accept() {\n          if (largeObject) _this._syncReplyForLargeData(msg);else _this._syncReply(msg);\n        },\n        reject: function reject(reason) {\n          _this._bus.postMessage({\n            id: msg.id,\n            type: 'response',\n            from: msg.to,\n            to: msg.from,\n            body: {\n              code: 401,\n              desc: reason\n            }\n          });\n        }\n      }; // if the requester is an authorised observer, the data object is responded otherwise an event is triggered\n\n      var subscriptions = [];\n\n      if (_this.metadata.subscriptions) {\n        subscriptions = _this.metadata.subscriptions;\n      } else if (_this._subscriptions) {\n        subscriptions = Object.keys(_this._subscriptions).map(function (key) {\n          return _this._subscriptions[key].url;\n        });\n      }\n\n      if (subscriptions.indexOf(msg.from) != -1) {\n        if (largeObject) _this._syncReplyForLargeData(msg);else _this._syncReply(msg);\n      } else if (_this._onReadHandler) {\n        DataObjectReporter_log.log('READ-EVENT: ', event);\n\n        _this._onReadHandler(event);\n      }\n    }\n  }, {\n    key: \"_syncReply\",\n    value: function _syncReply(msg) {\n      var _this = this;\n\n      var objectValue = deepClone(_this.metadata);\n      objectValue.data = deepClone(_this.data);\n      objectValue.childrenObjects = deepClone(_this.childrensJSON);\n      objectValue.version = _this._version;\n      var response = {\n        id: msg.id,\n        type: 'response',\n        from: msg.to,\n        to: msg.from,\n        body: {\n          code: 200,\n          value: objectValue\n        }\n      };\n\n      _this._bus.postMessage(response);\n    } // This function is only used if the data object to be synched has childrenOjects too large\n\n  }, {\n    key: \"_syncReplyForLargeData\",\n    value: function _syncReplyForLargeData(msg) {\n      //set attribute with number of spllited messages\n      var _this = this; // lets set the initial message with no childObjects\n\n\n      var objectValue = deepClone(_this.metadata);\n      objectValue.data = deepClone(_this.data);\n      objectValue.version = _this._version;\n      delete objectValue.childrenObjects;\n      var children;\n      var values = []; // array of values to be sent in separated responses\n\n      var childrenValue = {}; // value to be used in each response\n\n      for (child in _this._childrenObjects) {\n        //      let child;\n        childrenValue[child] = {}; //      for (child in _this._childrenObjects[children]) {\n\n        if (JSON.stringify(childrenValue).length > _this._childrenSizeThreshold) {\n          //childrenValue big enough to be sent in a response message\n          values.push(childrenValue); //          childrenValue = {};\n          //          childrenValue[child] = {};\n        }\n\n        childrenValue[child] = {};\n        childrenValue[child].value = _this._childrenObjects[child].metadata;\n        childrenValue[child].identity = _this._childrenObjects[child].identity; //      }\n      }\n\n      values.push(childrenValue);\n      objectValue.responses = values.length + 1; //number of responses to be sent\n\n      var initialResponse = {\n        id: msg.id,\n        type: 'response',\n        from: msg.to,\n        to: msg.from,\n        body: {\n          code: 100,\n          value: objectValue\n        }\n      };\n\n      _this._bus.postMessage(initialResponse);\n\n      values.forEach(function (value) {\n        var response = deepClone(initialResponse);\n        response.body.value = value;\n        response.body.value.responses = objectValue.responses;\n        setTimeout(function () {\n          _this._bus.postMessage(response);\n        }, 50); // should put a timeout?\n      });\n    } // Execute request received\n\n  }, {\n    key: \"_onExecute\",\n    value: function _onExecute(msg) {\n      var _this = this;\n\n      if (!msg.body.method) throw '[DataObjectReporter._onExecute] method missing ', msg;\n      var response = {\n        id: msg.id,\n        type: 'response',\n        from: msg.to,\n        to: msg.from,\n        body: {\n          code: 200\n        }\n      };\n      var event = {\n        type: msg.type,\n        url: msg.from,\n        method: msg.body.method,\n        params: msg.body.params,\n        accept: function accept() {\n          _this._bus.postMessage(response);\n        },\n        reject: function reject(reason) {\n          _this._bus.postMessage({\n            id: msg.id,\n            type: 'response',\n            from: msg.to,\n            to: msg.from,\n            body: {\n              code: 401,\n              desc: reason\n            }\n          });\n        }\n      };\n\n      if (_this._onExecuteHandler) {\n        DataObjectReporter_log.log('[DataObjectReporter] EXECUTE-EVENT: ', event);\n\n        _this._onExecuteHandler(event);\n      }\n    }\n  }, {\n    key: \"subscriptions\",\n    get: function get() {\n      return this._subscriptions;\n    }\n  }, {\n    key: \"childrensJSON\",\n    get: function get() {\n      var _this = this;\n\n      var childrens = {}; //    let children;\n      //    for (children in _this._childrenObjects) {\n\n      var child; //      childrens[children] = {};\n\n      for (child in _this._childrenObjects) {\n        childrens[child] = {};\n        childrens[child].value = _this._childrenObjects[child].metadata;\n        childrens[child].identity = _this._childrenObjects[child].identity;\n      } //    }\n\n\n      return childrens;\n    }\n  }]);\n\n  return DataObjectReporter;\n}(syncher_DataObject\n/* implements SyncStatus */\n);\n\n/* harmony default export */ var syncher_DataObjectReporter = (DataObjectReporter_DataObjectReporter);\n// CONCATENATED MODULE: ./src/syncher/DataObjectObserver.js\nfunction DataObjectObserver_typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { DataObjectObserver_typeof = function _typeof(obj) { return typeof obj; }; } else { DataObjectObserver_typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return DataObjectObserver_typeof(obj); }\n\nfunction DataObjectObserver_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction DataObjectObserver_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction DataObjectObserver_createClass(Constructor, protoProps, staticProps) { if (protoProps) DataObjectObserver_defineProperties(Constructor.prototype, protoProps); if (staticProps) DataObjectObserver_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction DataObjectObserver_possibleConstructorReturn(self, call) { if (call && (DataObjectObserver_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return DataObjectObserver_assertThisInitialized(self); }\n\nfunction DataObjectObserver_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction DataObjectObserver_get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { DataObjectObserver_get = Reflect.get; } else { DataObjectObserver_get = function _get(target, property, receiver) { var base = DataObjectObserver_superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return DataObjectObserver_get(target, property, receiver || target); }\n\nfunction DataObjectObserver_superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = DataObjectObserver_getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction DataObjectObserver_getPrototypeOf(o) { DataObjectObserver_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return DataObjectObserver_getPrototypeOf(o); }\n\nfunction DataObjectObserver_inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) DataObjectObserver_setPrototypeOf(subClass, superClass); }\n\nfunction DataObjectObserver_setPrototypeOf(o, p) { DataObjectObserver_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return DataObjectObserver_setPrototypeOf(o, p); }\n\n/**\n* Copyright 2016 PT Inovação e Sistemas SA\n* Copyright 2016 INESC-ID\n* Copyright 2016 QUOBIS NETWORKS SL\n* Copyright 2016 FRAUNHOFER-GESELLSCHAFT ZUR FOERDERUNG DER ANGEWANDTEN FORSCHUNG E.V\n* Copyright 2016 ORANGE SA\n* Copyright 2016 Deutsche Telekom AG\n* Copyright 2016 Apizee\n* Copyright 2016 TECHNISCHE UNIVERSITAT BERLIN\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n**/\n// Log System\n\nvar DataObjectObserver_log = loglevel[\"getLogger\"]('DataObjectObserver');\n\n\nvar FilterType = {\n  ANY: 'any',\n  START: 'start',\n  EXACT: 'exact'\n};\n/**\n * The class returned from the Syncher subscribe call.\n * To be used as an observation point from a DataObjectReporter change.\n */\n\nvar DataObjectObserver_DataObjectObserver =\n/*#__PURE__*/\nfunction (_DataObject) {\n  DataObjectObserver_inherits(DataObjectObserver, _DataObject);\n\n  /* private\n  _changeListener: MsgListener\n   ----event handlers----\n  _filters: {<filter>: {type: <start, exact>, callback: <function>} }\n  */\n\n  /**\n   * @ignore\n   * Should not be used directly by Hyperties. It's called by the Syncher.subscribe method\n   */\n  //TODO: For Further Study\n  function DataObjectObserver(input) {\n    var _this2;\n\n    DataObjectObserver_classCallCheck(this, DataObjectObserver);\n\n    //todo: check why\n    //input.initialData = input.initialData.data;\n    _this2 = DataObjectObserver_possibleConstructorReturn(this, DataObjectObserver_getPrototypeOf(DataObjectObserver).call(this, input));\n\n    var _this = DataObjectObserver_assertThisInitialized(_this2);\n\n    _this._version = input.version;\n    _this._filters = {};\n\n    _this._syncObj.observe(function (event) {\n      _this._onFilter(event);\n    });\n\n    _this._allocateListeners();\n\n    return _this2;\n  }\n  /**\n   * Sync Data Object Observer with last version of Data Object Reporter. Useful for Resumes\n   */\n\n\n  DataObjectObserver_createClass(DataObjectObserver, [{\n    key: \"sync\",\n    value: function sync() {\n      var _this = this;\n\n      DataObjectObserver_log.info('[DataObjectObserver_sync] synchronising ');\n      return new Promise(function (resolve, reject) {\n        var criteria = {}; //      if (this.metadata.backupRevision) criteria.backupRevision = this.metadata.backupRevision;\n\n        _this._syncher.read(_this._metadata.url, criteria).then(function (value) {\n          DataObjectObserver_log.info('[DataObjectObserver_sync] value to sync: ', value);\n          Object.assign(_this.data, deepClone(value.data));\n          _this._version = value.version;\n          _this._metadata.lastModified = value.lastModified; //TODO: check first if there are new childrenObjects to avoid overhead\n\n          if (value.childrenObjects) {\n            _this.resumeChildrens(value.childrenObjects);\n\n            _this._storeChildrens();\n\n            resolve(true);\n          } else resolve(true);\n          /*if (value.version != _this._version) {\n            log.info('[DataObjectObserver_sync] updating existing data: ', _this.data);\n             Object.assign(_this.data || {}, deepClone(value.data));\n             _this._metadata = deepClone(value);\n             delete _this._metadata.data;\n             _this._version = value.version;\n           } else {\n            log.info('[DataObjectObserver_sync] existing data is updated: ', value);\n          }*/\n\n        })[\"catch\"](function (reason) {\n          DataObjectObserver_log.info('[DataObjectObserver_sync] sync failed: ', reason);\n          resolve(false);\n        });\n      });\n    }\n  }, {\n    key: \"_storeChildrens\",\n    value: function _storeChildrens() {\n      var _this = this;\n\n      var childrens = {}; //TODO: to be sent to HypertyResourceStorage when ready to handle Chat Messages\n\n      Object.keys(_this._childrenObjects).forEach(function (childId) {\n        var children = _this._childrenObjects; //      childrens[childrenResource] = {};\n        //      Object.keys(children).forEach((childId) => {\n\n        childrens[childId] = {};\n        childrens[childId].value = children[childId].metadata;\n        childrens[childId].identity = children[childId].identity; //      });\n      });\n      var msg = {\n        from: _this._owner,\n        to: _this._syncher._subURL,\n        type: 'create',\n        body: {\n          resource: _this._url,\n          attribute: 'childrenObjects',\n          value: childrens\n        }\n      };\n\n      _this._bus.postMessage(msg);\n    }\n  }, {\n    key: \"_allocateListeners\",\n    value: function _allocateListeners() {\n      DataObjectObserver_get(DataObjectObserver_getPrototypeOf(DataObjectObserver.prototype), \"_allocateListeners\", this).call(this);\n\n      var _this = this;\n\n      _this._changeListener = _this._bus.addListener(_this._url + '/changes', function (msg) {\n        if (msg.type === 'update') {\n          DataObjectObserver_log.log('DataObjectObserver-' + _this._url + '-RCV: ', msg);\n\n          _this._changeObject(_this._syncObj, msg);\n        }\n      });\n    }\n  }, {\n    key: \"_releaseListeners\",\n    value: function _releaseListeners() {\n      DataObjectObserver_get(DataObjectObserver_getPrototypeOf(DataObjectObserver.prototype), \"_releaseListeners\", this).call(this);\n\n      var _this = this;\n\n      _this._changeListener.remove();\n    }\n    /**\n     * Release and delete object data\n     */\n\n  }, {\n    key: \"delete\",\n    value: function _delete() {\n      var _this = this;\n\n      if (_this._heartBeat) _this._heartBeat.stop();\n\n      _this._deleteChildrens().then(function () {\n        _this.unsubscribe();\n\n        _this._releaseListeners();\n\n        delete _this._syncher._observers[_this._url];\n      });\n    }\n    /**\n     * Release and delete object data\n     */\n\n  }, {\n    key: \"unsubscribe\",\n    value: function unsubscribe() {\n      var _this = this; //FLOW-OUT: this message will be sent to the runtime instance of SyncherManager -> _onLocalUnSubscribe\n\n\n      var unSubscribeMsg = {\n        type: 'unsubscribe',\n        from: _this._owner,\n        to: _this._syncher._subURL,\n        body: {\n          resource: _this._url\n        }\n      };\n\n      _this._bus.postMessage(unSubscribeMsg, function (reply) {\n        DataObjectObserver_log.log('DataObjectObserver-UNSUBSCRIBE: ', reply);\n\n        if (reply.body.code === 200) {\n          _this._releaseListeners();\n\n          delete _this._syncher._observers[_this._url];\n        }\n      });\n    }\n    /**\n     * Register the change listeners sent by the reporter\n     * @param {string} filter - Filter that identifies the field (separated dot path). Accepts * at the end for a more unrestricted filtering.\n     * @param {function(event: MsgEvent)} callback\n     */\n\n  }, {\n    key: \"onChange\",\n    value: function onChange(filter, callback) {\n      var key = filter;\n      var filterObj = {\n        type: FilterType.EXACT,\n        callback: callback\n      };\n      var idx = filter.indexOf('*');\n\n      if (idx === filter.length - 1) {\n        if (idx === 0) {\n          filterObj.type = FilterType.ANY;\n        } else {\n          filterObj.type = FilterType.START;\n          key = filter.substr(0, filter.length - 1);\n        }\n      }\n\n      this._filters[key] = filterObj;\n    }\n  }, {\n    key: \"_onFilter\",\n    value: function _onFilter(event) {\n      var _this = this;\n\n      Object.keys(_this._filters).forEach(function (key) {\n        var filter = _this._filters[key];\n\n        if (filter.type === FilterType.ANY) {\n          //match anything\n          filter.callback(event);\n        } else if (filter.type === FilterType.START) {\n          //if starts with filter...\n          if (event.field.indexOf(key) === 0) {\n            filter.callback(event);\n          }\n        } else if (filter.type === FilterType.EXACT) {\n          //exact match\n          if (event.field === key) {\n            filter.callback(event);\n          }\n        }\n      });\n    }\n  }, {\n    key: \"onDisconnected\",\n    value: function onDisconnected(callback) {\n      var _this3 = this;\n\n      return new Promise(function (resolve, reject) {\n        _this3._subscribeRegistration().then(function () {\n          _this3._onDisconnected = callback;\n          resolve();\n        })[\"catch\"](function (err) {\n          return reject(err);\n        });\n      });\n    }\n  }, {\n    key: \"_subscribeRegistration\",\n    value: function _subscribeRegistration() {\n      var _this4 = this;\n\n      var msg = {\n        type: 'subscribe',\n        from: this._owner,\n        to: this._syncher._runtimeUrl + '/subscriptions',\n        body: {\n          resources: [this._url + '/registration']\n        }\n      };\n      return new Promise(function (resolve, reject) {\n        _this4._bus.postMessage(msg, function (reply) {\n          DataObjectObserver_log.log(\"[DataObjectObserver._subscribeRegistration] \".concat(_this4._url, \" rcved reply \"), reply);\n\n          if (reply.body.code === 200) {\n            _this4._generateListener(_this4._url + '/registration');\n\n            resolve();\n          } else {\n            DataObjectObserver_log.error('Error subscribing registration status for ', _this4._url);\n            reject('Error subscribing registration status for ' + _this4._url);\n          }\n        });\n      });\n    }\n  }, {\n    key: \"_generateListener\",\n    value: function _generateListener(notificationURL) {\n      var _this = this;\n\n      _this._bus.addListener(notificationURL, function (msg) {\n        DataObjectObserver_log.log(\"[DataObjectObserver.registrationNotification] \".concat(_this._url, \": \"), msg);\n\n        if (msg.body.value && msg.body.value === 'disconnected' && _this._onDisconnected) {\n          DataObjectObserver_log.log(\"[DataObjectObserver] \".concat(_this._url, \": was disconnected \"), msg);\n\n          _this._onDisconnected();\n        }\n      });\n    }\n    /**\n     * Requests the reporter to execute a method on the data object\n     * @param {string} method - Name of the function to be executed.\n     * @param {array} params - array of parameters for the requested function\n     * @return {promise}\n     */\n\n  }, {\n    key: \"execute\",\n    value: function execute(method, params) {\n      var _this5 = this;\n\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        var msg = {\n          type: 'execute',\n          from: _this5._owner,\n          to: _this._url,\n          body: {\n            method: method,\n            params: params\n          }\n        };\n\n        _this._bus.postMessage(msg, function (reply) {\n          DataObjectObserver_log.log(\"[DataObjectObserver.execute] \".concat(_this._url, \" rcved reply \"), reply);\n\n          if (reply.body.code === 200) {\n            resolve();\n          } else {\n            DataObjectObserver_log.warn(\"[DataObjectObserver.execute] execution of method \".concat(method, \" was reject by reporter\"));\n            reject(\"[DataObjectObserver.execute] execution of method \".concat(method, \" was reject by reporter\"));\n          }\n        });\n      });\n    }\n  }]);\n\n  return DataObjectObserver;\n}(syncher_DataObject\n/* implements SyncStatus */\n);\n\n/* harmony default export */ var syncher_DataObjectObserver = (DataObjectObserver_DataObjectObserver);\n// CONCATENATED MODULE: ./src/syncher/DataProvisional.js\nfunction DataProvisional_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction DataProvisional_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction DataProvisional_createClass(Constructor, protoProps, staticProps) { if (protoProps) DataProvisional_defineProperties(Constructor.prototype, protoProps); if (staticProps) DataProvisional_defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n* Copyright 2016 PT Inovação e Sistemas SA\n* Copyright 2016 INESC-ID\n* Copyright 2016 QUOBIS NETWORKS SL\n* Copyright 2016 FRAUNHOFER-GESELLSCHAFT ZUR FOERDERUNG DER ANGEWANDTEN FORSCHUNG E.V\n* Copyright 2016 ORANGE SA\n* Copyright 2016 Deutsche Telekom AG\n* Copyright 2016 Apizee\n* Copyright 2016 TECHNISCHE UNIVERSITAT BERLIN\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n**/\n\n/**\n * @access private\n * This class is responsible for collecting delta changes in remote objects, before the response of subscription reach the observer.\n * It's used in Syncher -> subscribe. The flow is defined as:\n * 1. (observer) --subscribe--\x3e (reporter)\n * 2. (observer) <--delta updates-- (reporter)\n * 3. (observer) <--subscribe response-- (reporter)\n * This means that there could be delta updates transferred before the subscription confirmation.\n * Since there is no DataObjectObserver before the ubscription confirmation, there should be some other object collecting the updates.\n * Provisional data is applied to the DataObjectObserver after confirmation. Or discarded if there is no confirmation.\n */\n// Log System\n\nvar DataProvisional_log = loglevel[\"getLogger\"]('DataProvisional');\n\nvar DataProvisional =\n/*#__PURE__*/\nfunction () {\n  /* private\n  _childrenListeners: [MsgListener]\n  _listener: MsgListener\n   _changes: []\n  */\n  function DataProvisional(owner, url, bus, children) {\n    DataProvisional_classCallCheck(this, DataProvisional);\n\n    var _this = this;\n\n    _this._owner = owner;\n    _this._url = url;\n    _this._bus = bus;\n    _this._children = children;\n    _this._changes = [];\n\n    _this._allocateListeners();\n  }\n\n  DataProvisional_createClass(DataProvisional, [{\n    key: \"_allocateListeners\",\n    value: function _allocateListeners() {\n      var _this = this;\n\n      _this._listener = _this._bus.addListener(_this._url, function (msg) {\n        DataProvisional_log.log('DataProvisional-' + _this._url + '-RCV: ', msg);\n\n        _this._changes.push(msg);\n      });\n      /*\n      _this._childrenListeners = [];\n      if (_this._children) {\n        let childBaseURL = url + '/children/';\n        _this._children.forEach((child) => {\n          let childURL = childBaseURL + child;\n          let listener = _this._bus.addListener(childURL, (msg) => {\n            //ignore msg sent by himself\n            if (msg.from !== owner) {\n              log.log(msg);\n            }\n          });\n           _this._childrenListeners.push(listener);\n        });\n      }*/\n    }\n  }, {\n    key: \"_releaseListeners\",\n    value: function _releaseListeners() {\n      var _this = this;\n\n      _this._listener.remove();\n      /*_this._childrenListeners.forEach((listener) => {\n        listener.remove();\n      });*/\n\n    }\n  }, {\n    key: \"apply\",\n    value: function apply(observer) {\n      var _this = this;\n\n      _this._changes.forEach(function (change) {\n        observer._changeObject(observer._syncObj, change);\n      });\n    }\n  }, {\n    key: \"children\",\n    get: function get() {\n      return this._children;\n    }\n  }]);\n\n  return DataProvisional;\n}();\n\n/* harmony default export */ var syncher_DataProvisional = (DataProvisional);\n// CONCATENATED MODULE: ./src/syncher/Syncher.js\nfunction Syncher_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction Syncher_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Syncher_createClass(Constructor, protoProps, staticProps) { if (protoProps) Syncher_defineProperties(Constructor.prototype, protoProps); if (staticProps) Syncher_defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n* Copyright 2016 PT Inovação e Sistemas SA\n* Copyright 2016 INESC-ID\n* Copyright 2016 QUOBIS NETWORKS SL\n* Copyright 2016 FRAUNHOFER-GESELLSCHAFT ZUR FOERDERUNG DER ANGEWANDTEN FORSCHUNG E.V\n* Copyright 2016 ORANGE SA\n* Copyright 2016 Deutsche Telekom AG\n* Copyright 2016 Apizee\n* Copyright 2016 TECHNISCHE UNIVERSITAT BERLIN\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n**/\n// Log System\n\nvar Syncher_log = loglevel[\"getLogger\"]('Syncher');\n\n\n\n\n/**\n* The main class for the syncher package.\n* The Syncher is a singleton class per Hyperty/URL and it is the owner of all created Data Sync Objects according to the Reporter - Observer pattern.\n* Main functionality is to create reporters and to subscribe to existing ones.\n*/\n\nvar Syncher_Syncher =\n/*#__PURE__*/\nfunction () {\n  /* private\n  _owner: URL\n  _bus: MiniBus\n   _subURL: URL\n   _reporters: <url: DataObjectReporter>\n  _observers: <url: DataObjectObserver>\n  _provisionals: <url: DataProvisional>\n   ----event handlers----\n  _onNotificationHandler: (event) => void\n  _onResume: (event) => void\n  */\n\n  /**\n  * Constructor that should be used by the Hyperty owner\n  * @param {HypertyURL} owner - Hyperty URL owner. An URL allocated by the runtime that uniquely identifies the Hyperty.\n  * @param {MiniBus} bus - An instance of the MiniBus provided in the sandbox. When an object (Reporter or Observed) is created, the SyncherManager will add a listener in the MiniBus to receive/send Messages of that object.\n  * @param {JSON} config - Configuration data. The only required field for now is the runtimeURL.\n  */\n  function Syncher(owner, bus, config) {\n    Syncher_classCallCheck(this, Syncher);\n\n    var _this = this;\n\n    _this._owner = owner;\n    _this._bus = bus;\n    _this._subURL = config.runtimeURL + '/sm';\n    _this._runtimeUrl = config.runtimeURL;\n    _this._p2pHandler = config.p2pHandler;\n    _this._p2pRequester = config.p2pRequester;\n    _this._reporters = {};\n    _this._observers = {};\n    _this._provisionals = {};\n    bus.addListener(owner, function (msg) {\n      //ignore msg sent by himself\n      if (msg.from !== owner) {\n        Syncher_log.info('[Syncher] Syncher-RCV: ', msg, _this);\n\n        switch (msg.type) {\n          case 'forward':\n            _this._onForward(msg);\n\n            break;\n\n          case 'create':\n            _this._onRemoteCreate(msg);\n\n            break;\n\n          case 'delete':\n            _this._onRemoteDelete(msg);\n\n            break;\n\n          case 'execute':\n            _this._onExecute(msg);\n\n            break;\n        }\n      }\n    });\n  }\n  /**\n  * The owner of the Syncher and all created reporters.\n  * @type {HypertyURL}\n  */\n\n\n  Syncher_createClass(Syncher, [{\n    key: \"create\",\n\n    /**\n    * Request a DataObjectReporter creation. The URL will be be requested by the allocation mechanism.\n    * @param  {SchemaURL} schema - Hyperty Catalogue URL address that can be used to retrieve the JSON-Schema describing the Data Object schema\n    * @param  {HypertyURL[]} observers - List of hyperties that are pre-authorized for subscription\n    * @param  {JSON} initialData - Initial data of the reporter\n    * @param  {boolean} store - (Optional) if true, object will be stored by the runtime\n    * @param  {boolean} p2p - (Optional) if true, data synchronisation stream will use p2p connection as much as possible\n    * @param  {string} name - (Optional) the name of the dataobject\n    * @param  {MessageBodyIdentity} identity - (optional) identity data to be added to identity the user reporter. To be used for legacy identities.\n    * @param  {SyncMetadata} input - (optional) all metadata required to sunc the Data Object.\n    * @return {Promise<DataObjectReporter>} Return Promise to a new Reporter. The reporter can be accepted or rejected by the PEP\n    */\n    value: function create(schema, observers, initialData) {\n      var store = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n      var p2p = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n      var name = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 'no name';\n      var identity = arguments.length > 6 ? arguments[6] : undefined;\n      var input = arguments.length > 7 ? arguments[7] : undefined;\n      if (!schema) throw Error('[Syncher - Create] - You need specify the data object schema');\n      if (!observers) throw Error('[Syncher - Create] -The observers should be defined');\n\n      var _this = this;\n\n      input = input || {};\n      var createInput = Object.assign({}, input);\n      createInput.p2p = p2p;\n      createInput.store = store;\n      createInput.schema = schema;\n      createInput.authorise = observers;\n      createInput.p2pHandler = _this._p2pHandler;\n      createInput.p2pRequester = _this._p2pRequester;\n      initialData ? createInput.data = deepClone(initialData) : createInput.data = {};\n      createInput.name = name.length === 0 ? 'no name' : name;\n      createInput.reporter = input.hasOwnProperty('reporter') && typeof input.reporter !== 'boolean' ? input.reporter : _this._owner;\n      createInput.resume = false;\n\n      if (input) {\n        createInput.mutual = input.hasOwnProperty('mutual') ? input.mutual : false;\n        createInput.name = input.hasOwnProperty('name') ? input.name : createInput.name;\n      } else {\n        createInput.mutual = false;\n      }\n\n      if (input.hasOwnProperty('reuseURL')) {\n        createInput.resource = input.reuseURL;\n      }\n\n      if (identity) {\n        createInput.identity = identity;\n      } //Object.assign(createInput, {resume: false});\n      //debugger;\n      //    console.log('[syncher - create] - create Reporter - createInput: ', createInput);\n\n\n      return _this._create(createInput);\n    }\n    /**\n    * Request a DataObjectReporter creation. The URL will be be requested by the allocation mechanism.\n    * @param  {Object} criteria - (optional) identity data to be added to identity the user reporter. To be used for legacy identities.\n    * @return {Promise<DataObjectReporter>[]} Return a promise with a list of DataObjectReporter to be resumed;\n    */\n\n  }, {\n    key: \"resumeReporters\",\n    value: function resumeReporters(criteria) {\n      var _this = this;\n\n      Syncher_log.log('[syncher - create] - resume Reporter - criteria: ', criteria);\n      Object.assign(criteria, {\n        resume: true\n      });\n      return _this._resumeCreate(criteria);\n    }\n    /**\n    * Request a subscription to an existent reporter object.\n    * @param {SchemaURL} schema - Hyperty Catalogue URL address that can be used to retrieve the JSON-Schema describing the Data Object schema\n    * @param {ObjectURL} objURL - Address of the existent reporter object to be observed\n    * @param {Boolean} [store=false] - Save the subscription on the Syncher Manager for further resume (Default is false)\n    * @param {Boolean} [p2p=false] - Info about if should use p2p connection (Default is false)\n    * @param {Boolean} [mutual=true] - Info about if messages of this object should be encrypted (Default is true)\n    * @param  {MessageBodyIdentity} identity - (optional) identity data to be added to identity the user reporter. To be used for legacy identities.\n    * @return {Promise<DataObjectObserver>} Return Promise to a new observer. It's associated with the reporter.\n    */\n\n  }, {\n    key: \"subscribe\",\n    value: function subscribe(input) {\n      /*  let _this = this;\n        let criteria = {};\n         criteria.p2p = p2p;\n        criteria.store = store;\n        criteria.schema = schema;\n        criteria.domain_subscription = domain_subscription;\n         criteria.resource = objURL;\n        if (identity)      { criteria.identity = identity; }\n         //TODO: For Further Study\n        criteria.mutual = mutual;\n         log.log('[syncher - subscribe] - subscribe criteria: ', criteria);\n         Object.assign(criteria, {resume: false});*/\n      return this._subscribe(input);\n    }\n    /**\n    * Request a subscription to an existent reporter object.\n    * @param {criteria} criteria - Information to discovery the observer object\n    * @return {Promise<DataObjectObserver>} Return Promise to a new observer. It's associated with the reporter.\n    */\n\n  }, {\n    key: \"resumeObservers\",\n    value: function resumeObservers(criteria) {\n      var _this = this;\n\n      var _criteria = criteria || {};\n\n      Object.assign(_criteria, {\n        resume: true\n      });\n      return _this._resumeSubscribe(_criteria);\n    }\n    /**\n    * Request a read action on the reporter object\n    * @param {ObjectURL} objURL - URL of the reporter object to be read\n    * @return {Promise<Object>} Return Promise to last available data of the reporter\n    */\n\n  }, {\n    key: \"read\",\n    value: function read(objURL, criteria) {\n      var _this = this;\n\n      console.log('[Syncher.read] ', objURL);\n      return new Promise(function (resolve, reject) {\n        // in case the object is synched in a remote storage, lets sync with it\n        //      if (_this._observers[objURL] && _this._observers[objURL].metadata.hasOwnProperty('backup') && _this._observers[objURL].metadata.backup) {\n        var readMsg = {\n          type: 'read',\n          from: _this._owner,\n          to: _this._subURL,\n          body: {\n            resource: objURL\n          }\n        };\n        if (criteria) readMsg.body.criteria = criteria;\n\n        var callback = function callback(reply) {\n          resolve(reply.body.value);\n        };\n\n        _this._bus.postMessage(readMsg, callback, false);\n        /*     } else {\n               _this._readReporter(objURL).then((result)=> {\n               resolve(result);\n             });\n           }*/\n\n      });\n    }\n    /*  _readCallBack(reply, resolve,reject) {\n        let _this = this;\n    \n          console.log('[Syncher.read] reply: ', reply);\n    \n          let childrens = {};\n          let value = {};\n          let n = 0;\n    \n          if (reply.body.code < 300) {\n            if (!reply.body.value.hasOwnProperty('responses')) {\n              _this._bus.removeResponseListener(reply.from, reply.id);\n              resolve(reply.body.value);\n            } else { //data object is sent in separated messages\n              if (n === 0) { //initial response without childrens\n                value = reply.body.value;\n                ++n;\n              } else { // received response contains childrens\n                delete reply.body.value.responses;\n                let children;\n                for (children in reply.body.value) {\n                  if (!childrens.hasOwnProperty(children)) childrens[children] = {};\n                  Object.assign(childrens[children], reply.body.value[children]);\n                }\n                ++n;\n                if (n === value.responses) {\n                  value.childrenObjects = childrens;\n                  delete value.responses;\n                  _this._bus.removeResponseListener(reply.from, reply.id);\n                  resolve(value);\n                }\n              }\n            }\n          } else {\n    \n          reject(reply.body.desc);\n          }\n    \n      }*/\n\n  }, {\n    key: \"_readReporter\",\n    value: function _readReporter(objURL) {\n      var _this = this; //FLOW-OUT: this message will be sent directly to reporter object (maybe there is no listener available, so it will be resolved with MessageBus -> resolve)\n      //will reach the remote object in DataObjectReporter -> _onRead\n\n\n      var readMsg = {\n        type: 'read',\n        from: _this._owner,\n        to: objURL\n      };\n      return new Promise(function (resolve, reject) {\n        _this._bus.postMessage(readMsg, function (reply) {\n          return _this._readCallBack(reply, resolve, reject);\n        }, false);\n      });\n    }\n    /**\n    * Setup the callback to process create and delete events of remove Reporter objects.\n    * This is releated to the messagens sent by create to the observers Hyperty array.\n    * @param {function(event: MsgEvent)} callback\n    */\n\n  }, {\n    key: \"onNotification\",\n    value: function onNotification(callback) {\n      this._onNotificationHandler = callback;\n    }\n    /**\n    * Setup the callback to process close events from the runtime.\n    * @param {function(event: MsgEvent)} callback\n    */\n\n  }, {\n    key: \"onClose\",\n    value: function onClose(callback) {\n      this._onClose = callback;\n    }\n  }, {\n    key: \"_create\",\n    value: function _create(input) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        var reporterInput = Object.assign({}, input);\n        var resume = input.resume;\n        reporterInput.created = new Date().toISOString();\n        reporterInput.runtime = _this._runtimeUrl;\n        var requestValue = deepClone(reporterInput);\n        delete requestValue.p2p;\n        delete requestValue.store;\n        delete requestValue.observers;\n        delete requestValue.identity; //FLOW-OUT: this message will be sent to the runtime instance of SyncherManager -> _onCreate\n        //debugger;\n\n        var requestMsg = {\n          type: 'create',\n          from: _this._owner,\n          to: _this._subURL,\n          body: {\n            resume: resume,\n            value: requestValue\n          }\n        };\n        requestMsg.body.schema = reporterInput.schema;\n        if (reporterInput.p2p) requestMsg.body.p2p = reporterInput.p2p;\n        if (reporterInput.store) requestMsg.body.store = reporterInput.store;\n        if (reporterInput.identity) requestMsg.body.identity = reporterInput.identity;\n        console.log('[syncher._create]: ', reporterInput, requestMsg); //request create to the allocation system. Can be rejected by the PolicyEngine.\n\n        _this._bus.postMessage(requestMsg, function (reply) {\n          Syncher_log.log('[syncher - create] - create-response: ', reply);\n\n          if (reply.body.code === 200) {\n            //reporter creation accepted\n            reporterInput.url = reply.body.resource;\n            /*          if (reply.body.p2pHandler) reporterInput.p2pHandler = reply.body.p2pHandler;\n                      if (reply.body.p2pRequester) reporterInput.p2pRequester = reply.body.p2pRequester;*/\n\n            reporterInput.status = 'live'; // pch: do we ned this?\n\n            reporterInput.syncher = _this;\n            reporterInput.childrens = reply.body.childrenResources;\n            var newObj = _this._reporters[reporterInput.url];\n\n            if (!newObj) {\n              newObj = new syncher_DataObjectReporter(reporterInput);\n              _this._reporters[reporterInput.url] = newObj;\n            }\n\n            newObj.inviteObservers(input.authorise, input.p2p);\n            resolve(newObj);\n          } else {\n            //reporter creation rejected\n            reject(reply.body.desc);\n          }\n        });\n      });\n    }\n  }, {\n    key: \"_resumeCreate\",\n    value: function _resumeCreate(criteria) {\n      var _this2 = this;\n\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        var resume = criteria.resume; //FLOW-OUT: this message will be sent to the runtime instance of SyncherManager -> _onCreate\n\n        var requestMsg = {\n          type: 'create',\n          from: _this._owner,\n          to: _this._subURL,\n          body: {\n            resume: resume\n          }\n        };\n        Syncher_log.log('[syncher - create]: ', criteria, requestMsg);\n\n        if (criteria) {\n          requestMsg.body.value = criteria;\n\n          if (criteria.hasOwnProperty('reporter')) {\n            requestMsg.body.value.reporter = criteria.reporter;\n          } else {\n            requestMsg.body.value.reporter = _this._owner;\n          }\n        }\n\n        if (criteria.p2p) requestMsg.body.p2p = criteria.p2p;\n        if (criteria.store) requestMsg.body.store = criteria.store;\n        if (criteria.observers) requestMsg.body.authorise = criteria.observers;\n        if (criteria.identity) requestMsg.body.identity = criteria.identity;\n        Syncher_log.log('[syncher._resumeCreate] - resume message: ', requestMsg); //debugger;\n        //request create to the allocation system. Can be rejected by the PolicyEngine.\n\n        _this._bus.postMessage(requestMsg, function (reply) {\n          Syncher_log.log('[syncher._resumeCreate] - create-resumed-response: ', reply);\n\n          if (reply.body.code === 200) {\n            //debugger;\n            var listOfReporters = reply.body.value;\n\n            for (var index in listOfReporters) {\n              var dataObject = listOfReporters[index]; //reporter creation accepted\n\n              dataObject.data = deepClone(dataObject.data) || {};\n\n              if (dataObject.childrenObjects) {\n                dataObject.childrenObjects = deepClone(dataObject.childrenObjects);\n              }\n\n              dataObject.mutual = false;\n              dataObject.resume = true;\n              dataObject.status = 'live'; // pch: do we ned this?\n\n              dataObject.syncher = _this;\n              Syncher_log.log('[syncher._resumeCreate] - create-resumed-dataObjectReporter', dataObject);\n              var newObj = new syncher_DataObjectReporter(dataObject);\n\n              if (dataObject.childrenObjects) {\n                newObj.resumeChildrens(dataObject.childrenObjects);\n              }\n\n              _this._reporters[dataObject.url] = newObj;\n            }\n\n            resolve(_this._reporters);\n            if (_this2._onReportersResume) _this2._onReportersResume(_this2._reporters);\n          } else if (reply.body.code === 404) {\n            resolve({});\n          } else {\n            //reporter creation rejected\n            reject(reply.body.desc);\n          }\n        });\n      });\n    }\n  }, {\n    key: \"_subscribe\",\n    value: function _subscribe(input) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        //FLOW-OUT: this message will be sent to the runtime instance of SyncherManager -> _onLocalSubscribe\n        var subscribeMsg = {\n          type: 'subscribe',\n          from: _this._owner,\n          to: _this._subURL,\n          body: input\n        }; // Hyperty request to be an Observer\n        // https://github.com/reTHINK-project/specs/blob/master/messages/data-sync-messages.md#hyperty-request-to-be-an-observer\n        // Resume Subscriptions for the same Hyperty URL\n        // https://github.com/reTHINK-project/specs/blob/master/messages/data-sync-messages.md#resume-subscriptions-for-the-same-hyperty-url\n        // Resume Subscriptions for a certain user and data schema independently of the Hyperty URL.\n        // https://github.com/reTHINK-project/specs/blob/master/messages/data-sync-messages.md#resume-subscriptions-for-a-certain-user-and-data-schema-independently-of-the-hyperty-url\n\n        /*      if (input) {\n                if (input.hasOwnProperty('p2p')) subscribeMsg.body.p2p = input.p2p;\n                if (input.hasOwnProperty('store')) subscribeMsg.body.store = input.store;\n                if (input.hasOwnProperty('schema')) subscribeMsg.body.schema = input.schema;\n                if (input.hasOwnProperty('identity')) subscribeMsg.body.identity = input.identity;\n                if (input.hasOwnProperty('resource')) subscribeMsg.body.resource = input.resource;\n                if (input.hasOwnProperty('domain_subscription')) subscribeMsg.body.domain_subscription = input.domain_subscription;\n              }\n              \n        \n              subscribeMsg.body.resume = input.resume;\n        \n              //TODO: For Further Study\n              if (input.hasOwnProperty('mutual')) subscribeMsg.body.mutual = input.mutual;*/\n\n        Syncher_log.log('[syncher_subscribe] - subscribe message: ', input, subscribeMsg); //request subscription\n        //Provisional data is applied to the DataObjectObserver after confirmation. Or discarded if there is no confirmation.\n        //for more info see the DataProvisional class documentation.\n\n        var msgId = _this._bus.postMessage(subscribeMsg);\n\n        _this._bus.addResponseListener(_this._owner, msgId, function (reply) {\n          Syncher_log.log('[syncher] - subscribe-response: ', reply);\n          var objURL = reply.body.resource;\n          var newProvisional = _this._provisionals[objURL];\n          delete _this._provisionals[objURL];\n          if (newProvisional) newProvisional._releaseListeners();\n\n          if (reply.body.code < 200) {\n            Syncher_log.log('[syncher] - new DataProvisional: ', reply.body.childrenResources, objURL);\n            newProvisional = new syncher_DataProvisional(_this._owner, objURL, _this._bus, reply.body.childrenResources);\n            _this._provisionals[objURL] = newProvisional;\n          } else if (reply.body.code === 200) {\n            Syncher_log.log('[syncher] - new Data Object Observer: ', reply, _this._provisionals);\n            var observerInput = reply.body.value;\n            observerInput.syncher = _this;\n            observerInput.p2p = input.p2p;\n            observerInput.store = input.store;\n            observerInput.identity = input.identity;\n            observerInput.resume = false; // todo: For Further Study\n\n            observerInput.mutual = input.mutual; //observerInput.children = newProvisional.children;\n            //TODO: mutual For Further Study\n\n            var newObj = _this._observers[objURL];\n\n            if (!newObj) {\n              newObj = new syncher_DataObjectObserver(observerInput);\n              _this._observers[objURL] = newObj;\n            } else {\n              newObj.sync();\n            }\n\n            Syncher_log.log('[syncher] - new Data Object Observer already exist: ', newObj);\n\n            _this._bus.removeResponseListener(_this._owner, msgId);\n\n            resolve(newObj);\n\n            if (newProvisional) {\n              newProvisional.apply(newObj);\n            }\n          } else {\n            _this._bus.removeResponseListener(_this._owner, msgId);\n\n            reject(reply.body.desc);\n          }\n        });\n      });\n    }\n    /*\n      _processOfflineSubscription(subscription, redirectTo) {\n        let _this = this;\n    \n        let forward = {\n          from: subscription.from,\n          type: 'forward',\n          to: redirectTo,\n          body: subscription\n        };\n    \n        console.log('[Syncher._processOfflineSubscription] forwading ', forward);\n    \n        _this._bus.postMessage(forward);\n    \n        let result = {\n          code: 302,\n          desc: \"Found \" + redirectTo\n        };\n    \n        return(result);\n    \n      }*/\n\n  }, {\n    key: \"_resumeSubscribe\",\n    value: function _resumeSubscribe(criteria) {\n      var _this3 = this;\n\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        //FLOW-OUT: this message will be sent to the runtime instance of SyncherManager -> _onLocalSubscribe\n        var subscribeMsg = {\n          type: 'subscribe',\n          from: _this._owner,\n          to: _this._subURL,\n          body: {}\n        }; // Hyperty request to be an Observer\n        // https://github.com/reTHINK-project/specs/blob/master/messages/data-sync-messages.md#hyperty-request-to-be-an-observer\n        // Resume Subscriptions for the same Hyperty URL\n        // https://github.com/reTHINK-project/specs/blob/master/messages/data-sync-messages.md#resume-subscriptions-for-the-same-hyperty-url\n        // Resume Subscriptions for a certain user and data schema independently of the Hyperty URL.\n        // https://github.com/reTHINK-project/specs/blob/master/messages/data-sync-messages.md#resume-subscriptions-for-a-certain-user-and-data-schema-independently-of-the-hyperty-url\n\n        if (criteria) {\n          if (criteria.hasOwnProperty('p2p')) subscribeMsg.body.p2p = criteria.p2p;\n          if (criteria.hasOwnProperty('store')) subscribeMsg.body.store = criteria.store;\n          if (criteria.hasOwnProperty('schema')) subscribeMsg.body.schema = criteria.schema;\n          if (criteria.hasOwnProperty('identity')) subscribeMsg.body.identity = criteria.identity;\n          if (criteria.hasOwnProperty('resource')) subscribeMsg.body.resource = criteria.resource;\n        }\n\n        subscribeMsg.body.resume = criteria.resume; //TODO: For Further Study\n\n        var mutual = criteria.mutual;\n        if (criteria.hasOwnProperty('mutual')) subscribeMsg.body.mutual = mutual;\n        console.log('[syncher] - subscribe message: ', criteria, subscribeMsg); //request subscription\n        //Provisional data is applied to the DataObjectObserver after confirmation. Or discarded if there is no confirmation.\n        //for more info see the DataProvisional class documentation.\n\n        _this._bus.postMessage(subscribeMsg, function (reply) {\n          console.log('[syncher] - subscribe-resumed-response: ', reply);\n          var objURL = reply.body.resource;\n          var newProvisional = _this._provisionals[objURL];\n          delete _this._provisionals[objURL];\n          if (newProvisional) newProvisional._releaseListeners();\n\n          if (reply.body.code < 200) {\n            // todo: check if this is needed for the resume\n            Syncher_log.log('[syncher] - resume new DataProvisional: ', reply, objURL);\n            newProvisional = new syncher_DataProvisional(_this._owner, objURL, _this._bus, reply.body.childrenResources);\n            _this._provisionals[objURL] = newProvisional;\n          } else if (reply.body.code === 200) {\n            var listOfObservers = reply.body.value;\n\n            for (var index in listOfObservers) {\n              var dataObject = listOfObservers[index];\n              console.log('[syncher] - Resume Object Observer: ', reply, dataObject, _this._provisionals);\n\n              if (dataObject.childrenObjects) {\n                dataObject.childrenObjects = deepClone(dataObject.childrenObjects);\n              }\n\n              dataObject.data = deepClone(dataObject.data) || {};\n              dataObject.resume = true;\n              dataObject.syncher = _this; //TODO: mutual For Further Study\n\n              console.log('[syncher._resumeSubscribe] - create new dataObject: ', dataObject);\n              var newObj = new syncher_DataObjectObserver(dataObject);\n\n              if (dataObject.childrenObjects) {\n                newObj.resumeChildrens(dataObject.childrenObjects);\n              }\n\n              Syncher_log.log('[syncher._resumeSubscribe] - new dataObject', newObj);\n              _this._observers[newObj.url] = newObj;\n\n              if (_this._provisionals[newObj.url]) {\n                _this._provisionals[newObj.url].apply(newObj);\n              } //lets sync with Reporter\n              // it was commented to let hyperties decide when to sync\n              //newObj.sync();\n\n            }\n\n            resolve(_this._observers);\n            if (_this3._onObserversResume) _this3._onObserversResume(_this._observers);\n          } else if (reply.body.code === 404) {\n            resolve({});\n          } else {\n            reject(reply.body.desc);\n          }\n        });\n      });\n    } //FLOW-IN: message received from a local runtime ReporterObject -> _onRemoteSubscribe\n\n  }, {\n    key: \"_onForward\",\n    value: function _onForward(msg) {\n      var _this = this;\n\n      var reporter = _this._reporters[msg.body.to];\n\n      reporter._onForward(msg);\n    } //FLOW-IN: message received from a remote Syncher -> create (this is actually an invitation to subscribe)\n\n  }, {\n    key: \"_onRemoteCreate\",\n    value: function _onRemoteCreate(msg) {\n      var _this = this;\n\n      var resource = msg.from.slice(0, -13); //remove \"/subscription\" from the URL\n\n      var dividedURL = divideURL(resource);\n      var domain = dividedURL.domain;\n      var event = {\n        type: msg.type,\n        from: msg.body.source,\n        url: resource,\n        domain: domain,\n        schema: msg.body.schema,\n        value: msg.body.value,\n        identity: msg.body.identity,\n        ack: function ack(type) {\n          var lType = 200;\n\n          if (type) {\n            lType = type;\n          } //send ack response message\n\n\n          _this._bus.postMessage({\n            id: msg.id,\n            type: 'response',\n            from: msg.to,\n            to: msg.from,\n            body: {\n              code: lType\n            }\n          });\n        }\n      };\n\n      if (_this._onNotificationHandler) {\n        Syncher_log.info('[Syncher] NOTIFICATION-EVENT: ', event);\n\n        _this._onNotificationHandler(event);\n      }\n    } //FLOW-IN: message received from a remote DataObjectReporter -> delete\n\n  }, {\n    key: \"_onRemoteDelete\",\n    value: function _onRemoteDelete(msg) {\n      var _this = this; //remove \"/subscription\" from the URL\n\n\n      var resource = msg.body.resource;\n      var object = _this._observers[resource];\n      var unsubscribe = {\n        from: _this.owner,\n        to: _this._subURL,\n        id: msg.id,\n        type: 'unsubscribe',\n        body: {\n          resource: msg.body.resource\n        }\n      };\n\n      _this._bus.postMessage(unsubscribe);\n\n      delete _this._observers[resource];\n      var event = {\n        type: msg.type,\n        url: resource,\n        identity: msg.body.identity,\n        ack: function ack(type) {\n          var lType = 200;\n\n          if (type) {\n            lType = type;\n          } //TODO: any other different options for the release process, like accept but nor release local?\n\n\n          if (lType === 200 && object) {\n            object[\"delete\"]();\n          } //send ack response message\n\n\n          _this._bus.postMessage({\n            id: msg.id,\n            type: 'response',\n            from: msg.to,\n            to: msg.from,\n            body: {\n              code: lType,\n              source: _this._owner\n            }\n          });\n        }\n      }; //    if (object) {\n\n      if (_this._onNotificationHandler) {\n        Syncher_log.log('NOTIFICATION-EVENT: ', event);\n\n        _this._onNotificationHandler(event);\n      }\n      /*    } else {\n            _this._bus.postMessage({\n              id: msg.id, type: 'response', from: msg.to, to: msg.from,\n              body: { code: 404, source: _this._owner }\n            });\n          }*/\n\n    } // close event received from runtime registry\n\n  }, {\n    key: \"_onExecute\",\n    value: function _onExecute(msg) {\n      var _this = this;\n\n      var reply = {\n        id: msg.id,\n        type: 'response',\n        from: msg.to,\n        to: msg.from,\n        body: {\n          code: 200\n        }\n      };\n\n      if ((msg.from === _this._runtimeUrl + '/registry/' || msg.from === _this._runtimeUrl + '/registry') && msg.body && msg.body.method && msg.body.method === 'close' && _this._onClose) {\n        var event = {\n          type: 'close',\n          ack: function ack(type) {\n            if (type) {\n              reply.body.code = type;\n            } //send ack response message\n\n\n            _this._bus.postMessage(reply);\n          }\n        };\n        Syncher_log.info('[Syncher] Close-EVENT: ', event);\n\n        _this._onClose(event);\n      } else {\n        _this._bus.postMessage(reply);\n      }\n    }\n    /**\n    * Callback system to trigger the resumed reporters\n    * @param  {Function} callback - function callback which will be invoked\n    * @return {Object<URL, DataObjectReporter>} Return one object with all resumed reporters;\n    */\n\n  }, {\n    key: \"onReportersResume\",\n    value: function onReportersResume(callback) {\n      this._onReportersResume = callback;\n    }\n    /**\n    * Callback system to trigger the resumed observers\n    * @param  {Function} callback - function callback which will be invoked\n    * @return {Object<URL, DataObjectObserver>} Return one object with all resumed observers;\n    */\n\n  }, {\n    key: \"onObserversResume\",\n    value: function onObserversResume(callback) {\n      this._onObserversResume = callback;\n    }\n  }, {\n    key: \"owner\",\n    get: function get() {\n      return this._owner;\n    }\n    /**\n    * All owned reporters, the ones that were created by a create\n    * @type {Object<URL, DataObjectReporter>}\n    */\n\n  }, {\n    key: \"reporters\",\n    get: function get() {\n      return this._reporters;\n    }\n    /**\n    * All owned observers, the ones that were created by a local subscription\n    * @type {Object<URL, DataObjectObserver>}\n    */\n\n  }, {\n    key: \"observers\",\n    get: function get() {\n      return this._observers;\n    }\n  }]);\n\n  return Syncher;\n}();\n\n/* harmony default export */ var syncher_Syncher = (Syncher_Syncher);\n// CONCATENATED MODULE: ./src/syncher/NotificationHandler.js\nfunction NotificationHandler_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction NotificationHandler_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction NotificationHandler_createClass(Constructor, protoProps, staticProps) { if (protoProps) NotificationHandler_defineProperties(Constructor.prototype, protoProps); if (staticProps) NotificationHandler_defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n* The Notitification Handler is used to handle notifications not processed by the syncher when running in a sandbox.\n*/\n\n\nvar NotificationHandler_NotificationHandler =\n/*#__PURE__*/\nfunction () {\n  function NotificationHandler(bus) {\n    NotificationHandler_classCallCheck(this, NotificationHandler);\n\n    if (!bus) throw Error('[NotificationHandler Constructor] bus input is mandatory');\n    this._bus = bus;\n    this._onNotificationHandler = {};\n  }\n\n  NotificationHandler_createClass(NotificationHandler, [{\n    key: \"onNotification\",\n    value: function onNotification(scheme, callback) {\n      this._onNotificationHandler[scheme] = callback;\n    }\n  }, {\n    key: \"onCreate\",\n    value: function onCreate(msg) {\n      var _this = this; //  let resource = msg.from.slice(0, -13); //remove \"/subscription\" from the URL\n\n\n      var resource = msg.body.hasOwnProperty('resource') ? msg.body.resource : msg.from.slice(0, -13);\n      var dividedURL = divideURL(resource);\n      var domain = dividedURL.domain;\n      var scheme = resource.split('://')[0];\n\n      var _error = function error(reason) {\n        _this._bus.postMessage({\n          id: msg.id,\n          type: 'response',\n          from: msg.to,\n          to: msg.from,\n          body: {\n            code: 400,\n            desc: 'Bad Request: ' + reason\n          }\n        });\n      };\n\n      if (!msg.body.hasOwnProperty('source')) {\n        _error('Missing source');\n      }\n\n      if (!msg.body.hasOwnProperty('schema')) {\n        _error('Missing schema');\n      }\n\n      if (!msg.body.hasOwnProperty('value')) {\n        _error('Missing value');\n      }\n\n      if (!msg.body.hasOwnProperty('identity')) {\n        _error('Missing identity');\n      }\n\n      var event = {\n        type: msg.type,\n        from: msg.body.source,\n        url: resource,\n        domain: domain,\n        schema: msg.body.schema,\n        value: msg.body.value,\n        identity: msg.body.identity,\n        to: msg.to,\n        via: msg.body.via,\n        ack: function ack(type) {\n          var lType = 200;\n\n          if (type) {\n            lType = type;\n          } //send ack response message\n\n\n          _this._bus.postMessage({\n            id: msg.id,\n            type: 'response',\n            from: msg.to,\n            to: msg.from,\n            body: {\n              code: lType\n            }\n          });\n        },\n        error: function error(reason) {\n          _error(reason);\n        }\n      };\n\n      if (_this._onNotificationHandler[scheme]) {\n        console.info('[NotificationHandler] NOTIFICATION-EVENT: ', event);\n\n        _this._onNotificationHandler[scheme](event);\n      }\n    }\n  }, {\n    key: \"onDelete\",\n    value: function onDelete(msg) {\n      var _this = this; //remove \"/subscription\" from the URL\n\n\n      var resource = msg.body.resource;\n      var object = _this._observers[resource];\n      var unsubscribe = {\n        from: _this.owner,\n        to: _this._subURL,\n        id: msg.id,\n        type: 'unsubscribe',\n        body: {\n          resource: msg.body.resource\n        }\n      };\n\n      _this._bus.postMessage(unsubscribe);\n\n      delete _this._observers[resource];\n\n      if (object) {\n        var event = {\n          type: msg.type,\n          url: resource,\n          identity: msg.body.identity,\n          ack: function ack(type) {\n            var lType = 200;\n\n            if (type) {\n              lType = type;\n            } //TODO: any other different options for the release process, like accept but nor release local?\n\n\n            if (lType === 200) {\n              object[\"delete\"]();\n            } //send ack response message\n\n\n            _this._bus.postMessage({\n              id: msg.id,\n              type: 'response',\n              from: msg.to,\n              to: msg.from,\n              body: {\n                code: lType,\n                source: _this._owner\n              }\n            });\n          }\n        };\n\n        if (_this._onNotificationHandler) {\n          log.log('NOTIFICATION-EVENT: ', event);\n\n          _this._onNotificationHandler(event);\n        }\n      } else {\n        _this._bus.postMessage({\n          id: msg.id,\n          type: 'response',\n          from: msg.to,\n          to: msg.from,\n          body: {\n            code: 404,\n            source: _this._owner\n          }\n        });\n      }\n    }\n  }]);\n\n  return NotificationHandler;\n}();\n\n/* harmony default export */ var syncher_NotificationHandler = (NotificationHandler_NotificationHandler);\n// CONCATENATED MODULE: ./src/identity/IdentityManager.js\nfunction IdentityManager_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction IdentityManager_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction IdentityManager_createClass(Constructor, protoProps, staticProps) { if (protoProps) IdentityManager_defineProperties(Constructor.prototype, protoProps); if (staticProps) IdentityManager_defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n* Copyright 2016 PT Inovação e Sistemas SA\n* Copyright 2016 INESC-ID\n* Copyright 2016 QUOBIS NETWORKS SL\n* Copyright 2016 FRAUNHOFER-GESELLSCHAFT ZUR FOERDERUNG DER ANGEWANDTEN FORSCHUNG E.V\n* Copyright 2016 ORANGE SA\n* Copyright 2016 Deutsche Telekom AG\n* Copyright 2016 Apizee\n* Copyright 2016 TECHNISCHE UNIVERSITAT BERLIN\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n**/\n\n/**\n* Core IdentityManager interface\n* Class to allow applications to search for Identities registered in runtime-core\n*/\n\nvar IdentityManager_IdentityManager =\n/*#__PURE__*/\nfunction () {\n  /**\n  * To initialise the IdentityManager, which will provide the support for hyperties to\n  * query about identities registered\n  * @param  {String}          owner            owner\n  * @param  {String}          runtimeURL            runtimeURL\n  * @param  {MessageBus}          msgbus                msgbus\n  */\n  function IdentityManager(owner, runtimeURL, msgBus) {\n    IdentityManager_classCallCheck(this, IdentityManager);\n\n    var _this = this;\n\n    _this.messageBus = msgBus;\n    _this.domain = divideURL(owner).domain;\n    _this.owner = owner;\n    _this.runtimeURL = runtimeURL;\n  }\n  /**\n  * Function to query the runtime registry about the identity to which the hyperty was associated\n  * @param {String}       type (Optional)         type of user info required\n  * @param {String}       owner (Optional)   owner to search for\n  * @return {Promise}     userURL       userURL associated to the hyperty\n  */\n\n\n  IdentityManager_createClass(IdentityManager, [{\n    key: \"discoverUserRegistered\",\n    value: function discoverUserRegistered(type, hyperty) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        var activeHypertyURL; // if any type of search is selected query for that type, otherwise query for default user info\n\n        var searchType = type ? type : '.';\n\n        if (!hyperty) {\n          activeHypertyURL = _this.owner;\n        } else {\n          activeHypertyURL = hyperty;\n        }\n\n        var msg = {\n          type: 'read',\n          from: activeHypertyURL,\n          to: _this.runtimeURL + '/registry/',\n          body: {\n            resource: searchType,\n            criteria: activeHypertyURL\n          }\n        };\n\n        _this.messageBus.postMessage(msg, function (reply) {\n          var userURL = reply.body.resource;\n\n          if (userURL && reply.body.code === 200) {\n            resolve(userURL);\n          } else {\n            reject('code: ' + reply.body.code + ' No user was found');\n          }\n        });\n      });\n    }\n    /**\n    * Function to query the Identity Module about authenticated identities from a certain domain\n    * @param {String}       idp idp domain of the identity to be discovered\n    * @return {Promise}     identity\n    */\n\n  }, {\n    key: \"discoverIdentityPerIdP\",\n    value: function discoverIdentityPerIdP(idp) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        var msg = {\n          type: 'read',\n          from: this.owner,\n          to: _this.runtimeURL + '/idm',\n          body: {\n            resource: idp,\n            criteria: 'idp'\n          }\n        };\n\n        _this.messageBus.postMessage(msg, function (reply) {\n          if (reply.body.code === 200) {\n            resolve(reply.body.value);\n          } else {\n            reject(reply.body.code + ' ' + reply.body.desc);\n          }\n        });\n      });\n    }\n  }]);\n\n  return IdentityManager;\n}();\n\n/* harmony default export */ var identity_IdentityManager = (IdentityManager_IdentityManager);\n// CONCATENATED MODULE: ./src/discovery/RegistrationStatus.js\nfunction RegistrationStatus_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction RegistrationStatus_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction RegistrationStatus_createClass(Constructor, protoProps, staticProps) { if (protoProps) RegistrationStatus_defineProperties(Constructor.prototype, protoProps); if (staticProps) RegistrationStatus_defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n* Copyright 2016 PT Inovação e Sistemas SA\n* Copyright 2016 INESC-ID\n* Copyright 2016 QUOBIS NETWORKS SL\n* Copyright 2016 FRAUNHOFER-GESELLSCHAFT ZUR FOERDERUNG DER ANGEWANDTEN FORSCHUNG E.V\n* Copyright 2016 ORANGE SA\n* Copyright 2016 Deutsche Telekom AG\n* Copyright 2016 Apizee\n* Copyright 2016 TECHNISCHE UNIVERSITAT BERLIN\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n**/\n// Log System\n\nvar RegistrationStatus_log = loglevel[\"getLogger\"]('RegistrationStatus');\n\n/**\n* The RegistrationStatus lib allows to monitor registration status of an Hyperty or Data Object\n*\n*/\n\nvar RegistrationStatus_RegistrationStatus =\n/*#__PURE__*/\nfunction () {\n  /**\n  * @param {URL} url URL address of the entity to be monitored\n  * @param {URL} runtimeURL the current URL of the Runtime Instance used\n  * @param {HypertyURL} owner the URL of the Hyperty instance that is using this lib\n  * @param {MiniBus} owner the URL of the Hyperty instance that is using this lib\n  *\n  */\n  function RegistrationStatus(url, runtimeURL, owner, msgBus) {\n    RegistrationStatus_classCallCheck(this, RegistrationStatus);\n\n    this._registryObjectURL = url;\n    this._runtimeURL = runtimeURL;\n    this._domain = divideURL(runtimeURL).domain;\n    this._discoveredObjectURL = owner;\n    this._messageBus = msgBus;\n    this._subscriptionSet = false;\n    this._subscribers = {\n      live: {},\n      disconnected: {}\n    };\n  }\n\n  RegistrationStatus_createClass(RegistrationStatus, [{\n    key: \"onLive\",\n    value: function onLive(subscriber, callback) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        if (!_this._subscriptionSet) {\n          _this._subscribe().then(function () {\n            _this._subscribers.live[subscriber] = callback;\n            resolve();\n          })[\"catch\"](function (err) {\n            return reject(err);\n          });\n        } else {\n          _this._subscribers.live[subscriber] = callback;\n          resolve();\n        }\n      });\n    }\n  }, {\n    key: \"onDisconnected\",\n    value: function onDisconnected(subscriber, callback) {\n      var _this2 = this;\n\n      return new Promise(function (resolve, reject) {\n        if (!_this2._subscriptionSet) {\n          _this2._subscribe().then(function () {\n            _this2._subscribers.disconnected[subscriber] = callback;\n            resolve();\n          })[\"catch\"](function (err) {\n            return reject(err);\n          });\n        } else {\n          _this2._subscribers.disconnected[subscriber] = callback;\n          resolve();\n        }\n      });\n    }\n  }, {\n    key: \"_subscribe\",\n    value: function _subscribe() {\n      var _this3 = this;\n\n      var msg = {\n        type: 'subscribe',\n        from: this._discoveredObjectURL,\n        to: this._runtimeURL + '/subscriptions',\n        body: {\n          resources: [this._registryObjectURL + '/registration']\n        }\n      };\n      return new Promise(function (resolve, reject) {\n        _this3._messageBus.postMessage(msg, function (reply) {\n          RegistrationStatus_log.log(\"[DiscoveredObject.subscribe] \".concat(_this3._registryObjectURL, \" rcved reply \"), reply);\n\n          if (reply.body.code === 200) {\n            _this3._generateListener(_this3._registryObjectURL + '/registration');\n\n            _this3._subscriptionSet = true;\n            resolve();\n          } else {\n            RegistrationStatus_log.error('Error subscribing ', _this3._registryObjectURL);\n            reject('Error subscribing ' + _this3._registryObjectURL);\n          }\n        });\n      });\n    }\n  }, {\n    key: \"_generateListener\",\n    value: function _generateListener(notificationURL) {\n      var _this4 = this;\n\n      this._messageBus.addListener(notificationURL, function (msg) {\n        RegistrationStatus_log.log(\"[DiscoveredObject.notification] \".concat(_this4._registryObjectURL, \": \"), msg);\n\n        _this4._processNotification(msg);\n      });\n    }\n  }, {\n    key: \"_processNotification\",\n    value: function _processNotification(msg) {\n      var _this5 = this;\n\n      var status = msg.body.value;\n      setTimeout(function () {\n        // Hack to give time for onLive Hyperties to get ready. To be removed when Hyperty State machaine is implemented\n        Object.keys(_this5._subscribers[status]).forEach(function (subscriber) {\n          return _this5._subscribers[status][subscriber]();\n        });\n      }, 5000);\n    }\n  }, {\n    key: \"_unsubscribe\",\n    value: function _unsubscribe() {\n      var _this6 = this;\n\n      var msg = {\n        type: 'unsubscribe',\n        from: this._discoveredObjectURL,\n        to: this._runtimeURL + '/subscriptions',\n        body: {\n          resource: this._registryObjectURL + '/registration'\n        }\n      };\n      return new Promise(function (resolve, reject) {\n        _this6._messageBus.postMessage(msg, function (reply) {\n          RegistrationStatus_log.log(\"[DiscoveredObject.unsubscribe] \".concat(_this6._registryObjectURL, \" rcved reply \"), reply);\n\n          if (reply.body.code === 200) {\n            resolve();\n          } else {\n            RegistrationStatus_log.error('Error unsubscribing ', _this6._registryObjectURL);\n            reject('Error unsubscribing ' + _this6._registryObjectURL);\n          }\n        });\n      });\n    }\n  }, {\n    key: \"unsubscribeLive\",\n    value: function unsubscribeLive(subscriber) {\n      var _this7 = this;\n\n      return new Promise(function (resolve, reject) {\n        if (subscriber in _this7._subscribers.live) {\n          //TODO: unsubscribe outside this condition\n          delete _this7._subscribers.live[subscriber];\n        }\n\n        if (_this7._areSubscriptionsEmpty()) {\n          _this7._unsubscribe().then(function () {\n            return resolve();\n          })[\"catch\"](function (err) {\n            return reject(err);\n          });\n        } else {\n          resolve();\n        }\n        /*  } else {\n            reject(`${subscriber} doesn't subscribe onLive for ${this._registryObjectURL}`);\n          }*/\n\n      });\n    }\n  }, {\n    key: \"unsubscribeDisconnected\",\n    value: function unsubscribeDisconnected(subscriber) {\n      var _this8 = this;\n\n      return new Promise(function (resolve, reject) {\n        if (subscriber in _this8._subscribers.disconnected) {\n          delete _this8._subscribers.disconnected[subscriber];\n\n          if (_this8._areSubscriptionsEmpty()) {\n            _this8._unsubscribe().then(function () {\n              return resolve();\n            })[\"catch\"](function (err) {\n              return reject(err);\n            });\n          } else {\n            resolve();\n          }\n        } else {\n          reject(\"\".concat(subscriber, \" doesn't subscribe onDisconnected for \").concat(_this8._registryObjectURL));\n        }\n      });\n    }\n  }, {\n    key: \"_areSubscriptionsEmpty\",\n    value: function _areSubscriptionsEmpty() {\n      return Object.keys(this._subscribers.live).length === 0 && Object.keys(this._subscribers.disconnected).length === 0;\n    }\n  }]);\n\n  return RegistrationStatus;\n}();\n\n/* harmony default export */ var discovery_RegistrationStatus = (RegistrationStatus_RegistrationStatus);\n// CONCATENATED MODULE: ./src/discovery/DiscoveredObject.js\nfunction DiscoveredObject_typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { DiscoveredObject_typeof = function _typeof(obj) { return typeof obj; }; } else { DiscoveredObject_typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return DiscoveredObject_typeof(obj); }\n\nfunction DiscoveredObject_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction DiscoveredObject_possibleConstructorReturn(self, call) { if (call && (DiscoveredObject_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return DiscoveredObject_assertThisInitialized(self); }\n\nfunction DiscoveredObject_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction DiscoveredObject_getPrototypeOf(o) { DiscoveredObject_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return DiscoveredObject_getPrototypeOf(o); }\n\nfunction DiscoveredObject_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction DiscoveredObject_createClass(Constructor, protoProps, staticProps) { if (protoProps) DiscoveredObject_defineProperties(Constructor.prototype, protoProps); if (staticProps) DiscoveredObject_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction DiscoveredObject_inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) DiscoveredObject_setPrototypeOf(subClass, superClass); }\n\nfunction DiscoveredObject_setPrototypeOf(o, p) { DiscoveredObject_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return DiscoveredObject_setPrototypeOf(o, p); }\n\n/**\n* Copyright 2016 PT Inovação e Sistemas SA\n* Copyright 2016 INESC-ID\n* Copyright 2016 QUOBIS NETWORKS SL\n* Copyright 2016 FRAUNHOFER-GESELLSCHAFT ZUR FOERDERUNG DER ANGEWANDTEN FORSCHUNG E.V\n* Copyright 2016 ORANGE SA\n* Copyright 2016 Deutsche Telekom AG\n* Copyright 2016 Apizee\n* Copyright 2016 TECHNISCHE UNIVERSITAT BERLIN\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n**/\n//import {divideURL, convertToUserURL} from '../utils/utils';\n\n/**\n* Discovered Object interface\n*/\n\nvar DiscoveredObject =\n/*#__PURE__*/\nfunction (_RegistrationStatus) {\n  DiscoveredObject_inherits(DiscoveredObject, _RegistrationStatus);\n\n  DiscoveredObject_createClass(DiscoveredObject, [{\n    key: \"data\",\n    get: function get() {\n      return this._data;\n    }\n  }]);\n\n  function DiscoveredObject(data, runtimeURL, discoveryURL, msgBus, discovery) {\n    var _this2;\n\n    DiscoveredObject_classCallCheck(this, DiscoveredObject);\n\n    _this2 = DiscoveredObject_possibleConstructorReturn(this, DiscoveredObject_getPrototypeOf(DiscoveredObject).call(this, data.hypertyID || data.url, runtimeURL, discoveryURL, msgBus));\n    _this2._data = data;\n    _this2._discovery = discovery;\n    return _this2;\n  }\n  /**\n  * function to check the status of the DiscoveredObject.\n  * Depending on existing subscribers it may trigger onLive or onDisconnected events.\n  *\n  */\n\n\n  DiscoveredObject_createClass(DiscoveredObject, [{\n    key: \"check\",\n    value: function check() {\n      // query DR for the status and call processNotification with msg received\n      var _this = this;\n\n      var message = {\n        body: {}\n      };\n\n      if (_this._discoveredObjectURL.startsWith('hyperty://')) {\n        _this._discovery.discoverHypertyPerURL(_this._discoveredObjectURL).then(function (registration) {\n          message.body.status = registration.status;\n\n          _this._processNotification(message);\n        });\n      } else {\n        _this._discovery.discoverDataObjectsPerURL(_this._discoveredObjectURL).then(function (registration) {\n          message.body.status = registration.status;\n\n          _this._processNotification(message);\n        });\n      }\n    }\n  }]);\n\n  return DiscoveredObject;\n}(discovery_RegistrationStatus);\n\n/* harmony default export */ var discovery_DiscoveredObject = (DiscoveredObject);\n// CONCATENATED MODULE: ./src/discovery/Discovery.js\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction Discovery_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction Discovery_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Discovery_createClass(Constructor, protoProps, staticProps) { if (protoProps) Discovery_defineProperties(Constructor.prototype, protoProps); if (staticProps) Discovery_defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n* Copyright 2016 PT Inovação e Sistemas SA\n* Copyright 2016 INESC-ID\n* Copyright 2016 QUOBIS NETWORKS SL\n* Copyright 2016 FRAUNHOFER-GESELLSCHAFT ZUR FOERDERUNG DER ANGEWANDTEN FORSCHUNG E.V\n* Copyright 2016 ORANGE SA\n* Copyright 2016 Deutsche Telekom AG\n* Copyright 2016 Apizee\n* Copyright 2016 TECHNISCHE UNIVERSITAT BERLIN\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n**/\n// Log System\n\nvar Discovery_log = loglevel[\"getLogger\"]('Discovery');\n\n\n/**\n* Core Discovery interface\n* Class to allow applications to search for hyperties and DataObjects using the message bus\n*/\n\nvar Discovery_Discovery =\n/*#__PURE__*/\nfunction () {\n  /**\n  * To initialise the HypertyDiscover, which will provide the support for hyperties to\n  * query users registered in outside the internal core.\n  * @param  {MessageBus}          msgbus                msgbus\n  * @param  {RuntimeURL}          runtimeURL            runtimeURL\n  */\n  function Discovery(hypertyURL, runtimeURL, msgBus) {\n    Discovery_classCallCheck(this, Discovery);\n\n    var _this = this;\n\n    _this.messageBus = msgBus;\n    _this.runtimeURL = runtimeURL;\n    _this.domain = divideURL(hypertyURL).domain;\n    _this.discoveryURL = hypertyURL;\n  }\n  /**\n  * Advanced Search for Hyperties registered in domain registry associated with some user identifier (eg email, name ...)\n  * @param  {String}           userIdentifier\n  * @param  {Array<string>}    schema (Optional)     types of hyperties schemas\n  * @param  {Array<string>}    resources (Optional)  types of hyperties resources\n  */\n\n\n  Discovery_createClass(Discovery, [{\n    key: \"_isLegacyUser\",\n    value: function _isLegacyUser(userIdentifier) {\n      if (userIdentifier.includes(':') && !userIdentifier.includes('user://')) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n    /**\n    * Advanced Search for Hyperties registered in domain registry associated with some user identifier (eg email, name ...)\n    * @param  {String}           userIdentifier\n    * @param  {Array<string>}    schema (Optional)     types of hyperties schemas\n    * @param  {Array<string>}    resources (Optional)  types of hyperties resources\n    */\n\n  }, {\n    key: \"discoverHypertiesPerUserProfileData\",\n    value: function discoverHypertiesPerUserProfileData(userIdentifier, schema, resources) {\n      var _this = this;\n\n      var filteredHyperties = [];\n      var msg = {\n        type: 'read',\n        from: _this.discoveryURL,\n        to: _this.runtimeURL + '/discovery/',\n        body: {\n          resource: '/hyperty/userprofile/' + userIdentifier\n        }\n      };\n\n      if (schema || resources) {\n        msg.body['criteria'] = {\n          resources: resources,\n          dataSchemes: schema\n        };\n      }\n\n      return new Promise(function (resolve, reject) {\n        if (!_this._isLegacyUser(userIdentifier)) {\n          // todo: to reomve when discovery of legcay users are supported\n          _this.messageBus.postMessage(msg, function (reply) {\n            if (reply.body.code === 200) {\n              reply.body.value.map(function (hyperty) {\n                if (hyperty.hypertyID != _this.discoveryURL) filteredHyperties.push(hyperty);\n              });\n              if (filteredHyperties.length === 0) resolve([]);else {\n                Discovery_log.log(\"[Discovery.discoverHypertiesPerUserProfileData] Reply log: \", filteredHyperties);\n                resolve(filteredHyperties);\n              }\n            } else {\n              Discovery_log.warn(\"[Discovery.discoverHypertiesPerUserProfileData] Error Reply for \" + userIdentifier + \" Reason: \", reply.body.description);\n              resolve([]);\n            }\n          });\n        } else {\n          resolve([{\n            hypertyID: userIdentifier,\n            status: 'live'\n          }]);\n        }\n      });\n    }\n    /**\n    * Advanced Search for Hyperties registered in domain registry associated with some user identifier (eg email, name ...)\n    * returns DiscoveredObject\n    * @param  {String}           userIdentifier\n    * @param  {Array<string>}    schema (Optional)     types of hyperties schemas\n    * @param  {Array<string>}    resources (Optional)  types of hyperties resources\n    */\n\n  }, {\n    key: \"discoverHypertiesPerUserProfileDataDO\",\n    value: function discoverHypertiesPerUserProfileDataDO(userIdentifier, schema, resources) {\n      var _this2 = this,\n          _arguments = arguments;\n\n      return new Promise(function (resolve, reject) {\n        _this2.discoverHypertiesPerUserProfileData.apply(_this2, _toConsumableArray(_arguments)).then(function (hyperties) {\n          resolve(_this2._convertToDiscoveredObject(hyperties));\n        })[\"catch\"](function (error) {\n          return reject(error);\n        });\n      });\n    }\n    /**\n    * Advanced Search for DataObjects registered in domain registry associated with some user identifier (eg email, name ...)\n    * @param  {String}           userIdentifier\n    * @param  {Array<string>}    schema (Optional)     types of hyperties schemas\n    * @param  {Array<string>}    resources (Optional)  types of hyperties resources\n    */\n\n  }, {\n    key: \"discoverDataObjectsPerUserProfileData\",\n    value: function discoverDataObjectsPerUserProfileData(userIdentifier, schema, resources) {\n      var _this = this;\n\n      var msg = {\n        type: 'read',\n        from: _this.discoveryURL,\n        to: _this.runtimeURL + '/discovery/',\n        body: {\n          resource: '/dataObject/userprofile/' + userIdentifier\n        }\n      };\n\n      if (schema || resources) {\n        msg.body['criteria'] = {\n          resources: resources,\n          dataSchemes: schema\n        };\n      }\n\n      return new Promise(function (resolve, reject) {\n        if (!_this._isLegacyUser(userIdentifier)) {\n          // todo: to reomve when discovery of legcay users are supported\n          _this.messageBus.postMessage(msg, function (reply) {\n            if (reply.body.code === 200) {\n              Discovery_log.log(\"Reply log: \", reply.body.value);\n              resolve(reply.body.value);\n            } else {\n              Discovery_log.warn(\"[Discovery.discoverDataObjectsPerUserProfileData] Error Reply for \" + userIdentifier + \" Reason: \", reply.body.description);\n              resolve([]);\n            }\n          });\n        } else {\n          resolve([{\n            hypertyID: userIdentifier,\n            status: 'live'\n          }]);\n        }\n      });\n    }\n    /**\n    * function to request about dataObject registered in domain registry, and\n    * returns discoveredObject.\n    * @param  {String}           guidURL                guid URL e.g user-guid://<unique-user-identifier>\n    * @param  {Array<string>}    schema (Optional)     types of hyperties schemas\n    * @param  {Array<string>}    resources (Optional)  types of hyperties resources\n    * @param  {String}           domain (Optional)     domain of the registry to search\n    */\n\n  }, {\n    key: \"discoverDataObjectsPerUserProfileDataDO\",\n    value: function discoverDataObjectsPerUserProfileDataDO(guidURL, schema, resources) {\n      var _this3 = this,\n          _arguments2 = arguments;\n\n      return new Promise(function (resolve, reject) {\n        _this3.discoverDataObjectsPerUserProfileData.apply(_this3, _toConsumableArray(_arguments2)).then(function (registryObjects) {\n          return resolve(_this3._convertToDiscoveredObject(registryObjects));\n        })[\"catch\"](function (error) {\n          return reject(error);\n        });\n      });\n    }\n    /**\n    * Advanced Search for Hyperties registered in domain registry associated with some GUID\n    * @param  {String}           guidURL                guid URL e.g user-guid://<unique-user-identifier>\n    * @param  {Array<string>}    schema (Optional)     types of hyperties schemas\n    * @param  {Array<string>}    resources (Optional)  types of hyperties resources\n    */\n\n  }, {\n    key: \"discoverHypertiesPerGUID\",\n    value: function discoverHypertiesPerGUID(guidURL, schema, resources) {\n      var _this = this;\n\n      var filteredHyperties = [];\n      var msg = {\n        type: 'read',\n        from: _this.discoveryURL,\n        to: _this.runtimeURL + '/discovery/',\n        body: {\n          resource: '/hyperty/guid/' + guidURL\n        }\n      };\n\n      if (schema || resources) {\n        msg.body['criteria'] = {\n          resources: resources,\n          dataSchemes: schema\n        };\n      }\n\n      return new Promise(function (resolve, reject) {\n        _this.messageBus.postMessage(msg, function (reply) {\n          if (reply.body.code === 200) {\n            reply.body.value.map(function (hyperty) {\n              if (hyperty.hypertyID != _this.discoveryURL) filteredHyperties.push(hyperty);\n            });\n            if (filteredHyperties.length === 0) reject('No Hyperty was found');else {\n              Discovery_log.log(\"Reply log: \", filteredHyperties);\n              resolve(filteredHyperties);\n            }\n          } else {\n            Discovery_log.warn(\"[Discovery.discoverHypertiesPerGUID] Error Reply for \" + guidURL + \" Reason: \", reply.body.description);\n            resolve([]);\n          }\n        });\n      });\n    }\n    /**\n    * Advanced Search for Hyperties registered in domain registry associated with some GUID\n    * returns DiscoveredObject\n    * @param  {String}           guidURL                guid URL e.g user-guid://<unique-user-identifier>\n    * @param  {Array<string>}    schema (Optional)     types of hyperties schemas\n    * @param  {Array<string>}    resources (Optional)  types of hyperties resources\n    */\n\n  }, {\n    key: \"discoverHypertiesPerGUIDDO\",\n    value: function discoverHypertiesPerGUIDDO(guidURL, schema, resources) {\n      var _this4 = this,\n          _arguments3 = arguments;\n\n      return new Promise(function (resolve, reject) {\n        _this4.discoverHypertiesPerGUID.apply(_this4, _toConsumableArray(_arguments3)).then(function (hyperties) {\n          resolve(_this4._convertToDiscoveredObject(hyperties));\n        })[\"catch\"](function (error) {\n          return reject(error);\n        });\n      });\n    }\n    /**\n    * Advanced Search for DataObjects registered in domain registry associated with some GUID\n    * @param  {String}           guidURL                guid URL e.g user-guid://<unique-user-identifier>\n    * @param  {Array<string>}    schema (Optional)     types of hyperties schemas\n    * @param  {Array<string>}    resources (Optional)  types of hyperties resources\n    * @param  {String}           domain (Optional)     domain of the registry to search\n    */\n\n  }, {\n    key: \"discoverDataObjectsPerGUID\",\n    value: function discoverDataObjectsPerGUID(guidURL, schema, resources) {\n      var _this = this;\n\n      var msg = {\n        type: 'read',\n        from: _this.discoveryURL,\n        to: _this.runtimeURL + '/discovery/',\n        body: {\n          resource: '/dataObject/guid/' + guidURL\n        }\n      };\n\n      if (schema || resources) {\n        msg.body['criteria'] = {\n          resources: resources,\n          dataSchemes: schema\n        };\n      }\n\n      return new Promise(function (resolve, reject) {\n        _this.messageBus.postMessage(msg, function (reply) {\n          if (reply.body.code === 200) {\n            Discovery_log.log(\"Reply log: \", reply.body.value);\n            resolve(reply.body.value);\n          } else {\n            Discovery_log.warn(\"[Discovery.discoverDataObjectsPerGUID] Error Reply for \" + guidURL + \" Reason: \", reply.body.description);\n            resolve([]);\n          }\n        });\n      });\n    }\n    /**\n    * function to request about dataObject registered in domain registry, and\n    * returns discoveredObject.\n    * @param  {String}           guidURL                guid URL e.g user-guid://<unique-user-identifier>\n    * @param  {Array<string>}    schema (Optional)     types of hyperties schemas\n    * @param  {Array<string>}    resources (Optional)  types of hyperties resources\n    * @param  {String}           domain (Optional)     domain of the registry to search\n    */\n\n  }, {\n    key: \"discoverDataObjectsPerGUIDDO\",\n    value: function discoverDataObjectsPerGUIDDO(guidURL, schema, resources) {\n      var _this5 = this,\n          _arguments4 = arguments;\n\n      return new Promise(function (resolve, reject) {\n        _this5.discoverDataObjectsPerGUID.apply(_this5, _toConsumableArray(_arguments4)).then(function (registryObjects) {\n          return resolve(_this5._convertToDiscoveredObject(registryObjects));\n        })[\"catch\"](function (error) {\n          return reject(error);\n        });\n      });\n    }\n    /** Advanced Search for Hyperties registered in domain registry\n    * @param  {String}           user                  user identifier, either in url or email format\n    * @param  {Array<string>}    schema (Optional)     types of hyperties schemas\n    * @param  {Array<string>}    resources (Optional)  types of hyperties resources\n    * @param  {String}           domain (Optional)     domain of the registry to search\n    */\n\n  }, {\n    key: \"discoverHyperties\",\n    value: function discoverHyperties(user, schema, resources, domain) {\n      var _this = this;\n\n      var activeDomain;\n      var filteredHyperties = [];\n      activeDomain = !domain ? _this.domain : domain;\n      var msg = {\n        type: 'read',\n        from: _this.discoveryURL,\n        to: _this.runtimeURL + '/discovery/',\n        body: {\n          resource: '/hyperty/user/' + user\n        }\n      };\n\n      if (schema || resources) {\n        msg.body['criteria'] = {\n          resources: resources,\n          dataSchemes: schema,\n          domain: activeDomain\n        };\n      } else {\n        msg.body['criteria'] = {\n          domain: activeDomain\n        };\n      }\n\n      return new Promise(function (resolve, reject) {\n        if (!_this._isLegacyUser(user)) {\n          // todo: to reomve when discovery of legcay users are supported\n          _this.messageBus.postMessage(msg, function (reply) {\n            if (reply.body.code === 200 || reply.body.code === 500) {\n              reply.body.value.map(function (hyperty) {\n                if (hyperty.hypertyID != _this.discoveryURL) filteredHyperties.push(hyperty);\n              });\n              /*            if(filteredHyperties.length === 0)\n                            reject('No Hyperty was found');\n                          else {*/\n\n              Discovery_log.log(\"[Discovery.discoverHyperties] Reply : \", filteredHyperties);\n              resolve(filteredHyperties); //            }\n            } else {\n              Discovery_log.warn(\"[Discovery.discoverHyperties] Error Reply for \" + user + \" Reason: \", reply.body.description);\n              resolve(filteredHyperties);\n            }\n          });\n        } else {\n          resolve([{\n            hypertyID: user,\n            status: 'live'\n          }]);\n        }\n      });\n    }\n    /** Advanced Search for Hyperties registered in domain registry,\n    *returns DiscoveredObject\n    * @param  {String}           user                  user identifier, either in url or email format\n    * @param  {Array<string>}    schema (Optional)     types of hyperties schemas\n    * @param  {Array<string>}    resources (Optional)  types of hyperties resources\n    * @param  {String}           domain (Optional)     domain of the registry to search\n    */\n\n  }, {\n    key: \"discoverHypertiesDO\",\n    value: function discoverHypertiesDO(user, schema, resources, domain) {\n      var _this6 = this,\n          _arguments5 = arguments;\n\n      return new Promise(function (resolve, reject) {\n        _this6.discoverHyperties.apply(_this6, _toConsumableArray(_arguments5)).then(function (hyperties) {\n          resolve(_this6._convertToDiscoveredObject(hyperties));\n        })[\"catch\"](function (error) {\n          return reject(error);\n        });\n      });\n    }\n    /** Advanced Search for DataObjects registered in domain registry\n    * @param  {String}           user                  user identifier, either in url or email format\n    * @param  {Array<string>}    schema (Optional)     types of dataObjects schemas\n    * @param  {Array<string>}    resources (Optional)  types of dataObjects resources\n    * @param  {String}           domain (Optional)     domain of the registry to search\n    */\n\n  }, {\n    key: \"discoverDataObjects\",\n    value: function discoverDataObjects(user, schema, resources, domain) {\n      var _this = this;\n\n      var activeDomain;\n      activeDomain = !domain ? _this.domain : domain;\n      var msg = {\n        type: 'read',\n        from: _this.discoveryURL,\n        to: _this.runtimeURL + '/discovery/',\n        body: {\n          resource: '/dataObject/user/' + user\n        }\n      };\n\n      if (schema || resources) {\n        msg.body['criteria'] = {\n          resources: resources,\n          dataSchemes: schema,\n          domain: activeDomain\n        };\n      } else {\n        msg.body['criteria'] = {\n          domain: activeDomain\n        };\n      }\n\n      return new Promise(function (resolve, reject) {\n        _this.messageBus.postMessage(msg, function (reply) {\n          if (reply.body.code === 200) {\n            Discovery_log.log(\"Reply Value Log: \", reply.body.value);\n            resolve(reply.body.value);\n          } else {\n            Discovery_log.warn(\"[Discovery.discoverDataObjects] Error Reply for \" + user + \" Reason: \", reply.body.description);\n            resolve([]);\n          }\n        });\n      });\n    }\n    /**\n    * function to request about dataObject registered in domain registry, and\n    * returns discoveredObject.\n    * @param  {String}           user                  user identifier, either in url or email format\n    * @param  {Array<string>}    schema (Optional)     types of dataObjects schemas\n    * @param  {Array<string>}    resources (Optional)  types of dataObjects resources\n    * @param  {String}           domain (Optional)     domain of the registry to search\n    */\n\n  }, {\n    key: \"discoverDataObjectsDO\",\n    value: function discoverDataObjectsDO(user, schema, resources, domain) {\n      var _this7 = this,\n          _arguments6 = arguments;\n\n      return new Promise(function (resolve, reject) {\n        _this7.discoverDataObjects.apply(_this7, _toConsumableArray(_arguments6)).then(function (registryObjects) {\n          return resolve(_this7._convertToDiscoveredObject(registryObjects));\n        })[\"catch\"](function (error) {\n          return reject(error);\n        });\n      });\n    }\n    /**\n    * function to request about hyperties registered in domain registry, and\n    * return the hyperty information, if found.\n    * @param  {String}              url  hyperty URL\n    * @param  {String}            domain (Optional)\n    */\n\n  }, {\n    key: \"discoverHypertyPerURL\",\n    value: function discoverHypertyPerURL(url, domain) {\n      var _this = this;\n\n      var activeDomain;\n      activeDomain = !domain ? _this.domain : domain;\n      var msg = {\n        type: 'read',\n        from: _this.discoveryURL,\n        to: _this.runtimeURL + '/discovery/',\n        body: {\n          resource: '/hyperty/url/' + url,\n          criteria: {\n            domain: activeDomain\n          }\n        }\n      };\n      return new Promise(function (resolve, reject) {\n        _this.messageBus.postMessage(msg, function (reply) {\n          if (reply.body.code === 200) {\n            Discovery_log.log(\"Reply Value Log: \", reply.body.value);\n            resolve(reply.body.value);\n          } else {\n            Discovery_log.warn(\"[Discovery.discoverHypertyPerURL] Error Reply for \" + url + \" Reason: \", reply.body.description);\n            resolve([]);\n          }\n        });\n      });\n    }\n    /**\n    * function to request about hyperties registered in domain registry, and\n    * returns discoveredObject.\n    * @param  {String}              url  hyperty URL\n    * @param  {String}            domain (Optional)\n    */\n\n  }, {\n    key: \"discoverHypertyPerURLDO\",\n    value: function discoverHypertyPerURLDO(url, domain) {\n      var _this8 = this,\n          _arguments7 = arguments;\n\n      return new Promise(function (resolve, reject) {\n        _this8.discoverHypertyPerURL.apply(_this8, _toConsumableArray(_arguments7)).then(function (hyperty) {\n          return resolve(new discovery_DiscoveredObject(hyperty, _this8.runtimeURL, _this8.discoveryURL, _this8.messageBus, _this8));\n        })[\"catch\"](function (error) {\n          return reject(error);\n        });\n      });\n    }\n    /**\n    * function to request about dataObject registered in domain registry, and\n    * return the dataObject information, if found.\n    * @param  {String}              url  dataObject URL\n    * @param  {String}            domain (Optional)\n    */\n\n  }, {\n    key: \"discoverDataObjectPerURL\",\n    value: function discoverDataObjectPerURL(url, domain) {\n      var _this = this;\n\n      var activeDomain;\n      activeDomain = !domain ? _this.domain : domain;\n      var msg = {\n        type: 'read',\n        from: _this.discoveryURL,\n        to: _this.runtimeURL + '/discovery/',\n        body: {\n          resource: '/dataObject/url/' + url,\n          criteria: {\n            domain: activeDomain\n          }\n        }\n      };\n      return new Promise(function (resolve, reject) {\n        _this.messageBus.postMessage(msg, function (reply) {\n          if (reply.body.code === 200) {\n            Discovery_log.log(\"Reply Value Log: \", reply.body.value);\n            resolve(reply.body.value);\n          } else {\n            Discovery_log.warn(\"[Discovery.discoverDataObjectPerURL] Error Reply for \" + url + \" Reason: \", reply.body.description);\n            resolve([]);\n          }\n        });\n      });\n    }\n    /**\n    * function to request about dataObject registered in domain registry, and\n    * returns discoveredObject.\n    * @param  {String}              url  dataObject URL\n    * @param  {String}            domain (Optional)\n    */\n\n  }, {\n    key: \"discoverDataObjectPerURLDO\",\n    value: function discoverDataObjectPerURLDO(url, domain) {\n      var _this9 = this,\n          _arguments8 = arguments;\n\n      return new Promise(function (resolve, reject) {\n        _this9.discoverDataObjectPerURL.apply(_this9, _toConsumableArray(_arguments8)).then(function (registryObject) {\n          return resolve(new discovery_DiscoveredObject(registryObject, _this9.runtimeURL, _this9.discoveryURL, _this9.messageBus, _this9));\n        })[\"catch\"](function (error) {\n          return reject(error);\n        });\n      });\n    }\n    /**\n    * function to request about an dataObjects registered in domain registry with a given name, and\n    * return the dataObjects information, if found.\n    * @param  {String}              name  dataObject URL\n    * @param  {Array<string>}    schema (Optional)     types of dataObjects schemas\n    * @param  {Array<string>}    resources (Optional)  types of dataObjects resources\n    * @param  {String}            domain (Optional)\n    */\n\n  }, {\n    key: \"discoverDataObjectsPerName\",\n    value: function discoverDataObjectsPerName(name, schema, resources, domain) {\n      var _this = this;\n\n      var activeDomain;\n      activeDomain = !domain ? _this.domain : domain;\n      var msg = {\n        type: 'read',\n        from: _this.discoveryURL,\n        to: _this.runtimeURL + '/discovery/',\n        body: {\n          resource: '/dataObject/name/' + name\n        }\n      };\n\n      if (schema || resources) {\n        msg.body['criteria'] = {\n          resources: resources,\n          dataSchemes: schema,\n          domain: activeDomain\n        };\n      } else {\n        msg.body['criteria'] = {\n          domain: activeDomain\n        };\n      }\n\n      return new Promise(function (resolve, reject) {\n        _this.messageBus.postMessage(msg, function (reply) {\n          if (reply.body.code === 200) {\n            Discovery_log.log(\"Reply Value Log: \", reply.body.value);\n            resolve(reply.body.value);\n          } else {\n            Discovery_log.warn(\"[Discovery.discoverDataObjectsPerName] Error Reply for \" + name + \" Reason: \", reply.body.description);\n            resolve([]);\n          }\n        });\n      });\n    }\n    /**\n    * function to request about dataObject registered in domain registry, and\n    * returns discoveredObject.\n    * @param  {String}              name  dataObject URL\n    * @param  {Array<string>}    schema (Optional)     types of dataObjects schemas\n    * @param  {Array<string>}    resources (Optional)  types of dataObjects resources\n    * @param  {String}            domain (Optional)\n    */\n\n  }, {\n    key: \"discoverDataObjectsPerNameDO\",\n    value: function discoverDataObjectsPerNameDO(name, schema, resources, domain) {\n      var _this10 = this,\n          _arguments9 = arguments;\n\n      return new Promise(function (resolve, reject) {\n        _this10.discoverDataObjectsPerName.apply(_this10, _toConsumableArray(_arguments9)).then(function (registryObjects) {\n          return resolve(_this10._convertToDiscoveredObject(registryObjects));\n        })[\"catch\"](function (error) {\n          return reject(error);\n        });\n      });\n    }\n    /**\n    * function to request about specific reporter dataObject registered in domain registry, and\n    * return the dataObjects from that reporter.\n    * @param  {String}           reporter     dataObject reporter\n    * @param  {Array<string>}    schema (Optional)     types of dataObjects schemas\n    * @param  {Array<string>}    resources (Optional)  types of dataObjects resources\n    * @param  {String}           domain       (Optional)\n    */\n\n  }, {\n    key: \"discoverDataObjectsPerReporter\",\n    value: function discoverDataObjectsPerReporter(reporter, schema, resources, domain) {\n      var _this = this;\n\n      var activeDomain;\n      activeDomain = !domain ? _this.domain : domain;\n      var msg = {\n        type: 'read',\n        from: _this.discoveryURL,\n        to: _this.runtimeURL + '/discovery/',\n        body: {\n          resource: '/dataObject/reporter/' + reporter\n        }\n      };\n\n      if (schema || resources) {\n        msg.body['criteria'] = {\n          resources: resources,\n          dataSchemes: schema,\n          domain: activeDomain\n        };\n      } else {\n        msg.body['criteria'] = {\n          domain: activeDomain\n        };\n      }\n\n      return new Promise(function (resolve, reject) {\n        _this.messageBus.postMessage(msg, function (reply) {\n          if (reply.body.code === 200) {\n            Discovery_log.log(\"Reply Value Log: \", reply.body.value);\n            resolve(reply.body.value);\n          } else {\n            Discovery_log.warn(\"[Discovery.discoverDataObjectsPerName] Error Reply for \" + reporter + \" Reason: \", reply.body.description);\n            resolve([]);\n          }\n        });\n      });\n    }\n    /**\n    * function to request about dataObject registered in domain registry, and\n    * returns discoveredObject.\n    * @param  {String}              name  dataObject URL\n    * @param  {Array<string>}    schema (Optional)     types of dataObjects schemas\n    * @param  {Array<string>}    resources (Optional)  types of dataObjects resources\n    * @param  {String}            domain (Optional)\n    */\n\n  }, {\n    key: \"discoverDataObjectsPerReporterDO\",\n    value: function discoverDataObjectsPerReporterDO(reporter, schema, resources, domain) {\n      var _this11 = this,\n          _arguments10 = arguments;\n\n      return new Promise(function (resolve, reject) {\n        _this11.discoverDataObjectsPerReporter.apply(_this11, _toConsumableArray(_arguments10)).then(function (registryObjects) {\n          return resolve(_this11._convertToDiscoveredObject(registryObjects));\n        })[\"catch\"](function (error) {\n          return reject(error);\n        });\n      });\n    }\n  }, {\n    key: \"_convertToDiscoveredObject\",\n    value: function _convertToDiscoveredObject(registryObjects) {\n      var _this12 = this;\n\n      return registryObjects.map(function (registryObject) {\n        return new discovery_DiscoveredObject(registryObject, _this12.runtimeURL, _this12.discoveryURL, _this12.messageBus, _this12);\n      });\n    }\n    /** Advanced Search for dataObjects registered in domain registry\n    * @deprecated Deprecated. Use discoverDataObjectsPerName instead\n    * @param  {String}           name                  name of the dataObject\n    * @param  {Array<string>}    schema (Optional)     types of dataObject schemas\n    * @param  {Array<string>}    resources (Optional)  types of dataObject resources\n    * @param  {String}           domain (Optional)     domain of the registry to search\n    */\n\n  }, {\n    key: \"discoverDataObject\",\n    value: function discoverDataObject(name, schema, resources, domain) {\n      var _this = this;\n\n      var activeDomain; //let userIdentifier = convertToUserURL(user);\n\n      activeDomain = !domain ? _this.domain : domain;\n      var msg = {\n        type: 'read',\n        from: _this.discoveryURL,\n        to: 'domain://registry.' + activeDomain,\n        body: {\n          resource: name,\n          criteria: {\n            resources: resources,\n            dataSchemes: schema\n          }\n        }\n      };\n      return new Promise(function (resolve, reject) {\n        _this.messageBus.postMessage(msg, function (reply) {\n          Discovery_log.log('[Discovery]', reply);\n\n          if (reply.body.code > 299) {\n            Discovery_log.warn(\"[Discovery.discoverDataObject] Error Reply for \" + name + \" Reason: \", reply.body.description);\n            return resolve([]);\n          }\n\n          var hyperties = reply.body.value;\n\n          if (hyperties) {\n            resolve(hyperties);\n          } else {\n            resolve([]);\n          }\n        });\n      });\n    }\n    /** Advanced Search for Hyperties registered in domain registry\n    * @deprecated Deprecated. Use discoverHyperties instead\n    * @param  {String}           user                  user identifier, either in url or email format\n    * @param  {Array<string>}    schema (Optional)     types of hyperties schemas\n    * @param  {Array<string>}    resources (Optional)  types of hyperties resources\n    * @param  {String}           domain (Optional)     domain of the registry to search\n    */\n\n  }, {\n    key: \"discoverHyperty\",\n    value: function discoverHyperty(user, schema, resources, domain) {\n      var _this = this;\n\n      var activeDomain;\n      var userIdentifier = convertToUserURL(user);\n\n      if (!domain) {\n        activeDomain = _this.domain;\n      } else {\n        activeDomain = domain;\n      }\n\n      return new Promise(function (resolve, reject) {\n        Discovery_log.log('[Discovery.discoverHyperty] ACTIVE DOMAIN -> ', activeDomain, 'user->', user, 'schema->', schema, 'resources->', resources, 'domain->', domain);\n\n        if (user.includes(':') && !user.includes('user://')) {\n          Discovery_log.log('[Discovery.discoverHyperty] ' + user + ' is legacy domain');\n          var legacyUser = {\n            userID: user,\n            hypertyID: user,\n            schema: schema,\n            resources: resources\n          };\n          return resolve(legacyUser);\n        }\n\n        var msg = {\n          type: 'read',\n          from: _this.discoveryURL,\n          to: 'domain://registry.' + activeDomain,\n          body: {\n            resource: userIdentifier,\n            criteria: {\n              resources: resources,\n              dataSchemes: schema\n            }\n          }\n        };\n        Discovery_log.info('[Discovery] msg to send->', msg);\n\n        _this.messageBus.postMessage(msg, function (reply) {\n          Discovery_log.info('[Discovery] ON discoverHyperty->', reply);\n          var hyperties = reply.body.value;\n\n          if (hyperties) {\n            resolve(hyperties);\n          } else {\n            reject('No Hyperty was found');\n          }\n        });\n      });\n    }\n    /**\n    * function to request about users registered in domain registry, and\n    * return the last hyperty instance registered by the user.\n    * @deprecated Deprecated. Use discoverHyperty instead\n    * @param  {email}              email\n    * @param  {domain}            domain (Optional)\n    */\n\n  }, {\n    key: \"discoverHypertyPerUser\",\n    value: function discoverHypertyPerUser(email, domain) {\n      var _this = this;\n\n      var activeDomain;\n      return new Promise(function (resolve, reject) {\n        // Hack for legacy users\n        if (email.includes(':') && !email.includes('user://')) {\n          Discovery_log.log('[Discovery.discoverHyperty] ' + email + 'is legacy domain');\n          var legacyUser = {\n            id: email,\n            hypertyURL: email,\n            descriptor: 'unknown'\n          };\n          return resolve(legacyUser);\n        }\n\n        if (!domain) {\n          activeDomain = _this.domain;\n        } else {\n          activeDomain = domain;\n        }\n\n        var identityURL = 'user://' + email.substring(email.indexOf('@') + 1, email.length) + '/' + email.substring(0, email.indexOf('@')); // message to query domain registry, asking for a user hyperty.\n\n        var message = {\n          type: 'read',\n          from: _this.discoveryURL,\n          to: 'domain://registry.' + activeDomain,\n          body: {\n            resource: identityURL\n          }\n        };\n        Discovery_log.info('[Discovery] Message: ', message, activeDomain, identityURL); //log.info('[Discovery] message READ', message);\n\n        _this.messageBus.postMessage(message, function (reply) {\n          Discovery_log.info('[Discovery] message reply', reply);\n          var hyperty;\n          var mostRecent;\n          var lastHyperty;\n          var value = reply.body.value;\n\n          for (hyperty in value) {\n            if (value[hyperty].lastModified !== undefined) {\n              if (mostRecent === undefined) {\n                mostRecent = new Date(value[hyperty].lastModified);\n                lastHyperty = hyperty;\n              } else {\n                var hypertyDate = new Date(value[hyperty].lastModified);\n\n                if (mostRecent.getTime() < hypertyDate.getTime()) {\n                  mostRecent = hypertyDate;\n                  lastHyperty = hyperty;\n                }\n              }\n            }\n          }\n\n          Discovery_log.info('[Discovery] Last Hyperty: ', lastHyperty, mostRecent);\n          var hypertyURL = lastHyperty;\n\n          if (hypertyURL === undefined) {\n            return reject('User Hyperty not found');\n          }\n\n          var idPackage = {\n            id: email,\n            descriptor: value[hypertyURL].descriptor,\n            hypertyURL: hypertyURL\n          };\n          Discovery_log.info('[Discovery] ===> hypertyDiscovery messageBundle: ', idPackage);\n          resolve(idPackage);\n        });\n      });\n    }\n    /**\n    * function to request about users registered in domain registry, and\n    * return the all the hyperties registered by the user\n    * @deprecated Deprecated. Use discoverHyperty instead\n    * @param  {email}              email\n    * @param  {domain}            domain (Optional)\n    */\n\n  }, {\n    key: \"discoverHypertiesPerUser\",\n    value: function discoverHypertiesPerUser(email, domain) {\n      var _this = this;\n\n      var activeDomain;\n      Discovery_log.log('on Function->', email);\n      return new Promise(function (resolve, reject) {\n        if (email.includes(':') && !email.includes('user://')) {\n          Discovery_log.log('[Discovery.discoverHyperty] is legacy domain');\n          var legacyUser = {\n            userID: email,\n            hypertyID: email,\n            schema: schema,\n            resources: resources\n          };\n          return resolve(legacyUser);\n        }\n\n        if (!domain) {\n          activeDomain = _this.domain;\n        } else {\n          activeDomain = domain;\n        }\n\n        var identityURL = 'user://' + email.substring(email.indexOf('@') + 1, email.length) + '/' + email.substring(0, email.indexOf('@')); // message to query domain registry, asking for a user hyperty.\n\n        var message = {\n          type: 'read',\n          from: _this.discoveryURL,\n          to: 'domain://registry.' + activeDomain,\n          body: {\n            resource: identityURL\n          }\n        };\n        Discovery_log.log('[Discovery] Message discoverHypertiesPerUser: ', message, activeDomain, identityURL); //log.info('[Discovery] message READ', message);\n\n        _this.messageBus.postMessage(message, function (reply) {\n          Discovery_log.info('[Discovery] discoverHypertiesPerUser reply', reply);\n          var value = reply.body.value;\n\n          if (!value) {\n            return reject('User Hyperty not found');\n          }\n\n          resolve(value);\n        });\n      });\n    }\n    /**\n    * function to request about users registered in domain registry, and\n    * return the all the hyperties registered by the user\n    * @deprecated Deprecated. Use discoverHyperty instead\n    * @param  {email}              email\n    * @param  {domain}            domain (Optional)\n    */\n\n  }, {\n    key: \"resumeDiscoveries\",\n    value: function resumeDiscoveries() {\n      var _this = this;\n\n      Discovery_log.log('[Discovery] resumeDiscoveries');\n      return new Promise(function (resolve, reject) {\n        var msg = {\n          type: 'read',\n          from: _this.discoveryURL,\n          to: _this.runtimeURL + '/subscriptions',\n          body: {\n            resource: _this.discoveryURL\n          }\n        };\n\n        _this.messageBus.postMessage(msg, function (reply) {\n          Discovery_log.log('[Discovery.resumeDiscoveries] reply: ', reply);\n          var notifications = [];\n\n          if (reply.body.code === 200) {\n            var urls = reply.body.value; // URLs to add listeners to\n            //lets create one DiscoveryObject per notification\n\n            urls.forEach(function (url) {\n              var objectUrl = url.split('/registration')[0];\n              var data = {};\n              data.url = objectUrl;\n              Discovery_log.log('[Discovery.resumeDiscoveries] adding listener to: ', objectUrl);\n\n              if (objectUrl.includes('hyperty://')) {\n                notifications.push(_this.discoverHypertyPerURLDO(objectUrl));\n              } else {\n                notifications.push(_this.discoverDataObjectPerURLDO(objectUrl));\n              }\n            });\n            Promise.all(notifications).then(function (values) {\n              resolve(values);\n            });\n          } else {\n            resolve([]);\n          }\n        });\n      });\n    }\n  }]);\n\n  return Discovery;\n}();\n\n/* harmony default export */ var discovery_Discovery = (Discovery_Discovery);\n// CONCATENATED MODULE: ./src/utils/Search.js\nfunction Search_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction Search_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Search_createClass(Constructor, protoProps, staticProps) { if (protoProps) Search_defineProperties(Constructor.prototype, protoProps); if (staticProps) Search_defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Search =\n/*#__PURE__*/\nfunction () {\n  function Search(discovery, identityManager) {\n    Search_classCallCheck(this, Search);\n\n    if (!discovery) throw new Error('The discovery component is a needed parameter');\n    if (!identityManager) throw new Error('The identityManager component is a needed parameter');\n\n    var _this = this;\n\n    _this.discovery = discovery;\n    _this.identityManager = identityManager;\n  }\n\n  Search_createClass(Search, [{\n    key: \"myIdentity\",\n    value: function myIdentity() {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        _this.identityManager.discoverUserRegistered().then(function (result) {\n          resolve(result);\n        })[\"catch\"](function (reason) {\n          reject(reason);\n        });\n      });\n    }\n  }, {\n    key: \"hyperties\",\n    value: function hyperties(users, schemes, resources) {\n      var globalFlag = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n    } //TODO: reuse users or the other way around\n\n    /**\n     * List of usersURL to search\n     * @param  {array<URL.userURL>}  users List of UserUR, like this format user://<ipddomain>/<user-identifier>\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"users\",\n    value: function users(usersURLs, providedDomains, schemes, resources) {\n      var globalFlag = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n      if (!usersURLs) throw new Error('You need to provide a list of users');\n      if (!providedDomains) throw new Error('You need to provide a list of domains');\n      if (!resources) throw new Error('You need to provide a list of resources');\n      if (!schemes) throw new Error('You need to provide a list of schemes');\n\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        console.info('[Search] Users: ', usersURLs, usersURLs.length);\n        console.info('[Search] Domains: ', providedDomains, providedDomains.length);\n\n        if (usersURLs.length === 0) {\n          console.info('Don\\'t have users to discovery');\n          resolve(usersURLs);\n        } else {\n          var getUsers = [];\n          usersURLs.forEach(function (userURL, index) {\n            var currentDomain = providedDomains[index];\n            console.info('[Search] Search user ' + userURL + ' for provided domain:', currentDomain);\n\n            if (!globalFlag) {\n              getUsers.push(_this.discovery.discoverHyperties(userURL, schemes, resources, currentDomain));\n            } else {\n              getUsers.push(_this.discovery.discoverHypertiesPerUserProfileData(userURL, schemes, resources));\n            }\n          });\n          console.info('Requests promises: ', getUsers);\n          Promise.all(getUsers.map(function (promise) {\n            return promise.then(function (hyperty) {\n              return hyperty;\n            }, function (error) {\n              return error;\n            });\n          })).then(function (hyperties) {\n            console.info('[Search] Hyperties from new Discovery', hyperties);\n            var result = hyperties.map(function (hyperty) {\n              if (hyperty.hasOwnProperty('hypertyID')) return hyperty;\n              var recent = Object.keys(hyperty).reduceRight(function (a, b) {\n                var hypertyDate = new Date(hyperty[b].lastModified);\n                var hypertyDateP = new Date(hyperty[a].lastModified);\n\n                if (hypertyDateP.getTime() < hypertyDate.getTime()) {\n                  return b;\n                }\n\n                return a;\n              });\n              return hyperty[recent];\n            });\n            var clean = result.filter(function (hyperty) {\n              return hyperty.hasOwnProperty('hypertyID');\n            });\n            console.log('Requests result: ', clean);\n            hyperties.forEach(function (entry) {\n              if (entry !== 'No Hyperty was found') {\n                return resolve(clean);\n              }\n            });\n            reject('No Hyperty was found');\n          })[\"catch\"](function (reason) {\n            console.error(reason);\n            resolve(usersURLs);\n          });\n        }\n      });\n    }\n  }]);\n\n  return Search;\n}();\n\n/* harmony default export */ var utils_Search = (Search);\n// CONCATENATED MODULE: ./src/utils/EventEmitter.js\nfunction EventEmitter_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction EventEmitter_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction EventEmitter_createClass(Constructor, protoProps, staticProps) { if (protoProps) EventEmitter_defineProperties(Constructor.prototype, protoProps); if (staticProps) EventEmitter_defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n* Copyright 2016 PT Inovação e Sistemas SA\n* Copyright 2016 INESC-ID\n* Copyright 2016 QUOBIS NETWORKS SL\n* Copyright 2016 FRAUNHOFER-GESELLSCHAFT ZUR FOERDERUNG DER ANGEWANDTEN FORSCHUNG E.V\n* Copyright 2016 ORANGE SA\n* Copyright 2016 Deutsche Telekom AG\n* Copyright 2016 Apizee\n* Copyright 2016 TECHNISCHE UNIVERSITAT BERLIN\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n**/\n\n/**\n * EventEmitter\n * All classes which extends this, can have addEventListener and trigger events;\n */\nvar EventEmitter =\n/*#__PURE__*/\nfunction () {\n  function EventEmitter() {\n    EventEmitter_classCallCheck(this, EventEmitter);\n  }\n\n  EventEmitter_createClass(EventEmitter, [{\n    key: \"addEventListener\",\n\n    /**\n     * addEventListener listen for an eventType\n     * @param  {string}         eventType - listening for this type of event\n     * @param  {Function}       cb        - callback function will be executed when the event it is invoked\n     */\n    value: function addEventListener(eventType, cb) {\n      var _this = this;\n\n      _this[eventType] = cb;\n    }\n    /**\n     * Invoke the eventType\n     * @param  {string} eventType - event will be invoked\n     * @param  {object} params - parameters will be passed to the addEventListener\n     */\n\n  }, {\n    key: \"trigger\",\n    value: function trigger(eventType, params) {\n      var _this = this;\n\n      if (_this[eventType]) {\n        _this[eventType](params);\n      }\n    }\n  }]);\n\n  return EventEmitter;\n}();\n\n/* harmony default export */ var utils_EventEmitter = (EventEmitter);\n// CONCATENATED MODULE: ./src/contextManager/ContextObserver.js\nfunction ContextObserver_typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { ContextObserver_typeof = function _typeof(obj) { return typeof obj; }; } else { ContextObserver_typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return ContextObserver_typeof(obj); }\n\nfunction ContextObserver_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction ContextObserver_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction ContextObserver_createClass(Constructor, protoProps, staticProps) { if (protoProps) ContextObserver_defineProperties(Constructor.prototype, protoProps); if (staticProps) ContextObserver_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction ContextObserver_possibleConstructorReturn(self, call) { if (call && (ContextObserver_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return ContextObserver_assertThisInitialized(self); }\n\nfunction ContextObserver_getPrototypeOf(o) { ContextObserver_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return ContextObserver_getPrototypeOf(o); }\n\nfunction ContextObserver_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction ContextObserver_inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) ContextObserver_setPrototypeOf(subClass, superClass); }\n\nfunction ContextObserver_setPrototypeOf(o, p) { ContextObserver_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return ContextObserver_setPrototypeOf(o, p); }\n\n//import IdentityManager from '../identityManager/IdentityManager';\n//import Syncher from '../syncher/Syncher.js';\n//import Discovery from '../discovery/Discovery.js';\n//import {divideURL} from '../utils/utils';\n//import Search from '../utils/Search';\n\n/**\n* Context Observer;\n* @author Paulo Chainho [paulo-g-chainho@alticelabs.com]\n*/\n\nvar ContextObserver =\n/*#__PURE__*/\nfunction (_EventEmitter) {\n  ContextObserver_inherits(ContextObserver, _EventEmitter);\n\n  function ContextObserver(hypertyURL, bus, configuration, contextResourceTypes, factory, syncher) {\n    var _this2;\n\n    ContextObserver_classCallCheck(this, ContextObserver);\n\n    if (!hypertyURL) throw new Error('The hypertyURL is a needed parameter');\n    if (!bus) throw new Error('The MiniBus is a needed parameter');\n    if (!configuration) throw new Error('The configuration is a needed parameter ');\n    if (!factory) throw new Error('The factory is a needed parameter ');\n    _this2 = ContextObserver_possibleConstructorReturn(this, ContextObserver_getPrototypeOf(ContextObserver).call(this));\n\n    var _this = ContextObserver_assertThisInitialized(_this2);\n\n    _this._contextResourceTypes = contextResourceTypes;\n    _this._url = hypertyURL;\n    _this._discoverUsersPromises = {}; // object with promises executed at discoverUsers function\n\n    _this._observePromises = {}; // object with promises executed at observe function\n    //let identityManager = new IdentityManager(hypertyURL, configuration.runtimeURL, bus);\n\n    console.log('[ContextObserver] started with hypertyURL->', hypertyURL);\n    _this._domain = factory.divideURL(configuration.runtimeURL).domain;\n    _this._objectDescURL = 'hyperty-catalogue://catalogue.' + _this._domain + '/.well-known/dataschema/Context';\n    _this._users2observe = [];\n    _this._observers = {};\n    _this2._syncher = syncher ? syncher : factory.createSyncher(hypertyURL, bus, configuration);\n    var discovery = factory.createDiscovery(hypertyURL, configuration.runtimeURL, bus);\n    _this._discovery = discovery;\n    _this._discoveries = {}; //list of discovered objects\n    //_this.identityManager = identityManager;\n    //_this.search = new Search(discovery, identityManager);\n\n    window.discovery = _this._discovery;\n    return _this2;\n  }\n\n  ContextObserver_createClass(ContextObserver, [{\n    key: \"start\",\n    value: function start(resumedContext, disconnectedCallBack) {\n      var _this = this;\n\n      console.log('[ContextObserver.start] ');\n      return new Promise(function (resolve, reject) {\n        _this._syncher.resumeObservers({\n          store: true\n        }).then(function (observers) {\n          var observersList = Object.keys(observers);\n\n          if (observersList.length > 0) {\n            console.log('[ContextObserver.start] resuming: ', observers);\n            /*observersList.forEach((i)=>{\n            _this._users2observe.push(new UserAvailabilityController(observers[i]));\n            });*/\n\n            _this._observers = observers;\n            resolve(observers);\n            observersList.forEach(function (observer) {\n              var Context = observers[observer]; // By default resumed context is set with resumedContext.\n\n              if (resumedContext) context.data.values = resumedContext; // Context will will be updated with value synchronized with reporter if connected\n\n              Context.sync(); //Add listener to be notified when reporter is abruptly disconnected\n\n              if (disconnectedCallBack) Context.onDisconnected(disconnectedCallBack);\n            });\n          } else {\n            resolve(false);\n          }\n        })[\"catch\"](function (reason) {\n          console.info('[ContextObserver] Resume Observer failed | ', reason);\n          resolve(false);\n        });\n      })[\"catch\"](function (reason) {\n        reject('[ContextObserver] Start failed | ', reason);\n      });\n    }\n  }, {\n    key: \"resumeDiscoveries\",\n    value: function resumeDiscoveries() {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        _this._discovery.resumeDiscoveries().then(function (discoveries) {\n          console.log('[ContextObserver._resumeDiscoveries] found: ', discoveries);\n          discoveries.forEach(function (discovery) {\n            if (discovery.data.resources && discovery.data.resources[0] === _this._contextResourceTypes[0]) {\n              console.log('[ContextObserver._resumeDiscoveries] resuming: ', discovery);\n\n              if (discovery.data.status === 'live') {\n                // previously discovered object is now live\n                resolve([discovery.data]);\n                discovery.unsubscribeLive(_this._url);\n              } else {\n                // previously discovered object is still disconnected\n                discovery.onLive(_this._url, function () {\n                  console.log('[ContextObserver._resumeDiscoveries] disconnected Hyperty is back to live', discovery);\n                  resolve([discovery.data]);\n                  discovery.unsubscribeLive(_this._url);\n                });\n              }\n            }\n          });\n        });\n      })[\"catch\"](function (reason) {\n        reject('[ContextObserver] resumeDiscoveries failed | ', reason);\n      });\n    }\n  }, {\n    key: \"onResumeObserver\",\n    value: function onResumeObserver(callback) {\n      var _this = this;\n\n      _this._onResumeObserver = callback;\n    }\n  }, {\n    key: \"discoverUsers\",\n    value: function discoverUsers(email, domain) {\n      var _this = this;\n\n      var user = email + '@' + domain;\n\n      if (!_this._discoverUsersPromises[user]) {\n        _this._discoverUsersPromises[user] = new Promise(function (resolve, reject) {\n          _this._discovery.discoverHypertiesDO(email, ['context'], _this._contextResourceTypes, domain).then(function (hyperties) {\n            //_this.search.users([email], [domain], ['context'], ['Context_context']).then(function(a) {\n            console.log('[ContextObserver.discoverUsers] discovery result->', hyperties);\n            var discovered = [];\n            var disconnected = [];\n            hyperties.forEach(function (hyperty) {\n              _this._discoveries[hyperty.data.hypertyID] = hyperty;\n\n              if (hyperty.data.status === 'live') {\n                discovered.push(hyperty.data);\n              } else {\n                disconnected.push(hyperty);\n              }\n            });\n\n            if (discovered.length > 0) {\n              console.log('[ContextObserver.discoverUsers] returning discovered hyperties data->', discovered);\n              resolve(discovered);\n            } else if (disconnected.length > 0) {\n              console.log('[ContextObserver.discoverUsers] disconnected Hyperties ', disconnected); //resolve([]);\n\n              disconnected[0].onLive(_this._url, function () {\n                console.log('[ContextObserver.discoverUsers] disconnected Hyperty is back to live', disconnected[0]);\n                discovered.push(disconnected[0].data);\n                resolve(discovered);\n                disconnected[0].unsubscribeLive(_this._url);\n              });\n            }\n          });\n        });\n      }\n\n      return _this._discoverUsersPromises[user];\n    }\n    /**\n     * This function is used to start the user Context observation for a certain user Context reporter\n     * @param  {DiscoveredObject} hyperty       Hyperty to be observed.\n     * @return {<Promise> DataObjectObserver}      It returns as a Promise the UserAvailability Data Object Observer.\n     */\n\n  }, {\n    key: \"observe\",\n    value: function observe(hyperty) {\n      var domainSubscription = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n      var _this = this;\n\n      if (!_this._observePromises[hyperty.hypertyID]) {\n        _this._observePromises[hyperty.hypertyID] = new Promise(function (resolve, reject) {\n          //check if we are already observing it\n          _this._users2observe.forEach(function (Context) {\n            if (Context._reporter === hyperty.hypertyID) return resolve(Context);\n          });\n\n          _this._discovery.discoverDataObjectsPerReporter(hyperty.hypertyID, ['context'], _this._contextResourceTypes, _this._domain).then(function (dataObjects) {\n            console.log('[ContextObserver.discoverAvailability] discovered context objects ', dataObjects);\n            var last = 0;\n            var url;\n            dataObjects.forEach(function (dataObject) {\n              if (dataObject.hasOwnProperty('lastModified') && dataObject.hasOwnProperty('url') && Date.parse(dataObject.lastModified) > last) {\n                last = dataObject.lastModified;\n                url = dataObject.url; //console.log('URL DATA Object', url);\n              }\n            });\n\n            if (last != 0 && url) {\n              resolve(_this._subscribeContext(hyperty, url, domainSubscription));\n            } else {\n              reject('[ContextObserver.observe] discovered DataObjecs are invalid', dataObjects);\n            }\n          });\n        });\n      }\n\n      return _this._observePromises[hyperty.hypertyID];\n    }\n  }, {\n    key: \"_subscribeContext\",\n    value: function _subscribeContext(hyperty, url) {\n      var domainSubscription = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n      var _this = this; // avoid duplicated subscriptions\n\n\n      return new Promise(function (resolve, reject) {\n        _this._users2observe.forEach(function (Context) {\n          if (Context.url === url) return resolve(Context);\n        });\n\n        var input = {\n          schema: _this._objectDescURL,\n          resource: url,\n          store: null,\n          p2p: null,\n          mutual: null,\n          domain_subscription: domainSubscription\n        };\n\n        _this._syncher.subscribe(input).then(function (Context) {\n          console.log('[ContextObserver._subscribeContext] observer object', Context); //let newUserAvailability = new UserAvailabilityController(Context, userID);\n\n          _this._users2observe.push(Context); // When Object is disconnected set user Context status as unavailable\n\n\n          Context.onDisconnected(function () {\n            console.log('[ContextObserver.onDisconnected]: ', Context);\n            Context.data.values[0].value = 'unavailable';\n            Context.sync();\n          });\n          resolve(Context);\n        });\n      });\n    }\n  }, {\n    key: \"_discoverAndSubscribeLegacyUsers\",\n    value: function _discoverAndSubscribeLegacyUsers(name) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        _this._discovery.discoverDataObjectsPerName(name).then(function (result) {\n          console.log('[ContextObserver._discoverAndSubscribeLegacyUsers] All DataObjects Result', result);\n          result.forEach(function (obj) {\n            if (obj.status === 'live') {\n              console.log('Live obj', obj);\n\n              if (!obj.hypertyID) {\n                obj.hypertyID = obj.reporter;\n              }\n\n              _this._subscribeContext(obj.schema, obj.url).then(function (resultSubscribe) {\n                console.log('[ContextObserver._discoverAndSubscribeLegacyUsers] _subscribeContext', resultSubscribe);\n                return resolve(resultSubscribe);\n              });\n            }\n          });\n        })[\"catch\"](function (err) {\n          console.log('error ', err);\n        });\n      });\n    }\n    /**\n    * This function is used to stop the user Context observation for a certain user\n    * @param  {string} Context       the UserAvailability Data Object Observer URL to be unobserved.\n    */\n\n  }, {\n    key: \"unobserve\",\n    value: function unobserve(Context) {\n      var _this = this;\n\n      _this._users2observe.forEach(function (user, index) {\n        if (user.url === Context) {\n          user.unsubscribe();\n\n          _this._users2observe.splice(index, 1);\n        }\n      });\n    }\n  }]);\n\n  return ContextObserver;\n}(utils_EventEmitter);\n\n/* harmony default export */ var contextManager_ContextObserver = (ContextObserver);\n// CONCATENATED MODULE: ./src/contextManager/ContextReporter.js\nfunction ContextReporter_typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { ContextReporter_typeof = function _typeof(obj) { return typeof obj; }; } else { ContextReporter_typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return ContextReporter_typeof(obj); }\n\nfunction ContextReporter_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction ContextReporter_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction ContextReporter_createClass(Constructor, protoProps, staticProps) { if (protoProps) ContextReporter_defineProperties(Constructor.prototype, protoProps); if (staticProps) ContextReporter_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction ContextReporter_possibleConstructorReturn(self, call) { if (call && (ContextReporter_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return ContextReporter_assertThisInitialized(self); }\n\nfunction ContextReporter_getPrototypeOf(o) { ContextReporter_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return ContextReporter_getPrototypeOf(o); }\n\nfunction ContextReporter_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction ContextReporter_inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) ContextReporter_setPrototypeOf(subClass, superClass); }\n\nfunction ContextReporter_setPrototypeOf(o, p) { ContextReporter_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return ContextReporter_setPrototypeOf(o, p); }\n\n/**\n* Copyright 2016 PT Inovação e Sistemas SA\n* Copyright 2016 INESC-ID\n* Copyright 2016 QUOBIS NETWORKS SL\n* Copyright 2016 FRAUNHOFER-GESELLSCHAFT ZUR FOERDERUNG DER ANGEWANDTEN FORSCHUNG E.V\n* Copyright 2016 ORANGE SA\n* Copyright 2016 Deutsche Telekom AG\n* Copyright 2016 Apizee\n* Copyright 2016 TECHNISCHE UNIVERSITAT BERLIN\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n**/\n// Service Framework\n//import Syncher from '../syncher/Syncher';\n// Utils\n //import {divideURL} from '../utils/utils.js';\n// import availability from './availability.js';\n\n/**\n* Context Reporter;\n* @author Paulo Chainho [paulo-g-chainho@alticelabs.com]\n*/\n\nvar ContextReporter =\n/*#__PURE__*/\nfunction (_EventEmitter) {\n  ContextReporter_inherits(ContextReporter, _EventEmitter);\n\n  function ContextReporter(hypertyURL, bus, configuration, factory, syncher) {\n    var _this2;\n\n    ContextReporter_classCallCheck(this, ContextReporter);\n\n    if (!hypertyURL) throw new Error('The hypertyURL is a needed parameter');\n    if (!bus) throw new Error('The MiniBus is a needed parameter');\n    if (!configuration) throw new Error('The configuration is a needed parameter');\n    _this2 = ContextReporter_possibleConstructorReturn(this, ContextReporter_getPrototypeOf(ContextReporter).call(this, hypertyURL, bus, configuration));\n\n    var _this = ContextReporter_assertThisInitialized(_this2);\n\n    console.info('[ContextReporter] started with url: ', hypertyURL);\n    _this2.syncher = syncher ? syncher : factory.createSyncher(hypertyURL, bus, configuration); //    this.discovery = new Discovery(hypertyURL, bus);\n\n    _this2.domain = factory.divideURL(configuration.runtimeURL).domain;\n    _this2.contexts = {};\n    _this2.contextDescURL = 'hyperty-catalogue://catalogue.' + _this2.domain + '/.well-known/dataschema/Context'; //    this.heartbeat = [];\n\n    _this2.syncher.onNotification(function (event) {\n      var _this = ContextReporter_assertThisInitialized(_this2);\n\n      _this.onNotification(event);\n    }); //TODO: uncomment when used with service framework develop branch\n\n\n    _this2.syncher.onClose(function (event) {\n      console.log('[ContextReporter.onClose]');\n\n      var _this = ContextReporter_assertThisInitialized(_this2);\n\n      _this.setStatus(event.id, 'unavailable');\n\n      event.ack();\n    });\n\n    return _this2;\n  } //TODO: move to User availability Reporter or to abstract HypertyContextReporter\n\n\n  ContextReporter_createClass(ContextReporter, [{\n    key: \"start\",\n    value: function start() {\n      var _this3 = this;\n\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        _this3.syncher.resumeReporters({\n          store: true\n        }).then(function (reporters) {\n          var reportersList = Object.keys(reporters);\n\n          if (reportersList.length > 0) {\n            console.log('[ContextReporter.start] resuming ', reporters[reportersList[0]]); // set availability to available\n\n            _this.contexts = reporters; //TODO:\n\n            reportersList.forEach(function (context) {\n              _this._onSubscription(_this.contexts[context]);\n            });\n            resolve(_this.contexts);\n          } else {\n            console.log('[ContextReporter.start] nothing to resume ', reporters);\n            resolve(false);\n          }\n        })[\"catch\"](function (reason) {\n          console.error('[ContextReporter] Resume failed | ', reason);\n        });\n      })[\"catch\"](function (reason) {\n        reject('[ContextReporter] Start failed | ', reason);\n      });\n    }\n  }, {\n    key: \"processNotification\",\n    value: function processNotification(event) {\n      var _this = this;\n\n      console.log('[ContextReporter.processNotification: ', event);\n      event.ack();\n    }\n    /**\n     * This function is used to create a new status object syncher\n     * @param  {URL.UserURL} contacts List of Users\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"create\",\n    value: function create(id, init, resources) {\n      var name = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'myContext';\n      var reporter = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n      var reuseURL = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : null;\n\n      //debugger;\n      var _this = this;\n\n      var input;\n      return new Promise(function (resolve, reject) {\n        if (!reporter && !reuseURL) {\n          input = {\n            resources: resources,\n            expires: 30\n          };\n        } else if (reporter && !reuseURL) {\n          input = {\n            resources: resources,\n            expires: 30,\n            reporter: reporter\n          };\n        } else if (!reporter && reuseURL) {\n          input = {\n            resources: resources,\n            expires: 30,\n            reuseURL: reuseURL\n          };\n        } else {\n          input = {\n            resources: resources,\n            expires: 30,\n            reuseURL: reuseURL,\n            reporter: reporter\n          };\n        }\n\n        console.info('[ContextReporter.create] lets create a new User availability Context Object ', input);\n\n        _this.syncher.create(_this.contextDescURL, [], init, true, false, name, null, input).then(function (context) {\n          _this.contexts[id] = context;\n\n          _this._onSubscription(context);\n\n          resolve(context);\n        })[\"catch\"](function (reason) {\n          reject(reason);\n        });\n      });\n    }\n  }, {\n    key: \"_onSubscription\",\n    value: function _onSubscription(context) {\n      context.onSubscription(function (event) {\n        console.info('[ContextReporter._onSubscription] accepting: ', event);\n        event.accept();\n      });\n    }\n  }, {\n    key: \"setContext\",\n    value: function setContext(id, newContext) {\n      var _this = this;\n\n      console.log('THIS [ContextReporter.setContext] before change :', _this.contexts[id]);\n      console.log('[ContextReporter.setContext] before change :', _this.contexts[id].data); //    _this.contexts[id].data.values[0].value = newContext;\n\n      _this.contexts[id].data.values = newContext;\n      console.debug('[ContextReporter.setContext] after change :', _this.contexts[id].data);\n\n      _this.trigger(id + '-context-update', newContext);\n    }\n  }]);\n\n  return ContextReporter;\n}(utils_EventEmitter);\n\n/* harmony default export */ var contextManager_ContextReporter = (ContextReporter);\n// CONCATENATED MODULE: ./src/identity/UserProfile.js\nfunction UserProfile_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n* The UserProfile according to User Identity Data Model\n*/\nvar UserProfile = function UserProfile(username, userURL, picture, name, locale, profile) {\n  UserProfile_classCallCheck(this, UserProfile);\n\n  if (username) {\n    this.preferred_username = username;\n  }\n\n  if (picture) {\n    this.picture = picture;\n  }\n\n  if (name) {\n    this.name = name;\n  }\n\n  if (locale) {\n    this.locale = locale;\n  }\n\n  if (userURL) {\n    this.userURL = userURL;\n  }\n\n  if (profile) Object.assign(this, profile);\n};\n\n/* harmony default export */ var identity_UserProfile = (UserProfile);\n// CONCATENATED MODULE: ./src/identity/MessageBodyIdentity.js\nfunction MessageBodyIdentity_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n* The Identity info to be added to Message.Body.Identity\n*/\n\n\nvar MessageBodyIdentity_MessageBodyIdentity = function MessageBodyIdentity(username, userURL, picture, name, locale, idp, assertion, profile) {\n  MessageBodyIdentity_classCallCheck(this, MessageBodyIdentity);\n\n  if (!idp) throw new Error('IDP should be a parameter');\n  if (!username) throw new Error('username should be a parameter');\n  this.idp = idp;\n\n  if (assertion) {\n    this.assertion = assertion;\n  }\n\n  this.userProfile = new identity_UserProfile(username, userURL, picture, name, locale, profile);\n};\n\n/* harmony default export */ var identity_MessageBodyIdentity = (MessageBodyIdentity_MessageBodyIdentity);\n// CONCATENATED MODULE: ./src/chatManager/communication.js\n/**\n* Copyright 2016 PT Inovação e Sistemas SA\n* Copyright 2016 INESC-ID\n* Copyright 2016 QUOBIS NETWORKS SL\n* Copyright 2016 FRAUNHOFER-GESELLSCHAFT ZUR FOERDERUNG DER ANGEWANDTEN FORSCHUNG E.V\n* Copyright 2016 ORANGE SA\n* Copyright 2016 Deutsche Telekom AG\n* Copyright 2016 Apizee\n* Copyright 2016 TECHNISCHE UNIVERSITAT BERLIN\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n**/\nvar CommunicationStatus = {\n  OPEN: 'open',\n  PENDING: 'pending',\n  CLOSED: 'closed',\n  PAUSED: 'paused',\n  FAILED: 'failed'\n};\nvar communicationObject = {\n  startingTime: '',\n  status: '',\n  participants: {}\n};\nvar communicationChildren = {\n  \"parent\": \"communication\",\n  \"listener\": \"resources\",\n  \"type\": \"HypertyResource\"\n};\n/*\nexport let communicationObject = {\n  id: '',\n  name: '',\n  owner: '',\n  scheme: 'comm',\n  startingTime: '',\n  lastModified: '',\n  duration: '',\n  status: '',\n  participants: []\n};\n*/\n// CONCATENATED MODULE: ./src/chatManager/InvitationsHandler.js\nfunction InvitationsHandler_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction InvitationsHandler_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction InvitationsHandler_createClass(Constructor, protoProps, staticProps) { if (protoProps) InvitationsHandler_defineProperties(Constructor.prototype, protoProps); if (staticProps) InvitationsHandler_defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n* Copyright 2016 PT Inovação e Sistemas SA\n* Copyright 2016 INESC-ID\n* Copyright 2016 QUOBIS NETWORKS SL\n* Copyright 2016 FRAUNHOFER-GESELLSCHAFT ZUR FOERDERUNG DER ANGEWANDTEN FORSCHUNG E.V\n* Copyright 2016 ORANGE SA\n* Copyright 2016 Deutsche Telekom AG\n* Copyright 2016 Apizee\n* Copyright 2016 TECHNISCHE UNIVERSITAT BERLIN\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n**/\n\n/**\n* To manage Group Chat Invitations\n* @author Paulo Chainho [paulo-g-chainho@alticelabs.com]\n* @version 0.1.0\n*/\n// TODO: have an instance per ChatController\nvar InvitationsHandler =\n/*#__PURE__*/\nfunction () {\n  function InvitationsHandler(hypertyURL) {\n    InvitationsHandler_classCallCheck(this, InvitationsHandler);\n\n    if (!hypertyURL) throw Error('hypertyURL is a necessary dependecy');\n\n    var _this = this;\n\n    _this._hypertyURL = hypertyURL;\n    _this._pending = {}; // All pending invitations\n  }\n\n  InvitationsHandler_createClass(InvitationsHandler, [{\n    key: \"inviteDisconnectedHyperties\",\n\n    /**\n     * This function is used to handle notifications for disconnected Hy+erties.\n     * @param  {DiscoveredObject[]}    disconnected  array of discovered hyperties that are disconnected\n     * @param  {DataObjectReporter}    DataObjectReporter   Data Object Reporter addressed by invitations\n     */\n    value: function inviteDisconnectedHyperties(disconnected, dataObjectReporter) {\n      var _this = this;\n\n      console.log('[GroupChatManager.InvitationsHandler.inviteDisconnectedHyperties] lets invite ', disconnected);\n      disconnected.forEach(function (disconnectedHyperty) {\n        if (!_this._pending[dataObjectReporter]) {\n          _this._pending[dataObjectReporter] = {};\n        }\n\n        _this._pending[dataObjectReporter][disconnectedHyperty.data.hypertyID] = disconnectedHyperty;\n        disconnectedHyperty.onLive(_this._hypertyURL, function () {\n          console.log('[GroupChatManager.create] disconnected Hyperty is back to live', disconnectedHyperty);\n          dataObjectReporter.inviteObservers([disconnectedHyperty.data.hypertyID]);\n          disconnectedHyperty.unsubscribeLive(_this._hypertyURL);\n          delete _this._pending[dataObjectReporter][disconnectedHyperty.data.hypertyID];\n        });\n      });\n    }\n    /**\n     * This function is used to process sent invitations. In case invitations are not acknowledge by recipient it will be handled as a disconnected hyperty\n     * @param  {DiscoveredObject[]}    live  array of discovered hyperties that are or were live\n     * @param  {DataObjectReporter}    DataObjectReporter   Data Object Reporter addressed by invitations\n     */\n\n  }, {\n    key: \"processInvitations\",\n    value: function processInvitations(live, dataObjectReporter) {\n      var _this2 = this;\n\n      var _this = this;\n\n      var invitations = dataObjectReporter.invitations || [];\n      console.log('[GroupChatManager.InvitationsHandler.processInvitations] waiting for replies ', invitations, this._invitationsResponse);\n      invitations.forEach(function (invitation) {\n        invitation.then(function (result) {\n          console.log('[GroupChatManager.InvitationsHandler.processInvitations] - OK: ', result, _this2._invitationsResponse);\n\n          if (_this2._invitationsResponse) {\n            _this2._invitationsResponse(result);\n          }\n        })[\"catch\"](function (result) {\n          console.log('[GroupChatManager.InvitationsHandler.processInvitations] - NOT OK: ', result, _this2._invitationsResponse);\n\n          if (_this2._invitationsResponse) {\n            _this2._invitationsResponse(result);\n          }\n\n          _this.inviteDisconnectedHyperties([live[result.invited]], dataObjectReporter);\n        });\n      });\n    }\n  }, {\n    key: \"resumeDiscoveries\",\n    value: function resumeDiscoveries(discoveryEngine, groupChat) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        var live = {};\n        var liveHyperties = [];\n        var disconnected = [];\n        var unsubscriptonPromises = [];\n        discoveryEngine.resumeDiscoveries().then(function (discoveries) {\n          console.log('[GroupChatManager.InvitationsHandler.resumeDiscoveries] found: ', discoveries);\n          discoveries.forEach(function (discovery) {\n            if (discovery.data.resources && discovery.data.resources[0] === 'chat') {\n              console.log('[GroupChatManager.InvitationsHandler.resumeDiscoveries] resuming: ', discovery);\n\n              if (discovery.data.status === 'live') {\n                // previously discovered object is now live\n                live[discovery.data.hypertyID] = discovery;\n                liveHyperties.push(discovery.data.hypertyID);\n                unsubscriptonPromises.push(discovery.unsubscribeLive(_this._hypertyURL));\n              } else {\n                // previously discovered object is still disconnected\n                disconnected.push(discovery);\n              }\n            }\n          });\n          if (disconnected.length > 0) _this.inviteDisconnectedHyperties(disconnected, groupChat);\n\n          if (Object.keys(live).length > 0) {\n            groupChat.inviteObservers(liveHyperties);\n            if (groupChat.invitations.length > 0) _this.processInvitations(live, groupChat);\n            Promise.all(unsubscriptonPromises).then(function () {\n              resolve();\n            });\n          } else resolve();\n        });\n      })[\"catch\"](function (reason) {\n        reject('[GroupChatManager.InvitationsHandler.resumeDiscoveries] failed | ', reason);\n      });\n    }\n    /**\n     * This function is used to remove and clean all pending invitations.\n     * @param  {DataObjectReporter}    DataObjectReporter   Data Object Reporter addressed by invitations\n     * @return {Promise} return a promise when all unsubscriptons for pending invitations are finished\n     */\n\n  }, {\n    key: \"cleanInvitations\",\n    value: function cleanInvitations(dataObjectReporter) {\n      var _this = this;\n\n      var chatInvitations = _this._pending[dataObjectReporter];\n      console.log('[GroupChatManager.InvitationsHandler.cleanInvitations] ', chatInvitations);\n\n      if (chatInvitations) {\n        return new Promise(function (resolve, reject) {\n          var pendingInvitations = Object.keys(chatInvitations);\n          var unsubscriptonPromises = [];\n          pendingInvitations.forEach(function (invitation) {\n            unsubscriptonPromises.push(chatInvitations[invitation].unsubscribeLive(_this._hypertyURL));\n          });\n          Promise.all(pendingInvitations).then(function () {\n            resolve();\n          });\n        });\n      } else return Promise.resolve();\n    }\n  }, {\n    key: \"invitationResponse\",\n    set: function set(callback) {\n      this._invitationsResponse = callback;\n    }\n  }]);\n\n  return InvitationsHandler;\n}();\n\n/* harmony default export */ var chatManager_InvitationsHandler = (InvitationsHandler);\n// CONCATENATED MODULE: ./src/chatManager/ChatController.js\nfunction ChatController_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction ChatController_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction ChatController_createClass(Constructor, protoProps, staticProps) { if (protoProps) ChatController_defineProperties(Constructor.prototype, protoProps); if (staticProps) ChatController_defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n* Copyright 2016 PT Inovação e Sistemas SA\n* Copyright 2016 INESC-ID\n* Copyright 2016 QUOBIS NETWORKS SL\n* Copyright 2016 FRAUNHOFER-GESELLSCHAFT ZUR FOERDERUNG DER ANGEWANDTEN FORSCHUNG E.V\n* Copyright 2016 ORANGE SA\n* Copyright 2016 Deutsche Telekom AG\n* Copyright 2016 Apizee\n* Copyright 2016 TECHNISCHE UNIVERSITAT BERLIN\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n**/\n\n/**\n* The Group Chat API is used to control a Group Chat instance.\n* @author Vitor Silva [vitor-t-silva@telecom.pt]\n* @version 0.1.0\n*/\n//import { UserInfo } from './UserInfo';\n\n\n\nvar ChatController_ChatController =\n/*#__PURE__*/\nfunction () {\n  function ChatController(syncher, discovery, domain, search, identity, manager) {\n    ChatController_classCallCheck(this, ChatController);\n\n    if (!syncher) throw Error('Syncher is a necessary dependecy');\n    if (!discovery) throw Error('Discover is a necessary dependecy');\n    if (!domain) throw Error('Domain is a necessary dependecy');\n    if (!search) throw Error('Search is a necessary dependecy');\n\n    var _this = this;\n\n    _this._syncher = syncher;\n    _this.discovery = discovery;\n    _this.search = search;\n    _this.myIdentity = identity;\n    _this.controllerMode = 'reporter';\n    _this.child_cseq = 0;\n    _this.domain = domain;\n    _this._manager = manager;\n    var hypertyURL = syncher.owner;\n    _this._objectDescURL = 'hyperty-catalogue://catalogue.' + domain + '/.well-known/dataschema/Communication';\n    _this._invitationsHandler = new chatManager_InvitationsHandler(hypertyURL);\n  }\n\n  ChatController_createClass(ChatController, [{\n    key: \"_setOnAddChildListener\",\n    value: function _setOnAddChildListener(dataObject) {\n      var _this = this;\n\n      dataObject.onAddChild(function (child) {\n        _this.child_cseq += 1;\n        console.info('[ChatManager.ChatController._setOnAddChildListener] new Child received: ', child);\n        if (_this._onMessage) _this._onMessage(child);\n      });\n    }\n  }, {\n    key: \"_onSubscribe\",\n    value: function _onSubscribe(event) {\n      var dataObjectReporter = this._dataObjectReporter;\n      event.accept();\n      console.log('[ChatManager.ChatController.onSubscribe] event', event, dataObjectReporter.url);\n      console.log('[ChatManager.ChatController.onSubscribe] New user has subscribe this object: ', dataObjectReporter.data, event.identity);\n      var identity = JSON.parse(JSON.stringify(event.identity));\n\n      if (identity.hasOwnProperty('assertion')) {\n        delete identity.assertion;\n      }\n\n      var userInfo = {\n        hypertyURL: event.url,\n        domain: event.domain,\n        identity: identity\n      };\n      var userURL = event.identity.userProfile.guid;\n      console.log('[ChatManager.ChatController.onSubscribe]  new participant', userInfo);\n\n      if (event.identity.legacy) {\n        userInfo.legacy = event.identity.legacy;\n      }\n\n      dataObjectReporter.data.participants[userURL] = userInfo;\n      console.log('[ChatManager.ChatController.onSubscribe] communicationObject OBJ chatcontroller', dataObjectReporter.data.participants);\n      console.log('[ChatManager.ChatController.onSubscribe - onSubscription] ', userInfo); // console.log('[ChatManager.ChatController.onSubscribe - this._onUserAdded] ', this._onUserAdded);\n\n      if (this._onUserAdded) this._onUserAdded(userInfo);\n    }\n  }, {\n    key: \"_onUnsubscribe\",\n    value: function _onUnsubscribe(event) {\n      var dataObjectReporter = this._dataObjectReporter;\n      console.log('[ChatManager.ChatController.onUnsubscribe] event', event, dataObjectReporter.url);\n      var participant = event.identity.userProfile;\n      console.log('[ChatManager.ChatController.onUnsubscribe]  participant left', participant);\n\n      if (event.identity.legacy) {\n        participant.legacy = event.identity.legacy;\n      }\n\n      delete dataObjectReporter.data.participants[participant.userURL];\n      console.log('[ChatManager.ChatController.onUnsubscribe - this._onUserRemoved] ', this.onUserRemoved);\n      if (this._onUserRemoved) this._onUserRemoved(participant);\n    }\n    /**\n     * This function is used to send a file.\n     * @param  {string}     file                        Is the file to be sent.\n     * @return {Promise<Communication.ChatMessage>}        It returns the ChatMessage child object created by the Syncher as a Promise.\n     */\n\n  }, {\n    key: \"sendFile\",\n    value: function sendFile(file) {\n      var _this = this;\n\n      var mode = _this.controllerMode;\n      var dataObject = mode === 'reporter' ? _this.dataObjectReporter : _this.dataObjectObserver;\n      return new Promise(function (resolve, reject) {\n        var identity = {\n          userProfile: _this.myIdentity\n        };\n        dataObject.addHypertyResource('resources', 'file', file, identity).then(function (resourceFile) {\n          var identity = {\n            userProfile: _this.myIdentity\n          };\n          var fileSentEvt = {\n            value: resourceFile,\n            identity: identity,\n            resource: resourceFile\n          };\n          var reporterStatus = new discovery_RegistrationStatus(dataObject.url, _this._manager._runtimeURL, _this._manager._hypertyURL, _this._manager._bus); // recursive function to sync with chat reporter\n\n          var share2Reporter = function share2Reporter(file, subscriber, evt, status) {\n            var statusOfReporter = status;\n            file.sharingStatus.then(resolve(evt))[\"catch\"](function (result) {\n              console.log('[ChatManager.ChatController.sendFile] share failed: ', result);\n              statusOfReporter.onLive(subscriber, function () {\n                statusOfReporter.unsubscribeLive(subscriber);\n                file.share(true);\n                share2Reporter(file, subscriber, evt, statusOfReporter);\n              }); //TODO: subscribe to sync when reporter is live. New synched messages should trigger onMessage ie onChild\n            });\n          };\n\n          share2Reporter(resourceFile, _this._manager._hypertyURL, fileSentEvt, reporterStatus);\n        });\n      })[\"catch\"](function (reason) {\n        console.error('Reason:', reason);\n        reject(reason);\n      });\n    }\n    /**\n     * This function is used to send a chat message.\n     * @param  {string}     message                        Is the ChatMessage to be sent.\n     * @return {Promise<Communication.ChatMessage>}        It returns the ChatMessage child object created by the Syncher as a Promise.\n     */\n\n  }, {\n    key: \"send\",\n    value: function send(message, identity) {\n      var _this = this;\n\n      var mode = _this.controllerMode;\n      var dataObject = mode === 'reporter' ? _this.dataObjectReporter : _this.dataObjectObserver;\n      return new Promise(function (resolve, reject) {\n        //      let _dataObjectChild;\n        _this.child_cseq += 1;\n        var msg = {\n          /*        url: dataObject.data.url,\n                  cseq: _this.child_cseq,\n                  reporter: dataObject.data.reporter,\n                  schema: dataObject.data.schema,\n                  name: dataObject.data.name,\n                  created : new Date().toJSON(),*/\n          type: 'chat',\n          content: message\n        };\n        var sender = identity ? identity : {\n          userProfile: _this.myIdentity\n        }; // TODO: change chatmessages to resource - chat, file\n        // TODO: change message to hypertyResource - https://github.com/reTHINK-project/dev-service-framework/tree/develop/docs/datamodel/data-objects/hyperty-resource\n        // TODO: handle with multiple resources - if the \"message\" will be different for each type of resources\n\n        dataObject.addChild(msg, sender).then(function (dataObjectChild) {\n          console.log('[ChatManager.ChatController][addChild - Chat Message]: ', dataObjectChild); //resolve(dataObjectChild);\n          //TODO: move to separate function\n\n          var msg = {\n            childId: dataObjectChild._childId,\n            from: dataObjectChild._owner,\n            value: dataObjectChild.data,\n            type: 'create',\n            identity: sender\n          };\n          var reporterStatus = new discovery_RegistrationStatus(dataObject.url, _this._manager._runtimeURL, _this._manager._hypertyURL, _this._manager._bus); // recursive function to sync with chat reporter\n\n          var share2Reporter = function share2Reporter(child, subscriber, msg, status) {\n            var statusOfReporter = status;\n            child.sharingStatus.then(resolve(msg))[\"catch\"](function (result) {\n              statusOfReporter.onLive(subscriber, function () {\n                statusOfReporter.unsubscribeLive(subscriber);\n                child.share(true);\n                share2Reporter(child, subscriber, msg, statusOfReporter);\n              }); //TODO: subscribe to sync when reporter is live. New synched messages should trigger onMessage ie onChild\n            });\n          };\n\n          share2Reporter(dataObjectChild, _this._manager._hypertyURL, msg, reporterStatus);\n        })[\"catch\"](function (reason) {\n          console.error('Reason:', reason);\n          reject(reason);\n        });\n      });\n    }\n    /**\n     * [onChange description]\n     * @param  {Function} callback [description]\n     * @return {[type]}            [description]\n     */\n\n  }, {\n    key: \"onChange\",\n    value: function onChange(callback) {\n      var _this = this;\n\n      _this._onChange = callback;\n    }\n    /**\n     * This function is used to receive new messages.\n     * @param  {Function} callback Function to handle with new messages\n     * @return {Communication.ChatMessage} m\n     */\n\n  }, {\n    key: \"onMessage\",\n    value: function onMessage(callback) {\n      var _this = this;\n\n      _this._onMessage = callback;\n    }\n    /**\n     * [onUserAdded description]\n     * @param  {Function} callback [description]\n     * @return {[type]}            [description]\n     */\n\n  }, {\n    key: \"onUserAdded\",\n    value: function onUserAdded(callback) {\n      var _this = this;\n\n      _this._onUserAdded = callback;\n    }\n    /**\n     * When the an user was removed\n     * @param  {Function} callback Function handle with the removed user\n     * @return {[type]}            [description]\n     */\n\n  }, {\n    key: \"onUserRemoved\",\n    value: function onUserRemoved(callback) {\n      var _this = this;\n\n      _this._onUserRemoved = callback;\n    }\n    /**\n     * This function is used to receive requests to close the Group Chat instance.\n     * @return {DeleteEvent} The DeleteEvent fired by the Syncher when the Chat is closed.\n     */\n\n  }, {\n    key: \"onClose\",\n    value: function onClose(callback) {\n      var _this = this;\n\n      _this._onClose = callback;\n    }\n  }, {\n    key: \"onResponse\",\n    value: function onResponse(callback) {\n      var _this = this;\n\n      _this._onResponse = callback;\n    }\n    /**\n     * This function is used to add / invite new user on an existing Group Chat instance.\n     * Only the Reporter, i.e. the Hyperty that has created the Group Chat, is allowed to use this function.\n     * @param {URL.UserURL}  users  User to be invited to join the Group Chat that is identified with reTHINK User URL.\n     * @return {Promise<boolean>}   It returns as a Promise true if successfully invited or false otherwise.\n     */\n\n  }, {\n    key: \"addUser\",\n    value: function addUser(users) {\n      var _this = this;\n\n      var haveEmptyElements = function haveEmptyElements(element) {\n        console.log('Element:', element.length);\n        return element.length !== 0;\n      };\n\n      var notFoundElements = function notFoundElements(element) {\n        console.log('user not found: ', element);\n        return !(element instanceof String);\n      };\n\n      return new Promise(function (resolve, reject) {\n        if (users.filter(haveEmptyElements).length === 0) {\n          return reject('Don\\'t have users to invite');\n        }\n\n        console.info('[ChatManager.ChatController.addUsers ]: ', users);\n        /*_this.search.users(users, domains, ['comm'], ['chat'])\n        .then((hypertiesIDs) => {\n         if (hypertiesIDs.filter(notFoundElements).length === 0) {\n          throw 'User(s) not found';\n        }\n         let selectedHyperties = hypertiesIDs.map((hyperty) => {\n          return hyperty.hypertyID;\n        });*/\n\n        var usersDiscovery = [];\n        var disconnected = [];\n        var live = {};\n        users.forEach(function (user) {\n          var userDiscoveryPromise = _this.discovery.discoverHypertiesDO(user.user, ['comm'], ['chat'], user.domain);\n\n          usersDiscovery.push(userDiscoveryPromise);\n        });\n        Promise.all(usersDiscovery).then(function (userDiscoveryResults) {\n          console.log('[ChatManager.ChatController.addUsers] Users Discovery Results->', userDiscoveryResults);\n          var selectedHyperties = [];\n          userDiscoveryResults.forEach(function (userDiscoveryResult) {\n            userDiscoveryResult.forEach(function (discovered) {\n              if (discovered.data.status === 'live') {\n                selectedHyperties.push(discovered.data.hypertyID);\n                live[discovered.data.hypertyID] = discovered;\n              } else if (disconnected.length < 5) disconnected.push(discovered);\n            });\n          });\n          console.info('[ChatManager.ChatController]------------------------ Syncher Create ---------------------- \\n');\n          console.info('[ChatManager.ChatController]Selected Hyperties: !!! ', selectedHyperties);\n          console.info(\"Have \".concat(selectedHyperties.length, \" users;\")); //        console.info('[ChatManager] HypertiesIDs ', hypertiesIDs);\n\n          var dataObject = _this.controllerMode === 'reporter' ? _this.dataObjectReporter : _this.dataObjectObserver;\n          if (disconnected.length > 0) _this._invitationsHandler.inviteDisconnectedHyperties(disconnected, dataObject);\n          dataObject.inviteObservers(selectedHyperties);\n          if (dataObject.invitations.length > 0) _this._invitationsHandler.processInvitations(live, dataObject);\n          return;\n        }).then(function () {\n          console.info('[ChatManager.ChatController]Are invited with success ' + users.length + ' users;');\n          resolve(true);\n        })[\"catch\"](function (reason) {\n          console.error('An error occurred when trying to invite users;\\n', reason);\n          reject(reason);\n        });\n      });\n    }\n    /**\n     * This function is used to request the Reporter to add / invite new user on an existing Group Chat instance.\n     * Only Observers are allowed to use this function.\n     * @param {URL.UserURL}  users  User to be invited to join the Group Chat that is identified with reTHINK User URL.\n     * @return {Promise<boolean>}   It returns as a Promise true if successfully invited or false otherwise.\n     */\n\n  }, {\n    key: \"addUserReq\",\n    value: function addUserReq(users) {\n      var _this = this; //check is Observer and invoke observer.execute() with new promise\n\n\n      var haveEmptyElements = function haveEmptyElements(element) {\n        console.log('Element:', element.length);\n        return element.length !== 0;\n      };\n\n      return new Promise(function (resolve, reject) {\n        if (users.filter(haveEmptyElements).length === 0) {\n          return reject('[ChatManager.ChatController.addUserReq] Don\\'t have users to add');\n        }\n\n        if (!_this.controllerMode === 'observer') {\n          return reject('[ChatManager.ChatController.addUserReq] only allowed to Chat Observer');\n\n          var addUser = _this.addUser(users);\n\n          if (_this._dataObjectObserver) {\n            addUser = _this._dataObjectObserver.execute('addUser', users);\n          }\n\n          addUser.then(function () {\n            console.info('[ChatManager.ChatController.addUserReq] Request accepted by Reporter ');\n            resolve(true);\n          })[\"catch\"](function (reason) {\n            console.error('[ChatManager.ChatController.addUserReq] Request rejected by Reporter;\\n', reason);\n            reject(reason);\n          });\n        }\n      });\n    }\n  }, {\n    key: \"onInvitationResponse\",\n    value: function onInvitationResponse(callback) {\n      var _this = this;\n\n      _this._onInvitationResponse = callback;\n      _this._invitationsHandler.invitationResponse = callback;\n    }\n    /**\n     * This function is used to remove a user from an existing Group Chat instance.\n     * Only the Reporter, i.e. the Hyperty that has created the Group Chat, is allowed to use this function.\n     * @return {<Promise> boolean} Promise with the status\n     */\n\n    /**\n     * This function is used to remove a user from an existing Group Chat instance.\n     * Only the Reporter, i.e. the Hyperty that has created the Group Chat, is allowed to use this function.\n     * @param  {URL.UserURL} user       User to be removed from the Group Chat that is identified with reTHINK User URL.\n     * @return {<Promise> boolean}      It returns as a Promise true if successfully removed or false otherwise.\n     */\n\n  }, {\n    key: \"removeUser\",\n    value: function removeUser(user) {\n      // TODO: implement the removeUser;\n      console.log('[ChatManager.ChatController]Not yet implemented: ', user);\n    }\n    /**\n     * This function is used to close an existing Group Chat instance.\n     * Only available to Chat Group Reporters i.e. the Hyperty instance that created the Group Chat.\n     * @return {<Promise>Boolean} It returns as a Promise true if successfully closed or false otherwise.\n     */\n\n  }, {\n    key: \"close\",\n    value: function close() {\n      var del = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n      // TODO: the dataObjectReporter.delete should be a Promise;\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        if (_this.controllerMode === 'reporter') {\n          // reporter\n          _this._invitationsHandler.cleanInvitations(_this.dataObjectReporter).then(function () {\n            if (!del) {\n              _this._manager.communicationObject.status = 'closed';\n              resolve(true);\n            } else {\n              try {\n                delete _this._manager._reportersControllers[_this.dataObjectReporter.url];\n\n                _this.dataObjectReporter[\"delete\"]();\n\n                resolve(true);\n                if (_this._onClose) _this._onClose({\n                  code: 200,\n                  desc: 'deleted',\n                  url: _this.dataObjectReporter.url\n                });\n              } catch (e) {\n                console.error(e);\n                reject(false);\n              }\n            }\n          });\n        } else {\n          // observer\n          if (del) {\n            try {\n              delete _this._manager._observersControllers[_this.dataObjectObserver.url];\n\n              _this.dataObjectObserver.unsubscribe();\n\n              resolve(true);\n            } catch (e) {\n              console.error(e);\n              reject(false);\n            }\n          } else {\n            // TODO: send message \n            resolve(true);\n          }\n        }\n      });\n    }\n  }, {\n    key: \"invitationsHandler\",\n    get: function get() {\n      return this._invitationsHandler;\n    }\n  }, {\n    key: \"url\",\n    get: function get() {\n      return this.controllerMode === 'reporter' ? this.dataObjectReporter.url : this.dataObjectObserver.url;\n    }\n  }, {\n    key: \"dataObjectReporter\",\n    set: function set(dataObjectReporter) {\n      if (!dataObjectReporter) throw new Error('[ChatController] The data object reporter is necessary parameter ');\n\n      var _this = this;\n\n      _this.controllerMode = 'reporter'; // Handler to process received files\n      // dataObjectReporter.onResponse(function(event) {\n      //   console.log('[DataObjectReporter - onResponse]', event);\n      //   if (_this._onInvitationResponse) {\n      //     _this._onInvitationResponse(event);\n      //   }\n      //\n      // });\n\n      dataObjectReporter.onSubscription(function (event) {\n        switch (event.type) {\n          case 'subscribe':\n            _this._onSubscribe(event);\n\n            break;\n\n          case 'unsubscribe':\n            _this._onUnsubscribe(event);\n\n            break;\n        }\n      });\n\n      _this._setOnAddChildListener(dataObjectReporter);\n\n      dataObjectReporter.onRead(function (event) {\n        event.accept();\n      });\n      dataObjectReporter.onExecute(function (event) {\n        switch (event.method) {\n          case 'addUser':\n            _this.addUser(event.params[0]).then(function () {\n              event.accept();\n            })[\"catch\"](function (reason) {\n              console.error('Reason:', reason);\n              event.reject(reason);\n            });\n\n            break;\n\n          case 'removeUser':\n            _this.removeUser(event.params).then(function () {\n              event.accept();\n            })[\"catch\"](function (reason) {\n              console.error('Reason:', reason);\n              event.reject(reason);\n            });\n\n            break;\n\n          default:\n            event.reject('[ChatController.onExecute] Chat method execution not accepted by Reporter');\n            break;\n        }\n      });\n      _this._dataObjectReporter = dataObjectReporter;\n    },\n    get: function get() {\n      var _this = this;\n\n      return _this._dataObjectReporter;\n    }\n  }, {\n    key: \"messages\",\n    get: function get() {\n      return this.controllerMode === 'reporter' ? this._dataObjectReporter._childrenObjects : this._dataObjectObserver._childrenObjects;\n    }\n  }, {\n    key: \"dataObjectObserver\",\n    set: function set(dataObjectObserver) {\n      var _this = this;\n\n      _this.controllerMode = 'observer';\n      _this._dataObjectObserver = dataObjectObserver;\n      dataObjectObserver.onChange('*', function (event) {\n        console.info('[ChatManager.ChatController]Observer - onChange', event);\n\n        if (event.field.includes('participants')) {\n          switch (event.cType) {\n            case 'add':\n              if (_this._onUserAdded) _this._onUserAdded(event);\n              break;\n\n            case 'remove':\n              if (_this._onUserRemoved) _this._onUserRemoved(event);\n              break;\n          }\n        }\n\n        if (_this._onChange) _this._onChange(event);\n      });\n\n      _this._setOnAddChildListener(dataObjectObserver); // let childrens = dataObjectObserver.childrens;\n      // Object.keys(childrens).forEach((child) => {\n      //   if (_this._onMessage) _this._onMessage({\n      //     childId: child,\n      //     identity: childrens[child].identity,\n      //     value: childrens[child].data\n      //   });\n      // })\n\n    },\n    get: function get() {\n      var _this = this;\n\n      return _this._dataObjectObserver;\n    }\n  }, {\n    key: \"dataObject\",\n    get: function get() {\n      return this.controllerMode === 'reporter' ? this.dataObjectReporter : this.dataObjectObserver;\n    }\n  }, {\n    key: \"closeEvent\",\n    set: function set(event) {\n      var _this = this;\n\n      _this._closeEvent = event;\n      if (_this._onClose) _this._onClose(event);\n    },\n    get: function get() {\n      var _this = this;\n\n      return _this._closeEvent;\n    }\n  }]);\n\n  return ChatController;\n}();\n\n/* harmony default export */ var chatManager_ChatController = (ChatController_ChatController);\n// CONCATENATED MODULE: ./src/chatManager/UserInfo.js\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction UserInfo_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\nvar UserInfo_UserInfo = function UserInfo(hypertyURL, domain, identity) {\n  var _ref;\n\n  UserInfo_classCallCheck(this, UserInfo);\n\n  var completeIdentity = deepClone(identity);\n\n  if (!identity.hasOwnProperty('userProfile')) {\n    completeIdentity['userProfile'] = identity;\n  }\n\n  return _ref = {\n    hypertyURL: hypertyURL,\n    domain: domain\n  }, _defineProperty(_ref, \"domain\", domain), _defineProperty(_ref, \"identity\", completeIdentity), _ref;\n};\n// CONCATENATED MODULE: ./src/chatManager/ChatManager.js\nfunction ChatManager_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction ChatManager_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction ChatManager_createClass(Constructor, protoProps, staticProps) { if (protoProps) ChatManager_defineProperties(Constructor.prototype, protoProps); if (staticProps) ChatManager_defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n* Copyright 2016 PT Inovação e Sistemas SA\n* Copyright 2016 INESC-ID\n* Copyright 2016 QUOBIS NETWORKS SL\n* Copyright 2016 FRAUNHOFER-GESELLSCHAFT ZUR FOERDERUNG DER ANGEWANDTEN FORSCHUNG E.V\n* Copyright 2016 ORANGE SA\n* Copyright 2016 Deutsche Telekom AG\n* Copyright 2016 Apizee\n* Copyright 2016 TECHNISCHE UNIVERSITAT BERLIN\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n**/\n// Service Framework\n//import IdentityManager from '../identityManager/IdentityManager';\n//import RegistrationStatus from '../discovery/RegistrationStatus';\n//import Discovery from '../discovery/Discovery';\n//import Syncher from '../syncher/Syncher';\n// Utils\n//import {divideURL} from '../utils/utils';\n//import Search from '../utils/Search';\n// Internals\n\n\n\n/**\n* Hyperty Group Chat Manager API (HypertyChat)\n* @author Vitor Silva [vitor-t-silva@telecom.pt]\n* @version 0.1.0\n*/\n\nvar ChatManager_ChatManager =\n/*#__PURE__*/\nfunction () {\n  function ChatManager(myUrl, bus, configuration, syncher, factory) {\n    ChatManager_classCallCheck(this, ChatManager);\n\n    if (!myUrl) throw new Error('[ChatManager.constructor] The myUrl is a needed parameter');\n    if (!bus) throw new Error('[ChatManager.constructor] The MiniBus is a needed parameter');\n    if (!configuration) throw new Error('[ChatManager.constructor] The configuration is a needed parameter');\n\n    var _this = this;\n\n    if (!syncher) {\n      syncher = factory.createSyncher(myUrl, bus, configuration);\n    }\n\n    _this._runtimeURL = configuration.runtimeURL;\n    var domain = factory.divideURL(_this._runtimeURL).domain;\n    var discovery = factory.createDiscovery(myUrl, configuration.runtimeURL, bus);\n    var identityManager = factory.createIdentityManager(myUrl, configuration.runtimeURL, bus);\n    _this._objectDescURL = 'hyperty-catalogue://catalogue.' + domain + '/.well-known/dataschema/Communication';\n    _this._reportersControllers = {};\n    _this._observersControllers = {};\n    _this._myUrl = myUrl;\n    _this._bus = bus;\n    _this._syncher = syncher;\n    _this._domain = domain;\n    _this.discovery = discovery;\n    _this.identityManager = identityManager;\n    _this.currentIdentity;\n    _this.search = factory.createSearch(discovery, identityManager);\n    _this.communicationObject = communicationObject;\n    _this.communicationChildren = communicationChildren;\n    console.log('[ChatManager] Discover ', discovery);\n    console.log('[ChatManager] Identity Manager ', identityManager);\n  }\n\n  ChatManager_createClass(ChatManager, [{\n    key: \"processNotification\",\n    value: function processNotification(event) {\n      var _this = this;\n\n      console.log('[ChatManager.processNotification: ', event);\n\n      if (event.type === 'create') {\n        // TODO: replace the 100 for Message.Response\n        // event.ack(200);\n        if (_this._onInvitation) {\n          _this._onInvitation(event);\n        }\n      }\n\n      if (event.type === 'delete') {\n        // TODO: replace the 200 for Message.Response\n        event.ack(200);\n        _this._observersControllers[event.url].closeEvent = event;\n        delete _this._observersControllers[event.url];\n        _this._observersControllers.closeEvent = event;\n        _this.communicationObject = communicationObject;\n\n        for (var url in this._reportersControllers) {\n          this._reportersControllers[url].close(event);\n        }\n\n        for (var _url in this._observersControllers) {\n          this._observersControllers[_url].close(event);\n        }\n      }\n    }\n  }, {\n    key: \"myIdentity\",\n    value: function myIdentity(identity) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        console.info('[ChatManager.myIdentity]');\n        if (identity) return resolve(identity);\n\n        if (_this._myUrl.includes('hyperty://')) {\n          _this.identityManager.discoverUserRegistered().then(function (identity) {\n            resolve(identity);\n          })[\"catch\"](function (reason) {\n            reject(reason);\n          });\n        } else {\n          _this.identityManager.discoverIdentityPerIdP().then(function (identity) {\n            resolve(identity);\n          })[\"catch\"](function (reason) {\n            reject(reason);\n          });\n        }\n      });\n    }\n    /**\n     * This function is used to create a new Group Chat providing the name and the identifiers of users to be invited.\n     * @param  {string}                     name  Is a string to identify the Group Chat\n     * @param  {array<URL.userURL>}         users Array of users to be invited to join the Group Chat. Users are identified with reTHINK User URL, like this format user://<ipddomain>/<user-identifier>\n     * @return {<Promise>ChatController}    A ChatController object as a Promise.\n     */\n\n  }, {\n    key: \"create\",\n    value: function create(name, users) {\n      var extra = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n      var _this = this;\n\n      var syncher = _this._syncher;\n      return new Promise(function (resolve, reject) {\n        _this.communicationObject = communicationObject;\n        _this.communicationObject.cseq = 1;\n        _this.communicationObject.startingTime = new Date().toJSON();\n        _this.communicationObject.status = CommunicationStatus.OPEN;\n        var myIdentity;\n\n        _this.myIdentity().then(function (identity) {\n          myIdentity = identity;\n          console.log('[ChatManager.create ] My Identity', identity); // let url = _this.communicationObject.reporter;\n\n          var userInfo = new UserInfo_UserInfo(_this._myUrl, _this._domain, identity); // Add my identity\n\n          _this.communicationObject.participants[identity.guid] = userInfo;\n          console.log('[ChatManager.create ] participants: ', _this.communicationObject.participants);\n          console.log('[ChatManager.create ] communicationObject', _this.communicationObject);\n          console.info('[ChatManager.create] searching ' + users); //let usersSearch = _this.search.users(users, domains, ['comm'], ['chat']);\n\n          var usersDiscovery = [];\n          var disconnected = [];\n          var live = {};\n          users.forEach(function (user) {\n            var userDiscoveryPromise = _this.discovery.discoverHypertiesDO(user.user, ['comm'], ['chat'], user.domain);\n\n            usersDiscovery.push(userDiscoveryPromise); //if (user.user.includes('://')) mutual = false;\n          });\n          Promise.all(usersDiscovery).then(function (userDiscoveryResults) {\n            console.log('[ChatManager.create] Users Discovery Results->', userDiscoveryResults);\n            var selectedHyperties = [];\n            userDiscoveryResults.forEach(function (userDiscoveryResult) {\n              userDiscoveryResult.forEach(function (discovered) {\n                if (discovered.data.status === 'live') {\n                  selectedHyperties.push(discovered.data.hypertyID);\n                  live[discovered.data.hypertyID] = discovered;\n                } else {\n                  // To control the number of subscriptions to disconnected devices\n                  if (disconnected.length < 5) {\n                    disconnected.push(discovered);\n                  }\n                }\n              });\n            });\n            /*        return usersSearch;\n            }).then((hypertiesIDs) => {\n            let selectedHyperties = hypertiesIDs.map((hyperty) => {\n            return hyperty.hypertyID;\n            }); */\n\n            console.info('[ChatManager] ---------------------- Syncher Create ---------------------- \\n');\n            console.info('[ChatManager] Selected Hyperties: !!! ', selectedHyperties);\n            console.info(\"Have \".concat(selectedHyperties.length, \" users;\"));\n            var mutual = extra.mutual ? extra.mutual : true;\n            var input = Object.assign({\n              resources: ['chat'],\n              mutual: mutual\n            }, extra);\n            delete input.name;\n            if (_this.offline) input.offline = _this.offline;\n            console.info('[ChatManager] input data:', input);\n            return syncher.create(_this._objectDescURL, selectedHyperties, _this.communicationObject, true, false, name, {}, input);\n          }).then(function (dataObjectReporter) {\n            console.info('[ChatManager] 3. Return Create Data Object Reporter', dataObjectReporter);\n            var chatController = new chatManager_ChatController(syncher, _this.discovery, _this._domain, _this.search, myIdentity, _this);\n            chatController.dataObjectReporter = dataObjectReporter;\n            _this._reportersControllers[dataObjectReporter.url] = chatController;\n            console.log('[ChatManager] chatController invitationsHandler: ', chatController.invitationsHandler); // process invitations to handle not received invitations\n\n            if (dataObjectReporter.invitations.length > 0) {\n              chatController.invitationsHandler.processInvitations(live, dataObjectReporter);\n            } // If any invited User is disconnected let's wait until it is connected again\n\n\n            if (disconnected.length > 0) chatController.invitationsHandler.inviteDisconnectedHyperties(disconnected, dataObjectReporter);\n            resolve(chatController);\n          })[\"catch\"](function (reason) {\n            reject(reason);\n          });\n        })[\"catch\"](function (reason) {\n          console.log('[ChatManager.create] MyIdentity Error:', reason);\n          return reject(reason);\n        });\n      });\n    }\n    /**\n     * This function is used to handle notifications about incoming invitations to join a Group Chat.\n     * @param  {Function} CreateEvent The CreateEvent fired by the Syncher when an invitaion is received\n     */\n\n  }, {\n    key: \"onInvitation\",\n    value: function onInvitation(callback) {\n      var _this = this;\n\n      _this._onInvitation = callback;\n    }\n    /**\n     * This function is used to join a Group Chat.\n     * @param  {URL.CommunicationURL} invitationURL  The Communication URL of the Group Chat to join that is provided in the invitation event\n     * @return {<Promise>ChatController}             It returns the ChatController object as a Promise\n     */\n\n  }, {\n    key: \"join\",\n    value: function join(invitationURL) {\n      var mutual = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var identity = arguments.length > 2 ? arguments[2] : undefined;\n\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        var syncher = _this._syncher;\n        var myIdentity;\n        console.info('[ChatManager] ------------------------ Syncher subscribe ---------------------- \\n');\n        console.info('invitationURL', invitationURL);\n\n        _this.myIdentity(identity).then(function (identity) {\n          myIdentity = identity;\n          var input = {\n            schema: _this._objectDescURL,\n            resource: invitationURL,\n            store: true,\n            p2p: false,\n            mutual: mutual,\n            domain_subscription: true,\n            identity: identity\n          };\n          if (_this.offline) input.offline = _this.offline;\n          return syncher.subscribe(input);\n        }).then(function (dataObjectObserver) {\n          console.info('Data Object Observer: ', dataObjectObserver);\n          var chatController = new chatManager_ChatController(syncher, _this.discovery, _this._domain, _this.search, myIdentity, _this);\n          resolve(chatController);\n          chatController.dataObjectObserver = dataObjectObserver;\n          _this._observersControllers[dataObjectObserver.url] = chatController;\n        })[\"catch\"](function (reason) {\n          reject(reason);\n        });\n      });\n    }\n  }, {\n    key: \"offline\",\n    set: function set(offline) {\n      this._offline = offline;\n    },\n    get: function get() {\n      return this._offline ? this._offline : false;\n    }\n  }]);\n\n  return ChatManager;\n}();\n\n/* harmony default export */ var chatManager_ChatManager = (ChatManager_ChatManager);\n// CONCATENATED MODULE: ./src/chatManager/Chat.js\nfunction Chat_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction Chat_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Chat_createClass(Constructor, protoProps, staticProps) { if (protoProps) Chat_defineProperties(Constructor.prototype, protoProps); if (staticProps) Chat_defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n* Copyright 2016 PT Inovação e Sistemas SA\n* Copyright 2016 INESC-ID\n* Copyright 2016 QUOBIS NETWORKS SL\n* Copyright 2016 FRAUNHOFER-GESELLSCHAFT ZUR FOERDERUNG DER ANGEWANDTEN FORSCHUNG E.V\n* Copyright 2016 ORANGE SA\n* Copyright 2016 Deutsche Telekom AG\n* Copyright 2016 Apizee\n* Copyright 2016 TECHNISCHE UNIVERSITAT BERLIN\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n**/\n\n/**\n* The Group Chat API is used to control a Group Chat instance.\n* @author Vitor Silva [vitor-t-silva@telecom.pt]\n* @version 0.1.0\n*/\n//import { UserInfo } from './UserInfo';\n//import RegistrationStatus from '../discovery/RegistrationStatus';\n//import InvitationsHandler from './InvitationsHandler';\nvar Chat =\n/*#__PURE__*/\nfunction () {\n  function Chat(syncher, domain, identity, manager) {\n    Chat_classCallCheck(this, Chat);\n\n    if (!syncher) throw Error('Syncher is a necessary dependecy'); //    if (!discovery) throw Error('Discover is a necessary dependecy');\n\n    if (!domain) throw Error('Domain is a necessary dependecy'); //    if (!search) throw Error('Search is a necessary dependecy');\n\n    var _this = this;\n\n    _this._syncher = syncher; //    _this.discovery = discovery;\n    //    _this.search = search;\n\n    _this.myIdentity = identity;\n    _this.controllerMode = 'reporter';\n    _this.child_cseq = 0;\n    _this.domain = domain;\n    _this._manager = manager;\n    var hypertyURL = syncher.owner;\n    _this._objectDescURL = 'hyperty-catalogue://catalogue.' + domain + '/.well-known/dataschema/Communication'; //    _this._invitationsHandler = new InvitationsHandler(hypertyURL);\n  }\n  /*  get invitationsHandler() {\n      return this._invitationsHandler;\n    }*/\n\n\n  Chat_createClass(Chat, [{\n    key: \"_setOnAddChildListener\",\n    value: function _setOnAddChildListener(dataObject) {\n      var _this = this;\n\n      dataObject.onAddChild(function (child) {\n        _this.child_cseq += 1;\n        console.info('[ChatManager.ChatController._setOnAddChildListener] new Child received: ', child);\n        if (_this._onMessage) _this._onMessage(child);\n      });\n    }\n  }, {\n    key: \"_onSubscribe\",\n    value: function _onSubscribe(event) {\n      var dataObjectReporter = this._dataObjectReporter;\n      event.accept();\n      console.log('[ChatManager.ChatController.onSubscribe] event', event, dataObjectReporter.url);\n      console.log('[ChatManager.ChatController.onSubscribe] New user has subscribe this object: ', dataObjectReporter.data, event.identity);\n      var identity = JSON.parse(JSON.stringify(event.identity));\n\n      if (identity.hasOwnProperty('assertion')) {\n        delete identity.assertion;\n      }\n\n      var userInfo = {\n        hypertyURL: event.url,\n        domain: event.domain,\n        identity: identity\n      };\n      var userURL = event.identity.userProfile.guid;\n      console.log('[ChatManager.ChatController.onSubscribe]  new participant', userInfo);\n\n      if (event.identity.legacy) {\n        userInfo.legacy = event.identity.legacy;\n      }\n\n      dataObjectReporter.data.participants[userURL] = userInfo;\n      console.log('[ChatManager.ChatController.onSubscribe] communicationObject OBJ chatcontroller', dataObjectReporter.data.participants);\n      console.log('[ChatManager.ChatController.onSubscribe - onSubscription] ', userInfo); // console.log('[ChatManager.ChatController.onSubscribe - this._onUserAdded] ', this._onUserAdded);\n\n      if (this._onUserAdded) this._onUserAdded(userInfo);\n    }\n  }, {\n    key: \"_onUnsubscribe\",\n    value: function _onUnsubscribe(event) {\n      var dataObjectReporter = this._dataObjectReporter;\n      console.log('[ChatManager.ChatController.onUnsubscribe] event', event, dataObjectReporter.url);\n      var participant = event.identity.userProfile;\n      console.log('[ChatManager.ChatController.onUnsubscribe]  participant left', participant);\n\n      if (event.identity.legacy) {\n        participant.legacy = event.identity.legacy;\n      }\n\n      delete dataObjectReporter.data.participants[participant.userURL];\n      console.log('[ChatManager.ChatController.onUnsubscribe - this._onUserRemoved] ', this.onUserRemoved);\n      if (this._onUserRemoved) this._onUserRemoved(participant);\n    }\n    /**\n     * This function is used to send a file.\n     * @param  {string}     file                        Is the file to be sent.\n     * @return {Promise<Communication.ChatMessage>}        It returns the ChatMessage child object created by the Syncher as a Promise.\n     */\n\n  }, {\n    key: \"sendFile\",\n    value: function sendFile(file) {\n      var _this = this;\n\n      var mode = _this.controllerMode;\n      var dataObject = mode === 'reporter' ? _this.dataObjectReporter : _this.dataObjectObserver;\n      return new Promise(function (resolve, reject) {\n        var identity = {\n          userProfile: _this.myIdentity\n        };\n        dataObject.addHypertyResource('resources', 'file', file, identity).then(function (resourceFile) {\n          var identity = {\n            userProfile: _this.myIdentity\n          };\n          var fileSentEvt = {\n            value: resourceFile,\n            identity: identity,\n            resource: resourceFile\n          };\n          /*          let reporterStatus = new RegistrationStatus(dataObject.url, _this._manager._runtimeURL, _this._manager._hypertyURL, _this._manager._bus );\n          \n                    // recursive function to sync with chat reporter\n          \n                      let share2Reporter = function(file, subscriber, evt, status) {\n                        let statusOfReporter = status;\n                        file.sharingStatus.then(resolve(evt)).catch((result)=>{\n                          console.log('[ChatManager.ChatController.sendFile] share failed: ', result);\n          \n                          statusOfReporter.onLive( subscriber, () => {\n                          statusOfReporter.unsubscribeLive(subscriber);\n                          file.share(true);\n                          share2Reporter(file, subscriber, evt, statusOfReporter);\n                          });\n                            //TODO: subscribe to sync when reporter is live. New synched messages should trigger onMessage ie onChild\n                        });\n                      }*/\n          //            resourceFile.share(true).then(()=>{\n\n          resolve(fileSentEvt); //            });\n          //            share2Reporter(resourceFile, _this._manager._hypertyURL, fileSentEvt, reporterStatus);\n        });\n      })[\"catch\"](function (reason) {\n        console.error('Reason:', reason);\n        reject(reason);\n      });\n    }\n    /**\n     * This function is used to send a chat message.\n     * @param  {string}     message                        Is the ChatMessage to be sent.\n     * @return {Promise<Communication.ChatMessage>}        It returns the ChatMessage child object created by the Syncher as a Promise.\n     */\n\n  }, {\n    key: \"send\",\n    value: function send(message, identity) {\n      var _this = this;\n\n      var mode = _this.controllerMode;\n      var dataObject = mode === 'reporter' ? _this.dataObjectReporter : _this.dataObjectObserver;\n      return new Promise(function (resolve, reject) {\n        //      let _dataObjectChild;\n        _this.child_cseq += 1;\n        var msg = {\n          /*        url: dataObject.data.url,\n                  cseq: _this.child_cseq,\n                  reporter: dataObject.data.reporter,\n                  schema: dataObject.data.schema,\n                  name: dataObject.data.name,\n                  created : new Date().toJSON(),*/\n          type: 'chat',\n          content: message\n        };\n        var sender = identity ? identity : {\n          userProfile: _this.myIdentity\n        }; // TODO: change chatmessages to resource - chat, file\n        // TODO: change message to hypertyResource - https://github.com/reTHINK-project/dev-service-framework/tree/develop/docs/datamodel/data-objects/hyperty-resource\n        // TODO: handle with multiple resources - if the \"message\" will be different for each type of resources\n\n        dataObject.addChild(msg, sender).then(function (dataObjectChild) {\n          console.log('[ChatManager.ChatController][addChild - Chat Message]: ', dataObjectChild); //resolve(dataObjectChild);\n          //TODO: move to separate function\n\n          var msg = {\n            childId: dataObjectChild._childId,\n            from: dataObjectChild._owner,\n            value: dataObjectChild.data,\n            type: 'create',\n            identity: sender\n          };\n          /*        let reporterStatus = new RegistrationStatus(dataObject.url, _this._manager._runtimeURL, _this._manager._hypertyURL, _this._manager._bus );\n          \n                  // recursive function to sync with chat reporter\n          \n                    let share2Reporter = function(child, subscriber, msg, status) {\n                      let statusOfReporter = status;\n                      child.sharingStatus.then(resolve(msg)).catch((result)=>{\n          \n                          statusOfReporter.onLive( subscriber, () => {\n                            statusOfReporter.unsubscribeLive(subscriber);\n                            child.share(true);\n                            share2Reporter(child, subscriber, msg, statusOfReporter);\n                          });\n                          //TODO: subscribe to sync when reporter is live. New synched messages should trigger onMessage ie onChild\n                      });\n                    }*/\n          //          share2Reporter(dataObjectChild, _this._manager._hypertyURL, msg, reporterStatus);\n          //        dataObjectChild.share(true);\n\n          resolve(msg);\n        })[\"catch\"](function (reason) {\n          console.error('Reason:', reason);\n          reject(reason);\n        });\n      });\n    }\n    /**\n     * [onChange description]\n     * @param  {Function} callback [description]\n     * @return {[type]}            [description]\n     */\n\n  }, {\n    key: \"onChange\",\n    value: function onChange(callback) {\n      var _this = this;\n\n      _this._onChange = callback;\n    }\n    /**\n     * This function is used to receive new messages.\n     * @param  {Function} callback Function to handle with new messages\n     * @return {Communication.ChatMessage} m\n     */\n\n  }, {\n    key: \"onMessage\",\n    value: function onMessage(callback) {\n      var _this = this;\n\n      _this._onMessage = callback;\n    }\n    /**\n     * [onUserAdded description]\n     * @param  {Function} callback [description]\n     * @return {[type]}            [description]\n     */\n\n  }, {\n    key: \"onUserAdded\",\n    value: function onUserAdded(callback) {\n      var _this = this;\n\n      _this._onUserAdded = callback;\n    }\n    /**\n     * When the an user was removed\n     * @param  {Function} callback Function handle with the removed user\n     * @return {[type]}            [description]\n     */\n\n  }, {\n    key: \"onUserRemoved\",\n    value: function onUserRemoved(callback) {\n      var _this = this;\n\n      _this._onUserRemoved = callback;\n    }\n    /**\n     * This function is used to receive requests to close the Group Chat instance.\n     * @return {DeleteEvent} The DeleteEvent fired by the Syncher when the Chat is closed.\n     */\n\n  }, {\n    key: \"onClose\",\n    value: function onClose(callback) {\n      var _this = this;\n\n      _this._onClose = callback;\n    }\n  }, {\n    key: \"onResponse\",\n    value: function onResponse(callback) {\n      var _this = this;\n\n      _this._onResponse = callback;\n    }\n    /**\n     * This function is used to add / invite new user on an existing Group Chat instance.\n     * Only the Reporter, i.e. the Hyperty that has created the Group Chat, is allowed to use this function.\n     * @param {URL.UserURL}  users  User to be invited to join the Group Chat that is identified with reTHINK User URL.\n     * @return {Promise<boolean>}   It returns as a Promise true if successfully invited or false otherwise.\n     */\n\n    /*  addUser(users) {\n    \n        let _this = this;\n    \n        let haveEmptyElements = (element) => {\n          console.log('Element:', element.length);\n          return element.length !== 0;\n        };\n    \n        let notFoundElements = (element) => {\n          console.log('user not found: ', element);\n          return !(element instanceof String);\n        };\n    \n        return new Promise(function(resolve, reject) {\n    \n          if (users.filter(haveEmptyElements).length === 0) {\n            return reject('Don\\'t have users to invite');\n          }\n    \n          console.info('[ChatManager.ChatController.addUsers ]: ', users);\n    \n          /*_this.search.users(users, domains, ['comm'], ['chat'])\n    \n        .then((hypertiesIDs) => {\n    \n          if (hypertiesIDs.filter(notFoundElements).length === 0) {\n            throw 'User(s) not found';\n          }\n    \n          let selectedHyperties = hypertiesIDs.map((hyperty) => {\n            return hyperty.hypertyID;\n          });*/\n\n    /*      let usersDiscovery = [];\n          let disconnected = [];\n          let live = {};\n    \n          users.forEach((user) => {\n            let userDiscoveryPromise = _this.discovery.discoverHypertiesDO(user.user, ['comm'], ['chat'], user.domain);\n              usersDiscovery.push(userDiscoveryPromise);\n            });\n    \n          Promise.all(usersDiscovery).then((userDiscoveryResults) => {\n            console.log('[ChatManager.ChatController.addUsers] Users Discovery Results->', userDiscoveryResults);\n    \n            let selectedHyperties = [];\n    \n             userDiscoveryResults.forEach((userDiscoveryResult) => {\n    \n               userDiscoveryResult.forEach((discovered)=>{\n                 if (discovered.data.status === 'live'){\n                   selectedHyperties.push(discovered.data.hypertyID);\n                   live[discovered.data.hypertyID] = discovered;\n                 }\n                 else if (disconnected.length < 5) disconnected.push(discovered);\n               });\n    \n            });\n    \n            console.info('[ChatManager.ChatController]------------------------ Syncher Create ---------------------- \\n');\n            console.info('[ChatManager.ChatController]Selected Hyperties: !!! ', selectedHyperties);\n            console.info(`Have ${selectedHyperties.length} users;`);\n    //        console.info('[ChatManager] HypertiesIDs ', hypertiesIDs);\n    \n            let dataObject = _this.controllerMode === 'reporter' ? _this.dataObjectReporter : _this.dataObjectObserver;\n    \n            if (disconnected.length > 0) _this._invitationsHandler.inviteDisconnectedHyperties(disconnected, dataObject);\n    \n            dataObject.inviteObservers(selectedHyperties);\n    \n            if (dataObject.invitations.length > 0) _this._invitationsHandler.processInvitations(live, dataObject);\n    \n            return;\n    \n            })\n            .then(() => {\n              console.info('[ChatManager.ChatController]Are invited with success ' + users.length + ' users;');\n              resolve(true);\n    \n    \n    \n            }).catch((reason) => {\n              console.error('An error occurred when trying to invite users;\\n', reason);\n              reject(reason);\n            });\n    \n        });\n    \n      }*/\n\n    /**\n     * This function is used to request the Reporter to add / invite new user on an existing Group Chat instance.\n     * Only Observers are allowed to use this function.\n     * @param {URL.UserURL}  users  User to be invited to join the Group Chat that is identified with reTHINK User URL.\n     * @return {Promise<boolean>}   It returns as a Promise true if successfully invited or false otherwise.\n     */\n\n    /*  addUserReq(users) {\n    \n        let _this = this;\n    \n        //check is Observer and invoke observer.execute() with new promise\n        let haveEmptyElements = (element) => {\n          console.log('Element:', element.length);\n          return element.length !== 0;\n        };\n    \n        return new Promise(function(resolve, reject) {\n    \n          if (users.filter(haveEmptyElements).length === 0) {\n            return reject('[ChatManager.ChatController.addUserReq] Don\\'t have users to add');\n          }\n          if (!_this.controllerMode === 'observer') {\n            return reject('[ChatManager.ChatController.addUserReq] only allowed to Chat Observer');\n    \n          let addUser = _this.addUser(users);\n    \n          if (_this._dataObjectObserver) {\n            addUser = _this._dataObjectObserver.execute('addUser', users);\n          }\n    \n          addUser.then(() => {\n            console.info('[ChatManager.ChatController.addUserReq] Request accepted by Reporter ');\n            resolve(true);\n          }).catch((reason) => {\n            console.error('[ChatManager.ChatController.addUserReq] Request rejected by Reporter;\\n', reason);\n            reject(reason);\n          });\n        }\n    \n      });\n    \n    }*/\n\n  }, {\n    key: \"onInvitationResponse\",\n    value: function onInvitationResponse(callback) {\n      var _this = this;\n\n      _this._onInvitationResponse = callback; //    _this._invitationsHandler.invitationResponse = callback;\n    }\n    /**\n     * This function is used to remove a user from an existing Group Chat instance.\n     * Only the Reporter, i.e. the Hyperty that has created the Group Chat, is allowed to use this function.\n     * @return {<Promise> boolean} Promise with the status\n     */\n\n    /**\n     * This function is used to remove a user from an existing Group Chat instance.\n     * Only the Reporter, i.e. the Hyperty that has created the Group Chat, is allowed to use this function.\n     * @param  {URL.UserURL} user       User to be removed from the Group Chat that is identified with reTHINK User URL.\n     * @return {<Promise> boolean}      It returns as a Promise true if successfully removed or false otherwise.\n     */\n\n  }, {\n    key: \"removeUser\",\n    value: function removeUser(user) {\n      // TODO: implement the removeUser;\n      console.log('[ChatManager.ChatController]Not yet implemented: ', user);\n    }\n    /**\n     * This function is used to close an existing Group Chat instance.\n     * Only available to Chat Group Reporters i.e. the Hyperty instance that created the Group Chat.\n     * @return {<Promise>Boolean} It returns as a Promise true if successfully closed or false otherwise.\n     */\n\n  }, {\n    key: \"close\",\n    value: function close() {\n      var del = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n      // TODO: the dataObjectReporter.delete should be a Promise;\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        if (_this.controllerMode === 'reporter') {\n          // reporter\n          //        _this._invitationsHandler.cleanInvitations(_this.dataObjectReporter).then(() => {\n          if (!del) {\n            _this._manager.communicationObject.status = 'closed';\n            resolve(true);\n          } else {\n            try {\n              delete _this._manager._reportersControllers[_this.dataObjectReporter.url];\n\n              _this.dataObjectReporter[\"delete\"]();\n\n              resolve(true);\n              if (_this._onClose) _this._onClose({\n                code: 200,\n                desc: 'deleted',\n                url: _this.dataObjectReporter.url\n              });\n            } catch (e) {\n              console.error(e);\n              reject(false);\n            }\n          } //          });\n\n        } else {\n          // observer\n          if (del) {\n            try {\n              delete _this._manager._observersControllers[_this.dataObjectObserver.url];\n\n              _this.dataObjectObserver.unsubscribe();\n\n              resolve(true);\n            } catch (e) {\n              console.error(e);\n              reject(false);\n            }\n          } else {\n            // TODO: send message \n            resolve(true);\n          }\n        }\n      });\n    }\n  }, {\n    key: \"url\",\n    get: function get() {\n      return this.controllerMode === 'reporter' ? this.dataObjectReporter.url : this.dataObjectObserver.url;\n    }\n  }, {\n    key: \"dataObjectReporter\",\n    set: function set(dataObjectReporter) {\n      if (!dataObjectReporter) throw new Error('[ChatController] The data object reporter is necessary parameter ');\n\n      var _this = this;\n\n      _this.controllerMode = 'reporter'; // Handler to process received files\n      // dataObjectReporter.onResponse(function(event) {\n      //   console.log('[DataObjectReporter - onResponse]', event);\n      //   if (_this._onInvitationResponse) {\n      //     _this._onInvitationResponse(event);\n      //   }\n      //\n      // });\n\n      dataObjectReporter.onSubscription(function (event) {\n        switch (event.type) {\n          case 'subscribe':\n            _this._onSubscribe(event);\n\n            break;\n\n          case 'unsubscribe':\n            _this._onUnsubscribe(event);\n\n            break;\n        }\n      });\n\n      _this._setOnAddChildListener(dataObjectReporter);\n\n      dataObjectReporter.onRead(function (event) {\n        event.accept();\n      });\n      dataObjectReporter.onExecute(function (event) {\n        switch (event.method) {\n          case 'addUser':\n            _this.addUser(event.params[0]).then(function () {\n              event.accept();\n            })[\"catch\"](function (reason) {\n              console.error('Reason:', reason);\n              event.reject(reason);\n            });\n\n            break;\n\n          case 'removeUser':\n            _this.removeUser(event.params).then(function () {\n              event.accept();\n            })[\"catch\"](function (reason) {\n              console.error('Reason:', reason);\n              event.reject(reason);\n            });\n\n            break;\n\n          default:\n            event.reject('[ChatController.onExecute] Chat method execution not accepted by Reporter');\n            break;\n        }\n      });\n      _this._dataObjectReporter = dataObjectReporter;\n    },\n    get: function get() {\n      var _this = this;\n\n      return _this._dataObjectReporter;\n    }\n  }, {\n    key: \"messages\",\n    get: function get() {\n      return this.controllerMode === 'reporter' ? this._dataObjectReporter._childrenObjects : this._dataObjectObserver._childrenObjects;\n    }\n  }, {\n    key: \"dataObjectObserver\",\n    set: function set(dataObjectObserver) {\n      var _this = this;\n\n      _this.controllerMode = 'observer';\n      _this._dataObjectObserver = dataObjectObserver;\n      dataObjectObserver.onChange('*', function (event) {\n        console.info('[ChatManager.ChatController]Observer - onChange', event);\n\n        if (event.field.includes('participants')) {\n          switch (event.cType) {\n            case 'add':\n              if (_this._onUserAdded) _this._onUserAdded(event);\n              break;\n\n            case 'remove':\n              if (_this._onUserRemoved) _this._onUserRemoved(event);\n              break;\n          }\n        }\n\n        if (_this._onChange) _this._onChange(event);\n      });\n\n      _this._setOnAddChildListener(dataObjectObserver); // let childrens = dataObjectObserver.childrens;\n      // Object.keys(childrens).forEach((child) => {\n      //   if (_this._onMessage) _this._onMessage({\n      //     childId: child,\n      //     identity: childrens[child].identity,\n      //     value: childrens[child].data\n      //   });\n      // })\n\n    },\n    get: function get() {\n      var _this = this;\n\n      return _this._dataObjectObserver;\n    }\n  }, {\n    key: \"dataObject\",\n    get: function get() {\n      return this.controllerMode === 'reporter' ? this.dataObjectReporter : this.dataObjectObserver;\n    }\n  }, {\n    key: \"closeEvent\",\n    set: function set(event) {\n      var _this = this;\n\n      _this._closeEvent = event;\n      if (_this._onClose) _this._onClose(event);\n    },\n    get: function get() {\n      var _this = this;\n\n      return _this._closeEvent;\n    }\n  }]);\n\n  return Chat;\n}();\n\n/* harmony default export */ var chatManager_Chat = (Chat);\n// CONCATENATED MODULE: ./src/chatManager/SimpleChatManager.js\nfunction SimpleChatManager_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction SimpleChatManager_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction SimpleChatManager_createClass(Constructor, protoProps, staticProps) { if (protoProps) SimpleChatManager_defineProperties(Constructor.prototype, protoProps); if (staticProps) SimpleChatManager_defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n* Copyright 2016 PT Inovação e Sistemas SA\n* Copyright 2016 INESC-ID\n* Copyright 2016 QUOBIS NETWORKS SL\n* Copyright 2016 FRAUNHOFER-GESELLSCHAFT ZUR FOERDERUNG DER ANGEWANDTEN FORSCHUNG E.V\n* Copyright 2016 ORANGE SA\n* Copyright 2016 Deutsche Telekom AG\n* Copyright 2016 Apizee\n* Copyright 2016 TECHNISCHE UNIVERSITAT BERLIN\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n**/\n// Service Framework\n//import IdentityManager from '../identityManager/IdentityManager';\n//import RegistrationStatus from '../discovery/RegistrationStatus';\n//import Discovery from '../discovery/Discovery';\n//import Syncher from '../syncher/Syncher';\n// Utils\n//import {divideURL} from '../utils/utils';\n//import Search from '../utils/Search';\n// Internals\n\n\n\n/**\n* Hyperty Simple Group Chat Manager API\n* @author Vitor Silva [vitor-t-silva@telecom.pt]\n* @version 0.1.0\n*/\n\nvar SimpleChatManager_SimpleChatManager =\n/*#__PURE__*/\nfunction () {\n  function SimpleChatManager(myUrl, bus, configuration, syncher, factory) {\n    SimpleChatManager_classCallCheck(this, SimpleChatManager);\n\n    if (!myUrl) throw new Error('[SimpleChatManager.constructor] The myUrl is a needed parameter');\n    if (!bus) throw new Error('[SimpleChatManager.constructor] The MiniBus is a needed parameter');\n    if (!configuration) throw new Error('[SimpleChatManager.constructor] The configuration is a needed parameter');\n\n    var _this = this;\n\n    if (!syncher) {\n      syncher = factory.createSyncher(myUrl, bus, configuration);\n    }\n\n    _this._runtimeURL = configuration.runtimeURL;\n    var domain = factory.divideURL(_this._runtimeURL).domain; //    let discovery = factory.createDiscovery(myUrl, configuration.runtimeURL, bus);\n\n    var identityManager = factory.createIdentityManager(myUrl, configuration.runtimeURL, bus);\n    _this._objectDescURL = 'hyperty-catalogue://catalogue.' + domain + '/.well-known/dataschema/Communication';\n    _this._reportersControllers = {};\n    _this._observersControllers = {};\n    _this._myUrl = myUrl;\n    _this._bus = bus;\n    _this._syncher = syncher;\n    _this._domain = domain; //    _this.discovery = discovery;\n\n    _this.identityManager = identityManager;\n    _this.currentIdentity; //    _this.search = factory.createSearch(discovery, identityManager);\n\n    _this.communicationObject = communicationObject;\n    _this.communicationChildren = communicationChildren; //    console.log('[SimpleChatManager] Discover ', discovery);\n\n    console.log('[SimpleChatManager] Identity Manager ', identityManager);\n  }\n\n  SimpleChatManager_createClass(SimpleChatManager, [{\n    key: \"processNotification\",\n    value: function processNotification(event) {\n      var _this = this;\n\n      console.log('[SimpleChatManager.processNotification: ', event);\n\n      if (event.type === 'create') {\n        // TODO: replace the 100 for Message.Response\n        // event.ack(200);\n        if (_this._onInvitation) {\n          _this._onInvitation(event);\n        }\n      }\n\n      if (event.type === 'delete') {\n        // TODO: replace the 200 for Message.Response\n        event.ack(200);\n\n        if (_this._onNotification) {\n          _this._onNotification(event);\n        }\n\n        if (_this._observersControllers[event.url]) {\n          _this._observersControllers[event.url].closeEvent = event;\n          delete _this._observersControllers[event.url];\n          _this._observersControllers.closeEvent = event;\n          _this.communicationObject = communicationObject;\n        }\n        /*\n              for (let url in this._reportersControllers) {\n                this._reportersControllers[url].close(event);\n              }\n        \n              for (let url in this._observersControllers) {\n                this._observersControllers[url].close(event);\n              }*/\n\n      }\n    }\n  }, {\n    key: \"myIdentity\",\n    value: function myIdentity(identity) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        console.info('[SimpleChatManager.myIdentity]');\n        if (identity) return resolve(identity);\n\n        if (_this._myUrl.includes('hyperty://')) {\n          _this.identityManager.discoverUserRegistered().then(function (identity) {\n            _this.currentIdentity = identity;\n            resolve(identity);\n          })[\"catch\"](function (reason) {\n            reject(reason);\n          });\n        } else {\n          _this.identityManager.discoverIdentityPerIdP().then(function (identity) {\n            _this.currentIdentity = identity;\n            resolve(identity);\n          })[\"catch\"](function (reason) {\n            reject(reason);\n          });\n        }\n      });\n    }\n    /**\n     * This function is used to create a new Group Chat providing the name and the identifiers of users to be invited.\n     * @param  {string}                     name  Is a string to identify the Group Chat\n     * @param  {array<URL.HypertyURL>}         hyperties Array of hyperties to be invited to join the Group Chat. Users are identified with reTHINK User URL, like this format user://<ipddomain>/<user-identifier>\n     * @return {<Promise>ChatController}    A ChatController object as a Promise.\n     */\n\n  }, {\n    key: \"create\",\n    value: function create(name, hyperties) {\n      var extra = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n      var _this = this;\n\n      var syncher = _this._syncher;\n      return new Promise(function (resolve, reject) {\n        _this.communicationObject = communicationObject;\n        _this.communicationObject.cseq = 1;\n        _this.communicationObject.startingTime = new Date().toJSON();\n        _this.communicationObject.status = CommunicationStatus.OPEN;\n        var myIdentity;\n\n        _this.myIdentity().then(function (identity) {\n          myIdentity = identity;\n          console.log('[SimpleChatManager.create ] My Identity', identity); // let url = _this.communicationObject.reporter;\n\n          var userInfo = new UserInfo_UserInfo(_this._myUrl, _this._domain, identity); // Add my identity\n\n          _this.communicationObject.participants[identity.guid] = userInfo;\n          console.log('[SimpleChatManager.create ] participants: ', _this.communicationObject.participants);\n          console.log('[SimpleChatManager.create ] communicationObject', _this.communicationObject);\n          console.info('[SimpleChatManager] ---------------------- Syncher Create ---------------------- \\n');\n          console.info('[SimpleChatManager] Selected Hyperties: !!! ', hyperties); //          console.info(`Have ${hyperties.length} users;`);\n\n          var mutual = extra.mutual ? extra.mutual : true;\n          var input = Object.assign({\n            resources: ['chat'],\n            mutual: mutual\n          }, extra);\n          delete input.name;\n          if (_this.offline) input.offline = _this.offline;\n          if (_this.backup) input.backup = _this.backup;\n          console.log('[SimpleChatManager] input data:', input);\n          return syncher.create(_this._objectDescURL, hyperties, _this.communicationObject, true, false, name, {}, input);\n        }).then(function (dataObjectReporter) {\n          console.info('[SimpleChatManager] 3. Return Create Data Object Reporter', dataObjectReporter);\n          var chat = new chatManager_Chat(syncher, _this._domain, myIdentity, _this);\n          chat.dataObjectReporter = dataObjectReporter;\n          _this._reportersControllers[dataObjectReporter.url] = chat; //          console.log('[SimpleChatManager] chat invitationsHandler: ',   chat.invitationsHandler);\n          // process invitations to handle not received invitations\n\n          /*          if (dataObjectReporter.invitations.length > 0) {\n                      chat.invitationsHandler.processInvitations(live, dataObjectReporter);\n                    }\n          \n                    // If any invited User is disconnected let's wait until it is connected again\n                    if (disconnected.length > 0) chat.invitationsHandler.inviteDisconnectedHyperties(disconnected, dataObjectReporter);\n          */\n\n          resolve(chat);\n        })[\"catch\"](function (reason) {\n          reject(reason);\n        });\n      })[\"catch\"](function (reason) {\n        console.log('[SimpleChatManager.create] MyIdentity Error:', reason);\n        return reject(reason);\n      }); //    });\n    }\n    /**\n     * This function is used to handle notifications about incoming invitations to join a Group Chat.\n     * @param  {Function} CreateEvent The CreateEvent fired by the Syncher when an invitaion is received\n     */\n\n  }, {\n    key: \"onInvitation\",\n    value: function onInvitation(callback) {\n      var _this = this;\n\n      _this._onInvitation = callback;\n    }\n    /**\n     * This function is used to handle notifications about incoming invitations to join a Group Chat.\n     * @param  {Function} CreateEvent The CreateEvent fired by the Syncher when an invitaion is received\n     */\n\n  }, {\n    key: \"onNotification\",\n    value: function onNotification(callback) {\n      var _this = this;\n\n      _this._onNotification = callback;\n    }\n    /**\n     * This function is used to join a Group Chat.\n     * @param  {URL.CommunicationURL} invitationURL  The Communication URL of the Group Chat to join that is provided in the invitation event\n     * @return {<Promise>ChatController}             It returns the ChatController object as a Promise\n     */\n\n  }, {\n    key: \"join\",\n    value: function join(invitationURL) {\n      var mutual = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var identity = arguments.length > 2 ? arguments[2] : undefined;\n\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        var syncher = _this._syncher;\n        var myIdentity;\n        console.info('[SimpleChatManager] ------------------------ Syncher subscribe ---------------------- \\n');\n        console.info('invitationURL', invitationURL);\n\n        _this.myIdentity(identity).then(function (identity) {\n          myIdentity = identity;\n          var input = {\n            schema: _this._objectDescURL,\n            resource: invitationURL,\n            store: true,\n            p2p: false,\n            mutual: mutual,\n            domain_subscription: true,\n            identity: identity\n          };\n          if (_this.offline) input.offline = _this.offline;\n          return syncher.subscribe(input);\n        }).then(function (dataObjectObserver) {\n          console.info('Data Object Observer: ', dataObjectObserver);\n          var chat = new chatManager_Chat(syncher, _this._domain, myIdentity, _this);\n          resolve(chat);\n          chat.dataObjectObserver = dataObjectObserver;\n          _this._observersControllers[dataObjectObserver.url] = chat;\n        })[\"catch\"](function (reason) {\n          reject(reason);\n        });\n      });\n    }\n  }, {\n    key: \"offline\",\n    set: function set(offline) {\n      this._offline = offline;\n    },\n    get: function get() {\n      return this._offline ? this._offline : false;\n    }\n  }, {\n    key: \"backup\",\n    set: function set(backup) {\n      this._backup = backup;\n    },\n    get: function get() {\n      return this._backup ? this._backup : false;\n    }\n  }]);\n\n  return SimpleChatManager;\n}();\n\n/* harmony default export */ var chatManager_SimpleChatManager = (SimpleChatManager_SimpleChatManager);\n// CONCATENATED MODULE: ./src/sandbox/SandboxFactory.js\nfunction SandboxFactory_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction SandboxFactory_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction SandboxFactory_createClass(Constructor, protoProps, staticProps) { if (protoProps) SandboxFactory_defineProperties(Constructor.prototype, protoProps); if (staticProps) SandboxFactory_defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n* Copyright 2016 PT Inovação e Sistemas SA\n* Copyright 2016 INESC-ID\n* Copyright 2016 QUOBIS NETWORKS SL\n* Copyright 2016 FRAUNHOFER-GESELLSCHAFT ZUR FOERDERUNG DER ANGEWANDTEN FORSCHUNG E.V\n* Copyright 2016 ORANGE SA\n* Copyright 2016 Deutsche Telekom AG\n* Copyright 2016 Apizee\n* Copyright 2016 TECHNISCHE UNIVERSITAT BERLIN\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n**/\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Internal component to instantiate framework functionalities.\n */\n\nvar SandboxFactory_SandboxFactory =\n/*#__PURE__*/\nfunction () {\n  /* private\n  _components: <url: instance>\n  */\n  function SandboxFactory(bus) {\n    SandboxFactory_classCallCheck(this, SandboxFactory);\n\n    var _this = this;\n\n    _this._bus = bus;\n    _this._divideURL = divideURL;\n  }\n\n  SandboxFactory_createClass(SandboxFactory, [{\n    key: \"createSyncher\",\n    value: function createSyncher(owner, bus, config) {\n      return new syncher_Syncher(owner, bus, config);\n    }\n  }, {\n    key: \"createIdentityManager\",\n    value: function createIdentityManager(hypertyURL, runtimeURL, bus) {\n      var _this = this;\n\n      return new identity_IdentityManager(hypertyURL, runtimeURL, bus);\n    }\n  }, {\n    key: \"createDiscovery\",\n    value: function createDiscovery(hypertyURL, runtimeURL, bus) {\n      var _this = this;\n\n      return new discovery_Discovery(hypertyURL, runtimeURL, bus);\n    }\n  }, {\n    key: \"createSearch\",\n    value: function createSearch(discovery, identityManager) {\n      var _this = this;\n\n      return new utils_Search(discovery, identityManager);\n    }\n  }, {\n    key: \"createContextObserver\",\n    value: function createContextObserver(hypertyURL, bus, config, schemes) {\n      return new contextManager_ContextObserver(hypertyURL, bus, config, schemes, this);\n    }\n  }, {\n    key: \"createContextReporter\",\n    value: function createContextReporter(hypertyURL, bus, config) {\n      var _this = this;\n\n      return new contextManager_ContextReporter(hypertyURL, bus, config, this);\n    }\n  }, {\n    key: \"createNotificationHandler\",\n    value: function createNotificationHandler(bus) {\n      var _this = this;\n\n      return new syncher_NotificationHandler(bus);\n    }\n  }, {\n    key: \"createMessageBodyIdentity\",\n    value: function createMessageBodyIdentity(username, userURL, picture, name, locale, idp, assertion, profile) {\n      return new identity_MessageBodyIdentity(username, userURL, picture, name, locale, idp, assertion, profile);\n    }\n  }, {\n    key: \"createChatManager\",\n    value: function createChatManager(hypertyURL, bus, configuration, syncher) {\n      return new chatManager_ChatManager(hypertyURL, bus, configuration, syncher, this);\n    }\n  }, {\n    key: \"createChatController\",\n    value: function createChatController(syncher, discovery, domain, search, identity, manager) {\n      return new chatManager_ChatController(syncher, discovery, domain, search, identity, manager);\n    }\n  }, {\n    key: \"createSimpleChatManager\",\n    value: function createSimpleChatManager(hypertyURL, bus, configuration, syncher) {\n      return new chatManager_SimpleChatManager(hypertyURL, bus, configuration, syncher, this);\n    }\n  }, {\n    key: \"createChat\",\n    value: function createChat(syncher, domain, identity, manager) {\n      return new chatManager_Chat(syncher, domain, identity, manager);\n    }\n  }, {\n    key: \"createRegistrationStatus\",\n    value: function createRegistrationStatus(observer, runtimeURL, chatUrl, bus) {\n      return new discovery_RegistrationStatus(observer, runtimeURL, chatUrl, bus);\n    }\n  }, {\n    key: \"divideURL\",\n    get: function get() {\n      return this._divideURL;\n    }\n  }]);\n\n  return SandboxFactory;\n}();\n\n/* harmony default export */ var sandbox_SandboxFactory = (SandboxFactory_SandboxFactory);\n// CONCATENATED MODULE: ./src/sandbox/SandboxRegistry.js\nfunction SandboxRegistry_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction SandboxRegistry_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction SandboxRegistry_createClass(Constructor, protoProps, staticProps) { if (protoProps) SandboxRegistry_defineProperties(Constructor.prototype, protoProps); if (staticProps) SandboxRegistry_defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n* Copyright 2016 PT Inovação e Sistemas SA\n* Copyright 2016 INESC-ID\n* Copyright 2016 QUOBIS NETWORKS SL\n* Copyright 2016 FRAUNHOFER-GESELLSCHAFT ZUR FOERDERUNG DER ANGEWANDTEN FORSCHUNG E.V\n* Copyright 2016 ORANGE SA\n* Copyright 2016 Deutsche Telekom AG\n* Copyright 2016 Apizee\n* Copyright 2016 TECHNISCHE UNIVERSITAT BERLIN\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n**/\n\n/**\n * @author micaelpedrosa@gmail.com\n * Base class to implement internal deploy manager of components.\n */\n\n/**\n * @author micaelpedrosa@gmail.com\n * Internal component registry of all sandboxes.\n * Process internal request's for component deploy.\n */\n\nvar SandboxRegistry_SandboxRegistry =\n/*#__PURE__*/\nfunction () {\n  /* private\n  _components: <url: instance>\n  */\n  function SandboxRegistry(bus) {\n    SandboxRegistry_classCallCheck(this, SandboxRegistry);\n\n    var _this = this;\n\n    _this._bus = bus;\n    _this._factory = new sandbox_SandboxFactory(bus);\n    _this._components = {};\n    bus.addListener(SandboxRegistry.InternalDeployAddress, function (msg) {\n      console.log('SandboxRegistry-RCV: ', msg); // let responseMsg = {\n      //   id: msg.id, type: 'response', from: SandboxRegistry.InternalDeployAddress, to: SandboxRegistry.ExternalDeployAddress\n      // };\n\n      switch (msg.type) {\n        case 'create':\n          _this._onDeploy(msg);\n\n          break;\n\n        case 'delete':\n          _this._onRemove(msg);\n\n          break;\n      }\n    });\n  }\n\n  SandboxRegistry_createClass(SandboxRegistry, [{\n    key: \"_responseMsg\",\n    value: function _responseMsg(msg, code, value) {\n      var _this = this; // let messageFactory = _this.messageFactory;\n      //FLOW-OUT: generic response message to external Sandbox (deploy and un-deploy responses)\n\n\n      var responseMsg = {\n        id: msg.id,\n        type: 'response',\n        from: SandboxRegistry.InternalDeployAddress,\n        to: SandboxRegistry.ExternalDeployAddress\n      }; // Chanege the origin message, because the response;\n      // msg.from = SandboxRegistry.InternalDeployAddress;\n      // msg.to = SandboxRegistry.ExternalDeployAddress;\n\n      var body = {};\n      if (code) body.code = code;\n      if (value) body.desc = value;\n      responseMsg.body = body; // return messageFactory.createResponse(msg, code, value);\n\n      return responseMsg;\n    } //FLOW-IN: message from the runtime core Sandbox -> deployComponent\n\n  }, {\n    key: \"_onDeploy\",\n    value: function _onDeploy(msg) {\n      var _this = this;\n\n      var config = msg.body.config;\n      var componentURL = msg.body.url;\n      var sourceCode = msg.body.sourceCode;\n      var responseCode;\n      var responseDesc;\n\n      if (!_this._components.hasOwnProperty(componentURL)) {\n        try {\n          console.log('SandboxRegistry-onDeploy: ', msg);\n          _this._components[componentURL] = _this._create(componentURL, sourceCode, config, _this._factory);\n          responseCode = 200;\n        } catch (error) {\n          responseCode = 500;\n          responseDesc = error;\n        }\n      } else {\n        responseCode = 500;\n        responseDesc = 'Instance ' + componentURL + ' already exist!';\n      }\n\n      var responseMsg = _this._responseMsg(msg, responseCode, responseDesc);\n\n      _this._bus.postMessage(responseMsg);\n    } //FLOW-IN: message from the runtime core Sandbox -> removeComponent\n\n  }, {\n    key: \"_onRemove\",\n    value: function _onRemove(msg) {\n      var _this = this;\n\n      var componentURL = msg.body.url;\n      var responseCode;\n      var responseDesc;\n\n      if (_this._components.hasOwnProperty(componentURL)) {\n        //remove component from the pool and all listeners\n        delete _this._components[componentURL];\n\n        _this._bus.removeAllListenersOf(componentURL);\n\n        responseCode = 200;\n      } else {\n        responseCode = 500;\n        responseDesc = 'Instance ' + componentURL + ' doesn\\'t exist!';\n      }\n\n      var responseMsg = _this._responseMsg(msg, responseCode, responseDesc);\n\n      _this._bus.postMessage(responseMsg);\n    }\n    /**\n     * This method should be implemented by the internal sandbox code.\n     * @param  {ComponentURL} url URL used for the instance\n     * @param  {string} sourceCode Code of the component\n     * @param  {Config} config Configuration parameters\n     * @return {Object} Returns instance of the component or throw an error \"throw 'error message'\"\n     */\n\n  }, {\n    key: \"_create\",\n    value: function _create(url, sourceCode, config, factory) {//implementation specific\n\n      /* example code:\n        eval(sourceCode);\n        return activate(url, _this._bus, config);\n      */\n    }\n  }, {\n    key: \"components\",\n    get: function get() {\n      return this._components;\n    }\n  }]);\n\n  return SandboxRegistry;\n}();\n\nSandboxRegistry_SandboxRegistry.ExternalDeployAddress = 'hyperty-runtime://sandbox/external';\nSandboxRegistry_SandboxRegistry.InternalDeployAddress = 'hyperty-runtime://sandbox/internal';\n/* harmony default export */ var sandbox_SandboxRegistry = (SandboxRegistry_SandboxRegistry);\n// CONCATENATED MODULE: ./src/bus/Bus.js\nfunction Bus_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction Bus_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Bus_createClass(Constructor, protoProps, staticProps) { if (protoProps) Bus_defineProperties(Constructor.prototype, protoProps); if (staticProps) Bus_defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n* Copyright 2016 PT Inovação e Sistemas SA\n* Copyright 2016 INESC-ID\n* Copyright 2016 QUOBIS NETWORKS SL\n* Copyright 2016 FRAUNHOFER-GESELLSCHAFT ZUR FOERDERUNG DER ANGEWANDTEN FORSCHUNG E.V\n* Copyright 2016 ORANGE SA\n* Copyright 2016 Deutsche Telekom AG\n* Copyright 2016 Apizee\n* Copyright 2016 TECHNISCHE UNIVERSITAT BERLIN\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n**/\n// Log system\n\nvar Bus_log = loglevel[\"getLogger\"]('Bus');\n/**\n* @author micaelpedrosa@gmail.com\n* Minimal interface and implementation to send and receive messages. It can be reused in many type of components.\n* Components that need a message system should receive this class as a dependency or extend it.\n* Extensions should implement the following private methods: _onPostMessage and _registerExternalListener\n*/\n\nvar Bus =\n/*#__PURE__*/\nfunction () {\n  /* private\n  _msgId: number;\n  _subscriptions: <url: MsgListener[]>\n   _responseTimeOut: number\n  _responseCallbacks: <url+id: (msg) => void>\n   */\n  function Bus() {\n    Bus_classCallCheck(this, Bus);\n\n    var _this = this;\n\n    _this._msgId = 0;\n    _this._subscriptions = {};\n    _this._responseTimeOut = 15000; //default to 3s\n\n    _this._responseCallbacks = {};\n\n    _this._registerExternalListener();\n  }\n  /**\n  * Register listener to receive message when \"msg.to === url\".\n  * Special url \"*\" for default listener is accepted to intercept all messages.\n  * @param {URL} url Address to intercept, tha is in the message \"to\"\n  * @param {Listener} listener listener\n  * @return {MsgListener} instance of MsgListener\n  */\n\n\n  Bus_createClass(Bus, [{\n    key: \"addListener\",\n    value: function addListener(url, listener) {\n      var _this = this;\n\n      var item = new MsgListener(_this._subscriptions, url, listener);\n      var itemList = _this._subscriptions[url];\n\n      if (!itemList) {\n        itemList = [];\n        _this._subscriptions[url] = itemList;\n      }\n\n      itemList.push(item);\n      return item;\n    }\n    /**\n     * Manually add a response listener. Only one listener per message ID should exist.\n     * ATENTION, there is no timeout for this listener.\n     * The listener should be removed with a removeResponseListener, failing to do this will result in a unreleased memory problem.\n     * @param {URL} url Origin address of the message sent, \"msg.from\".\n     * @param {number} msgId Message ID that is returned from the postMessage.\n     * @param {Function} responseListener Callback function for the response\n     */\n\n  }, {\n    key: \"addResponseListener\",\n    value: function addResponseListener(url, msgId, responseListener) {\n      this._responseCallbacks[url + msgId] = responseListener;\n    }\n    /**\n     * Remove the response listener.\n     * @param {URL} url Origin address of the message sent, \"msg.from\".\n     * @param {number} msgId  Message ID that is returned from the postMessage\n     */\n\n  }, {\n    key: \"removeResponseListener\",\n    value: function removeResponseListener(url, msgId) {\n      delete this._responseCallbacks[url + msgId];\n    }\n    /**\n     * Remove all existent listeners for the URL\n     * @param  {URL} url Address registered\n     */\n\n  }, {\n    key: \"removeAllListenersOf\",\n    value: function removeAllListenersOf(url) {\n      delete this._subscriptions[url];\n    }\n    /**\n     * Helper method to bind listeners (in both directions) into other MiniBus target.\n     * @param  {URL} outUrl Outbound URL, register listener for url in direction \"this -> target\"\n     * @param  {URL} inUrl Inbound URL, register listener for url in direction \"target -> this\"\n     * @param  {MiniBus} target The other target MiniBus\n     * @return {Bound} an object that contains the properties [thisListener, targetListener] and the unbind method.\n     */\n\n  }, {\n    key: \"bind\",\n    value: function bind(outUrl, inUrl, target) {\n      var _this2 = this;\n\n      var _this = this;\n\n      var thisListn = _this.addListener(outUrl, function (msg) {\n        target.postMessage(msg);\n      });\n\n      var targetListn = target.addListener(inUrl, function (msg) {\n        _this.postMessage(msg);\n      });\n      return {\n        thisListener: thisListn,\n        targetListener: targetListn,\n        unbind: function unbind() {\n          _this2.thisListener.remove();\n\n          _this2.targetListener.remove();\n        }\n      };\n    } //publish on default listeners\n\n  }, {\n    key: \"_publishOnDefault\",\n    value: function _publishOnDefault(msg) {\n      //is there any \"*\" (default) listeners?\n      var itemList = this._subscriptions['*'];\n\n      if (itemList) {\n        this._publishOn(itemList, msg);\n      }\n    } //publish on a subscription list.\n\n  }, {\n    key: \"_publishOn\",\n    value: function _publishOn(itemList, msg) {\n      itemList.forEach(function (sub) {\n        sub._callback(msg);\n      });\n    }\n  }, {\n    key: \"_responseCallback\",\n    value: function _responseCallback(inMsg, responseCallback) {\n      var timeout = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n      var _this = this; //automatic management of response handlers\n\n\n      if (responseCallback) {\n        var responseId = inMsg.from + inMsg.id;\n        _this._responseCallbacks[responseId] = responseCallback;\n\n        if (timeout) {\n          setTimeout(function () {\n            var responseFun = _this._responseCallbacks[responseId];\n            delete _this._responseCallbacks[responseId];\n\n            if (responseFun) {\n              var errorMsg = {\n                id: inMsg.id,\n                type: 'response',\n                body: {\n                  code: 408,\n                  desc: 'Response timeout!',\n                  value: inMsg\n                }\n              };\n              responseFun(errorMsg);\n            }\n          }, _this._responseTimeOut);\n        }\n      }\n    } //TODO: provisional responses should reset timeout\n\n  }, {\n    key: \"_onResponse\",\n    value: function _onResponse(msg) {\n      var _this = this;\n\n      if (msg.type === 'response') {\n        var responseId = msg.to + msg.id;\n        var responseFun = _this._responseCallbacks[responseId];\n\n        if (msg.body.code >= 200) {\n          //if it's a provisional response, don't delete response listener\n          delete _this._responseCallbacks[responseId];\n        }\n\n        if (responseFun) {\n          responseFun(msg);\n          return true;\n        }\n      }\n\n      return false;\n    } //receive messages from external interface\n\n  }, {\n    key: \"_onMessage\",\n    value: function _onMessage(msg) {\n      var _this = this;\n\n      if (!_this._onResponse(msg)) {\n        var itemList = _this._subscriptions[msg.to];\n\n        if (itemList) {\n          _this._publishOn(itemList, msg);\n        } else {\n          _this._publishOnDefault(msg);\n        }\n      }\n    }\n  }, {\n    key: \"_genId\",\n    value: function _genId(inMsg) {\n      //TODO: how do we manage message ID's? Should it be a global runtime counter, or per URL address?\n      //Global counter will not work, because there will be multiple MiniBus instances!\n      //Per URL, can be a lot of data to maintain!\n      //Maybe a counter per MiniBus instance. This is the assumed solution for now.\n      if (!inMsg.id || inMsg.id === 0) {\n        this._msgId++;\n        inMsg.id = this._msgId;\n      }\n    }\n    /**\n    * Send messages to local listeners, or if not exists to external listeners.\n    * It's has an optional mechanism for automatic management of response handlers.\n    * The response handler will be unregistered after receiving the response, or after response timeout (default to 3s).\n    * @param  {Message} msg Message to send. Message ID is automatically added to the message.\n    * @param  {Function} responseCallback Optional parameter, if the developer what's automatic response management.\n    * @return {number} Returns the message ID, in case it should be needed for manual management of the response handler.\n    */\n\n  }, {\n    key: \"postMessage\",\n    value: function postMessage(inMsg, responseCallback) {}\n    /**\n     * Function to post messages with a number of retries in case timeouts occur.\n     * @param  {Message} msg Message to send. Message ID is automatically added to the message.\n     * @param  {Function} responseCallback Optional parameter, if the developer what's automatic response management.\n     * @param  {integer} retries number of retries when timeouts occur\n     * @return {boolean} message delivery result;\n     */\n\n  }, {\n    key: \"postMessageWithRetries\",\n    value: function postMessageWithRetries(msg, retries, callback) {\n      var _this = this;\n\n      var retry = 0; //let timeout = true;\n\n      var sendMsg = function sendMsg() {\n        return new Promise(function (resolve, reject) {\n          _this.postMessage(msg, function (reply) {\n            if (reply.body.code === 408 || reply.body.code === 500) reject();else {\n              Bus_log.info('[Bus.postMessageWithRetries] msg delivered: ', msg);\n              callback(reply);\n              resolve();\n            }\n          });\n        });\n      };\n\n      var tryAgain = function tryAgain() {\n        sendMsg().then(function () {\n          //timeout = false;\n          return;\n        }, function () {\n          Bus_log.warn(\"[Bus.postMessageWithRetries] Message Bounced (retry \".concat(retry, \"): '\"), msg);\n\n          if (retry++ < retries) {\n            tryAgain(); // setTimeout(() => { tryAgain(); }, 1000);\n          } else {\n            var error = \"[Error] Message Bounced (delivery attempts \".concat(retries, \"): '\");\n            throw new Error(error + msg);\n          }\n        });\n      };\n\n      tryAgain();\n    }\n    /**\n     * Not public available, used by the class extension implementation, to process messages from the public \"postMessage\" without a registered listener.\n     * Used to send the message to an external interface, like a WebWorker, IFrame, etc.\n     * @param  {Message.Message} msg Message\n     */\n\n  }, {\n    key: \"_onPostMessage\",\n    value: function _onPostMessage(msg) {}\n    /*implementation will send message to external system*/\n\n    /**\n     * Not public available, used by the class extension implementation, to process all messages that enter the MiniBus from an external interface, like a WebWorker, IFrame, etc.\n     * This method is called one time in the constructor to register external listeners.\n     * The implementation will probably call the \"_onMessage\" method to publish in the local listeners.\n     * DO NOT call \"postMessage\", there is a danger that the message enters in a cycle!\n     */\n\n  }, {\n    key: \"_registerExternalListener\",\n    value: function _registerExternalListener() {\n      /*implementation will register external listener and call \"this._onMessage(msg)\" */\n    }\n  }]);\n\n  return Bus;\n}();\n\nvar MsgListener =\n/*#__PURE__*/\nfunction () {\n  /* private\n  _subscriptions: <string: MsgListener[]>;\n  _url: string;\n  _callback: (msg) => void;\n  */\n  function MsgListener(subscriptions, url, callback) {\n    Bus_classCallCheck(this, MsgListener);\n\n    var _this = this;\n\n    _this._subscriptions = subscriptions;\n    _this._url = url;\n    _this._callback = callback;\n  }\n\n  Bus_createClass(MsgListener, [{\n    key: \"remove\",\n\n    /**\n     * Remove this listener from the Bus\n     */\n    value: function remove() {\n      var _this = this;\n\n      var subs = _this._subscriptions[_this._url];\n\n      if (subs) {\n        var index = subs.indexOf(_this);\n        subs.splice(index, 1); //if there are no listeners, remove the subscription entirely.\n\n        if (subs.length === 0) {\n          delete _this._subscriptions[_this._url];\n        }\n      }\n    }\n  }, {\n    key: \"url\",\n    get: function get() {\n      return this._url;\n    }\n  }]);\n\n  return MsgListener;\n}();\n\n/* harmony default export */ var bus_Bus = (Bus);\n// CONCATENATED MODULE: ./src/bus/MiniBus.js\nfunction MiniBus_typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { MiniBus_typeof = function _typeof(obj) { return typeof obj; }; } else { MiniBus_typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return MiniBus_typeof(obj); }\n\nfunction MiniBus_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction MiniBus_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction MiniBus_createClass(Constructor, protoProps, staticProps) { if (protoProps) MiniBus_defineProperties(Constructor.prototype, protoProps); if (staticProps) MiniBus_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction MiniBus_possibleConstructorReturn(self, call) { if (call && (MiniBus_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return MiniBus_assertThisInitialized(self); }\n\nfunction MiniBus_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction MiniBus_getPrototypeOf(o) { MiniBus_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return MiniBus_getPrototypeOf(o); }\n\nfunction MiniBus_inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) MiniBus_setPrototypeOf(subClass, superClass); }\n\nfunction MiniBus_setPrototypeOf(o, p) { MiniBus_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return MiniBus_setPrototypeOf(o, p); }\n\n/**\n* Copyright 2016 PT Inovação e Sistemas SA\n* Copyright 2016 INESC-ID\n* Copyright 2016 QUOBIS NETWORKS SL\n* Copyright 2016 FRAUNHOFER-GESELLSCHAFT ZUR FOERDERUNG DER ANGEWANDTEN FORSCHUNG E.V\n* Copyright 2016 ORANGE SA\n* Copyright 2016 Deutsche Telekom AG\n* Copyright 2016 Apizee\n* Copyright 2016 TECHNISCHE UNIVERSITAT BERLIN\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n**/\n\n/**\n* @author micaelpedrosa@gmail.com\n* Message BUS Interface is an extension of the Bus\n* It is used mainly in the internal sandbox routing.\n*/\n\nvar MiniBus =\n/*#__PURE__*/\nfunction (_Bus) {\n  MiniBus_inherits(MiniBus, _Bus);\n\n  function MiniBus() {\n    MiniBus_classCallCheck(this, MiniBus);\n\n    return MiniBus_possibleConstructorReturn(this, MiniBus_getPrototypeOf(MiniBus).call(this));\n  }\n  /**\n   * Post a message for routing. Message is routed directly to the external routing _onPostMessage.\n   * @param  {Message} inMsg            JSON with mandatory Message structure {id, type, from, to}\n   * @param  {Callback} responseCallback Optional callback if a response is expected from the request. A response will be always sent, even if it is a \"Timeout\".\n   * @return {number}                  the Message id\n   */\n\n\n  MiniBus_createClass(MiniBus, [{\n    key: \"postMessage\",\n    value: function postMessage(inMsg, responseCallback, timeout) {\n      var _this = this;\n\n      _this._genId(inMsg);\n\n      _this._responseCallback(inMsg, responseCallback, timeout); //always send to external (to core MessageBus)\n\n\n      _this._onPostMessage(inMsg);\n\n      return inMsg.id;\n    } //internal method used when a message is received by an external routing system\n\n  }, {\n    key: \"_onMessage\",\n    value: function _onMessage(msg) {\n      var _this = this;\n\n      if (!_this._onResponse(msg)) {\n        var itemList = _this._subscriptions[msg.to];\n\n        if (itemList) {\n          _this._publishOn(itemList, msg);\n\n          if (!msg.to.startsWith('hyperty')) {\n            _this._publishOnDefault(msg);\n          }\n        } else {\n          _this._publishOnDefault(msg);\n        }\n      }\n    }\n  }]);\n\n  return MiniBus;\n}(bus_Bus);\n\n/* harmony default export */ var bus_MiniBus = (MiniBus);\n// CONCATENATED MODULE: ./src/sandbox/Sandbox.js\nfunction Sandbox_typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { Sandbox_typeof = function _typeof(obj) { return typeof obj; }; } else { Sandbox_typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return Sandbox_typeof(obj); }\n\nfunction Sandbox_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction Sandbox_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Sandbox_createClass(Constructor, protoProps, staticProps) { if (protoProps) Sandbox_defineProperties(Constructor.prototype, protoProps); if (staticProps) Sandbox_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction Sandbox_possibleConstructorReturn(self, call) { if (call && (Sandbox_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return Sandbox_assertThisInitialized(self); }\n\nfunction Sandbox_getPrototypeOf(o) { Sandbox_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return Sandbox_getPrototypeOf(o); }\n\nfunction Sandbox_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction Sandbox_inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) Sandbox_setPrototypeOf(subClass, superClass); }\n\nfunction Sandbox_setPrototypeOf(o, p) { Sandbox_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return Sandbox_setPrototypeOf(o, p); }\n\n/**\n* Copyright 2016 PT Inovação e Sistemas SA\n* Copyright 2016 INESC-ID\n* Copyright 2016 QUOBIS NETWORKS SL\n* Copyright 2016 FRAUNHOFER-GESELLSCHAFT ZUR FOERDERUNG DER ANGEWANDTEN FORSCHUNG E.V\n* Copyright 2016 ORANGE SA\n* Copyright 2016 Deutsche Telekom AG\n* Copyright 2016 Apizee\n* Copyright 2016 TECHNISCHE UNIVERSITAT BERLIN\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n**/\n\n\nvar SandboxType = {\n  APP: 'app',\n  NORMAL: 'normal',\n  WINDOW: 'window'\n};\n/**\n * @author micaelpedrosa@gmail.com\n * Base class to implement external sandbox component\n */\n\nvar Sandbox_Sandbox =\n/*#__PURE__*/\nfunction (_MiniBus) {\n  Sandbox_inherits(Sandbox, _MiniBus);\n\n  function Sandbox(capabilities) {\n    var _this2;\n\n    Sandbox_classCallCheck(this, Sandbox);\n\n    _this2 = Sandbox_possibleConstructorReturn(this, Sandbox_getPrototypeOf(Sandbox).call(this));\n\n    var _this = Sandbox_assertThisInitialized(_this2);\n\n    if (capabilities) {\n      _this.capabilities = capabilities;\n    }\n\n    return _this2;\n  }\n  /**\n   * Deploy an instance of the component into the sandbox.\n   * @param  {string} componentSourceCode Component source code (Hyperty, ProtoStub, etc)\n   * @param  {URL} componentURL Hyperty, ProtoStub, or any other component address.\n   * @param  {Config} configuration Config parameters of the component\n   * @return {Promise<string>} return deployed if successful, or any other string with an error\n   */\n\n\n  Sandbox_createClass(Sandbox, [{\n    key: \"deployComponent\",\n    value: function deployComponent(componentSourceCode, componentURL, configuration) {\n      var _this = this; // let messageFactory = _this.messageFactory;\n\n\n      return new Promise(function (resolve, reject) {\n        //FLOW-OUT: deploy message for the internal SandboxRegistry -> _onDeploy\n        var deployMessage = {\n          type: 'create',\n          from: sandbox_SandboxRegistry.ExternalDeployAddress,\n          to: sandbox_SandboxRegistry.InternalDeployAddress,\n          body: {\n            url: componentURL,\n            sourceCode: componentSourceCode,\n            config: configuration\n          }\n        }; //send message into the sandbox internals and wait for reply\n\n        _this.postMessage(deployMessage, function (reply) {\n          if (reply.body.code === 200) {\n            //is this response complaint with the spec?\n            resolve('deployed');\n          } else {\n            reject(reply.body.desc);\n          }\n        });\n      });\n    }\n    /**\n     * Remove the instance of a previously deployed component.\n     * @param  {URL} componentURL Hyperty, ProtoStub, or any other component address.\n     * @return {Promise<string>} return undeployed if successful, or any other string with an error\n     */\n\n  }, {\n    key: \"removeComponent\",\n    value: function removeComponent(componentURL) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        //FLOW-OUT: un-deploy message for the internal SandboxRegistry -> _onRemove\n        var removeMessage = {\n          type: 'delete',\n          from: sandbox_SandboxRegistry.ExternalDeployAddress,\n          to: sandbox_SandboxRegistry.InternalDeployAddress,\n          body: {\n            url: componentURL\n          }\n        }; //send message into the sandbox internals and wait for reply\n\n        _this.postMessage(removeMessage, function (reply) {\n          if (reply.body.code === 200) {\n            //is this response complaint with the spec?\n            resolve('undeployed');\n          } else {\n            reject(reply.body.desc);\n          }\n        });\n      });\n    }\n    /**\n    * Matches Sandbox capabilities against provided capabilities. Used to check if sandbox provides all required capabilities\n    * @param  {RuntimeCapabilities} constraints set of RuntimeCapabilities to match with.\n    * @return {boolean} return true if constraints are matched false otherwise\n     */\n\n  }, {\n    key: \"matches\",\n    value: function matches(constraints) {\n      var _this = this;\n\n      var filtered = Object.keys(constraints).filter(function (key) {\n        return !(_this.capabilities[key] && _this.capabilities[key] === constraints[key]);\n      });\n\n      if (filtered.length === 0) {\n        return true;\n      } else {\n        return !constraints[filtered];\n      }\n    }\n  }]);\n\n  return Sandbox;\n}(bus_MiniBus);\n\n/* harmony default export */ var sandbox_Sandbox = (Sandbox_Sandbox);\n// CONCATENATED MODULE: ./src/allocation/AddressAllocation.js\nfunction AddressAllocation_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction AddressAllocation_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction AddressAllocation_createClass(Constructor, protoProps, staticProps) { if (protoProps) AddressAllocation_defineProperties(Constructor.prototype, protoProps); if (staticProps) AddressAllocation_defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n* Copyright 2016 PT Inovação e Sistemas SA\n* Copyright 2016 INESC-ID\n* Copyright 2016 QUOBIS NETWORKS SL\n* Copyright 2016 FRAUNHOFER-GESELLSCHAFT ZUR FOERDERUNG DER ANGEWANDTEN FORSCHUNG E.V\n* Copyright 2016 ORANGE SA\n* Copyright 2016 Deutsche Telekom AG\n* Copyright 2016 Apizee\n* Copyright 2016 TECHNISCHE UNIVERSITAT BERLIN\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n**/\n// Log system\n\nvar AddressAllocation_log = loglevel[\"getLogger\"]('address-allocation');\n // TODO: this could not be the best way to do a Singleton but at this moment it works;\n\nvar AddressAllocation_instance;\n/**\n * Class will ask to the message node for addresses\n */\n\nvar AddressAllocation_AddressAllocation =\n/*#__PURE__*/\nfunction () {\n  /* private\n  _url: URL\n  _bus: MiniBus\n  */\n\n  /**\n   * Create an Address Allocation\n   * @param  {URL.URL}      url - url from who is sending the message\n   * @param  {MiniBus}      bus - MiniBus used for address allocation\n   */\n  function AddressAllocation(url, bus, registry, subscriptionManager) {\n    AddressAllocation_classCallCheck(this, AddressAllocation);\n\n    if (!AddressAllocation_instance) {\n      this._url = url + '/address-allocation';\n      this._bus = bus;\n      this._registry = registry;\n      this._subscriptionManager = subscriptionManager;\n      AddressAllocation_instance = this;\n    } else {\n      return AddressAllocation_instance;\n    }\n  }\n\n  AddressAllocation_createClass(AddressAllocation, [{\n    key: \"create\",\n\n    /**\n     *\n     * Ask for creation of a number of Hyperty addresses, to the domain message node.\n     *\n     * @param {Domain} domain - domain of the message node\n     * @param {Number} number - number of address to be allocated\n     * @param {Descriptor} info - descriptor to search for the hyperty (TODO:// this should be confirmed)\n     * @see https://github.com/reTHINK-project/specs/blob/master/datamodel/core/hyperty-catalogue/readme.md#catalogue-data-model\n     * @param {scheme} scheme - scheme of address to be created or reused, like: hyperty, comm, context, etc;\n     * @param {boolean|URL.HypertyURL} reuseURL - reuseURL is used to reuse the hypertyURL previously registred;\n     * @returns {Promise<Object, Error>} this is Promise and returns an object with the address information\n     *\n     * @memberOf AddressAllocation\n     */\n    value: function create(domain, number, info, scheme, reuseURL) {\n      AddressAllocation_log.log('[AddressAllocation.create] info ', info); //debugger;\n\n      if (reuseURL) {\n        if (typeof reuseURL === 'boolean') {\n          if (reuseURL) {\n            return this._reuseAllocatedAddress(domain, number, info, scheme, reuseURL);\n          } else {\n            return this._allocateNewAddress(domain, scheme, number, info);\n          }\n        }\n\n        if (typeof reuseURL === 'string' && isURL(reuseURL)) {\n          //return this._reuseAllocatedAddress(domain, number, info, scheme, reuseURL);\n          return new Promise(function (resolve, reject) {\n            var value = {\n              newAddress: false,\n              address: [reuseURL]\n            };\n            return resolve(value);\n          });\n        }\n      } else {\n        AddressAllocation_log.log('[AddressAllocation] - new address will be allocated'); // if there is no URL saved request a new URL\n\n        return this._allocateNewAddress(domain, scheme, number, info);\n      }\n    }\n  }, {\n    key: \"_reuseAllocatedAddress\",\n    value: function _reuseAllocatedAddress(domain, number, info, scheme, reuseURL) {\n      var _this2 = this;\n\n      return new Promise(function (resolve, reject) {\n        console.log('REUSETEST -  _reuseAllocatedAddress', domain, number, info, scheme, reuseURL);\n\n        _this2._registry.checkRegisteredURLs(info, reuseURL).then(function (urls) {\n          console.log('REUSETEST -  registeredurls', urls);\n\n          if (urls) {\n            AddressAllocation_log.info('[AddressAllocation - ' + scheme + '] - Reuse URL');\n            var value = {\n              newAddress: false,\n              address: urls\n            };\n            resolve(value);\n          } else {\n            if (typeof reuseURL === 'string') {\n              AddressAllocation_log.info('[AddressAllocation - reuseURL] - Object ' + reuseURL + ' not found');\n              reject('URL Not Found');\n            } else if (typeof reuseURL === 'boolean') {\n              _this2._allocateNewAddress(domain, scheme, number, info).then(resolve)[\"catch\"](reject);\n            } else {\n              reject('URL Not Found');\n            }\n          }\n        });\n      });\n    }\n  }, {\n    key: \"_allocateNewAddress\",\n    value: function _allocateNewAddress(domain, scheme, number, info) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        var addresses = [];\n        var i;\n\n        for (i = 0; i < number; i++) {\n          addresses.push(scheme + '://' + domain + '/' + generateGUID());\n        }\n\n        var result = {\n          newAddress: true,\n          address: addresses\n        };\n\n        if (scheme === 'hyperty') {\n          if (info.hasOwnProperty('configuration') && info.configuration.hasOwnProperty('domain_routing') && !info.configuration.domain_routing) resolve(result);else {\n            _this._subscriptionManager.createSubscription(domain, addresses, _this._url).then(function () {\n              resolve(result);\n            });\n          }\n        } else resolve(result);\n        /*      let msg = {\n                type: 'create', from: this._url, to: 'domain://msg-node.' + domain + '/address-allocation',\n                body: {value: { number: number } }\n              };\n        \n              if (scheme !== 'hyperty') msg.body.scheme = scheme;\n        \n              log.info('[AddressAllocation - ' + scheme + '] - Request new URL');\n        \n              this._bus.postMessage(msg, (reply) => {\n                if (reply.body.code === 200) {\n                  let result = {newAddress: true, address: reply.body.value.allocated};\n                  resolve(result);\n                } else {\n                  reject(reply.body.desc);\n                }\n              });*/\n\n      });\n    }\n    /**\n    * Send a request to the domain message node, to deallocate one or more addresses\n    * @param  {Domain} domain - Domain of the message node.\n    * @param  {addresses} addresses to request the deallocation\n    * @returns {Promise}  the response by the message node\n    */\n\n  }, {\n    key: \"delete\",\n    value: function _delete(domain, addresses) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        resolve(200);\n        /*      let message = {\n                type: 'delete', from: _this._url, to: 'domain://msg-node.' + domain + '/address-allocation',\n                body: {childrenResources: addresses}\n              };\n        \n              _this._bus.postMessage(message, (reply) => {\n                if (reply.body.code === 200) {\n                  resolve(reply.body.code);\n                } else {\n                  reject(reply.body.desc);\n                }\n              });*/\n      });\n    }\n  }, {\n    key: \"url\",\n\n    /**\n     * get the URL value\n     * @return {string} The url value;\n     */\n    get: function get() {\n      return this._url;\n    }\n  }], [{\n    key: \"instance\",\n    get: function get() {\n      if (!AddressAllocation_instance) {\n        throw new Error('The address allocation was not instantiated');\n      }\n\n      return AddressAllocation_instance;\n    }\n  }]);\n\n  return AddressAllocation;\n}();\n\n/* harmony default export */ var allocation_AddressAllocation = (AddressAllocation_AddressAllocation);\n// CONCATENATED MODULE: ./src/registry/RegistryDataModel.js\nfunction RegistryDataModel_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction RegistryDataModel_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction RegistryDataModel_createClass(Constructor, protoProps, staticProps) { if (protoProps) RegistryDataModel_defineProperties(Constructor.prototype, protoProps); if (staticProps) RegistryDataModel_defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n* Copyright 2016 PT Inovação e Sistemas SA\n* Copyright 2016 INESC-ID\n* Copyright 2016 QUOBIS NETWORKS SL\n* Copyright 2016 FRAUNHOFER-GESELLSCHAFT ZUR FOERDERUNG DER ANGEWANDTEN FORSCHUNG E.V\n* Copyright 2016 ORANGE SA\n* Copyright 2016 Deutsche Telekom AG\n* Copyright 2016 Apizee\n* Copyright 2016 TECHNISCHE UNIVERSITAT BERLIN\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n**/\n\n/**\n*   @author: Gil Dias (gil.dias@tecnico.ulisboa.pt)\n*   Registry Data Model includes all Objects to be handled by the Registry functionality including\n*/\nvar RegistryDataModel =\n/*#__PURE__*/\nfunction () {\n  function RegistryDataModel(id, url, descriptorURL, p2pRequester, startingTime, lastModified, status, stubs, stubsConfiguration) {\n    RegistryDataModel_classCallCheck(this, RegistryDataModel);\n\n    var _this = this;\n\n    _this._id = id;\n    _this._url = url;\n    _this._descriptorURL = descriptorURL;\n    _this._startingTime = startingTime;\n    _this._lastModified = lastModified;\n    _this._status = status;\n    _this._stubs = stubs;\n    _this._stubsConfiguration = stubsConfiguration;\n    _this._p2pRequester = p2pRequester;\n  }\n\n  RegistryDataModel_createClass(RegistryDataModel, [{\n    key: \"id\",\n    get: function get() {\n      var _this = this;\n\n      return _this._id;\n    }\n  }, {\n    key: \"url\",\n    get: function get() {\n      var _this = this;\n\n      return _this._url;\n    }\n  }, {\n    key: \"descriptorURL\",\n    get: function get() {\n      var _this = this;\n\n      return _this._descriptorURL;\n    }\n  }, {\n    key: \"p2pRequester\",\n    get: function get() {\n      var _this = this;\n\n      return _this._p2pRequester;\n    }\n  }, {\n    key: \"lastModified\",\n    get: function get() {\n      var _this = this;\n\n      return _this._lastModified;\n    }\n  }]);\n\n  return RegistryDataModel;\n}();\n\n/* harmony default export */ var registry_RegistryDataModel = (RegistryDataModel);\n// CONCATENATED MODULE: ./src/registry/HypertyInstance.js\nfunction HypertyInstance_typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { HypertyInstance_typeof = function _typeof(obj) { return typeof obj; }; } else { HypertyInstance_typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return HypertyInstance_typeof(obj); }\n\nfunction HypertyInstance_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction HypertyInstance_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction HypertyInstance_createClass(Constructor, protoProps, staticProps) { if (protoProps) HypertyInstance_defineProperties(Constructor.prototype, protoProps); if (staticProps) HypertyInstance_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction HypertyInstance_possibleConstructorReturn(self, call) { if (call && (HypertyInstance_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return HypertyInstance_assertThisInitialized(self); }\n\nfunction HypertyInstance_getPrototypeOf(o) { HypertyInstance_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return HypertyInstance_getPrototypeOf(o); }\n\nfunction HypertyInstance_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction HypertyInstance_inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) HypertyInstance_setPrototypeOf(subClass, superClass); }\n\nfunction HypertyInstance_setPrototypeOf(o, p) { HypertyInstance_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return HypertyInstance_setPrototypeOf(o, p); }\n\n/**\n* Copyright 2016 PT Inovação e Sistemas SA\n* Copyright 2016 INESC-ID\n* Copyright 2016 QUOBIS NETWORKS SL\n* Copyright 2016 FRAUNHOFER-GESELLSCHAFT ZUR FOERDERUNG DER ANGEWANDTEN FORSCHUNG E.V\n* Copyright 2016 ORANGE SA\n* Copyright 2016 Deutsche Telekom AG\n* Copyright 2016 Apizee\n* Copyright 2016 TECHNISCHE UNIVERSITAT BERLIN\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n**/\n\n/**\n*   @author: Gil Dias (gil.dias@tecnico.ulisboa.pt)\n*   HypertyInstance Data Model used to model instances of Hyperties running in devices and servers.\n*/\n\nvar HypertyInstance =\n/*#__PURE__*/\nfunction (_RegistryDataModel) {\n  HypertyInstance_inherits(HypertyInstance, _RegistryDataModel);\n\n  function HypertyInstance(id, url, descriptorURL, descriptor, hypertyURL, user, guid, runtime, context, p2pHandler, p2pRequester, dataSchemes, resources, startingTime, lastModified) {\n    var _this2;\n\n    HypertyInstance_classCallCheck(this, HypertyInstance);\n\n    _this2 = HypertyInstance_possibleConstructorReturn(this, HypertyInstance_getPrototypeOf(HypertyInstance).call(this, id, url, descriptorURL, p2pRequester, startingTime, lastModified));\n\n    var _this = HypertyInstance_assertThisInitialized(_this2);\n\n    _this._descriptor = descriptor;\n    _this._hypertyURL = hypertyURL;\n    _this._user = user;\n    _this._guid = guid;\n    _this._runtime = runtime;\n    _this._context = context;\n    _this._p2pHandler = p2pHandler;\n    _this._dataSchemes = dataSchemes;\n    _this._resources = resources;\n    return _this2;\n  }\n\n  HypertyInstance_createClass(HypertyInstance, [{\n    key: \"user\",\n    set: function set(identity) {\n      var _this = this;\n\n      _this.user = identity;\n    },\n    get: function get() {\n      var _this = this;\n\n      return _this._user;\n    }\n  }, {\n    key: \"hypertyURL\",\n    get: function get() {\n      var _this = this;\n\n      return _this._hypertyURL;\n    }\n  }, {\n    key: \"descriptor\",\n    get: function get() {\n      var _this = this;\n\n      return _this._descriptor;\n    }\n  }, {\n    key: \"objectName\",\n    get: function get() {\n      var _this = this;\n\n      return _this._descriptor._objectName;\n    }\n  }, {\n    key: \"p2pHandler\",\n    get: function get() {\n      var _this = this;\n\n      return _this._p2pHandler;\n    }\n  }, {\n    key: \"dataSchemes\",\n    get: function get() {\n      var _this = this;\n\n      return _this._dataSchemes;\n    }\n  }, {\n    key: \"resources\",\n    get: function get() {\n      var _this = this;\n\n      return _this._resources;\n    }\n  }, {\n    key: \"runtimeURL\",\n    get: function get() {\n      var _this = this;\n\n      return _this._runtime;\n    }\n  }]);\n\n  return HypertyInstance;\n}(registry_RegistryDataModel);\n\n/* harmony default export */ var registry_HypertyInstance = (HypertyInstance);\n// CONCATENATED MODULE: ./src/registry/DomainRegistration.js\nfunction DomainRegistration_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction DomainRegistration_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction DomainRegistration_createClass(Constructor, protoProps, staticProps) { if (protoProps) DomainRegistration_defineProperties(Constructor.prototype, protoProps); if (staticProps) DomainRegistration_defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n* Copyright 2016 PT Inovação e Sistemas SA\n* Copyright 2016 INESC-ID\n* Copyright 2016 QUOBIS NETWORKS SL\n* Copyright 2016 FRAUNHOFER-GESELLSCHAFT ZUR FOERDERUNG DER ANGEWANDTEN FORSCHUNG E.V\n* Copyright 2016 ORANGE SA\n* Copyright 2016 Deutsche Telekom AG\n* Copyright 2016 Apizee\n* Copyright 2016 TECHNISCHE UNIVERSITAT BERLIN\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n**/\n// Log System\n\nvar DomainRegistration_log = loglevel[\"getLogger\"]('Registry');\n\n\n/**\n* Runtime DomainRegistration Interface\n*/\n\nvar DomainRegistration_DomainRegistration =\n/*#__PURE__*/\nfunction () {\n  /**\n  * To initialise the Runtime Registry with the RuntimeURL that will be the basis to derive the internal runtime addresses when allocating addresses to internal runtime component. In addition, the Registry domain back-end to be used to remotely register Runtime components, is also passed as input parameter.\n  * @param  {MessageBus}          messageBus                msgbus\n  * @param  {HypertyRuntimeURL}   runtimeURL            runtimeURL\n  * @param  {DomainURL}           domain        remoteRegistry\n  */\n  function DomainRegistration(runtimeURL, registryURL, domain, messageBus) {\n    DomainRegistration_classCallCheck(this, DomainRegistration);\n\n    if (!runtimeURL) throw new Error('runtimeURL is missing.');\n    if (!registryURL) throw new Error('registryURL is missing.');\n    if (!domain) throw new Error('domain is missing.');\n    if (!messageBus) throw new Error('messageBus is missing.');\n\n    var _this = this;\n\n    _this.registryURL = registryURL;\n    _this.runtimeURL = runtimeURL;\n    _this._registrationRetries = 5; // number of attempts to register Hyperties and DataObjects when errors occurs\n    // the expires in 3600, represents 1 hour\n    //the expires is in seconds, unit of measure received by the domain registry\n\n    _this.expiresTime = 3600;\n    _this._domain = domain;\n    _this._messageBus = messageBus;\n  }\n  /**\n  *  function to unregister an hypertyInstance in the Domain Registry\n  *  @param   {String}      hypertyInstance   HypertyInsntance url\n  *\n  */\n\n\n  DomainRegistration_createClass(DomainRegistration, [{\n    key: \"unregisterHyperty\",\n    value: function unregisterHyperty(hypertyInstance) {\n      var _this = this;\n\n      var message = {\n        type: 'update',\n        from: _this.registryURL,\n        to: 'domain://registry.' + _this._domain,\n        body: {\n          resource: '/hyperty/' + hypertyInstance,\n          value: 'disconnected',\n          attribute: 'status'\n        }\n      };\n\n      _this._messageBus.postMessage(message, function (reply) {\n        DomainRegistration_log.log('[DomainRegistration] unregister hyperty Reply', reply);\n      });\n    }\n    /**\n    *  function to unregister a Data Object in the Domain Registry\n    *  @param   {String}      hypertyInstance   HypertyInsntance url\n    *\n    */\n\n  }, {\n    key: \"unregisterDataObject\",\n    value: function unregisterDataObject(url) {\n      var _this = this;\n\n      var message = {\n        type: 'update',\n        from: _this.registryURL,\n        to: 'domain://registry.' + _this._domain,\n        body: {\n          resource: url,\n          value: {\n            status: 'disconnected'\n          }\n        }\n      };\n\n      _this._messageBus.postMessage(message, function (reply) {\n        DomainRegistration_log.log('[DomainRegistration] unregister dataObject Reply', reply);\n      });\n    }\n    /**\n    *  function to delete an dataObjectInstance in the Domain Registry\n    *  @param   {String}    name      DataObjectName\n    */\n\n  }, {\n    key: \"deleteDataObjectInstance\",\n    value: function deleteDataObjectInstance(name) {\n      var _this = this;\n\n      var message = {\n        type: 'delete',\n        from: _this.registryURL,\n        to: 'domain://registry.' + _this._domain,\n        body: {\n          value: {\n            name: name\n          }\n        }\n      };\n\n      _this._messageBus.postMessage(message, function (reply) {\n        DomainRegistration_log.log('[DomainRegistration] unregister dataObject Reply', reply);\n      });\n    }\n    /**\n    * Function to update an Hyperty\n    */\n\n  }, {\n    key: \"updateHypertyInstance\",\n    value: function updateHypertyInstance(resource, value) {\n      var _this = this;\n\n      var message = {\n        type: 'UPDATE',\n        from: _this.registryURL,\n        to: 'domain://registry.' + _this._domain,\n        body: {\n          resource: resource,\n          value: value\n        }\n      };\n\n      _this._messageBus.post.postMessage(message, function (reply) {// log.log('[Registry] Updated hyperty reply', reply);\n      });\n    }\n    /**\n    * To register a new Data Object in the Domain Registry.\n    * @param  {JSON}     registration                   registration data to be used\n    * @param  {boolean}     resume                     if this is just to update the registration with the resume of a data object\n    */\n\n  }, {\n    key: \"registerDataObject\",\n    value: function registerDataObject(registration, resume, p2pHandlerStub) {\n      var _this = this;\n\n      var p2pHandler;\n      var p2pRequester;\n      return new Promise(function (resolve, reject) {\n        var dataScheme = [];\n        var filteredDataScheme = registration.url.split(':');\n        dataScheme.push(filteredDataScheme[0]);\n\n        if (Object.keys(p2pHandlerStub).length !== 0) {\n          p2pHandler = p2pHandlerStub[_this.runtimeURL].url;\n          p2pRequester = runtimeUtils.runtimeDescriptor.p2pRequesterStub;\n        }\n\n        registration.startingTime = registration.created;\n        delete registration.authorise;\n        delete registration.created;\n        delete registration.mutual;\n        delete registration.resume;\n        if (!registration.expires) registration.expires = _this.expiresTime;\n        registration.dataSchemes = dataScheme;\n\n        if (p2pHandler) {\n          registration.p2pHandler = p2pHandler;\n          registration.p2pRequester = p2pRequester;\n        }\n\n        registration.status = 'live';\n        var message;\n\n        if (!resume) {\n          DomainRegistration_log.log('[Registry.registerDataObject] registering new data object URL', registration);\n          message = {\n            type: 'create',\n            from: _this.registryURL,\n            to: 'domain://registry.' + _this._domain,\n            body: {\n              value: registration,\n              policy: 'policy'\n            }\n          };\n        } else {\n          DomainRegistration_log.log('[Registry.registerDataObject] registering previously registered data object URL', registration);\n          message = {\n            type: 'update',\n            to: 'domain://registry.' + _this._domain,\n            from: _this.registryURL,\n            body: {\n              resource: registration.url,\n              value: {\n                status: 'live'\n              }\n            }\n          };\n        }\n\n        try {\n          _this._messageBus.postMessageWithRetries(message, _this._registrationRetries, function (reply) {\n            // log.log('[Registry.registerDataObject] ===> registerDataObject Reply: ', reply);\n            if (reply.body.code === 200) {\n              resolve(registration);\n            } else {\n              reject('error on register DataObject');\n            }\n          });\n        } catch (e) {\n          DomainRegistration_log.error(e);\n          reject(e);\n        } //timer to keep the registration alive\n        // the time is defined by a little less than half of the expires time defined\n\n\n        var keepAliveTimer = setInterval(function () {\n          var message = {\n            type: 'update',\n            from: _this.registryURL,\n            to: 'domain://registry.' + _this._domain,\n            body: {\n              resource: registration.url,\n              value: {\n                status: 'live'\n              },\n              method: 'refresh'\n            }\n          };\n\n          _this._messageBus.postMessage(message, function (reply) {// log.log('[Registry.registerDataObject] KeepAlive Reply: ', reply);\n          });\n        }, registration.expires / 1.1 / 2 * 1000);\n      });\n    }\n    /**\n    * To register a new Hyperty in the Domain Registry.\n    * @param  {HypertyInstance}     hyperty            Hyperty to be registered\n    * @param  {boolean}     resume                     if this is just to update the registration with the resume of a data object\n    */\n\n  }, {\n    key: \"registerHyperty\",\n    value: function registerHyperty(hyperty, resume) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        var runtime = _this.runtimeURL;\n        var status = 'live'; //message to register the new hyperty, within the domain registry\n\n        var message;\n        var registrationExpires = _this.expiresTime;\n        var messageValue = {\n          user: hyperty.user.email,\n          descriptor: hyperty.descriptorURL,\n          url: hyperty.hypertyURL,\n          expires: registrationExpires,\n          resources: hyperty.resources,\n          dataSchemes: hyperty.dataSchemes,\n          runtime: runtime,\n          status: status\n        }; // set a different expires if defined in the hyperty configuration\n\n        if (hyperty.p2pHandler) {\n          messageValue.p2pHandler = hyperty.p2pHandler;\n          messageValue.p2pRequester = hyperty.p2pRequester;\n        } // set a different expires value if configured in the Hyperty descriptor\n\n\n        if (hyperty.descriptor.configuration && hyperty.descriptor.configuration.expires) registrationExpires = hyperty.descriptor.configuration.expires;\n\n        if (!resume) {\n          // log.log('[Registry registerHyperty] registering new Hyperty URL', addressURL.address[0]);\n          // set a different expires if defined in the hyperty configuration\n          // log.log('[Registry registerHyperty] registering new Hyperty at domain registry ', messageValue);\n          message = {\n            type: 'create',\n            from: _this.registryURL,\n            to: 'domain://registry.' + _this._domain,\n            body: {\n              value: messageValue,\n              policy: 'policy'\n            }\n          };\n        } else {\n          // log.log('[Registry registerHyperty] registering previously registered Hyperty URL', addressURL.address[0]);\n          message = {\n            type: 'update',\n            to: 'domain://registry.' + _this._domain,\n            from: _this.registryURL,\n            body: {\n              resource: hyperty.hypertyURL,\n              value: {\n                status: 'live',\n                user: hyperty.user.email\n              }\n            }\n          };\n\n          if (hyperty.p2pHandler) {\n            message.body.value.p2pHandler = hyperty.p2pHandler;\n            message.body.value.p2pRequester = hyperty.p2pRequester;\n          }\n        } // log.log('[Registry registerHyperty] Hyperty registration at domain registry  - ', message);\n\n\n        try {\n          _this._messageBus.postMessageWithRetries(message, _this._registrationRetries, function (reply) {\n            // log.log('[Registry registerHyperty] Hyperty registration response: ', reply);\n            if (reply.body.code === 200) {\n              var result = {\n                url: hyperty.hypertyURL\n              };\n\n              if (hyperty.p2pHandler) {\n                result.p2pHandler = hyperty.p2pHandler;\n                result.p2pRequester = hyperty.p2pRequester;\n              }\n\n              resolve(result);\n            } else if (reply.body.code === 404) {\n              // log.log('[Registry registerHyperty] The update was not possible. Registering new Hyperty at domain registry');\n              message = {\n                type: 'create',\n                from: _this.registryURL,\n                to: 'domain://registry.' + _this._domain,\n                body: {\n                  value: messageValue,\n                  policy: 'policy'\n                }\n              };\n\n              try {\n                _this._messageBus.postMessageWithRetries(message, _this._registrationRetries, function (reply) {\n                  // log.log('[Registry registerHyperty] Hyperty registration update response: ', reply);\n                  if (reply.body.code === 200) {\n                    var _result = {\n                      url: hyperty.hypertyURL\n                    };\n\n                    if (hyperty.p2pHandler) {\n                      _result.p2pHandler = hyperty.p2pHandler;\n                      _result.p2pRequester = hyperty.p2pRequester;\n                    }\n\n                    resolve(_result);\n                  } else {\n                    throw new Error('Failed to register an Hyperty: ' + reply);\n                  }\n                });\n              } catch (e) {\n                DomainRegistration_log.error(e);\n                reject(e);\n              }\n            } else {\n              throw new Error('Failed to register an Hyperty to domain: ', reply);\n            }\n          });\n        } catch (e) {\n          DomainRegistration_log.error(e);\n          reject(e);\n        } //timer to keep the registration alive\n        // the time is defined by a little less than half of the expires time defined\n\n\n        var keepAliveTimer = setInterval(function () {\n          var message = {\n            type: 'update',\n            from: _this.registryURL,\n            to: 'domain://registry.' + _this._domain,\n            body: {\n              resource: hyperty.hypertyURL,\n              value: {\n                status: 'live'\n              },\n              method: 'refresh'\n            }\n          };\n\n          _this._messageBus.postMessage(message, function (reply) {// log.log('[Registry registerHyperty] KeepAlive Reply: ', reply);\n          });\n        }, registrationExpires / 1.1 / 2 * 1000);\n      });\n    }\n  }]);\n\n  return DomainRegistration;\n}();\n\n/* harmony default export */ var registry_DomainRegistration = (DomainRegistration_DomainRegistration);\n// CONCATENATED MODULE: ./src/registry/P2PConnectionResolve.js\nfunction P2PConnectionResolve_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction P2PConnectionResolve_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction P2PConnectionResolve_createClass(Constructor, protoProps, staticProps) { if (protoProps) P2PConnectionResolve_defineProperties(Constructor.prototype, protoProps); if (staticProps) P2PConnectionResolve_defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n* Copyright 2016 PT Inovação e Sistemas SA\n* Copyright 2016 INESC-ID\n* Copyright 2016 QUOBIS NETWORKS SL\n* Copyright 2016 FRAUNHOFER-GESELLSCHAFT ZUR FOERDERUNG DER ANGEWANDTEN FORSCHUNG E.V\n* Copyright 2016 ORANGE SA\n* Copyright 2016 Deutsche Telekom AG\n* Copyright 2016 Apizee\n* Copyright 2016 TECHNISCHE UNIVERSITAT BERLIN\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n**/\n// Log System\n\nvar P2PConnectionResolve_log = loglevel[\"getLogger\"]('P2PConnectionResolve');\n/**\n*   To process address resolution for p2p connections\n*/\n\nvar P2PConnectionResolve =\n/*#__PURE__*/\nfunction () {\n  function P2PConnectionResolve(registry) {\n    P2PConnectionResolve_classCallCheck(this, P2PConnectionResolve);\n\n    var _this = this;\n\n    _this._registry = registry;\n    _this._remoteP2PEntities = {}; // All remote entities and associated runtime url that are reachable with existing p2p connections\n  }\n  /**\n  * Verifies if remote Entity can be reached with a P2P Connection.\n  * @param  {URL.URL}        info           object URL\n  * @return {HypertyDataObjectInstance}  addressURL     return the Data Object instance registered URL, return undefined otherwise\n  */\n\n\n  P2PConnectionResolve_createClass(P2PConnectionResolve, [{\n    key: \"checkP2P\",\n    value: function checkP2P(msg) {\n      if (!msg.hasOwnProperty('to')) {\n        // throw Error('The p2p verification was failed');\n        return Promise.reject('The p2p verification was failed');\n      }\n\n      var scheme = msg.to.split('://')[0];\n      var comp = msg.to.split('://')[1].split('/')[2];\n      var url;\n      if (comp) url = msg.to.substring(0, msg.to.indexOf('/' + comp));else url = msg.to;\n      var p2p = {};\n      if (msg.body && msg.body.p2p) p2p.p2p = msg.body.p2p;\n\n      if (msg.body && msg.body.p2pHandler && msg.body.p2pRequester) {\n        p2p.p2pHandler = msg.body.p2pHandler;\n        p2p.p2pRequester = msg.body.p2pRequester;\n        p2p.runtime = msg.body.p2pHandler.split('/p2phandler/')[0];\n      }\n\n      switch (scheme) {\n        case 'runtime':\n          return this.checkP2PRuntime(url, p2p);\n          break;\n\n        default:\n          return this.checkP2PEntity(url, p2p);\n          break;\n      }\n    }\n    /**\n    * Verifies if remote Entity (Hyperty or Data Object) can be reached with a P2P Connection.\n    * @param  {string}        url           Remote Entity URL to be checked\n    * @param  {object}        p2p           p2p information to be used including ´runtime´ with remote Runtime URL, 'p2pHandler' remote P2P Handler Stub URL and p2pRequester with Catalogue URL of P2P Requester to be used\n    * @return {promise} registeredEntity     if p2p connection is possible it returns p2p information to be used in the connection, otherwise the promise is rejected\n    */\n\n  }, {\n    key: \"checkP2PEntity\",\n    value: function checkP2PEntity(url, p2p) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        var remoteEntity = _this._remoteP2PEntities[url];\n        if (remoteEntity) resolve(remoteEntity);else if (p2p.runtime) resolve(p2p); // use provided p2p if available in the message body\n        else if (p2p.p2p) {\n            // otherwise look on Domain Registry\n            P2PConnectionResolve_log.log('[Registry - checkP2PEntity] - search in Domain Registry: ', url);\n            var message = {\n              type: 'read',\n              from: _this._registry.registryURL,\n              to: 'domain://registry.' + _this._registry._domain,\n              body: {\n                resource: url\n              }\n            };\n\n            _this._registry._messageBus.postMessage(message, function (reply) {\n              P2PConnectionResolve_log.log('[Registry - checkP2PEntity] Domain Registry reply', reply);\n\n              if ('value' in reply.body) {\n                //todo: store retrieved entity\n                var resolvedEntity = reply.body.value;\n\n                if (resolvedEntity.hasOwnProperty('p2pHandler')) {\n                  resolve(resolvedEntity);\n                } else {\n                  reject('[Registry checkP2PEntity] Hyperty found does not support P2P', reply.body.value);\n                }\n              } else {\n                reject('[Registry checkP2PEntity] Hyperty with P2PHandler not found', reply.body.code);\n              }\n            });\n          } else reject('[Registry checkP2PEntity] No P2P Connection available for ', url);\n      });\n    }\n    /**\n    * Verifies if remote Runtime can be reached with a P2P Connection.\n    * @param  {URL.URL}        runtimeURL           Runtime URL\n    * @return {Object}  p2pConnection    return the P2PConnection instance registered URL, return undefined otherwise\n    */\n\n  }, {\n    key: \"checkP2PRuntime\",\n    value: function checkP2PRuntime(runtimeURL, p2p) {\n      var _this = this;\n\n      var registeredRuntime = {}; // look on locally stored p2p connections\n\n      return new Promise(function (resolve, reject) {\n        if (_this._registry.p2pConnectionList[runtimeURL]) {\n          resolve({\n            runtime: runtimeURL\n          });\n        } else if (p2p.runtime) {\n          registeredRuntime = p2p;\n          resolve(registeredRuntime);\n        } else reject('[Registry.P2PConnectionResolve.checkP2PRuntime] No P2P Connection found to ', runtimeURL);\n      });\n    }\n    /**\n    * Verifies if remote Hyperty can be reached with a P2P Connection.\n    * @param  {JSON}        info           object or entity charateristics info\n    * @return {addressURL}  addressURL     return the URL if there is any previousy registered URL, return undefined otherwise\n    */\n\n  }, {\n    key: \"checkP2PHyperty\",\n    value: function checkP2PHyperty(hypertyURL, p2p) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        var hyperty; // look on locally stored hyperties\n\n        for (var i in _this._registry.remoteHypertyList) {\n          hyperty = _this._registry.remoteHypertyList[i];\n          P2PConnectionResolve_log.log('[Registry - checkP2PHyperty] - for each Hyperty: ', hyperty); // todo: change to \"hyperty.url\" to be aligned with hyperty instance data model spec\n\n          if (hyperty.hypertyID === hypertyURL) {\n            if (hyperty.hasOwnProperty('p2pHandler')) {\n              resolve(hyperty);\n            } else {\n              reject('[Registry checkP2PHyperty] Hyperty found does not support P2P', hyperty);\n            }\n\n            return;\n          }\n        }\n\n        if (!hyperty && p2p.runtime) resolve(p2p); // use provided p2p if available in the message body\n        else if (!hyperty && p2p.p2p) {\n            // otherwise look on Domain Registry\n            P2PConnectionResolve_log.log('[Registry - checkP2PHyperty] - search in Domain Registry: ', hyperty);\n            var message = {\n              type: 'read',\n              from: _this._registry.registryURL,\n              to: 'domain://registry.' + _this._registry._domain,\n              body: {\n                resource: hypertyURL\n              }\n            };\n\n            _this._registry._messageBus.postMessage(message, function (reply) {\n              P2PConnectionResolve_log.log('[Registry - checkP2PHyperty] Domain Registry reply', reply);\n\n              if ('value' in reply.body) {\n                //todo: store retrieved hyperty\n                var resolvedHyperty = reply.body.value;\n\n                _this._registry.remoteHypertyList.push(resolvedHyperty);\n\n                if (resolvedHyperty.hasOwnProperty('p2pHandler')) {\n                  resolve(resolvedHyperty);\n                } else {\n                  reject('[Registry checkP2PHyperty] Hyperty found does not support P2P', reply.body.value);\n                }\n              } else {\n                reject('[Registry checkP2PHyperty] Hyperty with P2PHandler not found', reply.body.code);\n              }\n            });\n          } else reject('[Registry checkP2PHyperty] No P2P Connection available for ', hypertyURL);\n      });\n    }\n    /**\n    * Verifies if remote Data Object can be reached with a P2P Connection.\n    * @param  {URL.URL}        DataObjectURL           object URL\n    * @return {HypertyDataObjectInstance}  addressURL     return the Data Object instance registered URL, return undefined otherwise\n    */\n\n  }, {\n    key: \"checkP2PDataObject\",\n    value: function checkP2PDataObject(url, p2p) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        // look on locally stored Remote Data Objects\n        var dataobject = _this._registry.remoteDataObjectList.filter(function (i) {\n          return _this._registry.remoteDataObjectList[i].url === url;\n        });\n\n        if (dataobject.length !== 0 && dataobject[0].p2pRequester) {\n          resolve(dataobject[0]);\n        } else if (dataobject.length !== 0) {\n          reject('[Registry checkP2PDataObject] Data Object found does not support P2P', dataobject[0]);\n        } else if (dataobject.length === 0 && p2p.runtime) resolve(p2p); // use provided p2p info if available in the message body\n        else if (dataobject.length && p2p.p2p) {\n            // otherwise look on Domain Registry\n            // look on Domain Registry\n            var message = {\n              type: 'read',\n              from: _this._registry.registryURL,\n              to: 'domain://registry.' + _this._registry._domain,\n              body: {\n                resource: url\n              }\n            };\n\n            _this._registry._messageBus.postMessage(message, function (reply) {\n              P2PConnectionResolve_log.log('discover data object per url reply', reply);\n\n              if ('value' in reply.body) {\n                //todo: store retrieved hyperty\n                var resolvedDataObject = reply.body.value;\n\n                _this._registry.remoteDataObjectList.push(resolvedDataObject);\n\n                if (resolvedDataObject.p2pRequester) {\n                  resolve(resolvedDataObject);\n                } else {\n                  reject('[Registry checkP2PDataObject] Data Object found does not support P2P', reply.body.value);\n                }\n              } else {\n                reject('[Registry checkP2PDataObject] not found', reply.body.code);\n              }\n            });\n          } else reject('[Registry checkP2PDataObject] no P2P Connection found');\n      });\n    }\n  }, {\n    key: \"addRemoteP2PEntity\",\n    value: function addRemoteP2PEntity(url, runtime) {\n      this._remoteP2PEntities[url] = runtime;\n    }\n  }, {\n    key: \"removeRemoteP2PEntity\",\n    value: function removeRemoteP2PEntity(url) {\n      delete this._remoteP2PEntities[url];\n    }\n  }, {\n    key: \"reconnectP2PRequester\",\n    value: function reconnectP2PRequester(p2pRequester) {\n      var _this = this;\n\n      P2PConnectionResolve_log.log('[P2PConenctionResolve.reconnectP2PRequester] lets try to reconnect P2P Requester Stub: ', p2pRequester);\n      return new Promise(function (resolve, reject) {\n        var remoteRuntime = p2pRequester.runtime;\n        var message = {\n          type: 'execute',\n          from: _this._registry.registryURL,\n          to: p2pRequester.url,\n          body: {\n            method: 'connect',\n            params: [p2pRequester.p2pHandler]\n          }\n        }; // lets prepare the p2pRequesterSTub reconnect by setting an observer to its status changes\n\n        _this._registry.watchingYou.observe('p2pRequesterStub', function (change) {\n          P2PConnectionResolve_log.log('[P2PConenctionResolve.reconnectP2PRequester] p2pRequesterStubs changed ' + _this._registry.p2pRequesterStub);\n\n          if (change.keypath.split('.')[0] === remoteRuntime && change.name === 'status') {\n            switch (change.newValue) {\n              case 'live':\n                P2PConnectionResolve_log.log('[P2PConenctionResolve.reconnectP2PRequester] p2pRequester is live ' + _this._registry.p2pRequesterStub[remoteRuntime]);\n                resolve(_this._registry.p2pRequesterStub[remoteRuntime].url);\n                break;\n\n              case 'failed':\n                P2PConnectionResolve_log.log('[P2PConenctionResolve.reconnectP2PRequester] p2pRequester reconnect failed ' + _this._registry.p2pRequesterStub[remoteRuntime]);\n                reject('P2P Requester reconnect failed');\n                break;\n\n              default:\n            }\n          }\n        }); //  stub load\n\n\n        _this._registry._messageBus.postMessage(message, function (reply) {\n          P2PConnectionResolve_log.log('[P2PConenctionResolve.reconnectP2PRequester] reconnect request reply', reply);\n        });\n      });\n    }\n  }]);\n\n  return P2PConnectionResolve;\n}();\n\n/* harmony default export */ var registry_P2PConnectionResolve = (P2PConnectionResolve);\n// CONCATENATED MODULE: ./src/utils/WatchingYou.js\nfunction WatchingYou_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction WatchingYou_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction WatchingYou_createClass(Constructor, protoProps, staticProps) { if (protoProps) WatchingYou_defineProperties(Constructor.prototype, protoProps); if (staticProps) WatchingYou_defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\nvar WatchingYou =\n/*#__PURE__*/\nfunction () {\n  function WatchingYou() {\n    WatchingYou_classCallCheck(this, WatchingYou);\n\n    this._watching = {};\n    this._observers = [];\n  }\n\n  WatchingYou_createClass(WatchingYou, [{\n    key: \"watch\",\n    value: function watch(key, object) {\n      var _this = this;\n\n      var deep = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n      if (deep) {\n        this._watching[key] = Object.deepObserve(object, function (changes) {\n          changes.every(function (change) {\n            _this._fireEvent(key, change);\n          });\n        });\n      } else {\n        this._watching[key] = Object.observe(object, function (changes) {\n          changes.every(function (change) {\n            _this._fireEvent(key, change);\n          });\n        });\n      }\n\n      return this._watching[key];\n    }\n  }, {\n    key: \"observe\",\n    value: function observe(key, callback) {\n      this._observers.push({\n        key: key,\n        callback: callback\n      });\n    }\n  }, {\n    key: \"_fireEvent\",\n    value: function _fireEvent(key, change) {\n      this._observers.filter(function (observe) {\n        return observe.key === key;\n      }).forEach(function (observe) {\n        observe.callback(change);\n      });\n    }\n  }]);\n\n  return WatchingYou;\n}();\n\n/* harmony default export */ var utils_WatchingYou = (WatchingYou);\n/*let watchChanges = new WatchChanges();\nlet p2pRequesterStub = watchChanges.watch('p2p', {}, true);\nlet stub = watchChanges.watch('stub', {});\n\nwatchChanges.observe('p2p', (change) => {\n  console.log('p2pRequesterStub: ' + change.name + ' - ' + JSON.stringify(change.newValue));\n});\n\nwatchChanges.observe('p2p', (change) => {\n  console.log('p2pRequesterStub: ' + change.name + ' - ' + JSON.stringify(change.newValue));\n});\n\nwatchChanges.observe('stub', (change) => {\n  console.log('stub ' + change.name);\n});\n\np2pRequesterStub.a = {};\nstub.b = {name: 'vitor'};\np2pRequesterStub.a.name = 'Hello';\nstub.b = {name: 'vitor'};\np2pRequesterStub.a.age = '32';\np2pRequesterStub.a.name = 'World';*/\n// CONCATENATED MODULE: ./src/Utils.js\n\n\n// CONCATENATED MODULE: ./src/registry/Registry.js\nfunction Registry_typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { Registry_typeof = function _typeof(obj) { return typeof obj; }; } else { Registry_typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return Registry_typeof(obj); }\n\nfunction Registry_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction Registry_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Registry_createClass(Constructor, protoProps, staticProps) { if (protoProps) Registry_defineProperties(Constructor.prototype, protoProps); if (staticProps) Registry_defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n* Copyright 2016 PT Inovação e Sistemas SA\n* Copyright 2016 INESC-ID\n* Copyright 2016 QUOBIS NETWORKS SL\n* Copyright 2016 FRAUNHOFER-GESELLSCHAFT ZUR FOERDERUNG DER ANGEWANDTEN FORSCHUNG E.V\n* Copyright 2016 ORANGE SA\n* Copyright 2016 Deutsche Telekom AG\n* Copyright 2016 Apizee\n* Copyright 2016 TECHNISCHE UNIVERSITAT BERLIN\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n**/\n// Log System\n\nvar Registry_log = loglevel[\"getLogger\"]('Registry');\n\n\n\n\n\n\n\n\n // import DiscoveryServiceFramework from './DiscoveryServiceFramework';\n\nvar STATUS = {\n  CREATED: 'created',\n  LIVE: 'live',\n  DEPLOYING: 'deploying',\n  DEPLOYED: 'deployed',\n  PROGRESS: 'in-progress',\n  DISCONNECTED: 'disconnected',\n  FAILED: 'deployment-failed',\n  DEAD: 'dead'\n};\n/*import IdentityManager from './IdentityManager';\nimport Discovery from './Discovery';*/\n\n/**\n* Runtime Registry Interface\n*/\n\nvar Registry_Registry =\n/*#__PURE__*/\nfunction () {\n  /**\n  * To initialise the Runtime Registry with the RuntimeURL that will be the basis to derive the internal runtime addresses when allocating addresses to internal runtime component. In addition, the Registry domain back-end to be used to remotely register Runtime components, is also passed as input parameter.\n  * @param  {MessageBus}          msgbus                msgbus\n  * @param  {HypertyRuntimeURL}   runtimeURL            runtimeURL\n  * @param  {AppSandbox}          appSandbox            appSandbox\n  * @param  {runtimeCatalogue}    runtimeCatalogue      runtimeCatalogue\n  * @param  {DomainURL}           remoteRegistry        remoteRegistry\n  * @param  {storageManager}      storageManager\n  */\n  function Registry(runtimeURL, appSandbox, identityModule, runtimeCatalogue, runtimeCapabilities, storageManager, p2pHandlerURL, remoteRegistry) {\n    Registry_classCallCheck(this, Registry);\n\n    // how some functions receive the parameters for example:\n    // new Registry('hyperty-runtime://sp1/123', appSandbox, idModule, remoteRegistry);\n    // registry.registerStub(sandbox, 'sp1');\n    // registry.registerHyperty(sandBox, 'hyperty-runtime://sp1/123');\n    // registry.resolve('hyperty-runtime://sp1/123');\n    if (!runtimeURL) throw new Error('runtimeURL is missing.');\n    if (!storageManager) throw new Error('storageManager is missing.');\n    /*if (!remoteRegistry) throw new Error('remoteRegistry is missing');*/\n\n    var _this = this;\n\n    _this.registryURL = runtimeURL + '/registry/';\n    _this.appSandbox = appSandbox;\n    _this.runtimeURL = runtimeURL;\n    _this.p2pHandlerURL = p2pHandlerURL;\n    _this.runtimeCatalogue = runtimeCatalogue;\n    _this.remoteRegistry = remoteRegistry;\n    _this.idModule = identityModule;\n    _this.storageManager = storageManager;\n    _this.runtimeCapabilities = runtimeCapabilities;\n    _this.identifier = generateGUID();\n    _this.hypertiesListToRemove = {};\n    _this.hypertiesList = [];\n    _this.remoteHypertyList = [];\n    _this.remoteDataObjectList = [];\n    _this.idpLegacyProxyList = {};\n    _this.watchingYou = new utils_WatchingYou();\n    _this.p2pHandlerStub = {};\n    _this.p2pRequesterStub = _this.watchingYou.watch('p2pRequesterStub', {}, true);\n    _this.p2pConnectionList = _this.watchingYou.watch('p2pConnectionList', {}, true);\n    _this.p2pHandlerAssociation = {};\n    _this.protostubsList = _this.watchingYou.watch('protostubsList', {}, true);\n    _this.idpProxyList = _this.watchingYou.watch('idpProxyList', {}, true);\n    _this.dataObjectList = {};\n    _this.subscribedDataObjectList = {};\n    _this.sandboxesList = {\n      sandbox: {},\n      appSandbox: {}\n    };\n    _this.pepList = {};\n    _this.registries = {};\n    _this._domain = divideURL(_this.registryURL).domain;\n    _this.sandboxesList.appSandbox[runtimeURL] = appSandbox;\n    var p2pConnectionResolve = new registry_P2PConnectionResolve(_this);\n    _this._p2pConnectionResolve = p2pConnectionResolve;\n    _this._hypertyUrls = {};\n    _this._dataObjectUrls = {};\n  }\n\n  Registry_createClass(Registry, [{\n    key: \"loadRegistry\",\n    value: function loadRegistry() {\n      var _this = this;\n\n      return new Promise(function (resolve) {\n        _this.storageManager.get('registry:HypertyURLs').then(function (urlsList) {\n          if (urlsList) _this._hypertyUrls = urlsList;\n\n          _this.storageManager.get('registry:DataObjectURLs').then(function (urlsList) {\n            if (urlsList) _this._dataObjectUrls = urlsList;\n            resolve();\n          });\n        });\n      });\n    }\n  }, {\n    key: \"_getIdentityAssociated\",\n    value: function _getIdentityAssociated(type, hypertyURL) {\n      var _this = this;\n\n      for (var hyperty in _this.hypertiesList) {\n        var value = _this.hypertiesList[hyperty];\n\n        if (value._hypertyURL === hypertyURL) {\n          switch (type) {\n            case 'username':\n              return value._user.username;\n\n            case 'cn':\n              return value._user.cn;\n\n            case 'locale':\n              return value._user.locale;\n\n            case 'avatar':\n              return value._user.avatar;\n\n            case 'userURL':\n              return value._user.userURL;\n\n            case '.':\n              return value._user;\n\n            default:\n              return '';\n          }\n        }\n      }\n\n      return '';\n    }\n    /**\n    * This function is used to return the sandbox instance where the Application is executing. It is assumed there is just one App per Runtime instance.\n    */\n\n  }, {\n    key: \"getAppSandbox\",\n    value: function getAppSandbox() {\n      var _this = this;\n\n      return _this.appSandbox;\n    }\n    /**\n    * This function returns the user associated to the hyperty URL\n    * @param    {String}    hypertyURL      hyperty URL\n    * @return   {String}    userURL         user URL\n    */\n\n  }, {\n    key: \"getHypertyOwner\",\n    value: function getHypertyOwner(hypertyURL) {\n      var _this = this;\n\n      var userURL;\n\n      for (var index in _this.hypertiesList) {\n        var hyperty = _this.hypertiesList[index];\n\n        if (hyperty.hypertyURL === hypertyURL) {\n          return hyperty.user.userURL;\n        }\n      }\n\n      return userURL;\n    }\n    /**\n    * This function returns the user associated to the hyperty URL\n    * @param    {String}    dataObjectURL      dataObjectURL URL\n    * @return   {String}    userURL         user URL\n    */\n\n  }, {\n    key: \"getDataObjectReporter\",\n    value: function getDataObjectReporter(dataObjectURL) {\n      var _this = this;\n\n      var DOurl = removePathFromURL(dataObjectURL);\n\n      for (var index in _this.dataObjectList) {\n        var dataObject = _this.dataObjectList[index];\n\n        if (dataObject.url === DOurl) {\n          return dataObject.reporter;\n        }\n      }\n\n      return null;\n    }\n    /**\n    * returns the hyperty Name from a given url. This url could be from a dataObject or hyperty\n    * @param    {String}    url      hyperty or dataObject URL\n    * @return   {String}    hypertyName     hyperty Name\n    */\n\n  }, {\n    key: \"getHypertyName\",\n    value: function getHypertyName(url) {\n      var _this = this;\n\n      var isHypertyURL = divideURL(url).type === 'hyperty'; //value to be returned in the end\n\n      var hypertyName; //if is not an hyperty, check if is a dataObject and obtain his reporter\n\n      var hypertyURL = isHypertyURL ? url : _this.getReporterURLSynchonous(url);\n\n      for (var index in _this.hypertiesList) {\n        var hyperty = _this.hypertiesList[index];\n\n        if (hyperty.hypertyURL === hypertyURL) {\n          hypertyName = hyperty.objectName;\n          break;\n        }\n      }\n\n      return hypertyName;\n    }\n    /**\n    * function to return the reporterURL associated with the dataobject URL\n    * @param    {String}     dataObjectURL    dataObjectURL\n    * @return   {String}     reporterURL      reporterURL\n    */\n\n  }, {\n    key: \"getReporterURL\",\n    value: function getReporterURL(dataObjectURL) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        var dataObject = _this.dataObjectList[dataObjectURL];\n\n        if (dataObject) {\n          resolve(dataObject.reporter);\n        } else {\n          reject('No reporter was found');\n        }\n      });\n    }\n    /**\n    * function to return the reporterURL associated with the dataobject URL. no promise returned\n    * @param    {String}     dataObjectURL    dataObjectURL\n    * @return   {String}     reporterURL      reporterURL\n    */\n\n  }, {\n    key: \"getReporterURLSynchonous\",\n    value: function getReporterURLSynchonous(dataObjectURL) {\n      var _this = this;\n\n      var dataObject = _this.dataObjectList[dataObjectURL];\n      return dataObject ? dataObject.reporter : undefined;\n    }\n    /**\n    * returns the hyperty URL that subscribed the dataObject\n    * @param    {String}     url            url format\n    * @return   {String}    Hyperty URL subscribed to the URL\n    */\n\n  }, {\n    key: \"getDataObjectSubscriberHyperty\",\n    value: function getDataObjectSubscriberHyperty(url) {\n      var _this = this;\n\n      return _this.subscribedDataObjectList[url];\n    }\n    /**\n    * register a desired dataObject to subscribe\n    * @param    {String}    dataObjectURL      dataObject URL\n    */\n\n  }, {\n    key: \"registerSubscribedDataObject\",\n    value: function registerSubscribedDataObject(dataObjectURL, hypertyURL) {\n      var _this = this;\n\n      if (_this.subscribedDataObjectList[dataObjectURL] === undefined) {\n        _this.subscribedDataObjectList[dataObjectURL] = hypertyURL;\n      }\n    }\n    /**\n    * Function to return the list of pre authorised users received in the creation of a data object\n    * @param    {String}            dataObjectURL    dataObjectURL\n    * @return   {Array<String>}     preAuth         List of pre authorised users\n    */\n\n  }, {\n    key: \"getPreAuthSubscribers\",\n    value: function getPreAuthSubscribers(dataObjectURL) {\n      var _this = this;\n\n      var dataObject = _this.dataObjectList[dataObjectURL];\n      var preAuth = [];\n\n      if (dataObject) {\n        preAuth = dataObject.authorise;\n      }\n\n      return preAuth;\n    }\n    /**\n    * send requests to unregister all hyperties registered in domain registry\n    * @return   {Promise}     return a promise if the result of unregistration all hyperties\n    */\n\n  }, {\n    key: \"unregisterAllHyperties\",\n    value: function unregisterAllHyperties() {\n      var _this = this;\n\n      var unregisterResults = [];\n      return new Promise(function (resolve, reject) {\n        for (var index in _this.hypertiesList) {\n          var hyperty = _this.hypertiesList[index];\n\n          var result = _this.unregisterHypertyInstance(hyperty.hypertyURL);\n\n          unregisterResults.push(result);\n        }\n\n        Promise.all(unregisterResults).then(function () {\n          resolve('successfully unregistered all hyperties');\n        }, function (error) {\n          reject(error);\n        });\n      });\n    }\n    /**\n    *  function to unregister an hypertyInstance in the Domain Registry\n    *  @param   {String}      hypertyInstance   HypertyInsntance url\n    *\n    */\n\n  }, {\n    key: \"unregisterHypertyInstance\",\n    value: function unregisterHypertyInstance(hypertyInstance) {\n      //TODO working but the user\n      var _this = this;\n\n      var closeMsg = {\n        type: 'execute',\n        from: _this.registryURL,\n        to: hypertyInstance,\n        body: {\n          method: 'close'\n        }\n      }; // Send message to hyperty to close\n\n      _this._messageBus.postMessage(closeMsg, function (reply) {\n        Registry_log.log('[Registry.unregisterHypertyInstance] Close Reply', reply);\n\n        _this._domainRegistration.unregisterHyperty(hypertyInstance);\n      });\n    }\n    /**\n    *  function to unregister a Data Object in the Domain Registry\n    *  @param   {String}      hypertyInstance   HypertyInsntance url\n    *\n    */\n\n  }, {\n    key: \"unregisterDataObject\",\n    value: function unregisterDataObject(url) {\n      this._domainRegistration.unregisterDataObject(url);\n    }\n    /**\n    * register a new subscriber in the dataObject registered\n    * @param  {String}   dataObjectURL    dataObject URL\n    * @param  {String}   subscriberURL    subscriber URL\n    */\n\n  }, {\n    key: \"registerSubscriber\",\n    value: function registerSubscriber(dataObjectURL, subscriberURL) {\n      var _this = this;\n\n      var dataObject = _this.dataObjectList[dataObjectURL];\n\n      if (dataObject) {\n        if (!dataObject.subscribers) dataObject.subscribers = [];\n        dataObject.subscribers.push(subscriberURL);\n        _this.dataObjectList[dataObjectURL] = dataObject;\n      }\n    }\n    /**\n    * get the subscribers registered within a dataObject\n    * @param  {String}          dataObjectURL    dataObject URL\n    * @param  {Array<String>}   Substribers List\n    */\n\n  }, {\n    key: \"getDataObjectSubscribers\",\n    value: function getDataObjectSubscribers(dataObjectURL) {\n      var _this = this;\n\n      var dataObject = _this.dataObjectList[dataObjectURL];\n\n      if (dataObject) {\n        return dataObject.subscribers;\n      } else {\n        throw 'No dataObject was found';\n      }\n    }\n    /**\n    * To register a new Data Object in the runtime which returns the dataObjectURL allocated to the new Data Object.\n    * @param  {String}      identifier                  identifier\n    * @param  {String}      dataObjectschema            dataObjectschema\n    * @param  {String}      dataObjectUrl               dataObjectUrl\n    * @param {String}      dataObjectReporter           dataObjectReporter\n    * @param  {Array}     resources                     dataObject resources\n    * @param  {Array}     authorise                     list of pre authorised authorised IDs\n    */\n    //registerDataObject(identifier, dataObjectschema, dataObjectUrl, dataObjectReporter, resources, addressURL, authorise) {\n\n  }, {\n    key: \"registerDataObject\",\n    value: function registerDataObject(objectRegistration) {\n      var _this = this;\n\n      var registration = deepClone(objectRegistration);\n      return new Promise(function (resolve, reject) {\n        _this.dataObjectList[objectRegistration.url] = objectRegistration; //      _this.storageManager.get('registry:DataObjectURLs').then((urlsList) => {\n\n        /*        if (!urlsList) {\n                  urlsList = {};\n                }*/\n        //update the list with the new elements\n\n        _this._dataObjectUrls[objectRegistration.name + objectRegistration.schema + objectRegistration.resources + objectRegistration.reporter] = objectRegistration.url; // step to obtain the list of all URL registered to updated with the new one.\n\n        _this.storageManager.set('registry:DataObjectURLs', 0, _this._dataObjectUrls).then(function () {\n          if (_this.isInterworkingProtoStub(registration.reporter)) {\n            registration.interworking = true;\n          }\n\n          var domainRegistration = true;\n          if (registration.hasOwnProperty(\"domain_registration\")) domainRegistration = registration.domain_registration;\n          if (domainRegistration) _this._domainRegistration.registerDataObject(registration, objectRegistration.resume, _this.p2pHandlerStub).then(function (registered) {\n            resolve(registered);\n          });else resolve(registration);\n        })[\"catch\"](function (reason) {\n          Registry_log.error('[Registry registerDataObject] Error: ', reason);\n          reject(reason);\n        });\n      }); //    });\n    }\n  }, {\n    key: \"_getResourcesAndSchemes\",\n    value: function _getResourcesAndSchemes(descriptor) {\n      var _this = this;\n\n      return new Promise(function (resolve) {\n        var resources; // check if the hyperty resources is a vector or a string\n        // TODO delete later when catalogue is fixed\n\n        if (typeof descriptor.hypertyType === 'string') {\n          resources = [];\n          resources.push(descriptor.hypertyType);\n        } else {\n          resources = descriptor.hypertyType;\n        }\n\n        var objName = descriptor.objectName;\n        var descriptorDataSchema = descriptor.dataObjects;\n        var dataSchemasArray = []; //this will create a array with a Promise in each position\n\n        for (var index in descriptorDataSchema) {\n          dataSchemasArray.push(_this.runtimeCatalogue.getDataSchemaDescriptor(descriptorDataSchema[index]));\n        } // as soon as the previous array is completed, this will wait for the resolve of all promises in the array\n\n\n        Promise.all(dataSchemasArray).then(function (dataSchemas) {\n          var filteredDataSchemas = [];\n\n          for (var _index in dataSchemas) {\n            var dataSchema = dataSchemas[_index];\n            filteredDataSchemas.push(dataSchema.sourcePackage.sourceCode.properties.scheme);\n          } // log.log('[Registry] Hyperty Schemas', filteredDataSchemas);\n          // log.log('[Registry] Hyperty resources', resources);\n\n\n          resolve({\n            resources: resources,\n            dataSchema: filteredDataSchemas,\n            name: objName\n          });\n        });\n      });\n    }\n    /**\n    * method that returns previously registered Hyperty or DataObjects URLS, for given characteristics\n    * @param  {JSON}        info           object or hyperty charateristics info\n    * @return {addressURL}  addressURL     return the URL if there is any previousy registered URL, return undefined otherwise\n    */\n\n  }, {\n    key: \"checkRegisteredURLs\",\n    value: function checkRegisteredURLs(info, reuseURL) {\n      var _this = this;\n\n      return new Promise(function (resolve) {\n        var objectType = info.reporter ? 'registry:DataObjectURLs' : 'registry:HypertyURLs';\n\n        if (typeof reuseURL === 'string') {\n          objectType = reuseURL && divideURL(reuseURL).type !== 'hyperty' ? 'registry:DataObjectURLs' : 'registry:HypertyURLs';\n        } //debugger;\n\n\n        _this.storageManager.get(objectType).then(function (urlsList) {\n          if (!urlsList) {\n            urlsList = {};\n          }\n\n          if (typeof reuseURL === 'string') {\n            Registry_log.info('[Registry - checkRegisteredURLs] - look for ' + reuseURL + ' on ', urlsList);\n            var searchResult = Object.keys(urlsList).map(function (key) {\n              var indexOf = urlsList[key].indexOf(reuseURL);\n              return urlsList[key][indexOf];\n            });\n            Registry_log.info('[Registry - checkRegisteredURLs] - found ' + searchResult.length + ' results on ', searchResult);\n\n            if (searchResult.length === 1) {\n              return resolve(searchResult);\n            } else {\n              return resolve(undefined);\n            }\n          }\n\n          if (objectType === 'registry:HypertyURLs') {\n            _this._getResourcesAndSchemes(info).then(function (value) {\n              if (urlsList[value.resources + value.dataSchema + value.name]) {\n                // log.log('[Registry] reusage of hyperty URL');\n                return resolve(urlsList[value.resources + value.dataSchema + value.name]);\n              } else {\n                // log.log('[Registry] no hyperty URL was previously registered ');\n                return resolve(undefined);\n              }\n            });\n          } else {\n            var characteristics = info.name + info.schema + info.resources + info.reporter;\n\n            if (urlsList[characteristics]) {\n              // log.log('[Registry] reusage of dataObject URL');\n              if (typeof urlsList[characteristics] === 'string') {\n                var arrayToResolve = [];\n                arrayToResolve.push(urlsList[characteristics]);\n                return resolve(arrayToResolve);\n              } else {\n                return resolve(urlsList[characteristics]);\n              }\n            } else {\n              // log.log('[Registry] no dataObject URL was previously registered');\n              return resolve(undefined);\n            }\n          }\n        });\n      });\n    }\n    /**\n    * To register a new Hyperty in the runtime which returns the HypertyURL allocated to the new Hyperty.\n    * @param  {Sandbox}             sandbox               sandbox\n    * @param  {HypertyCatalogueURL} HypertyCatalogueURL   descriptor\n    * @param {object} IdpConstraint - constraints to be used when selecting the identity to be associated with the Hyperty including origin, idp, and idHint.\n    * @return {HypertyURL}          HypertyURL\n    */\n\n  }, {\n    key: \"registerHyperty\",\n    value: function registerHyperty(sandbox, importPath, descriptor, addressURL, IdpConstraint) {\n      var _this = this;\n\n      var hypertyCapabilities;\n      return new Promise(function (resolve, reject) {\n        _this.idModule.getIdentityAssertion(IdpConstraint).then(function (result) {\n          var userProfile = result.userProfile; // log.log('[Registry registerHyperty] userProfile', userProfile);\n\n          if (_this._messageBus === undefined) {\n            reject('[Registry registerHyperty] MessageBus is undefined');\n          } else {\n            //call check if the protostub exist: to be removed\n\n            /*  _this.resolve(domainUrl).then(function(a) {\n              // log.log('[Registry registerHyperty] stub to domain registry- ', a);*/\n            //          _this.storageManager.get('registry:HypertyURLs').then((urlsList) => {\n            // log.log('[Registry registerHyperty] storageManager] - ', urlsList);\n            _this._getResourcesAndSchemes(descriptor).then(function (value) {\n              hypertyCapabilities = value;\n              /*              if (!urlsList) {\n                              urlsList = {};\n                            }*/\n\n              _this._hypertyUrls[hypertyCapabilities.resources + hypertyCapabilities.dataSchema + hypertyCapabilities.name] = addressURL.address;\n\n              _this.storageManager.set('registry:HypertyURLs', 0, _this._hypertyUrls).then(function () {\n                //check whether the received sanbox e ApplicationSandbox or a normal sandbox\n                if (sandbox.type === 'app') {\n                  _this.sandboxesList.appSandbox[addressURL.address[0]] = sandbox;\n                } else if (sandbox.type === 'normal') {\n                  _this.sandboxesList.sandbox[addressURL.address[0]] = sandbox;\n                } else {\n                  reject('Wrong SandboxType');\n                }\n\n                var p2pHandler;\n                var p2pRequester;\n\n                if (Object.keys(_this.p2pHandlerStub).length !== 0) {\n                  p2pHandler = _this.p2pHandlerStub[_this.runtimeURL].url;\n                  p2pRequester = runtimeUtils.runtimeDescriptor.p2pRequesterStub;\n                }\n\n                var hyperty = new registry_HypertyInstance(_this.identifier, _this.registryURL, importPath, descriptor, addressURL.address[0], userProfile, 'guid', _this.runtimeURL, 'ctx', p2pHandler, p2pRequester, hypertyCapabilities.dataSchema, hypertyCapabilities.resources);\n\n                _this.hypertiesList.push(hyperty);\n                /*--- start here move p2p and domain registry related features to a separated function.-------..*/\n\n\n                var registrationAtdomain = true;\n\n                if (descriptor.hasOwnProperty(\"configuration\") && descriptor.configuration.hasOwnProperty(\"domain_registration\")) {\n                  registrationAtdomain = descriptor.configuration.domain_registration;\n                }\n\n                if (registrationAtdomain) _this._domainRegistration.registerHyperty(hyperty, addressURL.newAddress).then(function (registered) {\n                  resolve(registered);\n                });else resolve({\n                  url: hyperty.hypertyURL\n                });\n                /*------------------- END HERE MOVE DOMAIN REGISTRY ------------------*/\n              })[\"catch\"](function (reason) {\n                // log.log('[Registry registerHyperty] Error: ', reason);\n                reject(reason);\n              });\n            }); //          });\n\n          }\n        }, function (err) {\n          reject('[Registry registerHyperty] ', err);\n        });\n      });\n    }\n    /**\n    * To unregister a previously registered Hyperty\n    * @param  {HypertyURL}          HypertyURL url        url\n    */\n\n  }, {\n    key: \"unregisterHyperty\",\n    value: function unregisterHyperty(url) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        var found = false;\n        var index = 0;\n\n        for (index = 0; index < _this.hypertiesList.length; index++) {\n          var hyperty = _this.hypertiesList[index];\n\n          if (hyperty !== undefined) {\n            if (hyperty.hypertyURL === url) {\n              found = true;\n              break;\n            }\n          }\n        }\n\n        if (found === false) {\n          reject('Hyperty not found');\n        } else {\n          delete _this.hypertiesList[index];\n          resolve('Hyperty successfully deleted');\n        }\n      });\n    }\n    /**\n    * To discover protocol stubs available in the runtime for a certain domain. If available, it returns the runtime url for the protocol stub that connects to the requested domain. Required by the runtime BUS to route messages to remote servers or peers (do we need something similar for Hyperties?).\n    * @param  {DomainURL}           DomainURL            url\n    * @return {RuntimeURL}           RuntimeURL\n    */\n\n  }, {\n    key: \"discoverProtostub\",\n    value: function discoverProtostub(url) {\n      if (!url) throw new Error('Parameter url needed');\n\n      var _this = this;\n\n      var dividedURL = divideURL(url);\n      var domainURL = dividedURL.domain;\n\n      if (_this.protostubsList.hasOwnProperty(domainURL) && _this.protostubsList[domainURL].status === STATUS.LIVE) {\n        return _this.protostubsList[domainURL];\n      } else {\n        _this.protostubsList[domainURL] = {\n          status: STATUS.DEPLOYING\n        };\n        throw new Error('[Registry - discoverProtoStub ] Message Node Protostub Not Found. Creating one');\n      }\n    }\n    /**\n    * To discover protocol stubs available in the runtime for a certain remote runtime URL. If available, it returns the runtime url for the protocol stub that connects to the requested domain.\n    * Required by the runtime BUS to route messages to remote servers or peers (do we need something similar for Hyperties?).\n    * @param  {RuntimeURL}           RuntimeURL            url\n    * @return {p2pRequester}           RuntimeURL\n    */\n\n  }, {\n    key: \"discoverP2PStub\",\n    value: function discoverP2PStub(runtimeURL) {\n      var _this = this;\n\n      if (runtimeURL) {\n        if (_this.p2pRequesterStub.hasOwnProperty(runtimeURL) && _this.p2pRequesterStub[runtimeURL].status === STATUS.LIVE) {\n          return _this.p2pRequesterStub[runtimeURL];\n        } else {\n          _this.p2pRequesterStub[runtimeURL] = {\n            status: STATUS.CREATED\n          };\n          throw new Error('[Registry - discoverP2PStub ] P2P Requester Stub Not Found. Creating one');\n        }\n      } else {\n        if (_this.p2pHandlerStub.hasOwnProperty(_this.runtimeURL)) {\n          return _this.p2pHandlerStub[_this.runtimeURL];\n        } else {\n          _this.p2pHandlerStub[_this.runtimeURL] = {\n            status: STATUS.CREATED\n          };\n          throw new Error('[Registry - discoverP2PStub ] P2P Handler Stub Not Found.');\n        }\n      }\n    }\n    /**\n     * To register a new Protocol Stub in the runtime including as input parameters the function to postMessage, the DomainURL that is connected with the stub, which returns the RuntimeURL allocated to the new ProtocolStub.\n     * @param  {Sandbox}       Sandbox\n     * @param  {stubID}        Domain or hyperty runtime to register the stub\n     * @param  {descriptorURL}     Catalogue URL of the Protostub descriptor\n     * @param  {descriptor}     Protostub descriptor\n     * @return {RuntimeProtoStubURL}\n     */\n\n  }, {\n    key: \"registerStub\",\n    value: function registerStub(sandbox, stubID, p2pConfig, descriptorURL, descriptor) {\n      var _this = this;\n\n      var _stubDescriptor = descriptor;\n      return new Promise(function (resolve, reject) {\n        var runtimeProtoStubURL; //check if messageBus is registered in registry or not\n\n        if (_this._messageBus === undefined) {\n          reject('MessageBus not found on registerStub');\n        }\n\n        Registry_log.info('[Registry - registerStub] - stubID ', stubID);\n        /* if (!stubID.indexOf('msg-node.')) {\n          stubID = stubID.substring(stubID.indexOf('.') + 1);\n        }*/\n\n        var P2PRequesterStub;\n\n        if (p2pConfig) {\n          if (p2pConfig.hasOwnProperty('isHandlerStub') && p2pConfig.isHandlerStub) {\n            runtimeProtoStubURL = _this.p2pHandlerURL;\n            _this.p2pHandlerStub[stubID] = {\n              url: runtimeProtoStubURL,\n              status: STATUS.CREATED\n            };\n            _this.p2pHandlerAssociation[_this.runtimeURL] = [];\n            _this.sandboxesList.sandbox[runtimeProtoStubURL] = sandbox;\n            Registry_log.info('[Registry - registerStub - P2PHandlerStub] - ', stubID, ' - ', runtimeProtoStubURL);\n            resolve(_this.p2pHandlerStub[stubID]);\n          } else {\n            P2PRequesterStub = p2pConfig.p2pRequesterStub;\n            runtimeProtoStubURL = 'runtime://' + divideURL(p2pConfig.remoteRuntimeURL).domain + '/p2prequester/' + generateGUID();\n            Registry_log.info('[Registry - registerStub - P2PRequesterStub] - ', P2PRequesterStub, ' - ', runtimeProtoStubURL); // to be clarified what is this p2pHandlerAssociation\n\n            _this.p2pHandlerAssociation[_this.runtimeURL].push(runtimeProtoStubURL);\n\n            _this.p2pRequesterStub[stubID] = {\n              url: runtimeProtoStubURL,\n              status: STATUS.CREATED\n            };\n            _this.sandboxesList.sandbox[runtimeProtoStubURL] = sandbox; //Setup P2P Requester path into MN\n\n            var msg = {\n              type: 'subscribe',\n              from: _this.registryURL,\n              to: 'domain://msg-node.' + _this._domain + '/sm',\n              body: {\n                subscribe: [runtimeProtoStubURL],\n                source: _this.registryURL\n              }\n            };\n\n            _this._messageBus.postMessage(msg, function (reply) {// log.log('[Registry - register Stub] p2pRequester path setup: ', reply);\n            });\n\n            resolve(_this.p2pRequesterStub[stubID]);\n          }\n        } else {\n          console.log('[Registry - registerStub - Normal Stub] descriptor', descriptor);\n\n          if (!Registry_typeof(descriptor) === 'string' && descriptor.hasOwnProperty('_interworking') && descriptor._interworking) {\n            runtimeProtoStubURL = 'runtime://' + stubID + '/protostub/' + 'scheme1';\n          } else {\n            runtimeProtoStubURL = 'runtime://' + stubID + '/protostub/' + generateGUID();\n          }\n\n          Registry_log.info('[Registry - registerStub - Normal Stub] - ', stubID); // TODO: Optimize this\n\n          _this.protostubsList[stubID] = {\n            url: runtimeProtoStubURL,\n            status: STATUS.DEPLOYING\n          };\n\n          if (descriptorURL) {\n            _this.protostubsList[stubID].descriptorURL = descriptorURL;\n          }\n\n          if (_stubDescriptor && _stubDescriptor.interworking) {\n            _this.protostubsList[stubID].interworking = _stubDescriptor.interworking;\n          }\n\n          _this.sandboxesList.sandbox[runtimeProtoStubURL] = sandbox;\n          resolve(_this.protostubsList[stubID]);\n        } // resolve(runtimeProtoStubURL);\n\n\n        _this._messageBus.addListener(runtimeProtoStubURL + '/status', function (msg) {\n          _this._onProtostubStatusEvent(msg);\n        });\n      });\n    }\n    /**\n    * To Process status events fired by protostubs\n    * @param  {Message}   message     Event Message\n    */\n\n  }, {\n    key: \"_onProtostubStatusEvent\",\n    value: function _onProtostubStatusEvent(msg) {\n      var _this = this; // log.log('[Registry onProtostubStatusEvent]: ', msg);\n\n\n      var runtimeProtoStubURL = msg.from;\n\n      if (!msg.to.includes('/status')) {\n        Registry_log.error('[Registry onProtostubStatusEvent] Not Status Event: ', msg);\n        return;\n      } else {\n        // broadcast Protostub status event to all Hyperties\n        var from = msg.from;\n        msg.from = _this.runtimeURL;\n        msg.to = _this.runtimeURL + '/status';\n        msg.body.resource = from;\n\n        _this._messageBus.postMessage(msg);\n      } // process status events from message node protostubs\n\n\n      if (runtimeProtoStubURL.includes('/protostub/')) {\n        // TODO: uncomment below when protostubs are updated with new status value \"live\"\n        Object.keys(_this.protostubsList).filter(function (key) {\n          return _this.protostubsList[key].url === runtimeProtoStubURL;\n        }).map(function (key) {\n          _this.protostubsList[key].status = msg.body.value; // log.log('[Registry - onProtostubStatusEvent] - Protostub status: ', _this.protostubsList[key]);\n        });\n      } else {\n        // process status events from p2p connections\n        if (msg.body.resource) {\n          var remoteRuntimeURL = msg.body.resource;\n\n          if (_this.p2pConnectionList[remoteRuntimeURL]) {\n            _this.p2pConnectionList[remoteRuntimeURL].status = msg.body.value;\n            _this.p2pConnectionList[remoteRuntimeURL].url = runtimeProtoStubURL;\n          } else {\n            var p2pConnection = {\n              status: msg.body.value,\n              url: runtimeProtoStubURL\n            };\n            _this.p2pConnectionList[remoteRuntimeURL] = p2pConnection;\n          } // log.log('[Registry - onProtostubStatusEvent] - P2PConnection status: ', _this.p2pConnectionList[remoteRuntimeURL]);\n          // Update P2P Requester protostub if it is coming from there\n\n\n          if (runtimeProtoStubURL.includes('/p2prequester/')) {\n            _this.p2pRequesterStub[remoteRuntimeURL].status = msg.body.value; // log.log('[Registry - onProtostubStatusEvent] - P2P Requester status: ', _this.p2pRequesterStub[remoteRuntimeURL]);\n          } else {\n            // if from P2PHandler with status disconencted, lets remove from p2pConnectionList\n            if (msg.body.value === 'disconnected') delete _this.p2pConnectionList[remoteRuntimeURL];\n          }\n        } else {\n          if (runtimeProtoStubURL.includes('/p2prequester/')) {\n            // It is an event from P2P Requester without mandatory \"resource\" field\n            Registry_log.error('[Registry onProtostubStatusEvent] resource missing: ', msg);\n            return;\n          } else {\n            // It is an event from P2P Handler\n            _this.p2pHandlerStub[_this.runtimeURL].status = msg.body.value; // log.log('[Registry - onProtostubStatusEvent] - P2PHandler Stub status: ', _this.p2pHandlerStub[_this.runtimeURL]);\n          }\n        }\n      }\n    }\n    /**\n    * To unregister a previously registered protocol stub\n    * @param  {HypertyRuntimeURL}   HypertyRuntimeURL     hypertyRuntimeURL\n    */\n\n  }, {\n    key: \"unregisterStub\",\n    value: function unregisterStub(hypertyRuntimeURL) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        if (_this.protostubsList.hasOwnProperty(hypertyRuntimeURL)) {\n          delete _this.protostubsList[hypertyRuntimeURL];\n          resolve('ProtostubURL removed');\n        } else {\n          reject('Error on unregisterStub: Hyperty not found');\n        }\n      });\n    }\n    /**\n     * To register a new Identity Provider proxy in the runtime including as input parameters the function to postMessage, the DomainURL that is connected with the stub, which returns the RuntimeURL allocated to the new ProtocolStub.\n     * @param {Sandbox}        Sandbox\n     * @param  {DomainURL}     DomainURL service provider domain\n     * @return {RuntimeIdpProxyURL}\n     */\n\n  }, {\n    key: \"registerIdpProxy\",\n    value: function registerIdpProxy(sandbox, domainURL) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        var idpProxyStubURL; //check if messageBus is registered in registry or not\n\n        if (_this._messageBus === undefined) {\n          reject('MessageBus not found on registerStub');\n        }\n\n        idpProxyStubURL = 'domain-idp://' + domainURL + '/stub/' + generateGUID(); // TODO: Optimize this\n\n        _this.idpProxyList[domainURL] = {\n          url: idpProxyStubURL,\n          status: STATUS.DEPLOYING\n        };\n        _this.sandboxesList.sandbox[idpProxyStubURL] = sandbox; // sandbox.addListener('*', function(msg) {\n        //   _this._messageBus.postMessage(msg);\n        // });\n\n        resolve(idpProxyStubURL);\n\n        _this._messageBus.addListener(idpProxyStubURL + '/status', function (msg) {\n          _this._onIdpProxyStatusEvent(msg);\n        });\n      });\n    }\n    /**\n    * To Process status events fired by Idp Proxies\n    * @param  {Message}   message     Event Message\n    */\n\n  }, {\n    key: \"_onIdpProxyStatusEvent\",\n    value: function _onIdpProxyStatusEvent(msg) {\n      var _this = this; // log.log('[Registry onIdpProxyStatusEvent]: ', msg);\n\n\n      var idpProxyURL = msg.from;\n\n      if (!msg.to.includes('/status')) {\n        Registry_log.error('[Registry onIdpProxyStatusEvent] Not Status Event: ', msg);\n        return;\n      }\n\n      Object.keys(_this.idpProxyList).filter(function (key) {\n        return _this.idpProxyList[key].url === idpProxyURL;\n      }).map(function (key) {\n        _this.idpProxyList[key].status = msg.body.value; // log.log('[Registry - onIdpProxyStatusEvent] - Idp Proxy status: ', _this.idpProxyList[key]);\n      });\n    }\n    /**\n    * To discover idpProxy stubs available in the runtime for a certain domain. If available, it returns the runtime url for the idpProxy stub that connects to the requested domain. Required by the runtime BUS to route messages to remote servers or peers\n    * @param  {DomainURL}           DomainURL            url\n    * @return {RuntimeURL}           RuntimeURL         idpProxyUrl\n    */\n\n  }, {\n    key: \"discoverIdpProxy\",\n    value: function discoverIdpProxy(url) {\n      if (!url) throw new Error('Parameter url needed');\n\n      var _this = this;\n\n      var dividedURL = divideURL(url);\n      var domainURL = dividedURL.domain;\n\n      if (_this.idpProxyList.hasOwnProperty(domainURL) && _this.idpProxyList[domainURL].status === STATUS.LIVE) {\n        return _this.idpProxyList[domainURL];\n      } else {\n        _this.idpProxyList[domainURL] = {\n          status: STATUS.PROGRESS\n        };\n        throw new Error('[Registry - discoverIdpProxy ] Idp Proxy Not Found. Creating one');\n      }\n    }\n    /**\n    * To register a new Policy Enforcer in the runtime including as input parameters the function to postMessage, the HypertyURL associated with the PEP, which returns the RuntimeURL allocated to the new Policy Enforcer component.\n    * @param  {Message.Message} postMessage postMessage\n    * @param  {HypertyURL}          HypertyURL            hyperty\n    * @return {HypertyRuntimeURL}   HypertyRuntimeURL\n    */\n\n  }, {\n    key: \"registerPEP\",\n    value: function registerPEP(postMessage, hyperty) {\n      var _this = this;\n\n      return new Promise(function (resolve) {\n        //TODO check what parameter in the postMessage the pep is.\n        _this.pepList[hyperty] = postMessage;\n        resolve('PEP registered with success');\n      });\n    }\n    /**\n    * To unregister a previously registered protocol stub\n    * @param  {HypertyRuntimeURL}   HypertyRuntimeURL     HypertyRuntimeURL\n    */\n\n  }, {\n    key: \"unregisterPEP\",\n    value: function unregisterPEP(HypertyRuntimeURL) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        var result = _this.pepList[HypertyRuntimeURL];\n\n        if (result === undefined) {\n          reject('Pep Not found.');\n        } else {\n          resolve('PEP successfully removed.');\n        }\n      });\n    }\n    /**\n    * To discover sandboxes available in the runtime for a certain domain and a certain set of capabilities. Required by the runtime UA to avoid more than one sandbox for the same domain.\n    * @param  {DomainURL} DomainURL url\n    * @return {RuntimeSandbox}           RuntimeSandbox\n    */\n\n  }, {\n    key: \"getSandbox\",\n    value: function getSandbox(url, constraints) {\n      if (!url) throw new Error('Parameter url needed'); // log.log('[Registry getSandbox] getSandbox for: ', url, ' and capabilities: ', constraints);\n\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        var request; //first try to find the url in the appSandbox list\n\n        request = _this.sandboxesList.appSandbox[url]; //if no appSandbox was found, try to search in the normal sandboxes list\n\n        if (!request) {\n          request = _this.sandboxesList.sandbox[url];\n\n          if (!request) {\n            var domain;\n\n            if (url.includes('://')) {\n              domain = divideURL(url).domain;\n            } else {\n              domain = url;\n            } // search in the sandboxes list for a entry containing the domain given\n\n\n            for (var sandbox in _this.sandboxesList.sandbox) {\n              //todo: uncomment sandbox constraints match condition with runtime sharing\n              if (sandbox.includes(domain) && _this.sandboxesList.sandbox[sandbox].matches(constraints)) {\n                var _ret = function () {\n                  var current = _this.sandboxesList.sandbox[sandbox];\n                  var match = Object.keys(constraints).filter(function (constraint) {\n                    return constraint === 'browser' && current.type === SandboxType.NORMAL || constraint === 'windowSanbox' && current.type === SandboxType.WINDOW;\n                  }).length > 0 ? true : false;\n\n                  if (match) {\n                    request = current;\n                  }\n\n                  return \"break\";\n                }();\n\n                if (_ret === \"break\") break;\n              }\n            }\n          }\n        }\n\n        if (!request) {\n          reject('no sandbox found for: ' + url);\n        } else {\n          resolve(request);\n        }\n      });\n    }\n  }, {\n    key: \"resolveNormalStub\",\n    value: function resolveNormalStub(url) {\n      // log.log('resolveNormalStub ' + url);\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        //split the url to find the domainURL. deals with the url for example as:\n        //\"hyperty-runtime://sp1/protostub/123\",\n        var dividedURL = divideURL(url);\n        var domainUrl = dividedURL.domain;\n        var type = dividedURL.type;\n\n        if (url.includes(_this.runtimeURL) || url.includes('://sandbox/')) {\n          Registry_log.error('[Registry - resolve] URL to be resolved should have listeners ', url);\n          reject('[Registry - resolve] URL to be resolved should have listeners ', url);\n        } // resolve the domain protostub in case of a message to global registry\n\n\n        if (url.includes('global://registry')) {\n          domainUrl = _this._domain;\n        } else {\n          if (!domainUrl.indexOf('msg-node.') || !domainUrl.indexOf('registry.')) {\n            domainUrl = domainUrl.substring(domainUrl.indexOf('.') + 1);\n          }\n        }\n\n        _this.isLegacy(url).then(function (isLegacy) {\n          // if legacy it should resolve for <protocol>.<domain>\n          if (isLegacy && type !== 'domain-idp') {\n            domainUrl = type + '.' + getUserIdentityDomain(url);\n          }\n\n          Registry_log.info('[Registry.resolve] domainUrl:', domainUrl);\n          var registredComponent;\n\n          if (type === 'domain-idp') {\n            registredComponent = _this.idpProxyList.hasOwnProperty(domainUrl) ? _this.idpProxyList[domainUrl] : false;\n          } else {\n            registredComponent = _this.protostubsList.hasOwnProperty(domainUrl) ? _this.protostubsList[domainUrl] : false;\n          }\n\n          Registry_log.info('[Registry.resolve] registred:', registredComponent); // TODO since the protostubs have other states this should be revised, because the status could change from DEPLOYED to LIVE\n          // TODO and this validation will trigger a new load of IDPProxy or Protostub;\n\n          if (registredComponent && registredComponent.hasOwnProperty('status') && (registredComponent.status === STATUS.DEPLOYED || registredComponent.status === STATUS.CREATED || registredComponent.status === STATUS.LIVE || registredComponent.status === STATUS.DISCONNECTED)) {\n            Registry_log.info('[Registry.resolve] Resolved: ', registredComponent.url, registredComponent.status);\n            resolve(registredComponent.url);\n          } else {\n            //todo: use switch-case to support other types of stubs\n            if (type === 'domain-idp') {\n              // The IdP Proxy does not exist, let's prepare its deployment by watching its status\n              _this.watchingYou.observe('idpProxyList', function (change) {\n                // log.log('[Registry - resolveNormalStub] idpProxyList changed ' + _this.idpProxyList);\n                var keypath = change.keypath;\n                if (keypath.includes('status')) keypath = keypath.replace('.status', '');\n\n                if (keypath === domainUrl && change.name === 'status' && change.newValue === STATUS.CREATED) {\n                  // log.log('[Registry - resolveNormalStub] idpProxyList is live ' + _this.idpProxyList[domainUrl]);\n                  resolve(_this.idpProxyList[domainUrl].url);\n                }\n              });\n\n              if (!registredComponent || registredComponent.status === STATUS.FAILED) {\n                // this process will load the idp proxy, because is not yet registered;\n                Registry_log.info('[Registry.resolveNormalStub] deploy new IDPProxy: ', domainUrl);\n\n                _this.loader.loadIdpProxy(domainUrl).then(function () {\n                  Registry_log.info('[Registry.resolveNormalStub] IdP Proxy deployed: ', _this.idpProxyList[domainUrl]);\n                })[\"catch\"](function (reason) {\n                  Registry_log.error('[Registry.resolve] Error resolving Load IDPProxy: ', reason);\n                  _this.idpProxyList[domainUrl].status = 'deployment-failed';\n                  reject(reason);\n                });\n              }\n            } else {\n              // The protoStub does not exist, let's prepare its deployment by watching its status\n              _this.watchingYou.observe('protostubsList', function (change) {\n                // log.log('[Registry - resolveNormalStub] protostubsList changed ' + _this.protostubsList);\n                var keypath = change.keypath;\n                if (keypath.includes('status')) keypath = keypath.replace('.status', '');\n\n                if (keypath === domainUrl && change.name === 'status' && change.newValue === STATUS.CREATED) {\n                  // log.log('[Registry - resolve] protostub is live ' + _this.protostubsList[domainUrl]);\n                  resolve(_this.protostubsList[domainUrl].url);\n                }\n              });\n\n              if (!registredComponent || registredComponent.status === STATUS.FAILED) {\n                // lets deploy the protostub\n                Registry_log.info('[Registry.resolve] trigger new ProtocolStub: ', domainUrl);\n\n                _this.loader.loadStub(domainUrl).then(function () {// log.log('[Registry - resolveNormalStub] Stub deployed: ', _this.protostubsList[domainUrl]);\n                })[\"catch\"](function (reason) {\n                  Registry_log.error('[Registry.resolveNormalStub] Error resolving Load ProtocolStub: ', reason);\n                  reject(reason);\n                });\n              }\n            }\n          }\n        })[\"catch\"](function (reason) {\n          Registry_log.error('[Registry.resolve] Error resolving islegacy: ', reason);\n          reject(reason);\n        });\n      });\n    }\n    /**\n    * To verify if source is valid and to resolve target runtime url address if needed (eg protostub runtime url in case the message is to be dispatched to a remote endpoint).\n    * @param  {URL.URL}  url       url\n    * @return {Promise<URL.URL>}                 Promise <URL.URL>\n    */\n\n  }, {\n    key: \"resolve\",\n    value: function resolve(msg) {\n      Registry_log.info('[Registry - Resolve] -  ', msg);\n\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        var url = msg.to ? msg.to : msg;\n        var p2p = msg.body && msg.body.p2p ? msg.body.p2p : false; // log.log('P2P: ', p2p, url);\n        // log.log('P2P - p2pHandlerStub: ', !_this.p2pHandlerStub[_this.runtimeURL], _this.p2pHandlerStub, _this.runtimeURL);\n        // log.log('P2P - isBackendServiceURL: ', isBackendServiceURL(url), isBackendServiceURL, url);\n        // log.log('P2P - includes runtimeURL: ', url.includes(_this.runtimeURL));\n        // log.log('P2P - includes p2phandler: ', url.includes('/p2phandler/'));\n        // log.log('P2P - includes p2prequester: ', url.includes('/p2prequester/'));\n        // Skip p2p procedure when not supported by the Runtime or for backend services\n\n        if (!_this.p2pHandlerStub[_this.runtimeURL] || isBackendServiceURL(url) || url.includes(_this.runtimeURL) || url.includes('/p2phandler/') || url.includes('/p2prequester/')) {\n          Registry_log.info('[Registry - resolve] - Resolve normal stub: ', _this.p2pHandlerStub, _this.runtimeURL, isBackendServiceURL(url), p2p, url);\n\n          _this.resolveNormalStub(url).then(function (returnURL) {\n            resolve(returnURL);\n          });\n        } else {\n          Registry_log.info('[Registry - resolve] - checkP2P: ', p2p, url, _this._p2pConnectionResolve);\n\n          _this._p2pConnectionResolve.checkP2P(msg).then(function (registeredP2P) {\n            // log.log('[Registry - resolve] found registered P2P: ', registeredP2P);\n            var p2pConnection = _this.p2pConnectionList[registeredP2P.runtime];\n\n            if (!p2pConnection) {\n              p2pConnection = registeredP2P;\n              _this.p2pConnectionList[registeredP2P.runtime] = p2pConnection;\n            }\n\n            switch (p2pConnection.status) {\n              case STATUS.LIVE:\n                msg.body.peer = registeredP2P.runtime;\n                resolve(p2pConnection.url, msg);\n                break;\n\n              case STATUS.CREATED: // p2p connection setup is ongoing, use MN Stub\n\n              case STATUS.PROGRESS:\n                _this.resolveNormalStub(url).then(function (returnURL) {\n                  resolve(returnURL);\n                });\n\n                break;\n\n              case STATUS.DISCONNECTED:\n                // p2p connection stub was disconnected, let's ask to connect again\n                Registry_log.info('[Registry - Resolve] - p2pConnection is disconnected lets try to reconnect');\n\n                _this._p2pConnectionResolve.reconnectP2PRequester(p2pConnection).then(function (returnURL) {\n                  // log.log('[Registry - Resolve] - was reconnected with p2pRequesterStubt: ', returnURL);\n                  resolve(returnURL);\n                }, function (reason) {\n                  Registry_log.info('[Registry - Resolve] - Reason: ', reason);\n\n                  _this.resolveNormalStub(url).then(function (returnURL) {\n                    resolve(returnURL);\n                  });\n                });\n\n                break;\n\n              default:\n                Registry_log.info('[Registry - resolve] - P2P: ', p2p);\n\n                if (!p2p) {\n                  // no p2p connection exists and the message sender does not ask one. Lets use the MN Stub\n                  _this.resolveNormalStub(url).then(function (returnURL) {\n                    resolve(returnURL);\n                  });\n                } else {\n                  _this._setupP2PRequester(registeredP2P).then(function (returnURL) {\n                    // no p2p connection exists but the message sender is asking one. Lets try to setup one\n                    resolve(returnURL);\n                  }, function (reason) {\n                    Registry_log.info('[Registry - Resolve] - Reason: ', reason);\n\n                    _this.resolveNormalStub(url).then(function (returnURL) {\n                      resolve(returnURL);\n                    });\n                  });\n                }\n\n                break;\n            }\n          }, function (reason) {\n            Registry_log.info('[Registry - Resolve] - Reason: ', reason);\n\n            _this.resolveNormalStub(url).then(function (returnURL) {\n              resolve(returnURL);\n            });\n          });\n        }\n      });\n    }\n  }, {\n    key: \"_setupP2PRequester\",\n    value: function _setupP2PRequester(input) {\n      var _this = this;\n\n      Registry_log.log('[Registry._setupP2PConnection] loadStub with p2pRequester: ', input);\n      return new Promise(function (resolve, reject) {\n        var remoteRuntime = input.runtime;\n        var p2pConfig = {\n          remoteRuntimeURL: remoteRuntime,\n          p2pHandler: input.p2pHandler,\n          p2pRequesterStub: true\n        }; // lets prepare the p2pRequesterSTub deployment by setting an observer to its status changes\n\n        _this.watchingYou.observe('p2pRequesterStub', function (change) {\n          Registry_log.log('[Registry._setupP2PConnection] p2pRequesterStubs changed ' + _this.p2pRequesterStub);\n\n          if (change.keypath.split('.')[0] === remoteRuntime && change.name === 'status' && change.newValue === STATUS.LIVE) {\n            Registry_log.log('[Registry._setupP2PConnection] p2pRequester is live ' + _this.p2pRequesterStub[remoteRuntime]);\n            resolve(_this.p2pRequesterStub[remoteRuntime].url);\n          }\n        }); //  stub load\n\n\n        _this.loader.loadStub(input.p2pRequester, p2pConfig).then(function () {\n          Registry_log.log('[Registry._setupP2PConnection] p2pRequester deployed: ', _this.p2pRequesterStub[remoteRuntime]);\n        })[\"catch\"](function (error) {\n          reject(error);\n        });\n      });\n    }\n    /**\n    * To verify if url is for a legacy service.\n    * @param  {URL.URL}  url      url\n    * @return {boolean}\n    */\n\n  }, {\n    key: \"isLegacy\",\n    value: function isLegacy(url) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        if (url === _this._domain) {\n          return resolve(false);\n        }\n\n        Registry_log.log('[Registry] [Registry.Registry.isLegacy] ', url); // TODO: to be defined in the runtime configuration\n\n        var nonLegacy = ['hyperty-runtime', 'domain', 'global', 'hyperty'];\n        var urlDivided = divideURL(url);\n\n        if (nonLegacy.indexOf(urlDivided.type) !== -1 || urlDivided.domain === _this._domain) {\n          return resolve(false);\n        } // process User URLs\n\n\n        if (url.split('@').length > 1) {\n          var domain = urlDivided.domain; // log.log('[Registry] [Registry.Registry.isLegacy] domain: ', domain);\n\n          if (_this.idpLegacyProxyList.hasOwnProperty(domain)) {\n            var result = _this.idpLegacyProxyList[domain];\n\n            if (result.interworking) {\n              return resolve(result.interworking);\n            } else {\n              return resolve(false);\n            }\n          }\n\n          _this._loader.descriptors.getIdpProxyDescriptor(domain).then(function (result) {\n            // log.log('[Registry] [Registry.Registry.isLegacy] Legacy stub descriptor: ', result);\n            if (result.interworking) {\n              _this.idpLegacyProxyList[domain] = result;\n              resolve(result.interworking);\n            } else {\n              resolve(false);\n            }\n          })[\"catch\"](function (reason) {\n            Registry_log.warn('problem loading idp proxy descriptor for domain:', domain, ' because ', reason);\n            reject(reason);\n          });\n        } else {\n          // process protostub URLs\n          resolve(_this.isInterworkingProtoStub(url));\n        }\n      });\n    }\n    /**\n    * To verify if URL is locally registered or not.\n    * @param  {URL.URL}  url      url\n    * @return {boolean}\n    */\n\n  }, {\n    key: \"isLocal\",\n    value: function isLocal(url) {\n      var runtimeScheme = ['hyperty-runtime', 'runtime'];\n      var hypertyScheme = ['hyperty'];\n      var urlScheme = url.split('://')[0]; // Process Runtime Core URLs.\n      // Messages originated from protostubs should also not include the runtimeURL in its URL.\n\n      if (runtimeScheme.indexOf(urlScheme) !== -1) {\n        return url.includes(this.runtimeURL);\n      } // Process Hyperty URLs\n      // Todo: hypertiesList should be an object not an array\n\n\n      if (hypertyScheme.indexOf(urlScheme) !== -1) {\n        for (var index in this.hypertiesList) {\n          var hyperty = this.hypertiesList[index];\n\n          if (hyperty.hypertyURL === url) {\n            return true;\n          }\n        }\n\n        return false;\n      } // Process Data Object URLs\n\n\n      if (url.includes('/subscription')) {\n        url = url.substring(0, url.indexOf('/subscription'));\n      }\n\n      var dataObject = this.dataObjectList[url];\n\n      if (dataObject) {\n        if (dataObject.interworking) {\n          return !dataObject.interworking;\n        }\n\n        return true;\n      }\n\n      return false;\n    }\n    /**\n    * To verify if protostub is to interwork with a legacy domain.\n    * @param  {URL.URL}  runtimeProtostubURL      The runtime URL of the Protostub\n    * @return {boolean}\n    */\n\n  }, {\n    key: \"isInterworkingProtoStub\",\n    value: function isInterworkingProtoStub(runtimeProtostubURL) {\n      var _this = this;\n\n      if (typeof runtimeProtostubURL === 'boolean') {\n        return false;\n      }\n\n      if (!runtimeProtostubURL.includes('/protostub/')) {\n        return false;\n      }\n\n      var filtered = Object.keys(_this.protostubsList).filter(function (key) {\n        return _this.protostubsList[key].url === runtimeProtostubURL;\n      }).map(function (key) {\n        if (_this.protostubsList[key].hasOwnProperty('interworking')) {\n          return _this.protostubsList[key].interworking;\n        } else {\n          return false;\n        }\n      })[0];\n      return filtered;\n    }\n  }, {\n    key: \"loader\",\n    set: function set(loader) {\n      var _this = this;\n\n      _this._loader = loader;\n    },\n    get: function get() {\n      var _this = this;\n\n      return _this._loader;\n    }\n    /**\n    * return the messageBus in this Registry\n    * @param {MessageBus}           messageBus\n    */\n\n  }, {\n    key: \"messageBus\",\n    get: function get() {\n      var _this = this;\n\n      return _this._messageBus;\n    }\n    /**\n    * Set the messageBus in this Registry\n    * @param {MessageBus}           messageBus\n    */\n    ,\n    set: function set(messageBus) {\n      var _this = this;\n\n      _this._messageBus = messageBus;\n\n      _this._messageBus.addListener(_this.registryURL, function (msg) {\n        // log.log('[Registry listener] ', msg);\n        var isHyperty = utils_isHypertyURL(msg.from);\n        var hasCriteria = msg.body.hasOwnProperty('criteria');\n        var isURLResource;\n        var isUserResource;\n        var isHypertyResource;\n\n        if (msg.body.hasOwnProperty('resource') && msg.body.resource !== '.') {\n          isURLResource = isURL(msg.body.resource);\n          isUserResource = isUserURL(msg.body.resource);\n          isHypertyResource = utils_isHypertyURL(msg.body.resource);\n        }\n\n        var isDelete = msg.type === 'delete';\n        var hasName;\n        var hasUser;\n\n        if (msg.body.hasOwnProperty('value')) {\n          hasName = msg.body.value.hasOwnProperty('name');\n          hasUser = msg.body.value.hasOwnProperty('user');\n        }\n\n        if (msg.type === 'response') {\n          Registry_log.error('[Register listener] skipping ', msg);\n          return;\n        } // msg sent by identity manager library\n\n\n        var userUrl = _this._getIdentityAssociated(msg.body.resource, msg.body.criteria);\n\n        var reply = {\n          id: msg.id,\n          type: 'response',\n          to: msg.from,\n          from: msg.to,\n          body: {\n            resource: userUrl\n          }\n        };\n        reply.body.code = userUrl ? 200 : 404;\n\n        _this._messageBus.postMessage(reply);\n      }); // Install AddressAllocation\n\n\n      var addressAllocation = allocation_AddressAllocation.instance;\n      _this.addressAllocation = addressAllocation;\n      _this._domainRegistration = new registry_DomainRegistration(_this.runtimeURL, _this.registryURL, _this._domain, messageBus); // log.log('[Registry - AddressAllocation] - ', addressAllocation);\n    }\n  }]);\n\n  return Registry;\n}();\n\n/* harmony default export */ var registry_Registry = (Registry_Registry);\n// CONCATENATED MODULE: ./src/runtime/runtimeConfiguration.js\nvar runtimeConfiguration_runtimeConfiguration = {\n  // TODO this should be changed with the definition used for indexeddb\n  // look at: https://developer.mozilla.org/en-US/docs/Web/API/IDBObjectStore\n  // Now we are using the definition for Dexie; (http://dexie.org/docs/Version/Version.stores())\n  storageSchemas: {\n    capabilities: {\n      capabilities: 'key,version,value'\n    },\n    subscriptions: {\n      subscriptions: 'key,version,value'\n    },\n    runtime: {\n      'runtime:URL': 'key,version,value',\n      'p2pHandler:URL': 'key,version,value'\n    },\n    registry: {\n      'registry:DataObjectURLs': 'key,version,value',\n      'registry:HypertyURLs': 'key,version,value'\n    },\n    cryptoManager: {\n      userAsymmetricKey: 'key,version,value',\n      dataObjectSessionKeys: 'key,version,value'\n    },\n    identity: {\n      accessTokens: 'key,version,value',\n      identities: 'userURL, userProfile.email, userProfile.userURL, userProfile.name'\n    },\n    runtimeCatalogue: {\n      runtimeCatalogue: '&cguid, accessControlPolicy, constraints, dataObjects, type, objectName, sourcePackage, version, url'\n    },\n    policy: {\n      'rethink:activePolicy': 'key,version,value',\n      'rethink:groups': 'key,version,value',\n      'rethink:userPolicies': 'key,version,value',\n      'rethink:spPolicies': 'key,version,value'\n    },\n    syncherManager: {\n      'syncherManager:ObjectURLs': 'key,version,value',\n      'remotes': 'key,version,value'\n    },\n    hypertyResources: {\n      hypertyResources: '&resourceURL, name, contentUrl, content, created, reporter, resourceType'\n    }\n  },\n  runtimeURLS: {\n    registry: {\n      prefix: 'hyperty-runtime://',\n      suffix: 'registry'\n    },\n    identityModule: {\n      prefix: 'hyperty-runtime://',\n      suffix: '/idm'\n    },\n    runtimeUA: {\n      prefix: 'hyperty-runtime://',\n      suffix: '/ua'\n    },\n    catalogue: {\n      prefix: 'hyperty-runtime://',\n      suffix: '/catalogue'\n    },\n    graphConnector: {\n      prefix: 'hyperty-runtime://',\n      suffix: '/graph'\n    },\n    syncManager: {\n      prefix: 'hyperty-runtime://',\n      suffix: '/sm'\n    }\n  },\n  catalogueURLs: {\n    protocolstub: {\n      prefix: 'hyperty-catalogue://catalogue.',\n      suffix: '/.well-known/protocolstub/',\n      fallback: 'hyperty-catalogue://catalogue.%domain%/.well-known/protocolstub/'\n    },\n    idpProxy: {\n      prefix: 'hyperty-catalogue://catalogue.',\n      suffix: '/.well-known/idp-proxy/',\n      fallback: 'hyperty-catalogue://catalogue.%domain%/.well-known/idp-proxy/'\n    }\n  },\n  msgNodeURL: {\n    prefix: 'domain://msg-node.',\n    suffix: '',\n    hypertyAddressAllocation: '/hyperty-address-allocation',\n    objectAddressAllocation: '/object-address-allocation',\n    subscriptionManagement: '/sm'\n  },\n  domainRegistryURL: {\n    prefix: 'domain://registry.',\n    suffix: ''\n  },\n  globalRegistryURL: 'global://registry.',\n  remoteStorage: 'https://admin:admin@backup.rethink-dev.alticelabs.com'\n};\n// CONCATENATED MODULE: ./src/identity/Identities.js\nfunction Identities_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction Identities_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Identities_createClass(Constructor, protoProps, staticProps) { if (protoProps) Identities_defineProperties(Constructor.prototype, protoProps); if (staticProps) Identities_defineProperties(Constructor, staticProps); return Constructor; }\n\n// Log System\n\nvar Identities_log = loglevel[\"getLogger\"]('IdentityModule');\n\n\n/**\n* The Identity Data Model is used to model the reTHINK User entity. The Identity data model is handled by Identity Management functionality.\n*\n*/\n\nvar Identities_Identities =\n/*#__PURE__*/\nfunction () {\n  function Identities(type, storageManager) {\n    Identities_classCallCheck(this, Identities);\n\n    var _this = this;\n\n    _this._watchingYou = new utils_WatchingYou();\n    _this._storageManager = storageManager;\n    _this._guid;\n    _this._type = type;\n    _this._identities = {};\n    _this._accessTokens = _this.watchingYou.watch('accessTokens', {}, true);\n  }\n\n  Identities_createClass(Identities, [{\n    key: \"reset\",\n    value: function reset() {\n      this._identities = {};\n      console.log(this);\n      this.currentIdentity = undefined;\n      this.defaultIdentity = undefined;\n    }\n  }, {\n    key: \"getIdentity\",\n    value: function getIdentity(identifier) {\n      return Object.assign({}, this._identities[identifier]);\n    }\n  }, {\n    key: \"loadIdentities\",\n    value: function loadIdentities() {\n      var _this = this;\n\n      return new Promise(function (resolve) {\n        _this._storageManager.get(null, null, 'identities').then(function (identities) {\n          Identities_log.info('[Identities.Load Identities] identities: ', identities);\n\n          if (identities) {\n            _this._identities = identities; // let's set as default identity the one that expires later\n\n            _this.identifiers.forEach(function (id) {\n              var timeNow = secondsSinceEpoch();\n              var identity = _this._identities[id];\n              var expires = identity.expires; //            if (!identity.hasOwnProperty('interworking')\n              //            || !identity.interworking) {\n\n              _this.defaultIdentity = id;\n\n              if (parseInt(expires) > timeNow) {\n                _this.defaultIdentity.expires = parseInt(expires);\n                _this.currentIdentity = id;\n              }\n            });\n          }\n\n          resolve();\n        });\n      });\n    }\n  }, {\n    key: \"loadAccessTokens\",\n    value: function loadAccessTokens() {\n      var _this = this;\n\n      return new Promise(function (resolve) {\n        _this._storageManager.get('accessTokens').then(function (accessTokens) {\n          if (accessTokens) _this._accessTokens = accessTokens;\n          resolve();\n        });\n      });\n    } // to confirm if this function is required when the App constraints the identity selection\n\n  }, {\n    key: \"addIdentity\",\n    value: function addIdentity(identity) {\n      var _this2 = this;\n\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        if (_this._isValid(identity)) {\n          var id = identity.identifiers[0];\n          Object.assign(_this2._identities[id], identity);\n\n          _this2._storeIdentity(identity).then(function () {\n            _this2._identities[id].status = 'created';\n            resolve();\n          });\n        } else {\n          reject('[Identities.addIdentity] invalid IdAssertion');\n        }\n      });\n    }\n  }, {\n    key: \"addAssertion\",\n    value: function addAssertion(assertion) {\n      var _this3 = this;\n\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        if (_this._isValid(assertion)) {\n          assertion.userProfile.guid = _this._guid;\n          var userUrl = assertion.userProfile.userURL;\n          if (!_this.identities[userUrl]) _this._identities[userUrl] = assertion;else _this.identities[userUrl] = assertion;\n\n          _this._store().then(function () {\n            _this3._identities[userUrl].status = 'created';\n\n            if (_this.defaultIdentity == false) {\n              _this.defaultIdentity = userUrl;\n            }\n\n            resolve(assertion);\n          });\n        } else {\n          reject('[Identities.addAssertion] invalid IdAssertion: ', assertion);\n        }\n      });\n    }\n  }, {\n    key: \"removeIdentity\",\n    value: function removeIdentity(userUrl) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        delete _this.identities[userUrl];\n\n        _this._store().then(function () {\n          resolve();\n        });\n      });\n    }\n  }, {\n    key: \"addAccessToken\",\n    value: function addAccessToken(accessToken) {\n      var _this = this;\n\n      Identities_log.info('[Identities.addAccessToken] ', accessToken);\n      return new Promise(function (resolve, reject) {\n        if (_this._isValidAccessToken(accessToken)) {\n          //        let newAccessToken = deepClone(accessToken);\n          _this._accessTokens[accessToken.domain] = accessToken;\n\n          _this._storeAccessTokens().then(function () {\n            _this._accessTokens[accessToken.domain].status = 'created';\n            resolve(accessToken);\n          });\n        } else {\n          reject('[Identities.addIdentity] invalid AccessToken: ', accessToken);\n        }\n      });\n    }\n  }, {\n    key: \"setAccessTokenInProgress\",\n    value: function setAccessTokenInProgress(domain) {\n      if (this._accessTokens[domain]) this._accessTokens[domain].status = 'in-progress';else this._accessTokens[domain] = {\n        status: 'in-progress'\n      };\n    }\n  }, {\n    key: \"getAccessToken\",\n    value: function getAccessToken(domain, resources) {\n      var accessToken = this._accessTokens[domain];\n\n      if (!accessToken) {\n        return undefined;\n      } else if (resources.every(function (i) {\n        return accessToken.resources.indexOf(i) != -1;\n      })) {\n        return this._accessTokens[domain];\n      } else {\n        return new Error('[Identities.getAccessToken] Not found for ', domain);\n      }\n    }\n  }, {\n    key: \"removeAccessToken\",\n    value: function removeAccessToken(domain, resources) {\n      var _this4 = this;\n\n      var _this = this;\n\n      return new Promise(function (resolve) {\n        var accessToken = _this4._accessTokens[domain];\n\n        if (!accessToken) {\n          resolve();\n        } else if (resources.every(function (i) {\n          return accessToken.resources.indexOf(i) != -1;\n        })) {\n          delete _this4._accessTokens[domain];\n\n          _this._storeAccessTokens().then(function () {\n            resolve();\n          });\n        } else {\n          resolve();\n        }\n      });\n    }\n  }, {\n    key: \"updateAssertion\",\n    value: function updateAssertion(assertion) {\n      var _this = this;\n\n      return new Promise(function (resolve) {\n        var userUrl = assertion.userProfile.userURL;\n\n        if (!_this.identities[userUrl]) {\n          return reject('[Identities.updateAssertion] Identity not found for ', userUrl);\n        } else {\n          _this.identities[userUrl] = assertion;\n\n          _this._store().then(function () {\n            resolve();\n          });\n        }\n      });\n    }\n  }, {\n    key: \"updateAccessToken\",\n    value: function updateAccessToken(accessToken) {\n      var _this = this;\n\n      Identities_log.info('[Identities.updateAccessToken] ', accessToken);\n      return new Promise(function (resolve, reject) {\n        if (_this._isValidAccessToken(accessToken)) {\n          _this._accessTokens[accessToken.domain].expires = accessToken.expires;\n          _this._accessTokens[accessToken.domain].accessToken = accessToken.accessToken;\n\n          _this._storeAccessTokens().then(function () {\n            _this._accessTokens[accessToken.domain].status = 'created';\n            resolve(accessToken);\n          });\n        } else {\n          reject('[Identities.updateAccessToken] invalid AccessToken: ', accessToken);\n        }\n      });\n    }\n  }, {\n    key: \"addIdAssertion\",\n    value: function addIdAssertion(identifier, assertion, idp, scope) {\n      var _this = this;\n\n      var newIdAssertion = new IdAssertion(assertion, idp, scope);\n\n      _this.idAssertionList.push(newIdAssertion);\n    } //TODO: complete with more verifications. To be moved to Identity?\n\n  }, {\n    key: \"_isValid\",\n    value: function _isValid(identity) {\n      if (!identity.hasOwnProperty('assertion')) {\n        return false;\n      }\n\n      var splitedAssertion = identity.assertion.split('.');\n      var assertionParsed; //verify if the token contains the 3 components, or just the assertion\n\n      try {\n        if (splitedAssertion[1]) {\n          assertionParsed = decode(splitedAssertion[1]);\n        } else {\n          assertionParsed = decode(identity.assertion);\n        }\n      } catch (err) {\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"_isValidAccessToken\",\n    value: function _isValidAccessToken(accessToken) {\n      if (!accessToken.hasOwnProperty('accessToken')) {\n        return false;\n      }\n\n      if (!accessToken.hasOwnProperty('domain')) {\n        return false;\n      }\n\n      if (!(accessToken.hasOwnProperty('resources') && Array.isArray(accessToken.resources))) {\n        return false;\n      }\n\n      if (!(accessToken.hasOwnProperty('expires') && Number.isInteger(accessToken.expires))) {\n        return false;\n      }\n\n      if (!accessToken.hasOwnProperty('input')) {\n        return false;\n      }\n\n      return true;\n    } //TODO: add function to only set one new identity using the new indexed storage manager\n\n  }, {\n    key: \"_store\",\n    value: function _store() {\n      var _this5 = this;\n\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        var store = Object.keys(_this5._identities).map(function (userURL) {\n          return _this._storageManager.set(userURL, 0, _this5._identities[userURL], 'identities');\n        });\n        Promise.all(store).then(function () {\n          resolve();\n        })[\"catch\"](function (err) {\n          reject('On _sendReporterSessionKey from method storeIdentity error: ' + err);\n        });\n      });\n    }\n  }, {\n    key: \"_storeAccessTokens\",\n    value: function _storeAccessTokens() {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        var accessTokens = deepClone(_this._accessTokens);\n\n        _this._storageManager.set('accessTokens', 0, accessTokens).then(function () {\n          resolve();\n        })[\"catch\"](function (err) {\n          reject('On _sendReporterSessionKey from method storeIdentity error: ' + err);\n        });\n      });\n    }\n  }, {\n    key: \"identities\",\n    get: function get() {\n      return this._identities;\n    }\n  }, {\n    key: \"accessTokens\",\n    get: function get() {\n      return this._accessTokens;\n    }\n  }, {\n    key: \"watchingYou\",\n    get: function get() {\n      return this._watchingYou;\n    }\n  }, {\n    key: \"guid\",\n    set: function set(guid) {\n      this._guid = guid;\n    },\n    get: function get() {\n      return this._guid;\n    }\n  }, {\n    key: \"defaultIdentity\",\n    set: function set(identifier) {\n      if (this.identities[identifier]) this._defaultIdentity = identifier;else throw new Error('[Identities.set defaultIdentity ] Error: identity does not exist here: ', identifier);\n    },\n    get: function get() {\n      if (this._defaultIdentity) return Object.assign({}, this.identities[this._defaultIdentity]);else return false;\n    }\n  }, {\n    key: \"currentIdentity\",\n    set: function set(identifier) {\n      if (this.identities[identifier]) this._currentIdentity = identifier;else throw '[Identities.set currentIdentity ] Error: identity does not exist here: ', identifier;\n    },\n    get: function get() {\n      return Object.assign({}, this.identities[this._currentIdentity]);\n    }\n  }, {\n    key: \"identifiers\",\n    get: function get() {\n      return Object.keys(this._identities);\n    }\n  }]);\n\n  return Identities;\n}(); // move to Identity service framework?\n\n\nvar IdAssertion =\n/*#__PURE__*/\nfunction () {\n  function IdAssertion(assertion, idp, userProfile) {\n    Identities_classCallCheck(this, IdAssertion);\n\n    var _this = this;\n\n    _this._assertion = assertion;\n    _this._idp = idp;\n    _this._userProfile = userProfile;\n  }\n\n  Identities_createClass(IdAssertion, [{\n    key: \"assertion\",\n    get: function get() {\n      return this._assertion;\n    }\n  }, {\n    key: \"idp\",\n    get: function get() {\n      return this._idp;\n    }\n  }, {\n    key: \"userProfile\",\n    get: function get() {\n      return this._userProfile;\n    }\n  }]);\n\n  return IdAssertion;\n}();\n\nvar IdValidation =\n/*#__PURE__*/\nfunction () {\n  function IdValidation(identity, contents) {\n    Identities_classCallCheck(this, IdValidation);\n\n    var _this = this;\n\n    _this.identity = identity;\n    _this.contents = contents;\n  }\n\n  Identities_createClass(IdValidation, [{\n    key: \"validates\",\n    value: function validates(identity, contents) {//TODO implement the logic\n    }\n  }]);\n\n  return IdValidation;\n}();\n\n/* harmony default export */ var identity_Identities = (Identities_Identities);\n// CONCATENATED MODULE: ./src/identity/GuiFake.js\nfunction GuiFake_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n// Log System\n\nvar GuiFake_log = loglevel[\"getLogger\"]('IdentityModule');\n/**\n* fake class for the gui to select the identity,\n* TODO replace with the proper identity GUI\n*\n*/\n\nvar GuiFake = function GuiFake(url, messageBus) {\n  GuiFake_classCallCheck(this, GuiFake);\n\n  GuiFake_log.log('FakeGUI_deployed');\n\n  var _this = this;\n\n  _this._url = url;\n  _this._waitTime = 10000;\n  _this._messageBus = messageBus;\n\n  _this._messageBus.addListener(_this._url, function (msg) {\n    if (msg.hasOwnProperty('type') && msg.type === 'create' && msg.body.hasOwnProperty('value') && msg.body.value.hasOwnProperty('identities') && msg.body.value.hasOwnProperty('idps')) {\n      var identities = msg.body.value.identities;\n      var idps = msg.body.value.idps;\n      var value;\n\n      if (identities[0] !== undefined) {\n        value = {\n          type: 'identity',\n          value: identities[0],\n          code: 200\n        };\n      } else {\n        value = {\n          type: 'idp',\n          value: idps[2].domain,\n          code: 200\n        };\n      }\n\n      var replyMsg = {\n        id: msg.id,\n        type: 'response',\n        to: msg.from,\n        from: msg.to,\n        body: value\n      }; // to test on the identity side the listener without the timeout\n      // can represent the time the user takes to choose and identity\n\n      if (msg.body.value === 'wait') {\n        setTimeout(function () {\n          _this._messageBus.postMessage(replyMsg);\n        }, _this._waitTime);\n      } else {\n        _this._messageBus.postMessage(replyMsg);\n      }\n    } else {\n      GuiFake_log.log('Ignoring messages not intended to FakeGUI.', msg);\n    }\n  });\n};\n\n/* harmony default export */ var identity_GuiFake = (GuiFake);\n// CONCATENATED MODULE: ./src/identity/IdentityModule.js\nfunction IdentityModule_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction IdentityModule_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction IdentityModule_createClass(Constructor, protoProps, staticProps) { if (protoProps) IdentityModule_defineProperties(Constructor.prototype, protoProps); if (staticProps) IdentityModule_defineProperties(Constructor, staticProps); return Constructor; }\n\n// Log System\n\nvar IdentityModule_log = loglevel[\"getLogger\"]('IdentityModule');\n\n\n\n\n/**\n*\n* The Identity Module (Id Module) is the component responsible for handling the\n* user identity and the association of this identity with the Hyperty instances,\n* in order to make Hyperty instances identifiable. The identity in the reTHINK project\n* is not fixed to a unique Identity Service Provider, but obtained through several\n* different Identity sources. With this approach, the Id Module provides to the user the\n* option to choose the preferred method for authentication.\n* This module will thus able to support multiple Identity acquisition methods,\n* such as OpenID connect 1.0, Kerberos System, or authentication through smart cards.\n* For example, a user with a Google account can use the Google as an Identity Provider to provide Identity Tokens,\n*  which can be used by the Identity Module to associate it with a Hyperty instance.\n*\n* The Identity Module uses a node package, the HelloJS, which is a client-side JavaScript API for authentication\n* that facilitates the requests for the OpenID connect protocol. This method allows for some abstraction\n* when making requests for different Identity Providers, such as OpenID connect used by Google, Facebook, Microsoft, for example.\n*\n* When a request for a user identity is made using the method loginWithRP(identifier, scope),\n* this method will analyse the Identity Provider chosen to obtain an identity and will use the HelloJS node package\n* with the selected Identity Provider and identity scope. After the HelloJS request for an Access Token\n* to the Identity Providers, the user will be prompted to authenticate towards the Identity Provider.\n* Upon receiving the Access Token, this token is validated with a RESTful web service request to an endpoint\n* on the Identity Provider Authorization Server, and after the validation is done,\n* an ID token is obtained with the information according to the scope required.\n* This ID token is then preserved in this module that can obtained through the getIdentities()\n* and is passed as return value of the loginWithRP function. The methods generateAssertion and validateAssertion have not yet been developed.\n*\n*/\n\nvar IdentityModule_IdentityModule =\n/*#__PURE__*/\nfunction () {\n  /**\n  * This is the constructor to initialise the Identity Module it does not require any input.\n  */\n  function IdentityModule(runtimeURL, runtimeCapabilities, storageManager, dataObjectsStorage, cryptoManager, runtimeCatalogue) {\n    IdentityModule_classCallCheck(this, IdentityModule);\n\n    var _this = this;\n\n    if (!runtimeURL) throw new Error('runtimeURL is missing.');\n    if (!storageManager) throw new Error('storageManager is missing');\n    if (!cryptoManager) throw new Error('cryptoManager is missing');\n    if (!runtimeCatalogue) throw new Error('runtimeCatalogue is missing');\n    _this._runtimeURL = runtimeURL;\n    _this._runtimeCatalogue = runtimeCatalogue;\n    _this.dataObjectsStorage = dataObjectsStorage;\n    _this._idmURL = _this._runtimeURL + '/idm';\n    _this._guiURL = _this._runtimeURL + '/identity-gui';\n    _this.runtimeCapabilities = runtimeCapabilities;\n    _this._domain = divideURL(_this._runtimeURL).domain; //to store items with this format: {identity: identityURL, token: tokenID}\n\n    _this._identities = new identity_Identities('human', storageManager); // to be reviewed: watchingYou identitiesList or identities?\n    //    _this.identitiesList = _this.watchingYou.watch('identitiesList', {}, true);\n\n    _this._crypto = cryptoManager;\n    /*    _this.emailsList = [];\n    let newIdentity = new Identity('guid', 'HUMAN');\n    _this.identity = newIdentity;\n    _this.currentIdentity;\n    _this.identities.defaultIdentity;*/\n    //stores the association of the dataObject and the Hyperty registered within\n\n    _this.dataObjectsIdentity = {}; // is this needed?\n\n    _this._listOfIdps = []; // variable to know if the GUI is deployed to choose the identity. if the real GUI is not deployed, a fake gui is deployed instead.\n\n    _this.guiDeployed = false;\n  } //******************* GET AND SET METHODS *******************\n\n  /**\n  * return the messageBus in this Registry\n  * @param {MessageBus}           messageBus\n  */\n\n\n  IdentityModule_createClass(IdentityModule, [{\n    key: \"getIdentity\",\n    //******************* IDENTITY RELEATED METHODS *******************\n\n    /**\n    * gets all the information from a given userURL\n    * @param  {String}  userURL     user url\n    * @return {JSON}    identity    identity bundle from the userURL\n    */\n    value: function getIdentity(userURL) {\n      return this.identities.getIdentity(userURL);\n    }\n    /**\n    * Function to set the current Identity with a given Identity\n    * @param {Identity}        identity         identity\n    */\n\n    /*  setCurrentIdentity(identity) {\n      let _this = this;\n      _this.currentIdentity = identity;\n    }*/\n\n    /**\n    * Function to return all the identities registered within a session by a user.\n    * These identities are returned in an array containing a JSON package for each user identity.\n    * @return {Array<Identities>}         Identities\n    */\n\n  }, {\n    key: \"getIdentitiesToChoose\",\n    value: function getIdentitiesToChoose() {\n      var _this2 = this;\n\n      //    let identities = _this.identities.identifiers;\n      // let idps = [\n      //   { domain: 'google.com', type: 'idToken'},\n      //   { domain: 'microsoft.com', type: 'idToken'},\n      //   { domain: 'orange.fr', type: 'idToken'},\n      //   { domain: 'slack.com', type: 'Legacy'}\n      // ];\n      // todo: retrieve available idps from runtime catalogue\n      // todo: enable oauth idps\n      // let idps = [\n      //   { domain: 'google.com', type: 'idToken' },\n      //   { domain: 'microsoft.com', type: 'idToken' },\n      //   { domain: 'facebook.com', type: 'idToken' },\n      //   { domain: 'slack.com', type: 'idToken' }\n      // ];\n      return new Promise(function (resolve) {\n        var url = runtimeConfiguration_runtimeConfiguration.catalogueURLs.idpProxy.prefix + _this2._domain + runtimeConfiguration_runtimeConfiguration.catalogueURLs.idpProxy.suffix;\n        Promise.all([_this2.runtimeCapabilities.isAvailable('browser'), _this2.runtimeCapabilities.isAvailable('node')]).then(function (result) {\n          var isBrowser = result[0];\n          var isNode = result[1];\n          var constraints = {\n            constraints: {}\n          };\n          constraints.constraints.node = isNode;\n          constraints.constraints.browser = isBrowser;\n\n          _this2._runtimeCatalogue.getTypeList(url, constraints).then(function (idps) {\n            var listOfIdps = idps.map(function (key) {\n              return {\n                domain: key,\n                type: 'idToken'\n              };\n            });\n            IdentityModule_log.info('[IdentityModule.getIdentityAssertion:getIdentitiesToChoose]', idps, listOfIdps);\n            _this2._listOfIdps = listOfIdps;\n            return resolve({\n              defaultIdentity: _this2.identities.defaultIdentity,\n              identities: _this2.identities.identities,\n              idps: listOfIdps\n            });\n          });\n        });\n      });\n    }\n    /**\n    * Function to return the selected Identity within a session\n    * @return {Identity}        identity         identity\n    */\n\n    /*  getCurrentIdentity() {\n      let _this = this;\n      return _this.currentIdentity;\n    }*/\n\n  }, {\n    key: \"init\",\n    value: function init(guid) {\n      var _this = this;\n\n      return new Promise(function (resolve) {\n        _this._identities.loadIdentities().then(function () {\n          if (!guid) {\n            _this._crypto.getMyPublicKey().then(function (key) {\n              var hash = _this._crypto.crypto._sha256(stringify(key)).then(function (hash) {\n                guid = 'user-guid://' + hash;\n                _this.identities.guid = guid;\n\n                _this._identities.loadAccessTokens().then(function () {\n                  resolve();\n                });\n              })[\"catch\"](function (error) {\n                console.log('[IdentityModule] error', error);\n              });\n            });\n          } else {\n            _this.identities.guid = guid;\n\n            _this._identities.loadAccessTokens().then(function () {\n              resolve();\n            });\n          }\n        });\n      });\n    }\n    /**\n    * Function that fetch an identityAssertion from a user.\n    *\n    * @return {IdAssertion}              IdAssertion\n    */\n\n  }, {\n    key: \"getIdentityAssertion\",\n    value: function getIdentityAssertion(identityBundle) {\n      IdentityModule_log.log('[IdentityModule.getIdentityAssertion:identityBundle]', identityBundle);\n\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        //CHECK whether is browser environment or nodejs\n        //if it is browser, then create a fake identity\n        _this.runtimeCapabilities.isAvailable('browser').then(function (result) {\n          IdentityModule_log.log('runtime browser identity acquisition', result);\n          if (!result) return; //todo: only idp should be mandatory when identityBundle exists\n\n          if (identityBundle && identityBundle.hasOwnProperty('idp')) {\n            var idp = identityBundle.idp;\n            var origin = identityBundle.hasOwnProperty('origin') ? identityBundle.origin : 'origin';\n            var idHint = identityBundle.hasOwnProperty('idHint') ? identityBundle.idHint : '';\n\n            if (_this.identities.defaultIdentity) {\n              var assertion = _this.identities.defaultIdentity;\n\n              if (assertion.expires > secondsSinceEpoch()) {\n                return resolve(assertion);\n              } else if (assertion.hasOwnProperty('refresh')) {\n                IdentityModule_log.log('[Identity.IdentityModule.getIdentityAssertion] refreshing assertion: ', assertion);\n\n                _this._refreshIdAssertion().then(function (newAssertion) {\n                  IdentityModule_log.log('[IdentityModule.getIdentityAssertion] refreshed assertion.', newAssertion);\n                  return resolve(newAssertion);\n                }, function (error) {\n                  IdentityModule_log.error('[IdentityModule.getIdentityAssertion] error on refresIdAssertion: ', error, ' Asking for a new IdAssertion.');\n\n                  _this._getIdAssertionForDomain(origin, idp, idHint).then(function (assertion) {\n                    resolve(assertion);\n                  }, function (error) {\n                    reject(error);\n                  });\n                });\n              } else {\n                _this._getIdAssertionForDomain(origin, idp, idHint).then(function (assertion) {\n                  resolve(assertion);\n                }, function (error) {\n                  reject(error);\n                });\n              }\n            } else {\n              _this._getIdAssertionForDomain(origin, idp, idHint).then(function (assertion) {\n                resolve(assertion);\n              }, function (error) {\n                reject(error);\n              });\n            }\n          } else if (_this.identities.defaultIdentity) {\n            var _assertion = _this.identities.defaultIdentity;\n\n            if (_assertion.expires > secondsSinceEpoch()) {\n              return resolve(_assertion);\n            } else if (_assertion.hasOwnProperty('refresh')) {\n              IdentityModule_log.log('[Identity.IdentityModule.getValidToken] refreshing assertion: ', _assertion);\n\n              _this._refreshIdAssertion(_assertion).then(function (newAssertion) {\n                IdentityModule_log.log('[IdentityModule.getIdentityAssertion] refreshed assertion.', newAssertion);\n                return resolve(newAssertion);\n              }, function (error) {\n                IdentityModule_log.error('[IdentityModule.getIdentityAssertion] error on refresIdAssertion: ', error, ' Asking for a new IdAssertion.');\n\n                _this.selectIdentityFromGUI().then(function (assertion) {\n                  IdentityModule_log.log('[IdentityModule] Identity selected from GUI.');\n                  _this.identities.defaultIdentity = assertion.userProfile.userURL;\n                  return resolve(assertion);\n                }, function (err) {\n                  return reject(err);\n                });\n              });\n            } else {\n              _this.selectIdentityFromGUI().then(function (assertion) {\n                IdentityModule_log.log('[IdentityModule] Identity selected from GUI.');\n                _this.identities.defaultIdentity = assertion.userProfile.userURL;\n                return resolve(assertion);\n              }, function (err) {\n                return reject(err);\n              });\n            }\n          } else {\n            _this.selectIdentityFromGUI().then(function (assertion) {\n              IdentityModule_log.log('[IdentityModule] Identity selected from GUI.');\n              _this.identities.defaultIdentity = assertion.userProfile.userURL;\n              return resolve(assertion);\n            }, function (err) {\n              return reject(err);\n            });\n          }\n        })[\"catch\"](function (error) {\n          IdentityModule_log.error('Error on identity acquisition ', error);\n          return reject(error);\n        });\n\n        _this.runtimeCapabilities.isAvailable('node').then(function (result) {\n          IdentityModule_log.log('node identity acquisition', result);\n          if (!result) return;\n\n          if (_this.identities.currentIdentity) {\n            //TODO verify whether the token is still valid or not.\n            // should be needed to make further requests, to obtain a valid token\n            return resolve(_this.identities.currentIdentity);\n          } else {\n            IdentityModule_log.log('getIdentityAssertion for nodejs');\n            var idp = {\n              type: 'idp',\n              value: 'nodejs-idp',\n              code: 200,\n              auth: false\n            };\n\n            _this.callNodeJsGenerateMethods(idp.value, 'origin').then(function (value) {\n              resolve(value);\n            }, function (err) {\n              reject(err);\n            });\n          }\n        })[\"catch\"](function (error) {\n          IdentityModule_log.error('Error on identity acquisition ', error);\n          reject(error);\n        });\n      });\n    }\n  }, {\n    key: \"_getIdAssertionForDomain\",\n    value: function _getIdAssertionForDomain(origin, idp, idHint) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        _this.selectIdentityForHyperty(origin, idp, idHint).then(function (assertion) {\n          IdentityModule_log.log('[IdentityModule._getIdAssertionForDomain] Identity selected by hyperty.');\n          return resolve(assertion);\n        }, function (err) {\n          // if it got an error then just select identity from GUI\n          // log.error('[IdentityModule] Could not select identity from hyperty.');\n          _this.selectIdentityFromGUI().then(function (newAssertion) {\n            IdentityModule_log.log('[IdentityModule._getIdAssertionForDomain] Identity selected by hyperty.');\n            return resolve(newAssertion);\n          }, function (err) {\n            return reject(err);\n          });\n        });\n      });\n    }\n  }, {\n    key: \"_refreshIdAssertion\",\n    value: function _refreshIdAssertion(assertion) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        _this.sendRefreshMessage(assertion).then(function (newAssertion) {\n          IdentityModule_log.log('[Identity.IdentityModule.getValidToken] refreshed assertion: ', newAssertion);\n\n          _this.identities.updateAssertion(newAssertion).then(function () {\n            resolve(newAssertion);\n          }, function (err) {\n            IdentityModule_log.error('[IdentityModule.getValidToken] error updating the assertion ', err);\n            reject(err);\n          });\n        }, function (err) {\n          IdentityModule_log.error('[IdentityModule.getValidToken] error refreshing the assertion ', err);\n          reject(err);\n        });\n      });\n    }\n    /**\n    * Function to return all the users URLs registered within a session\n    * These users URLs are returned in an array of strings.\n    * @return {Array<String>}         users\n    */\n\n  }, {\n    key: \"getUsersIDs\",\n    value: function getUsersIDs() {\n      /*  log.log('[getUsersIDs:emailFormat]', emailFormat);\n        log.log('getUsersIDs:emailFormat', emailFormat);\n        let _this = this;\n        let users = [];*/\n      //if request comes with the emailFormat option, then convert url to email format\n\n      /*    let converter = (emailFormat) ? getUserEmailFromURL : (value) => { return value; };\n       for (let index in _this.identities) {\n        let identity = _this.identities[index];\n        users.push(converter(identity.identity));\n      }*/\n      return this.identities.identifiers;\n    }\n    /**\n    * Function to remove an identity\n    * @param {String}    userURL      userURL\n    * @return {Promise}\n    */\n\n  }, {\n    key: \"deleteIdentity\",\n    value: function deleteIdentity(userURL) {\n      return this.identities.removeIdentity(userURL);\n    }\n    /**\n    * Function to unregister an identity from the emailsList array and not show in to the GUI\n    * @param {String}    email      email\n    */\n\n    /*  unregisterIdentity(email) {\n      let _this = this;\n       for (let e in _this.emailsList) {\n        if (_this.emailsList[e] === email) {\n          _this.emailsList.splice(e, 1);\n        }\n      }\n    }*/\n    // to be used when runtime is not executed in a sandbox\n\n  }, {\n    key: \"listenShowAdmin\",\n    value: function listenShowAdmin(callback) {\n      this._showAdmin = callback;\n    }\n    /**\n    * Function that sends a request to the GUI using messages. Sends all identities registered and\n    * the Idps supported, and return the identity/idp received by the GUI\n    * @param {Array<identity>}  identities      list of identitiies\n    * @param {Array<String>}    idps            list of idps to authenticate\n    * @return {Promise}         returns a chosen identity or idp\n    */\n\n  }, {\n    key: \"requestIdentityToGUI\",\n    value: function requestIdentityToGUI(identities, idps) {\n      IdentityModule_log.log('[IdentityModule.requestIdentityToGUI:identities]', identities);\n      IdentityModule_log.log('[IdentityModule.requestIdentityToGUI:idps]', idps);\n\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        //condition to check if the real GUI is deployed. If not, deploys a fake gui\n        if (_this.guiDeployed === false) {\n          var guiFakeURL = _this._guiURL;\n          var guiFake = new identity_GuiFake(guiFakeURL, _this._messageBus);\n          _this.guiFake = guiFake;\n          _this.guiDeployed = true;\n        }\n\n        var message = {\n          type: 'create',\n          to: _this._guiURL,\n          from: _this._idmURL,\n          body: {\n            value: {\n              identities: identities,\n              idps: idps\n            }\n          }\n        };\n\n        var callback = function callback(msg) {\n          _this._messageBus.removeResponseListener(_this._idmURL, msg.id); // todo: to return the user URL and not the email or identifier\n\n\n          if (msg.body.code === 200) {\n            var selectedIdentity = msg.body;\n            IdentityModule_log.log('selectedIdentity: ', selectedIdentity.value);\n            resolve(selectedIdentity);\n          } else {\n            reject('error on requesting an identity to the GUI');\n          }\n        }; //postMessage with callback but without timeout\n\n\n        try {\n          _this._messageBus.postMessage(message, callback, false);\n        } catch (err) {\n          reject('In method callIdentityModuleFunc error: ' + err);\n        }\n      });\n    }\n  }, {\n    key: \"callNodeJsGenerateMethods\",\n    value: function callNodeJsGenerateMethods(idp, origin) {\n      IdentityModule_log.log('[callNodeJsGenerateMethods:idp]', idp);\n      IdentityModule_log.log('[callNodeJsGenerateMethods:origin]', origin);\n\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        //debugger;\n        var publicKey; //let keyPair = nodeJSKeyPairPopulate;\n        //generates the RSA key pair\n\n        _this._crypto.getMyPublicKey().then(function (key) {\n          IdentityModule_log.log('[callNodeJsGenerateMethods:key]', key);\n          publicKey = stringify(key);\n          IdentityModule_log.log('[callNodeJsGenerateMethods] NO_URL');\n          return _this.generateAssertion(publicKey, origin, 'url', idp);\n        }).then(function (value) {\n          if (value) {\n            resolve(value);\n          } else {\n            reject('Error on obtaining Identity');\n          }\n        })[\"catch\"](function (err) {\n          IdentityModule_log.log(err);\n          reject(err);\n        });\n      });\n    }\n  }, {\n    key: \"callGenerateMethods\",\n    value: function callGenerateMethods(idp, origin) {\n      IdentityModule_log.log('[callGenerateMethods:idp]', idp);\n      IdentityModule_log.log('[callGenerateMethods:origin]', origin);\n\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        var publicKey; //generates the RSA key pair\n\n        _this._crypto.getMyPublicKey().then(function (key) {\n          IdentityModule_log.log('[callGenerateMethods:key]', key);\n          publicKey = stringify(key); //        userkeyPair = keyPair;\n\n          IdentityModule_log.log('generateAssertion:no_hint');\n          return _this.generateAssertion(publicKey, origin, '', idp);\n        }).then(function (url) {\n          _this.myHint = url;\n          IdentityModule_log.log('generateAssertion:hint');\n          return _this.generateAssertion(publicKey, origin, url, idp);\n        }).then(function (value) {\n          if (value) {\n            resolve(value);\n          } else {\n            reject('Error on obtaining Identity');\n          }\n        })[\"catch\"](function (err) {\n          IdentityModule_log.error(err);\n          reject(err);\n        });\n      });\n    }\n  }, {\n    key: \"loginSelectedIdentity\",\n    value: function loginSelectedIdentity(publicKey, origin, idp, loginUrl) {\n      IdentityModule_log.log('[loginSelectedIdentity:publicKey]', publicKey);\n      IdentityModule_log.log('[loginSelectedIdentity:origin]', origin);\n      IdentityModule_log.log('[loginSelectedIdentity:idp]', idp); //    log.log('[loginSelectedIdentity:keyPair]', keyPair);\n\n      IdentityModule_log.log('[loginSelectedIdentity:loginUrl]', loginUrl);\n\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        IdentityModule_log.log('[IdentityModule] openPopup');\n\n        _this.callIdentityModuleFunc('openPopup', {\n          urlreceived: loginUrl\n        }).then(function (idCode) {\n          return idCode;\n        }, function (err) {\n          IdentityModule_log.error('Error while logging in for the selected identity.');\n          return reject(err);\n        }).then(function (idCode) {\n          _this.sendGenerateMessage(publicKey, origin, idCode, idp).then(function (newResponse) {\n            if (newResponse.hasOwnProperty('assertion')) {\n              _this.identities.addAssertion(newResponse).then(function (result) {\n                resolve('Login was successfull');\n              })[\"catch\"](function (err) {\n                reject('Login has failed:' + err);\n              });\n            } else {\n              IdentityModule_log.error('Error while logging in for the selected identity.');\n              return reject('Could not generate a valid assertion for selected identity.');\n            }\n          })[\"catch\"](function (err) {\n            reject('On loginSelectedIdentity from method sendGenerateMessage error:  ' + err);\n          });\n        });\n      });\n    }\n  }, {\n    key: \"selectIdentityForHyperty\",\n    value: function selectIdentityForHyperty(origin, idp, idHint) {\n      IdentityModule_log.log('[selectIdentityForHyperty:origin]', origin);\n      IdentityModule_log.log('[selectIdentityForHyperty:idp]', idp);\n      IdentityModule_log.log('[selectIdentityForHyperty:idHint]', idHint);\n\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        //generates the RSA key pair\n        _this._crypto.getMyPublicKey().then(function (key) {\n          var publicKey = stringify(key);\n\n          _this.sendGenerateMessage(publicKey, origin, idHint, idp).then(function (response) {\n            if (response.hasOwnProperty('assertion')) {\n              // identity was logged in, just save it\n              _this.identities.addAssertion(response).then(function (value) {\n                return resolve(response);\n              }, function (err) {\n                return reject(err);\n              });\n            } else if (response.hasOwnProperty('loginUrl')) {\n              // identity was not logged in\n              _this.loginSelectedIdentity(publicKey, origin, idp, response.loginUrl).then(function (value) {\n                return resolve(value);\n              }, function (err) {\n                return reject(err);\n              });\n            } else {\n              // you should never get here, if you do then the IdP Proxy is not well implemented\n              // log.error('GenerateAssertion returned invalid response.');\n              IdentityModule_log.log('Proceeding by logging in.');\n\n              _this.callGenerateMethods(idp, origin).then(function (value) {\n                return resolve(value);\n              }, function (err) {\n                return reject(err);\n              });\n            }\n          })[\"catch\"](function (err) {\n            reject('On selectIdentityForHyperty from method sendGenerateMessage error:  ' + err);\n          });\n        })[\"catch\"](function (err) {\n          reject('On selectIdentityForHyperty from method generateRSAKeyPair error:  ' + err);\n        });\n      });\n    }\n  }, {\n    key: \"selectIdentityFromGUI\",\n    value: function selectIdentityFromGUI(origin) {\n      var _this3 = this;\n\n      IdentityModule_log.log('[IdentityModule.selectIdentityFromGUI:origin]', origin);\n\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        _this3.getIdentitiesToChoose().then(function (identitiesInfo) {\n          return _this.requestIdentityToGUI(identitiesInfo.identities, identitiesInfo.idps);\n        }).then(function (value) {\n          if (value.type === 'identity') {\n            //  let chosenID = getUserURLFromEmail(value.value);\n            // hack while the user url is not returned from requestIdentityToGUI;\n\n            /*          let chosenID = 'user://' + _this.identities.currentIdentity.idp.domain + '/' + value.value;\n             _this.identities.defaultIdentity = _this.identities.currentIdentity;*/\n            // returns the identity info from the chosen id\n            //          if (_this.identities.currentIdentity) resolve(_this.identities.currentIdentity.assertion);\n            if (_this.identities.identities[value.value]) resolve(_this.identities.identities[value.value]);else reject('[IdentityModule.selectIdentityFromGUI] identity not found: ', value.value);\n          } else if (value.type === 'idp') {\n            _this.callGenerateMethods(value.value, origin).then(function (value) {\n              return resolve(value);\n            }, function (err) {\n              return reject(err);\n            });\n          } else {\n            return reject('error on GUI received message.');\n          }\n        })[\"catch\"](function (err) {\n          reject('On selectIdentityFromGUI from method requestIdentityToGUI error:  ' + err);\n        });\n      });\n    }\n  }, {\n    key: \"callIdentityModuleFunc\",\n    value: function callIdentityModuleFunc(methodName, parameters, domain, resource) {\n      IdentityModule_log.log('[callIdentityModuleFunc:methodName]', methodName);\n      IdentityModule_log.log('[callIdentityModuleFunc:parameters]', parameters);\n\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        if (_this._showAdmin) {\n          if (methodName === 'getAccessToken') {\n            _this._showAdmin(methodName, parameters.urlreceived, domain, resource).then(function (result) {\n              resolve(result);\n            });\n          } else _this._showAdmin(methodName);\n        } else {\n          var message = {\n            type: 'execute',\n            to: _this._guiURL,\n            from: _this._idmURL,\n            body: {\n              resource: 'identity',\n              method: methodName,\n              params: parameters\n            }\n          }; //post msg with callback but without timout\n\n          var callback = function callback(msg) {\n            _this._messageBus.removeResponseListener(_this._idmURL, msg.id);\n\n            var result = msg.body.value;\n            resolve(result);\n          };\n\n          try {\n            _this._messageBus.postMessage(message, callback, false);\n          } catch (err) {\n            reject('In method callIdentityModuleFunc error: ' + err);\n          }\n        }\n      });\n    } //******************* TOKEN METHODS *******************\n\n    /**\n    * get a Token to be added to a message\n    * @param  {String}  fromURL     origin of the message\n    * @param  {String}  toURL     target of the messageok\n    * @return {JSON}    token    token to be added to the message\n    */\n\n  }, {\n    key: \"getToken\",\n    value: function getToken(msg) {\n      var _this = this;\n\n      var fromURL = msg.from;\n      var toUrl = msg.to;\n\n      if (msg.hasOwnProperty('body') && msg.body.hasOwnProperty('source')) {\n        fromURL = msg.body.source;\n      }\n\n      if (msg.type === 'forward') {\n        fromURL = msg.body.from;\n      }\n\n      if (msg.hasOwnProperty('body') && msg.body.hasOwnProperty('subscriber')) {\n        fromURL = msg.body.subscriber;\n      }\n\n      return new Promise(function (resolve, reject) {\n        IdentityModule_log.log('[IdentityModule.getToken] for msg ', msg); //log.log('toUrl', toUrl);\n\n        _this.registry.isLegacy(toUrl).then(function (result) {\n          // log.log('[Identity.IdentityModule.getToken] isLEGACY: ', result);\n          if (result) {\n            _this._getAccessToken(msg).then(function (token) {\n              IdentityModule_log.log('[IdentityModule.getToken] access token ', token);\n              resolve(deepClone(token));\n            })[\"catch\"](function (err) {\n              reject('[IdentityModule.getToken] Access Token error ' + err);\n            });\n          } else {\n            _this._getValidToken(fromURL).then(function (token) {\n              resolve(token);\n            })[\"catch\"](function (err) {\n              reject('On getToken from method _getValidToken error: ' + err);\n            });\n          }\n        })[\"catch\"](function (err) {\n          reject('On getToken from method isLegacy error: ' + err);\n        });\n      });\n    }\n    /**\n    * get an Id Token for a HypertyURL\n    * @param  {String}  hypertyURL     the Hyperty address\n    * @return {JSON}    token    Id token to be added to the message\n    */\n\n  }, {\n    key: \"getIdToken\",\n    value: function getIdToken(hypertyURL) {\n      IdentityModule_log.info('getIdToken:hypertyURL ', hypertyURL);\n\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        var splitURL = hypertyURL.split('://');\n        var userURL;\n\n        if (splitURL[0] !== 'hyperty') {\n          // it is a Data Object URL\n          _this._getHypertyFromDataObject(hypertyURL).then(function (returnedHypertyURL) {\n            userURL = _this.registry.getHypertyOwner(returnedHypertyURL);\n\n            if (userURL) {\n              var _identity = _this.identities.getIdentity(userURL);\n\n              if (_identity) return resolve(_identity);else return reject('[IdentityModule.getIdToken] Identity not found for: ', userURL);\n            } else {\n              return reject('[IdentityModule.getIdToken] User not found for hyperty: ', returnedHypertyURL);\n            }\n          })[\"catch\"](function (reason) {\n            IdentityModule_log.error('[IdentityModule.getIdToken] Error: ', reason);\n            reject(reason);\n          });\n        } else {\n          userURL = _this.registry.getHypertyOwner(hypertyURL);\n\n          if (userURL) {\n            var _identity2 = _this.identities.getIdentity(userURL);\n\n            if (_identity2) return resolve(_identity2);else return reject('[IdentityModule.getIdToken] Identity not found for: ', userURL);\n          } else {\n            return reject('[IdentityModule.getIdToken] User not found for hyperty: ', userURL);\n          }\n        }\n      });\n    }\n    /**\n    * get an Access Token for an external API\n    * @param  {String}  url     the external url\n    * @return {JSON}    token    Access token to be added to the message\n    */\n\n  }, {\n    key: \"_getAccessToken\",\n    value: function _getAccessToken(msg) {\n      var url = msg.to;\n\n      var _this = this;\n\n      return new Promise(function (resolve) {\n        if (!msg.hasOwnProperty('body')) {\n          return reject('[IdentityModule._getAccessToken] missing mandatory msg body: ', msg);\n        }\n\n        if (!msg.body.hasOwnProperty('value')) {\n          return reject('[IdentityModule._getAccessToken] missing mandatory msg body value: ', msg);\n        }\n\n        if (!msg.body.value.hasOwnProperty('resources')) {\n          return reject('[IdentityModule._getAccessToken] missing mandatory msg body value resources: ', msg);\n        }\n\n        var domainToCheck = divideURL(url).domain;\n\n        if (url.includes('protostub')) {\n          domainToCheck = domainToCheck.replace(domainToCheck.split('.')[0] + '.', '');\n        }\n\n        var resources = msg.body.value.resources;\n\n        _this._getAccessTokenForDomain(domainToCheck, resources).then(function (token) {\n          resolve(token);\n        });\n      });\n    }\n  }, {\n    key: \"_getAccessTokenForDomain\",\n    value: function _getAccessTokenForDomain(domainToCheck, resources) {\n      var _this = this;\n\n      var token;\n      return new Promise(function (resolve, reject) {\n        try {\n          token = _this.identities.getAccessToken(domainToCheck, resources);\n        } catch (e) {\n          return reject('[IdentityModule._getAccessTokenForDomain] Access Token error ' + err);\n        }\n\n        if (!token) {\n          _this._getNewAccessToken(domainToCheck, resources).then(function (token) {\n            IdentityModule_log.log('[Identity.IdentityModule._getAccessTokenForDomain] new Access Token ', token);\n            return resolve(token);\n          })[\"catch\"](function (err) {\n            reject('[IdentityModule._getAccessTokenForDomain] on getNewAccessToken ' + err);\n          });\n        } else if (token.status === 'in-progress') {\n          return resolve(_this._inProgressAccessToken(domainToCheck, resources));\n        } else {\n          var timeNow = secondsSinceEpoch();\n          IdentityModule_log.log('[Identity.IdentityModule._getAccessTokenForDomain] found  Access Token ', token);\n\n          if (timeNow >= token.expires) {\n            //        if (true) {\n            if (token.hasOwnProperty(\"refresh\")) {\n              _this._refreshAccessToken(deepClone(token)).then(function (newToken) {\n                return resolve(_this.identities.updateAccessToken(newToken));\n              });\n            } else {\n              _this._revokeAccessToken(token, domainToCheck, resources).then(function () {\n                setTimeout(function () {\n                  return _this._getNewAccessToken(domainToCheck, resources);\n                }, 1000);\n              });\n            }\n          } else return resolve(deepClone(token));\n        }\n      });\n    }\n  }, {\n    key: \"_revokeAccessToken\",\n    value: function _revokeAccessToken(token, domain, resources) {\n      var _this = this; //    let domain = _this._resolveDomain(oldIdentity.idp);\n      //    let message;\n      //    let assertion = _this.getIdentity(oldIdentity.userProfile.userURL);\n\n\n      IdentityModule_log.log('[IdentityModule._revokeAccessToken] to be revoked ', token);\n      return new Promise(function (resolve, reject) {\n        //      let domain = _this._resolveDomain(token.domain);\n        var message;\n        message = {\n          type: 'execute',\n          to: _this._resolveDomain(token.domain),\n          from: _this._idmURL,\n          body: {\n            method: 'revokeAccessToken',\n            params: {\n              token: token\n            }\n          }\n        };\n        IdentityModule_log.log('[IdentityModule._revokeAccessToken] revoke msg ', message);\n\n        try {\n          _this._messageBus.postMessage(message, function (res) {\n            var result = res.body.value;\n            if (result) _this._identities.removeAccessToken(domain, resources).then(function () {\n              resolve(result);\n            });\n            resolve();\n          });\n        } catch (err) {\n          reject('In IdentityModule._revokeAccessToken on postMessage error: ' + err);\n        }\n      });\n    }\n  }, {\n    key: \"_inProgressAccessToken\",\n    value: function _inProgressAccessToken(domain, resources) {\n      var _this4 = this;\n\n      this.identities.watchingYou.observe('accessTokens', function (change) {\n        IdentityModule_log.log('[IdentityModule._inProgressAccessToken] accessTokens changed ' + _this4.identities.accessTokens);\n        var keypath = change.keypath;\n\n        if (keypath.includes('status')) {\n          keypath = keypath.replace('.status', '');\n        }\n\n        if (keypath === domain && change.name === 'status' && change.newValue === 'created') {\n          // log.log('[Identity.IdentityModule.getToken] token is created ' + _this.identitiesList[domain]);\n          return _this4.identities.getAccessToken(domain, resources);\n        }\n      });\n    }\n  }, {\n    key: \"_getNewAccessToken\",\n    value: function _getNewAccessToken(domain, resources) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        _this.identities.setAccessTokenInProgress(domain);\n\n        var message = {\n          type: 'execute',\n          to: _this._resolveDomain(domain),\n          from: _this._idmURL,\n          body: {\n            method: 'getAccessTokenAuthorisationEndpoint',\n            params: resources\n          }\n        }; //let's first get the authorisation URL from the Idp Proxy\n\n        _this._messageBus.postMessage(message, function (res) {\n          if (res.body.code > 299) {\n            return reject('[IdentityModule._getNewAccessToken] Error on getAccessTokenAuthorisationEndpoint from IdP Proxy: ', res.body.desc);\n          } // let's ask the user for authorisation\n\n\n          _this.callIdentityModuleFunc('getAccessToken', {\n            urlreceived: res.body.value\n          }, domain, resources[0]).then(function (authorisation) {\n            IdentityModule_log.log('[IdentityModule:callIdentityModuleFunc:openPopup] auhtorisation result: ', authorisation);\n            message.body.method = 'getAccessToken';\n            message.body.params = {\n              resources: resources,\n              login: authorisation\n            }; //wihtout callback to avoid timeout errors?\n            // let's ask Access Token from the Idp Proxy\n\n            _this._messageBus.postMessage(message, function (res) {\n              if (res.body.code > 299) return reject('[IdentityModule._getNewAccessToken] Error on getAccessToken from IdP Proxy: ', res.body.desc);\n\n              _this.identities.addAccessToken(res.body.value).then(function (token) {\n                IdentityModule_log.info('[IdentityModule._getNewAccessToken] resolving token: ', token);\n                return resolve(res.body.value);\n              }, function (err) {\n                reject(err);\n              });\n            });\n          }, function (err) {\n            reject(err);\n          });\n        });\n      });\n    }\n  }, {\n    key: \"_refreshAccessToken\",\n    value: function _refreshAccessToken(outdatedToken) {\n      var _this = this; //    let domain = _this._resolveDomain(oldIdentity.idp);\n      //    let message;\n      //    let assertion = _this.getIdentity(oldIdentity.userProfile.userURL);\n\n\n      IdentityModule_log.log('IdentityModule._refreshAccessToken:outdatedToken', outdatedToken);\n      return new Promise(function (resolve, reject) {\n        var domain = _this._resolveDomain(outdatedToken.domain);\n\n        var message;\n        message = {\n          type: 'execute',\n          to: domain,\n          from: _this._idmURL,\n          body: {\n            method: 'refreshAccessToken',\n            params: {\n              token: outdatedToken\n            }\n          }\n        };\n\n        try {\n          _this._messageBus.postMessage(message, function (res) {\n            var result = res.body.value;\n            resolve(result);\n          });\n        } catch (err) {\n          reject('In IdentityModule._refreshAccessToken on postMessage error: ' + err);\n        }\n      });\n    }\n  }, {\n    key: \"sendRefreshMessage\",\n    value: function sendRefreshMessage(oldIdentity) {\n      var _this = this; //    let domain = _this._resolveDomain(oldIdentity.idp);\n      //    let message;\n      //    let assertion = _this.getIdentity(oldIdentity.userProfile.userURL);\n\n\n      IdentityModule_log.log('sendRefreshMessage:oldIdentity', oldIdentity);\n      return new Promise(function (resolve, reject) {\n        var domain = _this._resolveDomain(oldIdentity.idp.domain);\n\n        var message;\n\n        var assertion = _this.getIdentity(oldIdentity.userProfile.userURL);\n\n        IdentityModule_log.info('sendRefreshMessage:oldIdentity', oldIdentity);\n        message = {\n          type: 'execute',\n          to: domain,\n          from: _this._idmURL,\n          body: {\n            resource: 'identity',\n            method: 'refreshAssertion',\n            params: {\n              identity: assertion\n            }\n          }\n        };\n\n        try {\n          _this._messageBus.postMessage(message, function (res) {\n            if (res.body.code < 300) {\n              var result = res.body.value;\n              resolve(result);\n            } else resolve(res.body.value.body.params, identity);\n          });\n        } catch (err) {\n          reject('In sendRefreshMessage on postMessage error: ' + err);\n        }\n      });\n    }\n  }, {\n    key: \"getAccessToken\",\n    value: function getAccessToken(idpDomain, resources, login) {\n      IdentityModule_log.log('[getAccessToken:idpDomain]', idpDomain);\n\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        var domain = _this._resolveDomain(idpDomain);\n\n        var message;\n        message = {\n          type: 'execute',\n          to: domain,\n          from: _this._idmURL,\n          body: {\n            resource: 'identity',\n            method: 'getAccessToken',\n            params: {\n              resources: resources,\n              login: login\n            }\n          }\n        };\n\n        try {\n          _this._messageBus.postMessage(message, function (res) {\n            if (res.body.code < 299) {\n              var result = res.body.value;\n              resolve(result);\n            } else resolve(res.body);\n          });\n        } catch (err) {\n          reject('IdentityModule.In getAccessToken: ' + err);\n        }\n      });\n    }\n  }, {\n    key: \"getAccessTokenAuthorisationEndpoint\",\n    value: function getAccessTokenAuthorisationEndpoint(scope, idpDomain) {\n      IdentityModule_log.log('[getAccessTokenAuthorisationEndpoint:idpDomain]', idpDomain);\n\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        var domain = _this._resolveDomain(idpDomain);\n\n        var message;\n        message = {\n          type: 'execute',\n          to: domain,\n          from: _this._idmURL,\n          body: {\n            resource: 'identity',\n            method: 'getAccessTokenAuthorisationEndpoint',\n            params: {\n              resources: scope\n            }\n          }\n        };\n\n        try {\n          _this._messageBus.postMessage(message, function (res) {\n            var result = res.body.value;\n            resolve(result);\n          });\n        } catch (err) {\n          reject('In getAccessTokenAuthorisationEndpoint: ' + err);\n        }\n      });\n    }\n  }, {\n    key: \"sendGenerateMessage\",\n    value: function sendGenerateMessage(contents, origin, usernameHint, idpDomain) {\n      IdentityModule_log.log('[sendGenerateMessage:contents]', contents);\n      IdentityModule_log.log('[sendGenerateMessage:origin]', origin);\n      IdentityModule_log.log('[sendGenerateMessage:usernameHint]', usernameHint);\n      IdentityModule_log.log('[sendGenerateMessage:idpDomain]', idpDomain);\n      IdentityModule_log.log('sendGenerateMessage_hint');\n\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        var domain = _this._resolveDomain(idpDomain);\n\n        var message;\n        message = {\n          type: 'execute',\n          to: domain,\n          from: _this._idmURL,\n          body: {\n            resource: 'identity',\n            method: 'generateAssertion',\n            params: {\n              contents: contents,\n              origin: origin,\n              usernameHint: usernameHint\n            }\n          }\n        };\n\n        try {\n          _this._messageBus.postMessage(message, function (res) {\n            if (res.body.code < 300) resolve(res.body.value);else reject(res.body);\n          });\n        } catch (err) {\n          reject('In sendGenerateMessage: ' + err);\n        }\n      });\n    }\n    /**\n    * Requests the IdpProxy from a given Domain for an identityAssertion\n    *\n    * @param  {DOMString} contents     contents\n    * @param  {DOMString} origin       origin\n    * @param  {DOMString} usernameHint usernameHint\n    * @param  {JSON}      keyPair       user keyPair\n    * @return {IdAssertion}              IdAssertion\n    */\n\n  }, {\n    key: \"generateAssertion\",\n    value: function generateAssertion(contents, origin, usernameHint, idpDomain) {\n      IdentityModule_log.log('[generateAssertion:contents]', contents);\n      IdentityModule_log.log('[generateAssertion:origin]', origin);\n      IdentityModule_log.log('[generateAssertion:usernameHint]', usernameHint); //    log.log('[generateAssertion:keyPair]', keyPair);\n\n      IdentityModule_log.log('[generateAssertion:idpDomain]', idpDomain);\n\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        IdentityModule_log.log('[IdentityModule:sendGenerateMessage:sendGenerateMessage]', usernameHint);\n\n        _this.sendGenerateMessage(contents, origin, usernameHint, idpDomain).then(function (result) {\n          if (result) {\n            _this.identities.addAssertion(result).then(function (value) {\n              resolve(result);\n            }, function (err) {\n              reject(err);\n            });\n          } else {\n            reject('error on obtaining identity information');\n          }\n        }, function (error) {\n          if (error.hasOwnProperty('description') && error.description.hasOwnProperty('loginUrl')) {\n            _this.callIdentityModuleFunc('login', {\n              urlreceived: error.description.loginUrl\n            }).then(function (value) {\n              IdentityModule_log.log('[IdentityModule:callIdentityModuleFunc:openPopup]', usernameHint);\n              resolve(value);\n            }, function (err) {\n              reject(err);\n            });\n          } else {\n            IdentityModule_log.error('[IdentityModule:sendGenerateMessage] generate assertion with hint error ', error);\n            reject(error);\n          }\n        })[\"catch\"](function (err) {\n          reject('On generateAssertion from method sendGenerateMessage error: ' + err);\n        });\n      });\n    }\n    /**\n    * Requests the IdpProxy from a given Domain to validate an IdentityAssertion\n    * Returns a promise with the result from the validation.\n    * @param  {DOMString} assertion\n    * @param  {DOMString} origin       origin\n    * @return {Promise}         Promise         promise with the result from the validation\n    */\n\n  }, {\n    key: \"validateAssertion\",\n    value: function validateAssertion(assertion, origin, idpDomain) {\n      IdentityModule_log.log('[validateAssertion:assertion]', assertion);\n      IdentityModule_log.log('[validateAssertion:origin]', origin);\n      IdentityModule_log.log('[validateAssertion:idpDomain]', idpDomain);\n\n      var _this = this;\n\n      var domain = _this._resolveDomain(idpDomain);\n\n      var message = {\n        type: 'execute',\n        to: domain,\n        from: _this._idmURL,\n        body: {\n          resource: 'identity',\n          method: 'validateAssertion',\n          params: {\n            assertion: assertion,\n            origin: origin\n          }\n        }\n      };\n      return new Promise(function (resolve, reject) {\n        try {\n          _this._messageBus.postMessage(message, function (result) {\n            if (result.body.code === 200) {\n              resolve(result.body.value);\n            } else {\n              reject('error', result.body.code);\n            }\n          });\n        } catch (err) {\n          reject('On validateAssertion from method postMessage error: ' + err);\n        }\n      });\n    }\n  }, {\n    key: \"addGUIListeners\",\n    value: function addGUIListeners() {\n      var _this = this;\n\n      _this._messageBus.addListener(_this._idmURL, function (msg) {\n        var funcName = msg.body.method;\n        IdentityModule_log.log('[IdentityModule:addGUIListeners]', msg, msg.body, funcName);\n        var returnedValue;\n\n        if (funcName === 'deployGUI') {\n          returnedValue = _this.deployGUI();\n        } else if (funcName === 'getIdentitiesToChoose') {\n          _this.getIdentitiesToChoose().then(function (result) {\n            // if the function requested is not a promise\n            var value = {\n              type: 'execute',\n              value: result,\n              code: 200\n            };\n            var replyMsg = {\n              id: msg.id,\n              type: 'response',\n              to: msg.from,\n              from: msg.to,\n              body: value\n            };\n\n            try {\n              _this._messageBus.postMessage(replyMsg);\n            } catch (err) {\n              IdentityModule_log.error('On addGUIListeners from if storeIdentity method postMessage error: ' + err);\n            }\n          });\n\n          return;\n        } else if (funcName === 'unregisterIdentity') {\n          var email = msg.body.params.email;\n          returnedValue = _this.unregisterIdentity(email);\n        } else if (funcName === 'getMyPublicKey') {\n          // because generateRSAKeyPair is a promise\n          // we have to send the message only after getting the key pair\n          _this._crypto.getMyPublicKey().then(function (pubKey) {\n            pubKey = stringify(pubKey);\n            var value = {\n              type: 'execute',\n              value: pubKey,\n              code: 200\n            };\n            var replyMsg = {\n              id: msg.id,\n              type: 'response',\n              to: msg.from,\n              from: msg.to,\n              body: value\n            };\n\n            try {\n              _this._messageBus.postMessage(replyMsg);\n            } catch (err) {\n              IdentityModule_log.error('On addGUIListeners from if generateRSAKeyPair method postMessage error: ' + err);\n            }\n          });\n\n          return;\n        } else if (funcName === 'sendGenerateMessage') {\n          var contents = msg.body.params.contents;\n          var origin = msg.body.params.origin;\n          var usernameHint = msg.body.params.usernameHint;\n          var idpDomain = msg.body.params.idpDomain;\n          var _replyMsg = {\n            id: msg.id,\n            type: 'response',\n            to: msg.from,\n            from: msg.to\n          };\n\n          _this.sendGenerateMessage(contents, origin, usernameHint, idpDomain).then(function (returnedValue) {\n            var value = {\n              type: 'execute',\n              value: returnedValue,\n              code: 200\n            };\n            _replyMsg.body = value;\n\n            try {\n              _this._messageBus.postMessage(_replyMsg);\n            } catch (err) {\n              IdentityModule_log.error('IdentityModule.addGUIListeners sendGenerateMessage error: ' + err);\n            }\n          }, function (err) {\n            IdentityModule_log.info('IDPProxy generateAssertion reply error ' + err);\n            _replyMsg.body = err;\n\n            _this._messageBus.postMessage(_replyMsg);\n          });\n\n          return;\n        } else if (funcName === 'getAccessTokenAuthorisationEndpoint') {\n          var scope = msg.body.params.scope;\n          var _idpDomain = msg.body.params.idpDomain;\n\n          _this.getAccessTokenAuthorisationEndpoint(scope, _idpDomain).then(function (returnedValue) {\n            var value = {\n              type: 'execute',\n              value: returnedValue,\n              code: 200\n            };\n            var replyMsg = {\n              id: msg.id,\n              type: 'response',\n              to: msg.from,\n              from: msg.to,\n              body: value\n            };\n\n            try {\n              _this._messageBus.postMessage(replyMsg);\n            } catch (err) {\n              IdentityModule_log.error('On addGUIListeners from if sendGenerateMessage method postMessage error: ' + err);\n            }\n          });\n\n          return;\n        } else if (funcName === 'addAccessToken') {\n          var accessToken = msg.body.params;\n\n          _this.identities.addAccessToken(accessToken).then(function (returnedValue) {\n            var value = {\n              type: 'execute',\n              value: returnedValue,\n              code: 200\n            };\n            var replyMsg = {\n              id: msg.id,\n              type: 'response',\n              to: msg.from,\n              from: msg.to,\n              body: value\n            };\n\n            try {\n              _this._messageBus.postMessage(replyMsg);\n            } catch (err) {\n              IdentityModule_log.error('On addGUIListeners from if storeIdentity method postMessage error: ' + err);\n            }\n          });\n\n          return;\n        } else if (funcName === 'getAccessToken') {\n          var domain = msg.body.params.idpDomain;\n          var resources = msg.body.params.resources;\n          var login = msg.body.params.login;\n          var _replyMsg2 = {\n            id: msg.id,\n            type: 'response',\n            to: msg.from,\n            from: msg.to\n          };\n\n          _this.getAccessToken(domain, resources, login).then(function (returnedValue) {\n            var value = {\n              type: 'execute',\n              value: returnedValue,\n              code: 200\n            };\n            _replyMsg2.body = value;\n\n            try {\n              _this._messageBus.postMessage(_replyMsg2);\n            } catch (err) {\n              IdentityModule_log.error('On addGUIListeners from if sendGenerateMessage method postMessage error: ' + err);\n            }\n          }, function (error) {\n            try {\n              _replyMsg2.body = error;\n\n              _this._messageBus.postMessage(_replyMsg2);\n            } catch (err) {\n              IdentityModule_log.error('On addGUIListeners from if sendGenerateMessage method postMessage error: ' + err);\n            }\n          });\n\n          return;\n        } else if (funcName === 'addAssertion') {\n          var result = msg.body.params; //        let keyPair = msg.body.params.keyPair;\n\n          _this.identities.addAssertion(result).then(function (returnedValue) {\n            var value = {\n              type: 'execute',\n              value: returnedValue,\n              code: 200\n            };\n            var replyMsg = {\n              id: msg.id,\n              type: 'response',\n              to: msg.from,\n              from: msg.to,\n              body: value\n            };\n\n            try {\n              _this._messageBus.postMessage(replyMsg);\n            } catch (err) {\n              IdentityModule_log.error('On addGUIListeners from if storeIdentity method postMessage error: ' + err);\n            }\n          });\n\n          return;\n        } else if (funcName === 'refreshAccessToken') {\n          var _domain = msg.body.params.domain;\n          var _resources = msg.body.params.resources;\n\n          _this._getAccessTokenForDomain(_domain, _resources).then(function (token) {\n            var replyMsg = {\n              id: msg.id,\n              type: 'response',\n              to: msg.from,\n              from: msg.to,\n              body: {\n                value: token.accessToken,\n                code: 200\n              }\n            };\n\n            try {\n              _this._messageBus.postMessage(replyMsg);\n            } catch (err) {\n              IdentityModule_log.error('On addGUIListeners for refreshAccessToken request: ' + err);\n            }\n          });\n\n          return;\n        } else if (funcName === 'unauthorise') {\n          var _domain2 = msg.body.params.domain;\n          var _resources2 = msg.body.params.resources;\n\n          try {\n            _this._revokeAccessToken(_this.identities.getAccessToken(_domain2, _resources2), _domain2, _resources2);\n          } catch (e) {\n            return reject('[IdentityModule.addGUIListeners] unauthorise error ' + err);\n          }\n\n          var _replyMsg3 = {\n            id: msg.id,\n            type: 'response',\n            to: msg.from,\n            from: msg.to,\n            body: {\n              value: true,\n              code: 200\n            }\n          };\n\n          try {\n            _this._messageBus.postMessage(_replyMsg3);\n          } catch (err) {\n            IdentityModule_log.error('On addGUIListeners for refreshAccessToken request: ' + err);\n          }\n\n          return;\n        }\n        /*else if (funcName === 'selectIdentityForHyperty') {\n         let origin = msg.body.params.origin;\n         let idp = msg.body.params.idp;\n         let idHint = msg.body.params.idHint;\n         _this.selectIdentityForHyperty(origin, idp, idHint);\n         return;\n        }*/\n        // if the function requested is not a promise\n\n\n        var value = {\n          type: 'execute',\n          value: returnedValue,\n          code: 200\n        };\n        var replyMsg = {\n          id: msg.id,\n          type: 'response',\n          to: msg.from,\n          from: msg.to,\n          body: value\n        };\n\n        try {\n          _this._messageBus.postMessage(replyMsg);\n        } catch (err) {\n          IdentityModule_log.error('On addGUIListeners from if storeIdentity method postMessage error: ' + err);\n        }\n      });\n    }\n  }, {\n    key: \"deployGUI\",\n    value: function deployGUI() {\n      var _this = this;\n\n      _this.guiDeployed = true;\n    } //******************* PRIVATE METHODS *******************\n\n    /**\n     * GetValidToken is for non legacy hyperties and verifies if the Token is still valid\n     * if the token is invalid it requests a new token\n     * @param  {String} hypertyURL hypertyURL\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"_getValidToken\",\n    value: function _getValidToken(hypertyURL) {\n      IdentityModule_log.log('[IdentityModule._getValidToken]:hypertyURL', hypertyURL);\n\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        _this.getIdToken(hypertyURL).then(function (assertion) {\n          IdentityModule_log.log('[IdentityModule._getValidToken] retrieved IdAssertion', assertion);\n          var timeNow = secondsSinceEpoch();\n          if (!assertion.hasOwnProperty('expires')) return resolve(assertion);\n          var expirationDate = assertion.expires;\n          /* if (completeId.hasOwnProperty('info')) {\n            if (completeId.info.hasOwnProperty('expires')) {\n              expirationDate = completeId.info.expires;\n            } else if (completeId.info.hasOwnProperty('tokenIDJSON')) {\n              expirationDate = completeId.info.tokenIDJSON.exp;\n            } else {\n              // throw 'The ID Token does not have an expiration time';\n              log.info('The ID Token does not have an expiration time');\n              resolve(assertion);\n            }\n          } else if (completeId.hasOwnProperty('infoToken') && completeId.infoToken.hasOwnProperty('exp')) {\n            expirationDate = completeId.infoToken.exp;\n          } else {\n            // throw 'The ID Token does not have an expiration time';\n            log.info('The ID Token does not have an expiration time');\n            resolve(assertion);\n          }*/\n\n          IdentityModule_log.log('[Identity.IdentityModule.getValidToken] Token expires in', expirationDate);\n          IdentityModule_log.log('[Identity.IdentityModule.getValidToken] time now:', timeNow);\n\n          if (timeNow >= expirationDate) {\n            //        if (timeNow >= 0) {\n            if (assertion.hasOwnProperty('refresh')) {\n              IdentityModule_log.log('[Identity.IdentityModule.getValidToken] refreshing assertion: ', assertion);\n\n              _this.sendRefreshMessage(assertion).then(function (newAssertion) {\n                IdentityModule_log.log('[Identity.IdentityModule.getValidToken] refreshed assertion: ', newAssertion);\n\n                _this.identities.updateAssertion(newAssertion).then(function () {\n                  resolve(newAssertion);\n                }, function (err) {\n                  IdentityModule_log.error('[IdentityModule.getValidToken] error updating the assertion ', err);\n                  reject(err);\n                });\n              }, function (err) {\n                IdentityModule_log.error('[IdentityModule.getValidToken] error refreshing the assertion ', err);\n                reject(err);\n              });\n            } else {\n              // no refresh token available, user has to authenticate again to get a new assertion\n              // generate new idToken\n              _this.callGenerateMethods(assertion.idp.domain).then(function (value) {\n                resolve(value);\n              })[\"catch\"](function (err) {\n                reject('[IdentityModule.getValidToken] error when generating a new assertion ' + err);\n              });\n            }\n          } else {\n            resolve(assertion);\n          }\n        })[\"catch\"](function (error) {\n          IdentityModule_log.error('[IdentityModule.getValidToken] error on getIdToken', error);\n          reject(error);\n        });\n      });\n    }\n    /**\n    * returns the reporter associated to the dataObject URL\n    * @param   {String}   dataObjectURL         dataObject url\n    * @return   {String}  reporter              dataObject url reporter\n    */\n\n  }, {\n    key: \"_getHypertyFromDataObject\",\n    value: function _getHypertyFromDataObject(dataObjectURL) {\n      IdentityModule_log.info('_getHypertyFromDataObject:dataObjectURL', dataObjectURL);\n\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        var splitedURL = divideURL(dataObjectURL);\n        var domain = splitedURL.domain;\n        var finalURL = parseMessageURL(dataObjectURL); // check if is the creator of the hyperty\n\n        var reporterURL = _this.registry.getReporterURLSynchonous(finalURL);\n\n        IdentityModule_log.info('_getHypertyFromDataObject:reporterURL', reporterURL);\n\n        if (reporterURL) {\n          resolve(reporterURL);\n        } else {\n          // check if there is already an association from an hypertyURL to the dataObject\n          var storedReporterURL = _this.dataObjectsIdentity[finalURL];\n          IdentityModule_log.info('_getHypertyFromDataObject:storedReporterURL', storedReporterURL);\n\n          if (storedReporterURL) {\n            resolve(storedReporterURL);\n          } else {\n            // check if there is any hyperty that subscribed the dataObjectURL\n            var subscriberHyperty = _this.registry.getDataObjectSubscriberHyperty(dataObjectURL);\n\n            IdentityModule_log.info('_getHypertyFromDataObject:subscriberHyperty', subscriberHyperty);\n\n            if (subscriberHyperty) {\n              resolve(subscriberHyperty);\n            } else {\n              // search in domain registry for the hyperty associated to the dataObject\n              // search in case is a subscriber who wants to know the reporter\n              // To be reviewed in order to avoid the discovery transaction\n              _this._coreDiscovery.discoverDataObjectPerURL(finalURL, domain).then(function (dataObject) {\n                IdentityModule_log.info('_getHypertyFromDataObject:dataObject', dataObject);\n                _this.dataObjectsIdentity[finalURL] = dataObject.reporter;\n                IdentityModule_log.info('_getHypertyFromDataObject:dataObject.reporter', dataObject.reporter);\n                resolve(dataObject.reporter);\n              }, function (err) {\n                reject(err);\n              });\n            }\n          }\n        }\n      });\n    }\n    /**\n    * Function that resolve and create the domainURL in case it is provided one. If not, resolve the default domainURL\n    * @param {String}     idpDomain     idpDomain (Optional)\n    */\n\n  }, {\n    key: \"_resolveDomain\",\n    value: function _resolveDomain(idpDomain) {\n      if (!idpDomain) {\n        return 'domain-idp://google.com';\n      } else {\n        return 'domain-idp://' + idpDomain;\n      }\n    }\n    /*\n      _secondsSinceEpoch() {\n        return Math.floor(Date.now() / 1000);\n      }*/\n\n  }, {\n    key: \"messageBus\",\n    get: function get() {\n      var _this = this;\n\n      return _this._messageBus;\n    }\n    /**\n    * Set the messageBus in this Registry\n    * @param {MessageBus}           messageBus\n    */\n    ,\n    set: function set(messageBus) {\n      var _this = this;\n\n      _this._messageBus = messageBus;\n\n      _this.addGUIListeners();\n    }\n    /**\n    * return the coreDiscovery component\n    * do we need this??\n    */\n\n  }, {\n    key: \"coreDiscovery\",\n    get: function get() {\n      var _this = this;\n\n      return _this._coreDiscovery;\n    }\n    /**\n    * Set the coreDiscovery component\n    * @param {coreDiscovery} coreDiscovery\n    */\n    ,\n    set: function set(coreDiscovery) {\n      var _this = this;\n\n      _this._coreDiscovery = coreDiscovery;\n    }\n    /**\n    * return the registry in this idModule\n    * @param {registry}           registry\n    */\n\n  }, {\n    key: \"registry\",\n    get: function get() {\n      var _this = this;\n\n      return _this._registry;\n    }\n    /**\n    * Set the registry in this idModule\n    * @param {registry}     reg\n    */\n    ,\n    set: function set(registry) {\n      var _this = this;\n\n      _this._registry = registry;\n    }\n  }, {\n    key: \"identities\",\n    get: function get() {\n      var _this = this;\n\n      return _this._identities;\n    },\n    set: function set(identities) {\n      var _this = this;\n\n      _this._identities = identities;\n    }\n  }, {\n    key: \"idps\",\n    get: function get() {\n      return this._listOfIdps;\n    }\n  }]);\n\n  return IdentityModule;\n}();\n\n/* harmony default export */ var identity_IdentityModule = (IdentityModule_IdentityModule);\n// CONCATENATED MODULE: ./src/identity/IdentityHandler.js\nfunction IdentityHandler_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction IdentityHandler_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction IdentityHandler_createClass(Constructor, protoProps, staticProps) { if (protoProps) IdentityHandler_defineProperties(Constructor.prototype, protoProps); if (staticProps) IdentityHandler_defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n* Provides an API to manage identities from msg bus pipeline\n* TODO: rename to something like IdentityPipelineHandler in order not to conflict with framework related IdentityHandler\n*/\n\n\nvar IdentityHandler_log = loglevel[\"getLogger\"]('IdentityHandler');\n\nvar IdentityHandler_IdentityHandler =\n/*#__PURE__*/\nfunction () {\n  function IdentityHandler(idm) {\n    IdentityHandler_classCallCheck(this, IdentityHandler);\n\n    var _this = this;\n\n    _this._idm = idm;\n  }\n\n  IdentityHandler_createClass(IdentityHandler, [{\n    key: \"reset\",\n    value: function reset() {\n      console.log('IM reset'); // this._idm.identities.reset();\n\n      this._idm.identities = new identity_Identities(this._idm.identities._type, this._idm.identities._storageManager);\n      console.log(this._idm.identities);\n    }\n  }, {\n    key: \"_isToSetID\",\n    value: function _isToSetID(message) {\n      var schemasToIgnore = ['domain-idp', 'runtime', 'domain'];\n      var _from = message.from;\n\n      if (message.body && message.body.hasOwnProperty('source')) {\n        _from = message.body.source;\n      }\n\n      if (message.body && message.body.hasOwnProperty('subscriber')) {\n        _from = message.body.subscriber;\n      }\n\n      if (message.type === 'forward') {\n        return false;\n      } // Signalling Messages between P2P Stubs don't have Identities. FFS\n\n\n      if (_from.includes('/p2prequester/') || _from.includes('/p2phandler/')) {\n        return false;\n      }\n\n      var splitFrom = _from.split('://');\n\n      var fromSchema = splitFrom[0];\n      var isToIgnore = schemasToIgnore.indexOf(fromSchema) === -1;\n      return isToIgnore;\n    }\n  }, {\n    key: \"processMessage\",\n    value: function processMessage(message) {\n      var _this2 = this;\n\n      IdentityHandler_log.log('[IdentityHandler.processMessage] ', message);\n      return new Promise(function (resolve, reject) {\n        // skip messages that don't need identity tokens in the body\n        if (!_this2._isToSetID(message)) return resolve(message);\n        /*      let from = message.from;\n        let sourceURL = undefined;\n        if ( message.hasOwnProperty('body') && message.body.hasOwnProperty('source')) {\n          from = message.body.source;\n        }\n         if (message.type === 'forward') {\n          from = message.body.from;\n        }\n         if (message.hasOwnProperty('body') && message.body.hasOwnProperty('subscriber')) {\n          from = message.body.subscriber;\n        }*/\n\n        _this2._idm.getToken(message).then(function (identity) {\n          if (!message.hasOwnProperty('body')) message.body = {};\n          message.body.identity = identity;\n          resolve(message);\n        })[\"catch\"](function (reason) {\n          IdentityHandler_log.error(reason);\n          reject(reason);\n        });\n      });\n    }\n  }]);\n\n  return IdentityHandler;\n}();\n\n/* harmony default export */ var identity_IdentityHandler = (IdentityHandler_IdentityHandler);\n// CONCATENATED MODULE: ./src/policy/ActionsService.js\nfunction ActionsService_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction ActionsService_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction ActionsService_createClass(Constructor, protoProps, staticProps) { if (protoProps) ActionsService_defineProperties(Constructor.prototype, protoProps); if (staticProps) ActionsService_defineProperties(Constructor, staticProps); return Constructor; }\n\nvar ActionsService =\n/*#__PURE__*/\nfunction () {\n  function ActionsService(context) {\n    ActionsService_classCallCheck(this, ActionsService);\n\n    this.context = context;\n  }\n\n  ActionsService_createClass(ActionsService, [{\n    key: \"enforcePolicies\",\n    value: function enforcePolicies(message, isIncomingMessage) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        var policies = _this.context.getPolicies(message, isIncomingMessage);\n\n        if (policies !== undefined) {\n          if (policies.serviceProviderPolicy !== undefined) {\n            policies.serviceProviderPolicy.enforceActions(_this.context, message).then(function (messages) {\n              resolve(messages);\n            }, function (error) {\n              reject(error);\n            });\n          } else {\n            if (policies.userPolicy !== undefined) {\n              policies.userPolicy.enforceActions(_this.context, message).then(function (messages) {\n                resolve(messages);\n              }, function (error) {\n                reject(error);\n              });\n            } else {\n              resolve([message]);\n            }\n          }\n        } else {\n          resolve([message]);\n        }\n      });\n    }\n  }, {\n    key: \"forwardToID\",\n    value: function forwardToID(message, email) {\n      var _this = this;\n\n      if (!_this.context.runtimeRegistry) throw new Error('forward message to given ID is unsupported in this environment');\n      return new Promise(function (resolve, reject) {\n        if (_this.context.runtimeRegistry.hypertiesList[0].hypertyURL === message.to) {\n          var splitTo = message.to.split('://');\n\n          if (splitTo[0] !== 'runtime') {\n            _this.context.runtimeRegistry.discoverHypertyPerUser(email).then(function (result) {\n              message.to = result.hypertyURL;\n              message.body.via = undefined;\n              resolve(message);\n\n              _this.context.runtimeRegistry._messageBus.postMessage(message);\n            }, function (error) {\n              reject(error);\n            });\n          } else {\n            resolve(message);\n          }\n        } else {\n          resolve(message);\n        }\n      });\n    }\n  }, {\n    key: \"forwardToHyperty\",\n    value: function forwardToHyperty(message, hypertyURL) {\n      var _this = this;\n\n      if (!_this.context.runtimeRegistry) throw new Error('forward message to given ID is unsupported in this environment');\n      return new Promise(function (resolve) {\n        if (_this.context.runtimeRegistry.hypertiesList[0].hypertyURL === message.to) {\n          var splitTo = message.to.split('://');\n\n          if (splitTo[0] !== 'runtime') {\n            message.to = hypertyURL;\n            message.body.via = undefined;\n            resolve(message);\n\n            _this.context.runtimeRegistry._messageBus.postMessage(message);\n          } else {\n            resolve(message);\n          }\n        } else {\n          resolve(message);\n        }\n      });\n    }\n  }, {\n    key: \"sendAutomaticMessage\",\n    value: function sendAutomaticMessage(message, text) {\n      var _this = this;\n\n      return new Promise(function (resolve) {\n        var automaticMessage = {\n          from: message.to,\n          to: message.from,\n          body: {\n            value: text\n          },\n          type: message.type\n        };\n        resolve(message);\n\n        _this.context.runtimeRegistry._messageBus.postMessage(automaticMessage);\n      });\n    }\n  }]);\n\n  return ActionsService;\n}();\n\n/* harmony default export */ var policy_ActionsService = (ActionsService);\n// CONCATENATED MODULE: ./src/policy/Operators.js\nfunction Operators_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction Operators_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Operators_createClass(Constructor, protoProps, staticProps) { if (protoProps) Operators_defineProperties(Constructor.prototype, protoProps); if (staticProps) Operators_defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Operators =\n/*#__PURE__*/\nfunction () {\n  function Operators() {\n    Operators_classCallCheck(this, Operators);\n  }\n\n  Operators_createClass(Operators, [{\n    key: \"and\",\n    value: function and(params) {\n      return params[0] && params[1];\n    }\n  }, {\n    key: \"between\",\n    value: function between(params) {\n      var start = parseInt(params[0][0]);\n      var end = parseInt(params[0][1]);\n      var now = params[1];\n\n      if (end < start) {\n        now = now < start ? now += 2400 : now;\n        end += 2400;\n      }\n\n      return now > start && now < end;\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(params) {\n      return String(params[0]) === '*' || String(params[0]) === String(params[1]);\n    }\n  }, {\n    key: \"greaterThan\",\n    value: function greaterThan(params) {\n      return params[1] > params[0];\n    }\n  }, {\n    key: \"in\",\n    value: function _in(params) {\n      return params[0].indexOf(params[1]) > -1;\n    }\n  }, {\n    key: \"lessThan\",\n    value: function lessThan(params) {\n      return params[1] < params[0];\n    }\n  }, {\n    key: \"not\",\n    value: function not(params) {\n      return !params[0];\n    }\n  }, {\n    key: \"or\",\n    value: function or(params) {\n      return params[0] || params[1];\n    }\n  }]);\n\n  return Operators;\n}();\n\n/* harmony default export */ var policy_Operators = (Operators);\n// CONCATENATED MODULE: ./src/policy/PDP.js\nfunction PDP_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction PDP_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction PDP_createClass(Constructor, protoProps, staticProps) { if (protoProps) PDP_defineProperties(Constructor.prototype, protoProps); if (staticProps) PDP_defineProperties(Constructor, staticProps); return Constructor; }\n\n\n/**\n* The Policy Decision Point (PDP) decides if a message is to be authorised by checking a set of\n* policies. The resource to be verified is specified in the first word of the 'condition' field of\n* a Policy object. The implementation that verifies if the message is compliant with a policy is\n* specified in a hashtable to allow dynamic definition of the implementation, providing\n* extensibility to the Policy Engine functionalities.\n*/\n\nvar PDP_PDP =\n/*#__PURE__*/\nfunction () {\n  function PDP(context) {\n    PDP_classCallCheck(this, PDP);\n\n    this.context = context;\n    this.operators = new policy_Operators();\n  }\n\n  PDP_createClass(PDP, [{\n    key: \"evaluatePolicies\",\n    value: function evaluatePolicies(message, isIncomingMessage) {\n      var policies = this.context.getPolicies(message, isIncomingMessage);\n      var result = 'Not Applicable';\n\n      if (policies !== undefined) {\n        result = this.evaluatePolicy(message, policies.serviceProviderPolicy, isIncomingMessage);\n\n        if (result || result === 'Not Applicable') {\n          var userResult = this.evaluatePolicy(message, policies.userPolicy, isIncomingMessage);\n\n          if (userResult !== 'Not Applicable') {\n            result = userResult;\n          }\n        }\n      }\n\n      return result;\n    }\n  }, {\n    key: \"evaluatePolicy\",\n    value: function evaluatePolicy(message, policy, isIncoming) {\n      var result = 'Not Applicable';\n\n      if (policy) {\n        result = policy.evaluateRules(this.context, message, isIncoming);\n      }\n\n      return result;\n    }\n  }]);\n\n  return PDP;\n}();\n\n/* harmony default export */ var policy_PDP = (PDP_PDP);\n// CONCATENATED MODULE: ./src/policy/combiningAlgorithms/AllowOverrides.js\nfunction AllowOverrides_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction AllowOverrides_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction AllowOverrides_createClass(Constructor, protoProps, staticProps) { if (protoProps) AllowOverrides_defineProperties(Constructor.prototype, protoProps); if (staticProps) AllowOverrides_defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n* Copyright 2016 PT Inovação e Sistemas SA\n* Copyright 2016 INESC-ID\n* Copyright 2016 QUOBIS NETWORKS SL\n* Copyright 2016 FRAUNHOFER-GESELLSCHAFT ZUR FOERDERUNG DER ANGEWANDTEN FORSCHUNG E.V\n* Copyright 2016 ORANGE SA\n* Copyright 2016 Deutsche Telekom AG\n* Copyright 2016 Apizee\n* Copyright 2016 TECHNISCHE UNIVERSITAT BERLIN\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n**/\n\n/**\n* @author Ana Caldeira <ana.caldeira@tecnico.ulisboa.pt>\n* @classdesc Class to combine the authorization decisions that result from rules evaluation.\n*/\nvar AllowOverrides =\n/*#__PURE__*/\nfunction () {\n  function AllowOverrides() {\n    AllowOverrides_classCallCheck(this, AllowOverrides);\n  }\n\n  AllowOverrides_createClass(AllowOverrides, [{\n    key: \"combine\",\n\n    /**\n    * Given an array of individual authorization decisions, prioritizes a positive one.\n    * @param    {boolean[]}   decisions\n    * @returns  {boolean}\n    */\n    value: function combine(decisions) {\n      if (decisions.indexOf(true) !== -1) {\n        return true;\n      } else {\n        if (decisions.indexOf(false) !== -1) {\n          return false;\n        } else {\n          return 'Not Applicable';\n        }\n      }\n    }\n  }]);\n\n  return AllowOverrides;\n}();\n\n/* harmony default export */ var combiningAlgorithms_AllowOverrides = (AllowOverrides);\n// CONCATENATED MODULE: ./src/policy/combiningAlgorithms/BlockOverrides.js\nfunction BlockOverrides_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction BlockOverrides_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction BlockOverrides_createClass(Constructor, protoProps, staticProps) { if (protoProps) BlockOverrides_defineProperties(Constructor.prototype, protoProps); if (staticProps) BlockOverrides_defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n* Copyright 2016 PT Inovação e Sistemas SA\n* Copyright 2016 INESC-ID\n* Copyright 2016 QUOBIS NETWORKS SL\n* Copyright 2016 FRAUNHOFER-GESELLSCHAFT ZUR FOERDERUNG DER ANGEWANDTEN FORSCHUNG E.V\n* Copyright 2016 ORANGE SA\n* Copyright 2016 Deutsche Telekom AG\n* Copyright 2016 Apizee\n* Copyright 2016 TECHNISCHE UNIVERSITAT BERLIN\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n**/\n\n/**\n* @author Ana Caldeira <ana.caldeira@tecnico.ulisboa.pt>\n* @classdesc Class to combine the authorization decisions that result from rules evaluation.\n*/\nvar BlockOverrides =\n/*#__PURE__*/\nfunction () {\n  function BlockOverrides() {\n    BlockOverrides_classCallCheck(this, BlockOverrides);\n  }\n\n  BlockOverrides_createClass(BlockOverrides, [{\n    key: \"combine\",\n\n    /**\n    * Given an array of individual authorisation decisions, prioritises a negative one.\n    * @param    {boolean[]}   decisions\n    * @returns  {boolean}\n    */\n    value: function combine(decisions) {\n      if (decisions.indexOf(false) !== -1) {\n        return false;\n      } else {\n        if (decisions.indexOf(true) !== -1) {\n          return true;\n        } else {\n          return 'Not Applicable';\n        }\n      }\n    }\n  }]);\n\n  return BlockOverrides;\n}();\n\n/* harmony default export */ var combiningAlgorithms_BlockOverrides = (BlockOverrides);\n// CONCATENATED MODULE: ./src/policy/combiningAlgorithms/FirstApplicable.js\nfunction FirstApplicable_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction FirstApplicable_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction FirstApplicable_createClass(Constructor, protoProps, staticProps) { if (protoProps) FirstApplicable_defineProperties(Constructor.prototype, protoProps); if (staticProps) FirstApplicable_defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n* Copyright 2016 PT Inovação e Sistemas SA\n* Copyright 2016 INESC-ID\n* Copyright 2016 QUOBIS NETWORKS SL\n* Copyright 2016 FRAUNHOFER-GESELLSCHAFT ZUR FOERDERUNG DER ANGEWANDTEN FORSCHUNG E.V\n* Copyright 2016 ORANGE SA\n* Copyright 2016 Deutsche Telekom AG\n* Copyright 2016 Apizee\n* Copyright 2016 TECHNISCHE UNIVERSITAT BERLIN\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n**/\n\n/**\n* @author Ana Caldeira <ana.caldeira@tecnico.ulisboa.pt>\n* @classdesc Class to combine the authorization decisions that result from rules evaluation.\n*/\nvar FirstApplicable =\n/*#__PURE__*/\nfunction () {\n  function FirstApplicable() {\n    FirstApplicable_classCallCheck(this, FirstApplicable);\n  }\n\n  FirstApplicable_createClass(FirstApplicable, [{\n    key: \"combine\",\n\n    /**\n    * Given an array of individual authorisation decisions, returns the first one different from 'Not Applicable', either positive or negative.\n    * @param    {boolean[]}     decisions\n    * @returns  {boolean}\n    */\n    value: function combine(decisions) {\n      for (var i in decisions) {\n        if (decisions[i] !== 'Not Applicable') {\n          return decisions[i];\n        }\n      }\n\n      return 'Not Applicable';\n    }\n  }]);\n\n  return FirstApplicable;\n}();\n\n/* harmony default export */ var combiningAlgorithms_FirstApplicable = (FirstApplicable);\n// CONCATENATED MODULE: ./src/policy/conditions/Condition.js\nfunction Condition_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction Condition_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Condition_createClass(Constructor, protoProps, staticProps) { if (protoProps) Condition_defineProperties(Constructor.prototype, protoProps); if (staticProps) Condition_defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n* Copyright 2016 PT Inovação e Sistemas SA\n* Copyright 2016 INESC-ID\n* Copyright 2016 QUOBIS NETWORKS SL\n* Copyright 2016 FRAUNHOFER-GESELLSCHAFT ZUR FOERDERUNG DER ANGEWANDTEN FORSCHUNG E.V\n* Copyright 2016 ORANGE SA\n* Copyright 2016 Deutsche Telekom AG\n* Copyright 2016 Apizee\n* Copyright 2016 TECHNISCHE UNIVERSITAT BERLIN\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n**/\n\n/**\n* @author Ana Caldeira <ana.caldeira@tecnico.ulisboa.pt>\n* @classdesc Class to represent a condition and evaluate its applicability.\n*/\n\nvar Condition_Condition =\n/*#__PURE__*/\nfunction () {\n  /**\n  * Creates a new Condition.\n  * @class\n  * @param  {string}  attribute\n  * @param  {string}  operator\n  * @param  {*}       params\n  */\n  function Condition(attribute, operator, params) {\n    Condition_classCallCheck(this, Condition);\n\n    this.attribute = attribute;\n    this.operator = operator;\n    this.params = params;\n    this.operators = new policy_Operators();\n  }\n  /**\n  * Verifies if the condition is applicable to the message. First, the system value that corresponds to the attribute is retrieved; then, that value is compared with the parameter specified in the condition by executing the operator implementation. If the operator is 'in' and the name of a group is given, then the array holding the members of the group is retrieved before the comparison.\n  * @param  {Object}    context   environment where the Policy Engine is being used\n  * @param  {Object}    message\n  */\n\n\n  Condition_createClass(Condition, [{\n    key: \"isApplicable\",\n    value: function isApplicable(context, message) {\n      context[this.attribute] = {\n        message: message\n      };\n      var value = context[this.attribute];\n      var tempParam;\n\n      if (this.operator === 'in') {\n        if (!Array.isArray(this.params)) {\n          tempParam = context.getGroup(this.params, message.to);\n          return this.operators[this.operator]([tempParam, value]);\n        }\n      }\n\n      return this.operators[this.operator]([this.params, value]);\n    }\n  }]);\n\n  return Condition;\n}();\n\n/* harmony default export */ var conditions_Condition = (Condition_Condition);\n// CONCATENATED MODULE: ./src/policy/conditions/SubscriptionCondition.js\nfunction SubscriptionCondition_typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { SubscriptionCondition_typeof = function _typeof(obj) { return typeof obj; }; } else { SubscriptionCondition_typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return SubscriptionCondition_typeof(obj); }\n\nfunction SubscriptionCondition_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction SubscriptionCondition_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction SubscriptionCondition_createClass(Constructor, protoProps, staticProps) { if (protoProps) SubscriptionCondition_defineProperties(Constructor.prototype, protoProps); if (staticProps) SubscriptionCondition_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction SubscriptionCondition_possibleConstructorReturn(self, call) { if (call && (SubscriptionCondition_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return SubscriptionCondition_assertThisInitialized(self); }\n\nfunction SubscriptionCondition_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction SubscriptionCondition_get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { SubscriptionCondition_get = Reflect.get; } else { SubscriptionCondition_get = function _get(target, property, receiver) { var base = SubscriptionCondition_superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return SubscriptionCondition_get(target, property, receiver || target); }\n\nfunction SubscriptionCondition_superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = SubscriptionCondition_getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction SubscriptionCondition_getPrototypeOf(o) { SubscriptionCondition_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return SubscriptionCondition_getPrototypeOf(o); }\n\nfunction SubscriptionCondition_inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) SubscriptionCondition_setPrototypeOf(subClass, superClass); }\n\nfunction SubscriptionCondition_setPrototypeOf(o, p) { SubscriptionCondition_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return SubscriptionCondition_setPrototypeOf(o, p); }\n\n/**\n* Copyright 2016 PT Inovação e Sistemas SA\n* Copyright 2016 INESC-ID\n* Copyright 2016 QUOBIS NETWORKS SL\n* Copyright 2016 FRAUNHOFER-GESELLSCHAFT ZUR FOERDERUNG DER ANGEWANDTEN FORSCHUNG E.V\n* Copyright 2016 ORANGE SA\n* Copyright 2016 Deutsche Telekom AG\n* Copyright 2016 Apizee\n* Copyright 2016 TECHNISCHE UNIVERSITAT BERLIN\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n**/\n\n/**\n* @author Ana Caldeira <ana.caldeira@tecnico.ulisboa.pt>\n* @classdesc Class to represent a subscription condition and evaluate its applicability.\n*/\n\nvar SubscriptionCondition =\n/*#__PURE__*/\nfunction (_Condition) {\n  SubscriptionCondition_inherits(SubscriptionCondition, _Condition);\n\n  /**\n  * Creates a new SubscriptionCondition.\n  * @class\n  * @param  {string}  attribute\n  * @param  {string}  operator\n  * @param  {*}       params\n  */\n  function SubscriptionCondition(attribute, operator, params) {\n    SubscriptionCondition_classCallCheck(this, SubscriptionCondition);\n\n    return SubscriptionCondition_possibleConstructorReturn(this, SubscriptionCondition_getPrototypeOf(SubscriptionCondition).call(this, attribute, operator, params));\n  }\n  /**\n  * Verifies if the subscription condition is applicable to the message. First, verifies if the message is of the subscription type; second, verifies if the message is from a remote runtime to guarantee that the subscription is being validated in the destination runtime; third, verifies if the subscription preference is met.\n  * @param  {Object}    context   environment where the Policy Engine is being used\n  * @param  {Object}    message\n  */\n\n\n  SubscriptionCondition_createClass(SubscriptionCondition, [{\n    key: \"isApplicable\",\n    value: function isApplicable(context, message) {\n      var isSubscription = message.type === 'subscribe';\n      var isFromRemoteSM = context.isFromRemoteSM(message.from);\n\n      if (isSubscription & isFromRemoteSM) {\n        return SubscriptionCondition_get(SubscriptionCondition_getPrototypeOf(SubscriptionCondition.prototype), \"isApplicable\", this).call(this, context, message);\n      } else {\n        return false;\n      }\n    }\n  }]);\n\n  return SubscriptionCondition;\n}(conditions_Condition);\n\n/* harmony default export */ var conditions_SubscriptionCondition = (SubscriptionCondition);\n// CONCATENATED MODULE: ./src/policy/conditions/AdvancedCondition.js\nfunction AdvancedCondition_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction AdvancedCondition_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction AdvancedCondition_createClass(Constructor, protoProps, staticProps) { if (protoProps) AdvancedCondition_defineProperties(Constructor.prototype, protoProps); if (staticProps) AdvancedCondition_defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\n\nvar AdvancedCondition_AdvancedCondition =\n/*#__PURE__*/\nfunction () {\n  function AdvancedCondition(condition) {\n    AdvancedCondition_classCallCheck(this, AdvancedCondition);\n\n    this.operators = new policy_Operators();\n\n    if (condition.operators !== undefined) {\n      condition = condition.condition;\n    }\n\n    condition = this.buildCondition(condition);\n    this.condition = condition;\n  }\n\n  AdvancedCondition_createClass(AdvancedCondition, [{\n    key: \"buildCondition\",\n    value: function buildCondition(condition) {\n      if (Array.isArray(condition[1])) {\n        condition[1] = this.buildCondition(condition[1]);\n      } else {\n        if (condition[1].attribute === 'subscription') {\n          condition[1] = new conditions_SubscriptionCondition(condition[1].attribute, condition[1].operator, condition[1].params);\n        } else {\n          condition[1] = new conditions_Condition(condition[1].attribute, condition[1].operator, condition[1].params);\n        }\n      }\n\n      if (condition[2] !== undefined) {\n        if (Array.isArray(condition[2])) {\n          condition[2] = this.buildCondition(condition[2]);\n        } else {\n          if (condition[2].attribute === 'subscription') {\n            condition[2] = new conditions_SubscriptionCondition(condition[2].attribute, condition[2].operator, condition[2].params);\n          } else {\n            condition[2] = new conditions_Condition(condition[2].attribute, condition[2].operator, condition[2].params);\n          }\n        }\n      }\n\n      return condition;\n    }\n  }, {\n    key: \"isApplicable\",\n    value: function isApplicable(context, message, scope, target, operator, left, right) {\n      if (!operator) {\n        operator = this.condition[0];\n        left = this.condition[1];\n        right = this.condition[2];\n      }\n\n      while (!(left instanceof conditions_Condition) & !(left instanceof conditions_SubscriptionCondition) & typeof left !== 'boolean') {\n        left = this.isApplicable(context, message, scope, target, left[0], left[1], left[2]);\n      }\n\n      if (right !== undefined) {\n        while (!(right instanceof conditions_Condition) & !(right instanceof conditions_SubscriptionCondition) & typeof right !== 'boolean') {\n          right = this.isApplicable(context, message, scope, target, right[0], right[1], right[2]);\n        }\n      }\n\n      var resultLeft = typeof left === 'boolean' ? left : left.isApplicable(context, message, scope, target);\n      var resultRight;\n\n      if (right !== undefined) {\n        resultRight = typeof right === 'boolean' ? right : right.isApplicable(context, message, scope, target);\n      }\n\n      return this.operators[operator]([resultLeft, resultRight]);\n    }\n  }]);\n\n  return AdvancedCondition;\n}();\n\n/* harmony default export */ var conditions_AdvancedCondition = (AdvancedCondition_AdvancedCondition);\n// CONCATENATED MODULE: ./src/policy/Rule.js\nfunction Rule_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction Rule_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Rule_createClass(Constructor, protoProps, staticProps) { if (protoProps) Rule_defineProperties(Constructor.prototype, protoProps); if (staticProps) Rule_defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\n\n\nvar Rule_Rule =\n/*#__PURE__*/\nfunction () {\n  function Rule(decision, condition, scope, target, priority) {\n    Rule_classCallCheck(this, Rule);\n\n    this.decision = decision;\n    this.setCondition(condition);\n    this.priority = priority;\n    this.scope = scope;\n    this.target = target;\n  }\n\n  Rule_createClass(Rule, [{\n    key: \"setCondition\",\n    value: function setCondition(condition) {\n      if (!(condition instanceof conditions_Condition || condition instanceof conditions_AdvancedCondition || condition instanceof conditions_AdvancedCondition)) {\n        var attribute = condition.attribute;\n\n        switch (attribute) {\n          case 'subscription':\n            this.condition = new conditions_AdvancedCondition(condition.attribute, condition.operator, condition.params);\n            break;\n\n          case undefined:\n            this.condition = new conditions_AdvancedCondition(condition);\n            break;\n\n          default:\n            this.condition = new conditions_Condition(condition.attribute, condition.operator, condition.params);\n        }\n      } else {\n        this.condition = condition;\n      }\n    }\n  }, {\n    key: \"evaluate\",\n    value: function evaluate(context, message, isIncoming) {\n      var field = isIncoming ? message.to : message.from;\n      var hypertyName;\n\n      switch (this.scope) {\n        case 'global':\n          break;\n\n        case 'hyperty':\n          if (isDataObjectURL(field)) {\n            var reporter = context.runtimeRegistry.getReporterURLSynchonous(removePathFromURL(field));\n\n            if (reporter !== undefined) {\n              hypertyName = context.runtimeRegistry.getHypertyName(reporter);\n            }\n          } else {\n            if (field.split('://')[0] === 'hyperty') {\n              hypertyName = context.runtimeRegistry.getHypertyName(removePathFromURL(field));\n            }\n          }\n\n          if (hypertyName === this.target) {\n            break;\n          }\n\n          return 'Not Applicable';\n\n        case 'identity':\n          var owner;\n\n          if (isDataObjectURL(field)) {\n            var _reporter = context.runtimeRegistry.getReporterURLSynchonous(removePathFromURL(field));\n\n            owner = context.runtimeRegistry.getHypertyOwner(_reporter);\n          } else {\n            if (field.split('://')[0] === 'hyperty') {\n              owner = context.runtimeRegistry.getHypertyOwner(removePathFromURL(field));\n            }\n          }\n\n          if (owner !== undefined) {\n            owner = getUserEmailFromURL(owner);\n          }\n\n          if (owner === this.target) {\n            break;\n          }\n\n          return 'Not Applicable';\n      }\n\n      if (this.condition.isApplicable(context, message, this.scope, this.target)) {\n        return this.decision;\n      } else {\n        return 'Not Applicable';\n      }\n    }\n  }]);\n\n  return Rule;\n}();\n\n/* harmony default export */ var policy_Rule = (Rule_Rule);\n// CONCATENATED MODULE: ./src/policy/Policy.js\nfunction Policy_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction Policy_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Policy_createClass(Constructor, protoProps, staticProps) { if (protoProps) Policy_defineProperties(Constructor.prototype, protoProps); if (staticProps) Policy_defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\n\n\nvar Policy_Policy =\n/*#__PURE__*/\nfunction () {\n  function Policy(key, rules, actions, combiningAlgorithm) {\n    Policy_classCallCheck(this, Policy);\n\n    if (!key) throw new Error('key is not defined');\n    if (!actions) throw new Error('actions are not defined');\n    this.actions = actions;\n    this.key = key;\n\n    this._setRules(rules);\n\n    this._setCombiningAlgorithm(combiningAlgorithm);\n  }\n\n  Policy_createClass(Policy, [{\n    key: \"addAction\",\n    value: function addAction(method, param) {\n      this.actions.push({\n        method: method,\n        param: param\n      });\n    }\n  }, {\n    key: \"createRule\",\n    value: function createRule(decision, condition, scope, target, priority) {\n      if (priority === undefined) {\n        priority = this.getLastPriority() + 1;\n      }\n\n      var rule = new policy_Rule(decision, condition, scope, target, priority);\n      this.rules.push(rule);\n    }\n  }, {\n    key: \"deleteRule\",\n    value: function deleteRule(rule) {\n      var indexToRemove = this.rules.indexOf(rule);\n      this.rules.splice(indexToRemove, 1);\n    }\n  }, {\n    key: \"enforceActions\",\n    value: function enforceActions(context, message) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        var results = [];\n\n        if (_this.actions.length !== 0) {\n          for (var i in _this.actions) {\n            var result = context.pep.actionsService[_this.actions[i].method](message, _this.actions[i].param);\n\n            results.push(result);\n          }\n\n          Promise.all(results).then(function (messages) {\n            resolve(messages);\n          }, function (error) {\n            reject(error);\n          });\n        } else {\n          resolve([message]);\n        }\n      });\n    }\n  }, {\n    key: \"evaluateRules\",\n    value: function evaluateRules(context, message, isIncoming) {\n      var results = [];\n\n      for (var i in this.rules) {\n        results.push(this.rules[i].evaluate(context, message, isIncoming));\n      }\n\n      return this.combiningAlgorithm.combine(results);\n    }\n  }, {\n    key: \"getLastPriority\",\n    value: function getLastPriority() {\n      var priorities = [];\n\n      if (this.rules.length !== 0) {\n        for (var i in this.rules) {\n          priorities.push(this.rules[i].priority);\n        }\n\n        return Math.max.apply(Math, priorities);\n      } else {\n        return -1;\n      }\n    }\n  }, {\n    key: \"getRuleByPriority\",\n    value: function getRuleByPriority(priority) {\n      for (var i in this.rules) {\n        if (String(this.rules[i].priority) === String(priority)) {\n          return this.rules[i];\n        }\n      }\n\n      throw Error('Rule with priority ' + priority + ' does not exist!');\n    }\n  }, {\n    key: \"_setCombiningAlgorithm\",\n    value: function _setCombiningAlgorithm(combiningAlgorithm) {\n      if (!combiningAlgorithm) {\n        combiningAlgorithm = 'blockOverrides';\n      }\n\n      switch (combiningAlgorithm) {\n        case 'blockOverrides':\n          this.combiningAlgorithm = new combiningAlgorithms_BlockOverrides();\n          break;\n\n        case 'allowOverrides':\n          this.combiningAlgorithm = new combiningAlgorithms_AllowOverrides();\n          break;\n\n        case 'firstApplicable':\n          this.combiningAlgorithm = new combiningAlgorithms_FirstApplicable();\n          break;\n\n        default:\n          throw Error('Unknown algorithm: ' + combiningAlgorithm);\n      }\n    }\n  }, {\n    key: \"_setRules\",\n    value: function _setRules(rules) {\n      this.rules = [];\n\n      for (var i in rules) {\n        var rule = rules[i];\n\n        if (rule.priority === undefined) {\n          rule.priority = this.getLastPriority() + 1;\n        }\n\n        if (!(rule instanceof policy_Rule)) {\n          rule = new policy_Rule(rule.decision, rule.condition, rule.scope, rule.target, rule.priority);\n        }\n\n        this.rules.push(rule);\n      }\n    }\n  }, {\n    key: \"sortRules\",\n    value: function sortRules() {\n      return this.rules.sort(function (a, b) {\n        var x = a.priority;\n        var y = b.priority;\n        return x < y ? -1 : x > y ? 1 : 0;\n      });\n    }\n  }]);\n\n  return Policy;\n}();\n\n/* harmony default export */ var policy_Policy = (Policy_Policy);\n// CONCATENATED MODULE: ./src/policy/PEP.js\nfunction PEP_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction PEP_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction PEP_createClass(Constructor, protoProps, staticProps) { if (protoProps) PEP_defineProperties(Constructor.prototype, protoProps); if (staticProps) PEP_defineProperties(Constructor, staticProps); return Constructor; }\n\n// Log System\n\nvar PEP_log = loglevel[\"getLogger\"]('PEP');\n\n\n\n\n\nvar PEP_PEP =\n/*#__PURE__*/\nfunction () {\n  /**\n  * Creates a Policy Enforcement Point (PEP) instance\n  * @param    {Object}    context\n  */\n  function PEP(context) {\n    PEP_classCallCheck(this, PEP);\n\n    var _this = this;\n\n    _this.pdp = new policy_PDP(context);\n    _this.actionsService = new policy_ActionsService(context);\n    _this.context = context;\n    context.pep = _this; //TODO should be added a trigger to verify when the loadConfigurations is successfully completed\n\n    context.loadConfigurations();\n  }\n  /**\n  * return the messageBus in this Registry\n  * @param {MessageBus}           messageBus\n  */\n\n\n  PEP_createClass(PEP, [{\n    key: \"addGUIListeners\",\n    value: function addGUIListeners() {\n      var _this = this;\n\n      _this.context.messageBus.addListener(_this.context.pepURL, function (msg) {\n        var funcName = msg.body.method;\n        var returnedValue;\n\n        if (funcName === 'addToGroup') {\n          var groupName = msg.body.params.groupName;\n          var userEmail = msg.body.params.userEmail;\n          returnedValue = _this.context.addToGroup(groupName, userEmail);\n        } else if (funcName === 'createGroup') {\n          var _groupName = msg.body.params.groupName;\n          returnedValue = _this.context.createGroup(_groupName);\n        } else if (funcName === 'addPolicy') {\n          var source = msg.body.params.source;\n          var key = msg.body.params.key;\n          var policy = msg.body.params.policy;\n          var combiningAlgorithm = msg.body.params.combiningAlgorithm;\n          returnedValue = _this.addPolicy(source, key, policy, combiningAlgorithm);\n        } else if (funcName === 'deleteGroup') {\n          var _groupName2 = msg.body.params.groupName;\n          returnedValue = _this.context.deleteGroup(_groupName2);\n        } else if (funcName === 'removePolicy') {\n          var _source = msg.body.params.source;\n          var _key = msg.body.params.key;\n          returnedValue = _this.removePolicy(_source, _key);\n        } else if (funcName === 'savePolicies') {\n          var _source2 = msg.body.params.source;\n          returnedValue = _this.context.savePolicies(_source2);\n        } else if (funcName === 'userPolicies') {\n          returnedValue = _this.context.userPolicies;\n        } else if (funcName === 'activeUserPolicy') {\n          var userPolicy = msg.body.params.userPolicy;\n\n          if (userPolicy) {\n            _this.context.activeUserPolicy = userPolicy;\n          }\n\n          returnedValue = _this.context.activeUserPolicy;\n        } else if (funcName === 'userPolicy') {\n          var _key2 = msg.body.params.key;\n          returnedValue = _this.context.userPolicies[_key2];\n        } else if (funcName === 'saveActivePolicy') {\n          returnedValue = _this.context.saveActivePolicy();\n        } else if (funcName === 'getMyEmails') {\n          returnedValue = _this.context.getMyEmails();\n        } else if (funcName === 'getMyHyperties') {\n          returnedValue = _this.context.getMyHyperties();\n        } else if (funcName === 'groups') {\n          returnedValue = _this.context.groups;\n        } else if (funcName === 'getGroupsNames') {\n          returnedValue = _this.context.getGroupsNames();\n        }\n\n        if (funcName === 'removeFromGroup') {\n          var _groupName3 = msg.body.params.groupName;\n          var _userEmail = msg.body.params.userEmail;\n          returnedValue = _this.context.removeFromGroup(_groupName3, _userEmail);\n        }\n\n        var value = {\n          type: 'execute',\n          value: returnedValue,\n          code: 200\n        };\n        var replyMsg = {\n          id: msg.id,\n          type: 'response',\n          to: msg.from,\n          from: msg.to,\n          body: value\n        };\n\n        _this.context.messageBus.postMessage(replyMsg);\n      });\n    }\n    /**\n    * Adds a policy to the Policy Enforcement Point (PEP). The policy can be created by the service\n    * provider or by the user.\n    * @param    {String}    source\n    * @param    {String}    key\n    * @param    {Object}    policy\n    */\n\n  }, {\n    key: \"addPolicy\",\n    value: function addPolicy(source, key, policy, combiningAlgorithm) {\n      if (!source) throw new Error('source is not defined');\n      if (!key) throw new Error('key is not defined');\n\n      if (policy === undefined) {\n        policy = new policy_Policy(key, [], [], combiningAlgorithm);\n      } else {\n        if (!(policy instanceof policy_Policy)) {\n          policy = new policy_Policy(policy.key, policy.rules, policy.actions, policy.combiningAlgorithm);\n        }\n      }\n\n      switch (source) {\n        case 'SERVICE_PROVIDER':\n          this.context.savePolicies(source, policy, key);\n          break;\n\n        case 'USER':\n          this.context.userPolicies[key] = policy;\n          this.context.savePolicies(source);\n          break;\n\n        default:\n          throw Error('Unknown policy source: ' + source);\n      }\n    }\n  }, {\n    key: \"authorise\",\n    value: function authorise(message, isIncoming) {\n      var _this2 = this;\n\n      // log.log('[Policy.PEP Authorise] ', message);\n      // log.log(message);\n      if (!message) throw new Error('message is not defined');\n      if (!message.from) throw new Error('message.from is not defined');\n      if (!message.to) throw new Error('message.to is not defined');\n      if (!message.type) throw new Error('message.type is not defined');\n      message.body = message.body || {};\n      return new Promise(function (resolve, reject) {\n        message.body = message.body || {};\n        var _this = _this2;\n\n        var result = _this.pdp.evaluatePolicies(message, isIncoming);\n\n        if (result === 'Not Applicable') {\n          result = _this.context.defaultBehaviour;\n          message.body.auth = false;\n        }\n\n        _this.actionsService.enforcePolicies(message, isIncoming).then(function (messages) {\n          for (var i in messages) {\n            message = messages[i];\n\n            if (result) {\n              message.body.auth = message.body.auth === undefined ? true : message.body.auth;\n              resolve(message);\n            } else {\n              var errorMessage = {\n                body: {\n                  code: 403,\n                  description: 'Blocked by policy'\n                },\n                from: message.to,\n                to: message.from,\n                type: 'response'\n              };\n              reject(errorMessage);\n            }\n          }\n        }, function (error) {\n          reject(error);\n        });\n      });\n    }\n  }, {\n    key: \"authoriseSync\",\n    value: function authoriseSync(message) {\n      var result;\n      message.body = message.body || {};\n      result = this.pdp.evaluatePolicies(message, true);\n\n      if (result === 'Not Applicable') {\n        result = this.context.defaultBehaviour;\n      }\n\n      return result;\n    }\n  }, {\n    key: \"removePolicy\",\n    value: function removePolicy(source, key) {\n      if (!source) throw new Error('source is not defined');\n      if (source !== '*' && !key) throw new Error('key is not defined');\n\n      switch (source) {\n        case '*':\n          this.context.serviceProviderPolicy = {};\n          this.context.userPolicies = {};\n          this.context.activeUserPolicy = undefined;\n          this.context.savePolicies('USER');\n          this.context.savePolicies('SERVICE_PROVIDER');\n          this.context.saveActivePolicy();\n          break;\n\n        case 'SERVICE_PROVIDER':\n          delete this.context.serviceProviderPolicy[key];\n          this.context.savePolicies();\n          break;\n\n        case 'USER':\n          delete this.context.userPolicies[key];\n\n          if (key === this.context.activeUserPolicy) {\n            this.context.activeUserPolicy = undefined;\n            this.context.saveActivePolicy();\n          }\n\n          this.context.savePolicies('USER');\n          break;\n\n        default:\n          throw Error('Unknown policy source: ' + source);\n      }\n    }\n  }, {\n    key: \"messageBus\",\n    get: function get() {\n      var _this = this;\n\n      return _this.context.messageBus;\n    }\n    /**\n    * Set the messageBus in this Registry\n    * @param {MessageBus}           messageBus\n    */\n    ,\n    set: function set(messageBus) {\n      var _this = this;\n\n      _this.context.messageBus = messageBus;\n\n      _this.addGUIListeners();\n    }\n  }]);\n\n  return PEP;\n}();\n\n/* harmony default export */ var policy_PEP = (PEP_PEP);\n// CONCATENATED MODULE: ./src/bus/Pipeline.js\nfunction Pipeline_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction Pipeline_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Pipeline_createClass(Constructor, protoProps, staticProps) { if (protoProps) Pipeline_defineProperties(Constructor.prototype, protoProps); if (staticProps) Pipeline_defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n* Copyright 2016 PT Inovação e Sistemas SA\n* Copyright 2016 INESC-ID\n* Copyright 2016 QUOBIS NETWORKS SL\n* Copyright 2016 FRAUNHOFER-GESELLSCHAFT ZUR FOERDERUNG DER ANGEWANDTEN FORSCHUNG E.V\n* Copyright 2016 ORANGE SA\n* Copyright 2016 Deutsche Telekom AG\n* Copyright 2016 Apizee\n* Copyright 2016 TECHNISCHE UNIVERSITAT BERLIN\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n**/\n\nvar Pipeline_log = loglevel[\"getLogger\"]('Pipeline');\n/**\n* @author micaelpedrosa@gmail.com\n* Sequencial processor of methods. Similar to how Sequential Promise's work, but better fit for message processing.\n* Normal use for this, is to intercept all messages with configured handlers, and act accordingly.\n*/\n\n\n\nvar Pipeline =\n/*#__PURE__*/\nfunction () {\n  /* public\n    handlers: ((PipeContext) => void)[]\n    onFail: (error) => void\n  */\n  function Pipeline(_onFail) {\n    Pipeline_classCallCheck(this, Pipeline);\n\n    var _this = this;\n\n    _this.handlers = [];\n    _this.onFail = _onFail;\n  }\n  /**\n   * Insert a message in the pipeline queue. All messages are wrapped with a PipeContext.\n   * @param  {Message} msg       Message for the queue\n   * @param  {Callback} onDeliver When message is finished processing from all handlers, it will be delivered in this callback.\n   */\n\n\n  Pipeline_createClass(Pipeline, [{\n    key: \"process\",\n    value: function process(msg, onDeliver) {\n      var _this = this;\n\n      if (_this.handlers.length > 0) {\n        var iter = new Iterator(_this.handlers);\n        iter.next(new PipeContext(_this, iter, msg, onDeliver));\n      } else {\n        onDeliver(msg);\n      }\n    }\n  }]);\n\n  return Pipeline;\n}();\n/**\n* @author micaelpedrosa@gmail.com\n* Wrapper around a message that adds actions that can be fired by any interceptor handler.\n* The Pipeline is asynchronous, so an handler should always call an action, the default one is \"next()\"\n*/\n\n\nvar PipeContext =\n/*#__PURE__*/\nfunction () {\n  /* private\n    _inStop: boolean\n     _pipeline: Pipeline\n    _iter: Iterator\n    _msg: Message\n  */\n  function PipeContext(pipeline, iter, msg, onDeliver) {\n    Pipeline_classCallCheck(this, PipeContext);\n\n    var _this = this;\n\n    _this._inStop = false;\n    _this._pipeline = pipeline;\n    _this._iter = iter;\n    _this._msg = msg;\n    _this._onDeliver = onDeliver;\n  }\n\n  Pipeline_createClass(PipeContext, [{\n    key: \"next\",\n\n    /**\n     * Proceed to the next interceptor handler, unless there was an error. If it's the last one, proceed to onDeliver handler.\n     */\n    value: function next() {\n      var _this = this;\n\n      if (!_this._inStop) {\n        if (_this._iter.hasNext) {\n          _this._iter.next(_this);\n        } else {\n          _this._onDeliver(_this._msg);\n        }\n      }\n    }\n    /**\n     * Proceed directly to the onDeliver handler, unless there was an error.\n     */\n\n  }, {\n    key: \"deliver\",\n    value: function deliver() {\n      var _this = this;\n\n      if (!_this._inStop) {\n        _this._inStop = true;\n\n        _this._onDeliver(_this._msg);\n      }\n    }\n    /**\n     * Mark the context with an error and proceed to the onFail handler.\n     * @param  {[type]} error [description]\n     */\n\n  }, {\n    key: \"fail\",\n    value: function fail(error) {\n      var _this = this;\n\n      if (!_this._inStop) {\n        _this._inStop = true;\n\n        if (_this._pipeline.onFail) {\n          _this._pipeline.onFail(error);\n        }\n      }\n    }\n  }, {\n    key: \"pipeline\",\n    get: function get() {\n      return this._pipeline;\n    }\n  }, {\n    key: \"msg\",\n    get: function get() {\n      return this._msg;\n    },\n    set: function set(inMsg) {\n      this._msg = inMsg;\n    }\n  }]);\n\n  return PipeContext;\n}();\n\nvar Iterator =\n/*#__PURE__*/\nfunction () {\n  /* private\n    _index: number\n    _array: []\n  */\n  function Iterator(array) {\n    Pipeline_classCallCheck(this, Iterator);\n\n    this._index = -1;\n    this._array = array;\n  }\n\n  Pipeline_createClass(Iterator, [{\n    key: \"hasNext\",\n    get: function get() {\n      return this._index < this._array.length - 1;\n    }\n  }, {\n    key: \"next\",\n    get: function get() {\n      this._index++;\n      return this._array[this._index];\n    }\n  }]);\n\n  return Iterator;\n}();\n\n/* harmony default export */ var bus_Pipeline = (Pipeline);\n// CONCATENATED MODULE: ./src/bus/MessageBus.js\nfunction MessageBus_typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { MessageBus_typeof = function _typeof(obj) { return typeof obj; }; } else { MessageBus_typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return MessageBus_typeof(obj); }\n\nfunction MessageBus_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction MessageBus_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction MessageBus_createClass(Constructor, protoProps, staticProps) { if (protoProps) MessageBus_defineProperties(Constructor.prototype, protoProps); if (staticProps) MessageBus_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction MessageBus_possibleConstructorReturn(self, call) { if (call && (MessageBus_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return MessageBus_assertThisInitialized(self); }\n\nfunction MessageBus_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction MessageBus_getPrototypeOf(o) { MessageBus_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return MessageBus_getPrototypeOf(o); }\n\nfunction MessageBus_inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) MessageBus_setPrototypeOf(subClass, superClass); }\n\nfunction MessageBus_setPrototypeOf(o, p) { MessageBus_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return MessageBus_setPrototypeOf(o, p); }\n\n/**\n* Copyright 2016 PT Inovação e Sistemas SA\n* Copyright 2016 INESC-ID\n* Copyright 2016 QUOBIS NETWORKS SL\n* Copyright 2016 FRAUNHOFER-GESELLSCHAFT ZUR FOERDERUNG DER ANGEWANDTEN FORSCHUNG E.V\n* Copyright 2016 ORANGE SA\n* Copyright 2016 Deutsche Telekom AG\n* Copyright 2016 Apizee\n* Copyright 2016 TECHNISCHE UNIVERSITAT BERLIN\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n**/\n// Log system\n\nvar MessageBus_log = loglevel[\"getLogger\"]('MessageBus');\n\n\n/**\n* @author micaelpedrosa@gmail.com\n* Message BUS Interface is an extension of the Bus\n* It doesn't support the default '*' listener, instead it uses the registry.resolve(..)\n*/\n\nvar MessageBus_MessageBus =\n/*#__PURE__*/\nfunction (_Bus) {\n  MessageBus_inherits(MessageBus, _Bus);\n\n  /* private\n  _registry: Registry\n  _forwards: { <from-url>: { fl: MsgListener, sandboxToUrls: Map(Sandbox, [to-url]), urlToSandbox: { to-url: Sandbox } } }\n   _pipeline: Pipeline\n  */\n  //TODO: future optimization\n  //1. message batch processing with setInterval\n  //2. resolve default gateway/protostub with register.resolve\n  function MessageBus(registry) {\n    var _this2;\n\n    MessageBus_classCallCheck(this, MessageBus);\n\n    _this2 = MessageBus_possibleConstructorReturn(this, MessageBus_getPrototypeOf(MessageBus).call(this));\n    _this2._registry = registry;\n    _this2._forwards = {};\n    _this2._pipelineIn = new bus_Pipeline(function (error) {\n      MessageBus_log.error('PIPELINE-ERROR: ', JSON.stringify(error));\n    });\n    _this2._pipelineOut = new bus_Pipeline(function (error) {\n      MessageBus_log.error('PIPELINE-ERROR: ', JSON.stringify(error));\n    });\n    return _this2;\n  }\n\n  MessageBus_createClass(MessageBus, [{\n    key: \"postMessage\",\n\n    /**\n     * Post a message for routing. It will first search for a listener, if there is no one, it sends to a external routing using the _onPostMessage.\n     * External routing use the registry.resolve(..) method to decide the destination sandbox.\n     * @param  {Message} inMsg            JSON with mandatory Message structure {id, type, from, to}\n     * @param  {Callback} responseCallback Optional callback if a response is expected from the request. A response will be always sent, even if it is a \"Timeout\".\n     * @return {number}                  the Message id\n     */\n    value: function postMessage(inMsg, responseCallback, timeout) {\n      MessageBus_log.info('onPOSTMessage: ', inMsg);\n\n      var _this = this;\n\n      var deliver = function deliver(msg) {\n        _this._responseCallback(inMsg, responseCallback, timeout);\n\n        if (!_this._onResponse(msg)) {\n          var itemList = _this._subscriptions[msg.to];\n\n          if (itemList) {\n            //do not publish on default address, because of loopback cycle\n            _this._publishOn(itemList, msg);\n          } else {\n            //if there is no listener, send to external interface\n            _this._onPostMessage(msg);\n          }\n        }\n      };\n\n      _this._genId(inMsg);\n\n      if (_this._isToProcess(inMsg)) {\n        var isIncoming = _this._isIncomingMessage(inMsg);\n\n        if (isIncoming) _this._pipelineIn.process(inMsg, deliver);else _this._pipelineOut.process(inMsg, deliver);\n      } else deliver(inMsg);\n\n      return inMsg.id;\n    }\n  }, {\n    key: \"_isToProcess\",\n    value: function _isToProcess(message) {\n      var schemasToIgnore = ['domain', 'domain-idp', 'global', 'hyperty-runtime', 'runtime'];\n      var splitFrom = message.from.split('://');\n      var fromSchema = splitFrom[0];\n      var splitTo = message.to.split('://');\n      var toSchema = splitTo[0];\n      var from = message.from;\n      var to = message.to; // Signalling messages between P2P Stubs don't have to be verified. FFS\n\n      if (message.body && message.body.source) {\n        from = message.body.source;\n      }\n\n      if (message.body && message.body.subscriber) {\n        from = message.body.subscriber;\n      }\n\n      if (from.indexOf('/p2phandler/') !== -1 || from.indexOf('/p2prequester/') !== -1 || to.indexOf('/p2phandler/') !== -1 || to.indexOf('/p2prequester/') !== -1) {\n        return false;\n      }\n\n      if (this._registry.isLocal(from) && this._registry.isLocal(message.to)) return false;\n\n      if (message.from === fromSchema || message.to === toSchema || message.type === 'read' || message.type === 'response' || message.from.includes('hyperty://') && message.type === 'delete') {\n        return false;\n      } else {\n        return schemasToIgnore.indexOf(fromSchema) === -1 || schemasToIgnore.indexOf(toSchema) === -1;\n      }\n    }\n  }, {\n    key: \"_isIncomingMessage\",\n    value: function _isIncomingMessage(message) {\n      var from;\n\n      if (message.type === 'forward') {\n        MessageBus_log.info('[MessageBus - isIncomingMessage] - message.type: ', message.type);\n        from = message.body.from;\n      } else if (message.hasOwnProperty('body') && message.body.hasOwnProperty('source') && message.body.source) {\n        MessageBus_log.info('[MessageBus - isIncomingMessage] - message.body.source: ', message.body.source);\n        from = message.body.source;\n      } else if (message.hasOwnProperty('body') && message.body.hasOwnProperty('subscriber') && message.body.subscriber) {\n        //TODO: this subscriber validation should not exist, because is outdated\n        //TODO: the syncher and syncher manager not following the correct spec;\n        MessageBus_log.info('[MessageBus - isIncomingMessage] - message.body.subscriber: ', message.body.subscriber);\n        from = message.body.subscriber;\n      } else if (message.hasOwnProperty('body') && message.body.hasOwnProperty('reporter') && message.body.reporter) {\n        //TODO: this subscriber validation should not exist, because is outdated\n        //TODO: the syncher and syncher manager not following the correct spec;\n        MessageBus_log.info('[MessageBus - isIncomingMessage] - message.body.reporter: ', message.body.reporter);\n        from = message.body.reporter;\n      } else {\n        MessageBus_log.info('[MessageBus - isIncomingMessage] - message.from ', message.from);\n        from = message.from;\n      }\n\n      MessageBus_log.info('[MessageBus - isIncomingMessage] - check if isLocal: ', from);\n      return !this._registry.isLocal(from);\n    }\n    /**\n     * Adds an external publish address listener. Every message for the address will be forwarded to the external routing by _onPostMessage.\n     * This means, even if there is a listener for the address, it will also send the message to the external routing.\n     * @param {URL} from Publish address.\n     */\n\n  }, {\n    key: \"addPublish\",\n    value: function addPublish(from) {\n      var _this3 = this;\n\n      var _this = this; //verify if forward exist\n\n\n      var refCount = _this._forwards[from];\n\n      if (!refCount) {\n        var forwardListener = _this.addListener(from, function (msg) {\n          MessageBus_log.info('MB-PUBLISH: ( ' + from + ' )');\n\n          _this._onPostMessage(msg);\n        });\n\n        refCount = {\n          counter: 0,\n          fl: forwardListener,\n          remove: function remove() {\n            _this3.counter--;\n\n            if (_this3.counter === 0) {\n              _this3.fl.remove();\n\n              delete _this._forwards[from];\n            }\n          }\n        };\n        _this._forwards[from] = refCount;\n      }\n\n      refCount.counter++;\n      return refCount;\n    }\n    /**\n     * Adds a forward listener for a message destination. Every message reaching an address will be also sent to the forward address.\n     * @param {URL} from Message destination, it's actually the field \"to\" of the message.\n     * @param {URL} to   Forward address.\n     */\n\n  }, {\n    key: \"addForward\",\n    value: function addForward(from, to) {\n      var _this = this;\n\n      return _this.addListener(from, function (msg) {\n        MessageBus_log.info('MB-FORWARD: ( ' + from + ' to ' + to + ' )');\n\n        _this.forward(to, msg);\n      });\n    }\n    /**\n     * Just forward's a message to the forward address. Listeners should be available for the forward address.\n     * @param  {URL} url Forward address.\n     * @param  {Message} msg Message to forward\n     */\n\n  }, {\n    key: \"forward\",\n    value: function forward(url, msg) {\n      var _this = this;\n\n      var itemList = _this._subscriptions[url];\n\n      if (itemList) {\n        _this._publishOn(itemList, msg);\n      }\n    } //default route, if there are no listeners available for a message destination.\n\n  }, {\n    key: \"_onPostMessage\",\n    value: function _onPostMessage(msg) {\n      var _this = this; //resolve external protostub...\n\n\n      _this._registry.resolve(msg).then(function (route, msg2route) {\n        if (msg2route) _this.forward(route, msg2route);else _this.forward(route, msg);\n      })[\"catch\"](function (e) {\n        MessageBus_log.error('RESOLVE-ERROR: ', e);\n      });\n    }\n  }, {\n    key: \"pipelineIn\",\n    get: function get() {\n      return this._pipelineIn;\n    }\n  }, {\n    key: \"pipelineOut\",\n    get: function get() {\n      return this._pipelineOut;\n    }\n  }]);\n\n  return MessageBus;\n}(bus_Bus);\n\n/* harmony default export */ var bus_MessageBus = (MessageBus_MessageBus);\n// CONCATENATED MODULE: ./src/cryptoManager/utf8.js\n// Marshals a string to Uint8Array.\nfunction encodeUTF8(s) {\n  var i = 0;\n  var bytes = new Uint8Array(s.length * 4);\n\n  for (var ci = 0; ci != s.length; ci++) {\n    try {\n      var xxx = s.charCodeAt(ci);\n    } catch (err) {\n      console.log(err.message);\n      return;\n    }\n\n    var c = s.charCodeAt(ci);\n\n    if (c < 128) {\n      bytes[i++] = c;\n      continue;\n    }\n\n    if (c < 2048) {\n      bytes[i++] = c >> 6 | 192;\n    } else {\n      if (c > 0xd7ff && c < 0xdc00) {\n        if (++ci == s.length) throw 'UTF-8 encode: incomplete surrogate pair';\n        var c2 = s.charCodeAt(ci);\n        if (c2 < 0xdc00 || c2 > 0xdfff) throw 'UTF-8 encode: second char code 0x' + c2.toString(16) + ' at index ' + ci + ' in surrogate pair out of range';\n        c = 0x10000 + ((c & 0x03ff) << 10) + (c2 & 0x03ff);\n        bytes[i++] = c >> 18 | 240;\n        bytes[i++] = c >> 12 & 63 | 128;\n      } else {\n        // c <= 0xffff\n        bytes[i++] = c >> 12 | 224;\n      }\n\n      bytes[i++] = c >> 6 & 63 | 128;\n    }\n\n    bytes[i++] = c & 63 | 128;\n  }\n\n  return bytes.subarray(0, i);\n} // Unmarshals an Uint8Array to string.\n\nfunction decodeUTF8(bytes) {\n  var s = '';\n  var i = 0;\n\n  while (i < bytes.length) {\n    var c = bytes[i++];\n\n    if (c > 127) {\n      if (c > 191 && c < 224) {\n        if (i >= bytes.length) throw 'UTF-8 decode: incomplete 2-byte sequence';\n        c = (c & 31) << 6 | bytes[i] & 63;\n      } else if (c > 223 && c < 240) {\n        if (i + 1 >= bytes.length) throw 'UTF-8 decode: incomplete 3-byte sequence';\n        c = (c & 15) << 12 | (bytes[i] & 63) << 6 | bytes[++i] & 63;\n      } else if (c > 239 && c < 248) {\n        if (i + 2 >= bytes.length) throw 'UTF-8 decode: incomplete 4-byte sequence';\n        c = (c & 7) << 18 | (bytes[i] & 63) << 12 | (bytes[++i] & 63) << 6 | bytes[++i] & 63;\n      } else throw 'UTF-8 decode: unknown multibyte start 0x' + c.toString(16) + ' at index ' + (i - 1);\n\n      ++i;\n    }\n\n    if (c <= 0xffff) s += String.fromCharCode(c);else if (c <= 0x10ffff) {\n      c -= 0x10000;\n      s += String.fromCharCode(c >> 10 | 0xd800);\n      s += String.fromCharCode(c & 0x3FF | 0xdc00);\n    } else throw 'UTF-8 decode: code point 0x' + c.toString(16) + ' exceeds UTF-16 reach';\n  }\n\n  return s;\n}\n// CONCATENATED MODULE: ./src/cryptoManager/Crypto.js\nfunction Crypto_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction Crypto_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Crypto_createClass(Constructor, protoProps, staticProps) { if (protoProps) Crypto_defineProperties(Constructor.prototype, protoProps); if (staticProps) Crypto_defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\nvar Crypto_log = loglevel[\"getLogger\"]('CryptoManager');\n/**\n* Class with the cryptographic functions for the authentication protocol\n*\n*/\n\nvar Crypto_Crypto =\n/*#__PURE__*/\nfunction () {\n  /**\n  * Runtimefactory is passed in the costructor, because the nodeJS has a different crypto module\n  * from the browser. RuntimeFactory provides a wrapper for the fuctions of nodeJS, so they can be\n  * invoked browser like.\n  */\n  function Crypto(runtimeFactory) {\n    Crypto_classCallCheck(this, Crypto);\n\n    var _this = this;\n\n    typeof runtimeFactory.createWebcrypto === 'function' ? _this._crypto = runtimeFactory.createWebcrypto() : _this._crypto = crypto;\n  }\n  /**\n  * Performs a RSA encryption\n  * @param   {ArrayBuffer}    value    the public key\n  * @param   {BufferSource}    value    data to be encryped\n  * @return  {Uint8Array}   encrypted data\n  */\n\n\n  Crypto_createClass(Crypto, [{\n    key: \"encryptRSA\",\n    value: function encryptRSA(pubKey, data) {\n      Crypto_log.log('encryptRSA:pubKey', pubKey);\n      Crypto_log.log('encryptRSA:data', data);\n\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        _this._importRSAencryptKey(new Uint8Array(pubKey)).then(function (publicKey) {\n          _this._crypto.subtle.encrypt({\n            name: 'RSA-OAEP'\n          }, publicKey, //from generateKey or importKey above\n          data //ArrayBuffer of data you want to encrypt\n          ).then(function (encrypted) {\n            //returns an ArrayBuffer containing the encrypted data\n            // log.log('crypto-encryptRSA', new Uint8Array(encrypted));\n            resolve(new Uint8Array(encrypted));\n          })[\"catch\"](function (err) {\n            // log.log('crypto-encryptRSA', err);\n            reject(err);\n          });\n        });\n      });\n    }\n    /**\n    * Performs a RSA decryption\n    * @param   {ArrayBuffer}    value    the private key\n    * @param   {BufferSource}    value    data to be decrypted\n    * @return  {Uint8Array}   decrypted data\n    */\n\n  }, {\n    key: \"decryptRSA\",\n    value: function decryptRSA(privKey, data) {\n      Crypto_log.log('decryptRSA:privKey', privKey);\n      Crypto_log.log('decryptRSA:data', data);\n\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        _this._importRSAdecryptKey(privKey).then(function (privateKey) {\n          _this._crypto.subtle.decrypt({\n            name: 'RSA-OAEP'\n          }, privateKey, //from generateKey or importKey above\n          data //ArrayBuffer of the data\n          ).then(function (decrypted) {\n            var decryptedData = new Uint8Array(decrypted); // log.log('crypto-decryptRSA', decryptedData);\n\n            resolve(decryptedData);\n          })[\"catch\"](function (err) {\n            // log.log('crypto-decryptRSA', err);\n            reject(err);\n          });\n        });\n      });\n    }\n    /**\n    * Performs a RSA sign\n    * @param   {ArrayBuffer}    value    the private key\n    * @param   {BufferSource}    value    data to be signed\n    * @return  {Uint8Array}   data signature\n    */\n\n  }, {\n    key: \"signRSA\",\n    value: function signRSA(privKey, data) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        _this._importRSAsignKey(privKey).then(function (privateKey) {\n          _this._crypto.subtle.sign({\n            name: 'RSASSA-PKCS1-v1_5'\n          }, privateKey, //from generateKey or importKey above\n          encodeUTF8(data) //ArrayBuffer of data you want to sign\n          ).then(function (signature) {\n            //returns an ArrayBuffer containing the signature\n            // log.log('crypto-signRSA', new Uint8Array(signature));\n            resolve(new Uint8Array(signature));\n          })[\"catch\"](function (err) {\n            // log.log('crypto-signRSA', err);\n            reject(err);\n          });\n        });\n      });\n    }\n    /**\n    * Performs a RSA signature verification\n    * @param   {ArrayBuffer}    value    the public key\n    * @param   {BufferSource}    value    data to be verified\n    * @return  {Boolean}   result of the signature verification\n    */\n\n  }, {\n    key: \"verifyRSA\",\n    value: function verifyRSA(pubKey, data, signature) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        _this._importRSAverifyKey(pubKey).then(function (publicKey) {\n          _this._crypto.subtle.verify({\n            name: 'RSASSA-PKCS1-v1_5'\n          }, publicKey, //from generateKey or importKey above\n          signature, //ArrayBuffer of the signature\n          encodeUTF8(data) //ArrayBuffer of the data\n          ).then(function (isvalid) {\n            //returns a boolean on whether the signature is true or not\n            // log.log('crypto-verifyRSA', isvalid);\n            resolve(isvalid);\n          })[\"catch\"](function (err) {\n            // log.log('crypto-verifyRSA', err);\n            reject(err);\n          });\n        });\n      });\n    }\n    /**\n    * Performs a RSA signature verification\n    * @param   {ArrayBuffer}    value    the public key\n    * @param   {BufferSource}    value    data to be verified\n    * @return  {Boolean}   result of the signature verification\n    */\n\n  }, {\n    key: \"encryptAES\",\n    value: function encryptAES(key, data, iv) {\n      Crypto_log.log('encryptAES:key', key);\n      Crypto_log.log('encryptAES:data', data);\n      Crypto_log.log('encryptAES:iv', iv);\n\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        _this._importAESkey(key).then(function (aesKey) {\n          _this._crypto.subtle.encrypt({\n            name: 'AES-CBC',\n            //Don't re-use initialization vectors!\n            //Always generate a new iv every time your encrypt!\n            iv: iv\n          }, aesKey, //from generateKey or importKey above\n          encodeUTF8(data) //ArrayBuffer of data you want to encrypt\n          ).then(function (encrypted) {\n            //returns an ArrayBuffer containing the encrypted data\n            // log.log('crypto-encryptAES', new Uint8Array(encrypted));\n            resolve(new Uint8Array(encrypted));\n          })[\"catch\"](function (err) {\n            // log.log('crypto-encryptAES', err);\n            reject(err);\n          });\n        });\n      });\n    }\n  }, {\n    key: \"decryptAES\",\n    value: function decryptAES(key, data, iv) {\n      Crypto_log.log('decryptAES:key', key);\n      Crypto_log.log('decryptAES:data', data);\n      Crypto_log.log('decryptAES:iv', iv);\n\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        _this._importAESkey(key).then(function (aesKey) {\n          _this._crypto.subtle.decrypt({\n            name: 'AES-CBC',\n            iv: iv\n          }, aesKey, //from generateKey or importKey above\n          data //ArrayBuffer of the data\n          ).then(function (decrypted) {\n            var decodedData = decodeUTF8(new Uint8Array(decrypted));\n            Crypto_log.log('crypto-decryptAES', decodedData);\n            resolve(decodedData);\n          })[\"catch\"](function (err) {\n            // log.log('crypto-decryptAES', err);\n            reject(err);\n          });\n        });\n      });\n    }\n    /**\n    * creates a hash using the HMAC algorithm\n    * @param  {byteArray}    key       key to be used in the hmac\n    * @param  {string}      data       information to be hashed\n    * @return  {byteArray}   signature  resulting hash\n    */\n\n  }, {\n    key: \"hashHMAC\",\n    value: function hashHMAC(key, data) {\n      Crypto_log.log('hashHMAC:key', key);\n      Crypto_log.log('hashHMAC:data', data);\n\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        if (typeof data != 'string') {\n          data = JSON.stringify(data);\n          Crypto_log.log('Converting hashHMAC inpured DATA');\n          Crypto_log.log('HHashHMAC:', data);\n        }\n\n        _this._importHMACkey(key).then(function (hmacKey) {\n          _this._crypto.subtle.sign({\n            name: 'HMAC'\n          }, hmacKey, //from generateKey or importKey above\n          encodeUTF8(data) //ArrayBuffer of data you want to sign\n          ).then(function (signature) {\n            Crypto_log.log('HashHMAC signature:', new Uint8Array(signature)); // log.log('crypto-hashHMAC', signature);\n            //returns an ArrayBuffer containing the signature\n\n            resolve(new Uint8Array(signature));\n          })[\"catch\"](function (err) {\n            // log.log('crypto-hashHMAC', err);\n            reject(err);\n          });\n        });\n      });\n    }\n    /**\n    * verifies an hash using the HMAC algorithm\n    * @param  {byteArray}    key       key to be used in the hmac\n    * @param  {string}      data       information to be hashed to compare\n    * @param  {byteArray}  signature   hash to compare with the received data\n    * @return  {boolean}   isvalid     boolean saying if the data corresponds to the hash received\n    */\n\n  }, {\n    key: \"verifyHMAC\",\n    value: function verifyHMAC(key, data, signature) {\n      Crypto_log.log('verifyHMAC:key', key);\n      Crypto_log.log('verifyHMAC:data', data);\n      Crypto_log.log('verifyHMAC:signature', signature);\n\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        _this._importHMACkey(key).then(function (hmacKey) {\n          if (typeof data != 'string') {\n            data = JSON.stringify(data);\n            Crypto_log.log('Converting verifyHMAC inputed DATA:', data);\n          }\n\n          _this._crypto.subtle.verify({\n            name: 'HMAC'\n          }, hmacKey, //from generateKey or importKey above\n          signature, //ArrayBuffer of the signature\n          encodeUTF8(data) //ArrayBuffer of the data\n          ).then(function (isvalid) {\n            //returns a boolean on whether the signature is true or not\n            // log.log('crypto-verifyHMAC', isvalid);\n            Crypto_log.log('verifyHMAC result', isvalid);\n            isvalid ? resolve(isvalid) : reject(isvalid);\n          })[\"catch\"](function (err) {\n            Crypto_log.error('crypto-verifyHMAC', err);\n            reject(err);\n          });\n        });\n      });\n    }\n    /**\n    * generates a RSA public/private key pair with a modulus length of 2048 bits\n    * @return  {JSON}   keyPair    json containing the public and private keys\n    */\n\n  }, {\n    key: \"generateRSAKeyPair\",\n    value: function generateRSAKeyPair() {\n      var _this = this;\n\n      var keyPair = {};\n      return new Promise(function (resolve, reject) {\n        _this._crypto.subtle.generateKey({\n          name: 'RSA-PSS',\n          modulusLength: 2048,\n          //can be 1024, 2048, or 4096\n          publicExponent: new Uint8Array([0x01, 0x00, 0x01]),\n          hash: {\n            name: 'SHA-256' //can be 'SHA-1', 'SHA-256', 'SHA-384', or 'SHA-512'\n\n          }\n        }, true, //whether the key is extractable (i.e. can be used in exportKey)\n        ['sign', 'verify'] //can be any combination of 'sign' and 'verify'\n        ).then(function (key) {\n          //returns a keypair object\n          // log.log(key);\n          _this._crypto.subtle.exportKey('spki', //can be 'jwk' (public or private), 'spki' (public only), or 'pkcs8' (private only)\n          key.publicKey //can be a publicKey or privateKey, as long as extractable was true\n          ).then(function (publicKey) {\n            //returns the exported key data\n            keyPair[\"public\"] = new Uint8Array(publicKey);\n            return _this._crypto.subtle.exportKey('pkcs8', //can be 'jwk' (public or private), 'spki' (public only), or 'pkcs8' (private only)\n            key.privateKey //can be a publicKey or privateKey, as long as extractable was true\n            );\n          }).then(function (privateKey) {\n            keyPair[\"private\"] = new Uint8Array(privateKey); // log.log('crypto-generateRSAKeyPair', keyPair);\n\n            resolve(keyPair);\n          })[\"catch\"](function (err) {\n            Crypto_log.error(err);\n            reject(err);\n          });\n        })[\"catch\"](function (err) {\n          Crypto_log.error(err);\n          reject(err);\n        });\n      });\n    }\n    /**\n    * Generates a 128 bit random value.\n    * @return {byteArray}  array    random value\n    */\n\n  }, {\n    key: \"generateIV\",\n    value: function generateIV() {\n      var _this = this;\n\n      var array = new Uint8Array(16);\n\n      _this._crypto.getRandomValues(array);\n\n      return array;\n    }\n    /**\n    * Generates a 256 bit random value. 32 bits are extrated from the machine time,\n    * the remaining are generated randomly\n    * @return {byteArray}  array    random value\n    */\n\n  }, {\n    key: \"generateRandom\",\n    value: function generateRandom() {\n      var _this = this;\n\n      var array = new Uint8Array(32);\n\n      _this._crypto.getRandomValues(array);\n\n      var date = Date.now();\n      var dateEncoded = encodeUTF8(date.toString()); //extract the least significant 4 bytes in the date\n\n      var finalDate = dateEncoded.slice(dateEncoded.length - 4, dateEncoded.length); // add in the first 4 bytes of the array the bytes extracted previously;\n\n      for (var i = 0; i < 4; i++) {\n        array[i] = finalDate[i];\n      }\n\n      return array;\n    }\n    /**\n    * generates a premaster secret (PMS) of 48 bytes (384 bits) randomly\n    * @return {byteArray}  array    premaster secret key\n    */\n\n  }, {\n    key: \"generatePMS\",\n    value: function generatePMS() {\n      var _this = this;\n\n      var array = new Uint8Array(48);\n\n      _this._crypto.getRandomValues(array);\n\n      return array;\n    }\n    /**\n    * generates a masterKey secret (PMS) of 48 bytes (384 bits) using the premaster secret and\n    * two randoms\n    * @return {byteArray}  array    master secret key with 48 bytes\n    */\n\n  }, {\n    key: \"generateMasterSecret\",\n    value: function generateMasterSecret(hmacKey, data) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        var key = new Uint8Array(48);\n        var seed = data;\n\n        _this._digest(hmacKey).then(function (digestedKey) {\n          _this.hashHMAC(digestedKey, seed).then(function (keypart0) {\n            //copy the first 32 bytes into the key\n            for (var i = 0; i < 32; i++) {\n              key[i] = keypart0[i];\n            }\n\n            return _this.hashHMAC(digestedKey, seed + keypart0);\n          }).then(function (keypart1) {\n            //copy the first 16 bytes to the key remaining 16 bytes\n            for (var i = 0; i < 16; i++) {\n              key[i + 32] = keypart1[i];\n            } // log.log('crypto-generateMasterSecret', key);\n\n\n            resolve(key);\n          })[\"catch\"](function (err) {\n            // log.log('crypto-generateMasterSecret', err);\n            reject(err);\n          });\n        });\n      });\n    }\n    /**\n    * generates both users MAC and encryption keys. generate as output an array\n    * with 4 byteArray each with 32 bytes\n    * @param  {byteArray}        secret       secret to be used in the HMAC function\n    * @param  {String}           data         information to be used as seed\n    * @return {Array<byteArray>} key          array with the information to generate keys\n    */\n\n  }, {\n    key: \"generateKeys\",\n    value: function generateKeys(hmacKey, data) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        var key = [];\n        var seed = data; // iterate 4 times to obtain a 1024 key size\n\n        _this.hashHMAC(hmacKey, seed).then(function (keypart0) {\n          key.push(keypart0);\n          return _this.hashHMAC(hmacKey, seed + keypart0);\n        }).then(function (keypart1) {\n          key.push(keypart1);\n          return _this.hashHMAC(hmacKey, seed + keypart1);\n        }).then(function (keypart2) {\n          key.push(keypart2);\n          return _this.hashHMAC(hmacKey, seed + keypart2);\n        }).then(function (keypart3) {\n          key.push(keypart3); // log.log('crypto-generateKeys', key);\n\n          resolve(key);\n        })[\"catch\"](function (err) {\n          // log.log('crypto-generateKeys', err);\n          reject(err);\n        }); // log.log(hmacKey, data);\n\n      });\n    }\n  }, {\n    key: \"_importRSAsignKey\",\n    value: function _importRSAsignKey(privKey) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        _this._crypto.subtle.importKey('pkcs8', //can be 'jwk' (public or private), 'spki' (public only), or 'pkcs8' (private only)\n        privKey, {\n          //these are the algorithm options\n          name: 'RSASSA-PKCS1-v1_5',\n          hash: {\n            name: 'SHA-256' //can be 'SHA-1', 'SHA-256', 'SHA-384', or 'SHA-512'\n\n          }\n        }, true, //whether the key is extractable (i.e. can be used in exportKey)\n        ['sign'] //'verify' for public key import, 'sign' for private key imports\n        ).then(function (privateKey) {\n          //returns a publicKey (or privateKey if you are importing a private key)\n          // log.log('crypto-_importRSAsignKey', privateKey);\n          resolve(privateKey);\n        })[\"catch\"](function (err) {\n          Crypto_log.error('crypto-_importRSAsignKey', err);\n          reject(err);\n        });\n      });\n    }\n  }, {\n    key: \"_importRSAverifyKey\",\n    value: function _importRSAverifyKey(pubKey) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        _this._crypto.subtle.importKey('spki', //can be 'jwk' (public or private), 'spki' (public only), or 'pkcs8' (private only)\n        pubKey, {\n          //these are the algorithm options\n          name: 'RSASSA-PKCS1-v1_5',\n          hash: {\n            name: 'SHA-256' //can be 'SHA-1', 'SHA-256', 'SHA-384', or 'SHA-512'\n\n          }\n        }, true, //whether the key is extractable (i.e. can be used in exportKey)\n        ['verify'] //'verify' for public key import, 'sign' for private key imports\n        ).then(function (publicKey) {\n          //returns a publicKey (or privateKey if you are importing a private key)\n          // log.log('crypto-_importRSAverifyKey', publicKey);\n          resolve(publicKey);\n        })[\"catch\"](function (err) {\n          Crypto_log.error('crypto-_importRSAverifyKey', err);\n          reject(err);\n        });\n      });\n    }\n  }, {\n    key: \"_importRSAencryptKey\",\n    value: function _importRSAencryptKey(pubKey) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        _this._crypto.subtle.importKey('spki', //can be 'jwk' (public or private), 'spki' (public only), or 'pkcs8' (private only)\n        pubKey, {\n          //these are the algorithm options\n          name: 'RSA-OAEP',\n          hash: {\n            name: 'SHA-256' //can be 'SHA-1', 'SHA-256', 'SHA-384', or 'SHA-512'\n\n          }\n        }, true, //whether the key is extractable (i.e. can be used in exportKey)\n        ['encrypt'] //'encrypt' or 'wrapKey' for public key import or\n        //'decrypt' or 'unwrapKey' for private key imports\n        ).then(function (publicKey) {\n          //returns a publicKey (or privateKey if you are importing a private key)\n          // log.log('crypto-_importRSAencryptKey', publicKey);\n          resolve(publicKey);\n        })[\"catch\"](function (err) {\n          Crypto_log.error('crypto-_importRSAencryptKey', err.name);\n          reject(err);\n        });\n      });\n    }\n  }, {\n    key: \"_importRSAdecryptKey\",\n    value: function _importRSAdecryptKey(privKey) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        _this._crypto.subtle.importKey('pkcs8', //can be 'jwk' (public or private), 'spki' (public only), or 'pkcs8' (private only)\n        privKey, {\n          //these are the algorithm options\n          name: 'RSA-OAEP',\n          hash: {\n            name: 'SHA-256' //can be 'SHA-1', 'SHA-256', 'SHA-384', or 'SHA-512'\n\n          }\n        }, true, //whether the key is extractable (i.e. can be used in exportKey)\n        ['decrypt'] //'encrypt' or 'wrapKey' for public key import or\n        //'decrypt' or 'unwrapKey' for private key imports\n        ).then(function (privateKey) {\n          //returns a publicKey (or privateKey if you are importing a private key)\n          // log.log('crypto-_importRSAdecryptKey', privateKey);\n          resolve(privateKey);\n        })[\"catch\"](function (err) {\n          Crypto_log.error('crypto-_importRSAdecryptKey', err);\n          reject(err);\n        });\n      });\n    }\n  }, {\n    key: \"concatPMSwithRandoms\",\n    value: function concatPMSwithRandoms(pms, toRandom, fromRandom) {\n      var finalKey = new Uint8Array(pms.length + toRandom.length + fromRandom.length); // add PremasterKey\n\n      for (var i = 0; i < pms.length; i++) {\n        finalKey[i] = pms[i];\n      } //add to random\n\n\n      for (var _i = 0; _i < toRandom.length; _i++) {\n        finalKey[_i + pms.length] = pms[_i];\n      } //add from random\n\n\n      for (var _i2 = 0; _i2 < fromRandom.length; _i2++) {\n        finalKey[_i2 + pms.length + toRandom.length] = pms[_i2];\n      }\n\n      return finalKey;\n    }\n  }, {\n    key: \"_generate256bitKey\",\n    value: function _generate256bitKey() {\n      var _this = this;\n\n      var array = new Uint8Array(32);\n\n      _this._crypto.getRandomValues(array);\n\n      return array;\n    }\n    /**\n    * imports the secret to the HMAC function\n    * @param  {byteArray}   arrayBuffer     bytes to import as key\n    * @return {JSON}       key              key ready to be used in the HMAC cryptographic function\n    */\n\n  }, {\n    key: \"_importHMACkey\",\n    value: function _importHMACkey(arrayBuffer) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        _this._digest(arrayBuffer).then(function (key) {\n          _this._crypto.subtle.importKey('raw', //can be 'jwk' or 'raw'\n          key, {\n            //this is the algorithm options\n            name: 'HMAC',\n            hash: {\n              name: 'SHA-256'\n            },\n            //can be 'SHA-1', 'SHA-256', 'SHA-384', or 'SHA-512'\n            length: 256 //optional, if you want your key length to differ from the hash function's block length\n\n          }, true, //whether the key is extractable (i.e. can be used in exportKey)\n          ['sign', 'verify'] //can be any combination of 'sign' and 'verify'\n          ).then(function (key) {\n            //returns the symmetric key\n            // log.log('crypto-_importHMACkey', key);\n            resolve(key);\n          })[\"catch\"](function (err) {\n            reject(err);\n          });\n        });\n      });\n    }\n  }, {\n    key: \"_digest\",\n    value: function _digest(value) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        _this._crypto.subtle.digest({\n          name: 'SHA-256'\n        }, value //The data you want to hash as an ArrayBuffer\n        ).then(function (hash) {\n          //returns the hash as an ArrayBuffer\n          // log.log('crypto-digest', new Uint8Array(hash));\n          resolve(new Uint8Array(hash));\n        })[\"catch\"](function (err) {\n          Crypto_log.error(err);\n          reject(err);\n        });\n      });\n    }\n  }, {\n    key: \"_importAESkey\",\n    value: function _importAESkey(arrayBuffer) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        _this._crypto.subtle.importKey('raw', //can be 'jwk' or 'raw'\n        arrayBuffer, {\n          //this is the algorithm options\n          name: 'AES-CBC'\n        }, true, //whether the key is extractable (i.e. can be used in exportKey)\n        ['encrypt', 'decrypt'] //can be 'encrypt', 'decrypt', 'wrapKey', or 'unwrapKey'\n        ).then(function (key) {\n          //returns the symmetric key\n          // log.log('crypto-importAESkey', key);\n          resolve(key);\n        })[\"catch\"](function (err) {\n          Crypto_log.error('crypto-importAESkey', err);\n          reject(err);\n        });\n      });\n    }\n  }, {\n    key: \"_sha256\",\n    value: function _sha256(str) {\n      var _this = this;\n\n      var buffer = new TextEncoder('utf-8').encode(str);\n      return _this._crypto.subtle.digest('SHA-256', buffer).then(function (hash) {\n        return _this._hex(hash);\n      });\n    }\n  }, {\n    key: \"_hex\",\n    value: function _hex(buffer) {\n      var hexCodes = [];\n      var view = new DataView(buffer);\n\n      for (var i = 0; i < view.byteLength; i += 4) {\n        // Using getUint32 reduces the number of iterations needed (we process 4 bytes each time)\n        var value = view.getUint32(i);\n        var stringValue = value.toString(16);\n        var padding = '00000000';\n        var paddedValue = (padding + stringValue).slice(-padding.length);\n        hexCodes.push(paddedValue);\n      } // Join all the hex strings into one\n\n\n      return hexCodes.join('');\n    }\n  }]);\n\n  return Crypto;\n}();\n\n/* harmony default export */ var cryptoManager_Crypto = (Crypto_Crypto);\n// CONCATENATED MODULE: ./src/cryptoManager/CryptoManager.js\nfunction CryptoManager_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction CryptoManager_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction CryptoManager_createClass(Constructor, protoProps, staticProps) { if (protoProps) CryptoManager_defineProperties(Constructor.prototype, protoProps); if (staticProps) CryptoManager_defineProperties(Constructor, staticProps); return Constructor; }\n\n// Log System\n\nvar CryptoManager_log = loglevel[\"getLogger\"]('CryptoManager');\n\n\n/**\n*  The Crypto Manager provides manages cryptographic features for the runtime including:\n*  - Mutual Authentication between peers\n*  - Crypto Keys\n*  - e2e encryption and decription of communication between Hyperties and dta objects\n*\n*/\n\nvar CryptoManager_CryptoManager =\n/*#__PURE__*/\nfunction () {\n  /**\n  * This is the constructor to initialise the CryptoManager, it does not require any input.\n  * The init() must called in order to set mandatories attributes\n  */\n  function CryptoManager(storageManager) {\n    CryptoManager_classCallCheck(this, CryptoManager);\n\n    this.storageManager = storageManager;\n    this.userDefaultKeyRef = 'userAsymmetricKey';\n  }\n\n  CryptoManager_createClass(CryptoManager, [{\n    key: \"init\",\n    value: function init(runtimeURL, runtimeCapabilities, storageManager, dataObjectsStorage, registry, coreDiscovery, idm, runtimeFactory) {\n      var _this = this;\n\n      if (!runtimeURL) throw new Error('[] runtimeURL is missing.');\n      if (!storageManager) throw new Error('storageManager is missing');\n      if (!runtimeFactory) throw new Error('runtimeFactory is missing');\n      _this._runtimeURL = runtimeURL;\n      _this._cryptoManagerURL = _this._runtimeURL + '/cryptoManager'; //_this._myURL = _this._runtimeURL + '/crypto';\n\n      _this.storageManager = storageManager;\n      _this.dataObjectsStorage = dataObjectsStorage;\n      _this.runtimeCapabilities = runtimeCapabilities;\n      _this._runtimeFactory = runtimeFactory;\n      _this._domain = divideURL(_this._runtimeURL).domain;\n      _this.crypto = new cryptoManager_Crypto(_this._runtimeFactory); // hashTable to store all the crypto information between two hyperties\n\n      _this.chatKeys = {}; // hashTable to store the symmetric keys to be used in the chat group\n\n      _this.dataObjectSessionKeys = {}; //failsafe to enable/disable all the criptographic functions\n\n      _this.isToUseEncryption = true;\n      _this._registry = registry;\n      _this._coreDiscovery = coreDiscovery;\n      _this._idm = idm;\n    } //******************* GET AND SET METHODS *******************\n\n    /**\n    * return the messageBus in this Registry\n    * @param {MessageBus}           messageBus\n    */\n\n  }, {\n    key: \"loadSessionKeys\",\n    // to be used to initialise IDM with SessionKeys used in previous session\n    value: function loadSessionKeys() {\n      var _this = this;\n\n      return new Promise(function (resolve) {\n        _this.storageManager.get('dataObjectSessionKeys').then(function (sessionKeys) {\n          if (sessionKeys) _this.dataObjectSessionKeys = sessionKeys;else _this.dataObjectSessionKeys = {};\n          resolve();\n        });\n      });\n    }\n  }, {\n    key: \"_isFromRemoteSM\",\n    value: function _isFromRemoteSM(from) {\n      var splitFrom = from.split('://');\n      return splitFrom[0] === 'runtime' && from !== this._runtimeURL + '/sm';\n    }\n  }, {\n    key: \"addCryptoGUIListeners\",\n    value: function addCryptoGUIListeners() {\n      //TODO: Change the GUI invocation of this method\n      var _this = this;\n\n      _this._messageBus.addListener(_this._cryptoManagerURL, function (msg) {\n        var funcName = msg.body.method; //let returnedValue;\n\n        if (funcName === 'generateRSAKeyPair') {\n          _this._crypto.getMyPublicKey().then(function (key) {\n            var value = {\n              type: 'execute',\n              value: key,\n              code: 200\n            };\n            var replyMsg = {\n              id: msg.id,\n              type: 'response',\n              to: msg.from,\n              from: msg.to,\n              body: value\n            };\n\n            try {\n              _this._messageBus.postMessage(replyMsg);\n            } catch (err) {\n              CryptoManager_log.error('On addGUIListeners from if generateRSAKeyPair method postMessage error: ' + err);\n            }\n          });\n\n          return;\n        }\n      });\n    } //******************* ENCRYPTION METHODS *******************\n\n    /**\n    * Identifies the messages to be encrypted\n    * @param {Message}    message\n    * @returns {boolean}  returns true if the message requires encryption\n    */\n\n  }, {\n    key: \"_isToEncrypt\",\n    value: function _isToEncrypt(message) {\n      var _this = this;\n\n      CryptoManager_log.log('[CryptoManager._isToEncrypt]', message);\n      var isCreate = message.type === 'create';\n      var isFromHyperty = message.from.includes('hyperty://');\n      var isToHyperty = message.to.includes('hyperty://');\n      var isToDataObject = isDataObjectURL(message.to);\n\n      var reporter = _this.registry.getDataObjectReporter(message.to);\n\n      var doMutualAuthentication = message.hasOwnProperty('body') && message.body.hasOwnProperty('mutual') ? message.body.mutual : message.hasOwnProperty('body') && message.body.hasOwnProperty('value') && message.body.value.hasOwnProperty('mutual') ? message.body.value.mutual : true;\n      if (!doMutualAuthentication) return false;\n\n      if (reporter !== null && utils_isLegacy(reporter)) {\n        return false;\n      } //if is not to apply encryption, then returns resolve\n\n\n      if (!this.isToUseEncryption && !(message.type === 'handshake')) {\n        CryptoManager_log.info('not handshake: encryption disabled');\n        return false;\n      }\n\n      if (message.type === 'update') {\n        CryptoManager_log.info('update:encryption disabled');\n        return false;\n      }\n\n      if (message.type === 'forward') {\n        CryptoManager_log.info('forward:encryption disabled');\n        return false;\n      }\n\n      if (utils_isLegacy(message.to)) return false;\n      return isCreate && isFromHyperty && isToHyperty || isCreate && isFromHyperty && isToDataObject && doMutualAuthentication || message.type === 'handshake' || message.type === 'update' && doMutualAuthentication;\n    }\n  }, {\n    key: \"_isToDecrypt\",\n    value: function _isToDecrypt(message) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        // For sybscribe message let's start the mutualAuthentication\n        var isSubscription = message.type === 'subscribe';\n\n        var isFromRemoteSM = _this._isFromRemoteSM(message.from);\n\n        var mutual = message.body.hasOwnProperty('value') && message.body.value.hasOwnProperty('mutual') ? message.body.value.mutual : message.body.hasOwnProperty('mutual') ? message.body.mutual : true; //      let mutual = message.body.hasOwnProperty('mutual') ? message.body.mutual : false;\n\n        if (isSubscription && isFromRemoteSM && mutual) {\n          //  if (isSubscription && isFromRemoteSM ) {\n          CryptoManager_log.log('[CryptoManager._isToDecrypt] _doMutualAuthenticationPhase1');\n          console.log('[CryptoManager._isToDecrypt] ', message);\n\n          var reporter = _this.registry.getDataObjectReporter(message.to);\n\n          if (reporter !== null && utils_isLegacy(reporter)) {\n            return resolve(false);\n          }\n\n          _this._doMutualAuthenticationPhase1(message).then(function () {\n            resolve(false);\n          }, function (error) {\n            reject(error);\n          }); //      } else if (message.hasOwnProperty('body') && message.body.hasOwnProperty('value') && typeof message.body.value === 'string') {\n\n        } else if (message.hasOwnProperty('body') && message.body.hasOwnProperty('value') && typeof message.body.value === 'string' && mutual) {\n          CryptoManager_log.log('[CryptoManager._isToDecrypt] true');\n          resolve(true);\n        } else {\n          CryptoManager_log.log('[CryptoManager._isToDecrypt] false');\n          resolve(false);\n        }\n      })[\"catch\"](function (error) {\n        CryptoManager_log.error('[CryptoManager._isToDecrypt]', error);\n      });\n    }\n  }, {\n    key: \"encryptMessage\",\n    value: function encryptMessage(message) {\n      //log.info('encryptMessage:message', message);\n      var _this = this;\n\n      CryptoManager_log.log('encrypt message ');\n      return new Promise(function (resolve, reject) {\n        var isHandShakeType = message.type === 'handshake'; //if is not to apply encryption, then returns resolve\n\n        if (!_this._isToEncrypt(message)) {\n          // log.log('decryption disabled');\n          return resolve(message);\n        }\n\n        var dataObjectURL = parseMessageURL(message.to);\n        var isToDataObject = isDataObjectURL(dataObjectURL);\n        var isToLegacyIdentity = utils_isLegacy(message.to);\n        var isFromHyperty = divideURL(message.from).type === 'hyperty';\n        var isToHyperty = divideURL(message.to).type === 'hyperty';\n\n        if (message.type === 'update') {\n          CryptoManager_log.log('encrypt message: message type update');\n          return resolve(message);\n        }\n\n        if (isToLegacyIdentity) {\n          resolve(message);\n        } else if (isFromHyperty && isToHyperty) {\n          var userURL = _this._registry.getHypertyOwner(message.from);\n\n          if (userURL) {\n            // check if exists any keys between two users\n            var chatKeys = _this.chatKeys[message.from + '<->' + message.to];\n\n            if (!chatKeys) {\n              chatKeys = _this._newChatCrypto(message, userURL); //log.log('createChatKey encrypt', message.from + message.to);\n\n              _this.chatKeys[message.from + '<->' + message.to] = chatKeys;\n              message.body.handshakePhase = 'startHandShake';\n            }\n\n            if (chatKeys.authenticated && !isHandShakeType) {\n              var iv = _this.crypto.generateIV();\n\n              _this.crypto.encryptAES(chatKeys.keys.hypertyFromSessionKey, stringify(message.body.value), iv).then(function (encryptedValue) {\n                var filteredMessage = _this._filterMessageToHash(message, stringify(message.body.value) + stringify(iv), chatKeys.hypertyFrom.messageInfo);\n\n                _this.crypto.hashHMAC(chatKeys.keys.hypertyFromHashKey, filteredMessage).then(function (hash) {\n                  //log.log('result of hash ', hash);\n                  var value = {\n                    iv: encode(iv),\n                    value: encode(encryptedValue),\n                    hash: encode(hash)\n                  };\n                  message.body.value = encode(value);\n                  resolve(message);\n                });\n              }); // if is a handshake message, just resolve it\n\n            } else if (isHandShakeType) {\n              resolve(message); // else, starts a new handshake protocol\n            } else {\n              _this._doHandShakePhase(message, chatKeys).then(function (value) {\n                _this.chatKeys[message.from + '<->' + message.to] = value.chatKeys;\n\n                _this._messageBus.postMessage(value.message);\n\n                reject('encrypt handshake protocol phase ');\n              });\n            }\n          } else {\n            reject('In encryptMessage: Hyperty owner URL was not found');\n          } //if from hyperty to a dataObjectURL\n\n        } else if (isFromHyperty && isToDataObject) {\n          //log.log('dataObject value to encrypt: ', message.body.value);\n          //log.log('IdentityModule - encrypt from hyperty to dataobject ', message);\n          _this.storageManager.get('dataObjectSessionKeys').then(function (sessionKeys) {\n            sessionKeys = chatkeysToArrayCloner(sessionKeys || {});\n            var dataObjectKey = sessionKeys ? sessionKeys[dataObjectURL] : null;\n\n            _this.dataObjectsStorage.getDataObject(dataObjectURL).then(function (isHypertyReporter) {\n              //if no key exists, create a new one if is the reporter of dataObject\n              if (!dataObjectKey) {\n                // if the hyperty is the reporter of the dataObject then generates a session key\n                if (isHypertyReporter.reporter && isHypertyReporter.reporter === message.from) {\n                  var sessionKey = _this.crypto.generateRandom();\n\n                  _this.dataObjectSessionKeys[dataObjectURL] = {\n                    sessionKey: sessionKey,\n                    isToEncrypt: true\n                  };\n                  var dataObjectSessionKeysClone = chatkeysToStringCloner(_this.dataObjectSessionKeys); //TODO: check if this does not need to be stored\n\n                  _this.storageManager.set('dataObjectSessionKeys', 0, dataObjectSessionKeysClone)[\"catch\"](function (err) {\n                    reject('On encryptMessage from method storageManager.set error: ' + err);\n                  });\n\n                  dataObjectKey = _this.dataObjectSessionKeys[dataObjectURL];\n                }\n              } //check if there is already a session key for the chat room\n\n\n              if (dataObjectKey) {\n                // and if is to apply encryption, encrypt the messages\n                if (dataObjectKey.isToEncrypt) {\n                  var _iv = _this.crypto.generateIV();\n\n                  var stringifiedIV = stringify(_iv);\n                  var stringifiedMessageBody = stringify(message.body.value);\n\n                  _this.crypto.encryptAES(dataObjectKey.sessionKey, stringifiedMessageBody, _iv).then(function (encryptedValue) {\n                    delete message.body.identity.assertion; //TODO: Check why assertion is comming on the message!\n\n                    delete message.body.identity.expires; //TODO: Check why expires is comming on the message!\n\n                    var filteredMessage = _this._filterMessageToHash(message, stringifiedMessageBody + stringifiedIV);\n\n                    _this.crypto.hashHMAC(dataObjectKey.sessionKey, filteredMessage).then(function (hash) {\n                      // log.log('hash ', hash);\n                      var newValue = {\n                        value: encode(encryptedValue),\n                        iv: encode(_iv),\n                        hash: encode(hash)\n                      };\n                      message.body.value = stringify(newValue);\n                      resolve(message);\n                    });\n                  }); // if not, just send the message\n\n                } else {\n                  resolve(message);\n                } // start the generation of a new session Key\n\n              } else {\n                reject('Data object key could not be defined: Failed to decrypt message ');\n              }\n            })[\"catch\"](function (err) {\n              reject('On encryptMessage from method dataObjectsStorage.getDataObject error: ' + err);\n            });\n          })[\"catch\"](function (err) {\n            reject('On encryptMessage from method storageManager.get error: ' + err);\n          });\n        }\n      });\n    }\n  }, {\n    key: \"encryptDataObject\",\n    value: function encryptDataObject(dataObject, sender) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        CryptoManager_log.info('dataObject value to encrypt: ', dataObject);\n        var dataObjectURL = parseMessageURL(sender);\n\n        _this.storageManager.get('dataObjectSessionKeys').then(function (sessionKeys) {\n          sessionKeys = chatkeysToArrayCloner(sessionKeys || {});\n          var dataObjectKey = sessionKeys ? sessionKeys[dataObjectURL] : null; //check if there is already a session key for the chat room\n\n          if (dataObjectKey) {\n            // and if is to apply encryption, encrypt the messages\n            if (dataObjectKey.isToEncrypt) {\n              var iv = _this.crypto.generateIV();\n\n              _this.crypto.encryptAES(dataObjectKey.sessionKey, stringify(dataObject), iv).then(function (encryptedValue) {\n                var newValue = {\n                  value: encode(encryptedValue),\n                  iv: encode(iv)\n                }; //log.log('encrypted dataObject', newValue);\n\n                return resolve(newValue);\n              })[\"catch\"](function (err) {\n                reject('On encryptDataObject from method encryptAES error: ' + err);\n              }); // if not, just send the message\n\n            } else {\n              CryptoManager_log.info('The dataObject is not encrypted');\n              return resolve(dataObject);\n            } // start the generation of a new session Key\n\n          } else {\n            return reject('No dataObjectKey for this dataObjectURL:', dataObjectURL);\n          }\n        })[\"catch\"](function (err) {\n          reject('On encryptDataObject from method storageManager.get error: ' + err);\n        });\n      });\n    }\n  }, {\n    key: \"decryptMessage\",\n    value: function decryptMessage(message) {\n      var _this = this; //  log.log('decryptMessage:message', message);\n\n\n      return new Promise(function (resolve, reject) {\n        var isHandShakeType = message.type === 'handshake';\n\n        _this._isToDecrypt(message).then(function (isToDecrypt) {\n          //if is not to apply encryption, then returns resolve\n          if (!isToDecrypt) return resolve(message);\n          var dataObjectURL = parseMessageURL(message.to);\n          var isToDataObject = isDataObjectURL(dataObjectURL);\n          var isFromHyperty = divideURL(message.from).type === 'hyperty';\n          var isToHyperty = divideURL(message.to).type === 'hyperty';\n\n          if (message.type === 'update') {\n            return resolve(message);\n          } //is is hyperty to hyperty communication\n\n\n          if (isFromHyperty && isToHyperty) {\n            // log.log('decrypt hyperty to hyperty');\n            var userURL = _this._registry.getHypertyOwner(message.to);\n\n            if (userURL) {\n              var chatKeys = _this.chatKeys[message.to + '<->' + message.from];\n\n              if (!chatKeys) {\n                chatKeys = _this._newChatCrypto(message, userURL, 'decrypt');\n                _this.chatKeys[message.to + '<->' + message.from] = chatKeys;\n              }\n\n              if (chatKeys.authenticated && !isHandShakeType) {\n                var value = decode(message.body.value);\n                var iv = decodeToUint8Array(value.iv);\n                var data = decodeToUint8Array(value.value);\n                var hash = decodeToUint8Array(value.hash);\n\n                _this.crypto.decryptAES(chatKeys.keys.hypertyToSessionKey, data, iv).then(function (decryptedData) {\n                  // log.log('decrypted value ', decryptedData);\n                  message.body.value = decryptedData;\n\n                  var filteredMessage = _this._filterMessageToHash(message, decryptedData + iv);\n\n                  _this.crypto.verifyHMAC(chatKeys.keys.hypertyToHashKey, filteredMessage, hash).then(function (result) {\n                    //log.log('result of hash verification! ', result);\n                    message.body.assertedIdentity = true;\n                    resolve(message);\n                  });\n                });\n              } else if (isHandShakeType) {\n                _this._doHandShakePhase(message, chatKeys).then(function (value) {\n                  //if it was started by doMutualAuthentication then ends the protocol\n                  if (value === 'handShakeEnd') {//reject('decrypt handshake protocol phase');\n                    // if was started by a message, then resend that message\n                  } else {\n                    _this.chatKeys[message.to + '<->' + message.from] = value.chatKeys;\n\n                    _this._messageBus.postMessage(value.message); //reject('decrypt handshake protocol phase ');\n\n                  }\n                });\n              } else {\n                reject('wrong message do decrypt');\n              }\n            } else {\n              reject('error on decrypt message');\n            } //if from hyperty to a dataObjectURL\n\n          } else if (isFromHyperty && isToDataObject) {\n            // log.log('dataObject value to decrypt: ', message.body);\n            _this.storageManager.get('dataObjectSessionKeys').then(function (sessionKeys) {\n              sessionKeys = chatkeysToArrayCloner(sessionKeys || {});\n              var dataObjectKey = sessionKeys ? sessionKeys[dataObjectURL] : null;\n\n              if (dataObjectKey) {\n                //check if is to apply encryption\n                if (dataObjectKey.isToEncrypt) {\n                  var parsedValue = parse(message.body.value);\n\n                  var _iv2 = decodeToUint8Array(parsedValue.iv);\n\n                  var encryptedValue = decodeToUint8Array(parsedValue.value);\n\n                  var _hash = decodeToUint8Array(parsedValue.hash);\n\n                  _this.crypto.decryptAES(dataObjectKey.sessionKey, encryptedValue, _iv2).then(function (decryptedValue) {\n                    var parsedValue = parse(decryptedValue); // log.log('decrypted Value,', parsedValue);\n\n                    message.body.value = parsedValue;\n\n                    var filteredMessage = _this._filterMessageToHash(message, stringify(parsedValue) + stringify(_iv2));\n\n                    _this.crypto.verifyHMAC(dataObjectKey.sessionKey, filteredMessage, _hash).then(function (result) {\n                      CryptoManager_log.log('Received message HMAC result', result);\n                      message.body.assertedIdentity = true;\n                      resolve(message);\n                    })[\"catch\"](function (err) {\n                      reject('Message HMAC is invalid: ' + err);\n                    });\n                  }); //if not, just return the message\n\n                } else {\n                  message.body.assertedIdentity = true;\n                  resolve(message);\n                }\n              } else {\n                message.body.assertedIdentity = true;\n                resolve(message); //reject('no sessionKey for chat room found');\n              }\n            });\n          } else {\n            reject('wrong message to decrypt');\n          }\n        });\n      });\n    }\n  }, {\n    key: \"decryptDataObject\",\n    value: function decryptDataObject(dataObject, sender) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        //if is not to apply encryption, then returns resolve\n        if (!_this.isToUseEncryption) {\n          // log.log('decryption disabled');\n          return resolve(dataObject);\n        }\n\n        var dataObjectURL = parseMessageURL(sender); // log.log('dataObject value to decrypt: ', dataObject);\n\n        _this.storageManager.get('dataObjectSessionKeys').then(function (sessionKeys) {\n          sessionKeys = chatkeysToArrayCloner(sessionKeys);\n          var dataObjectKey = sessionKeys ? sessionKeys[dataObjectURL] : null;\n\n          if (dataObjectKey) {\n            //check if is to apply encryption\n            if (dataObjectKey.isToEncrypt) {\n              var iv = decodeToUint8Array(dataObject.iv);\n              var encryptedValue = decodeToUint8Array(dataObject.value);\n\n              _this.crypto.decryptAES(dataObjectKey.sessionKey, encryptedValue, iv).then(function (decryptedValue) {\n                var parsedValue = parse(decryptedValue);\n                var newValue = {\n                  value: parsedValue,\n                  iv: encode(iv)\n                }; // log.log('decrypted dataObject,', newValue);\n\n                return resolve(newValue);\n              })[\"catch\"](function (err) {\n                reject('On decryptDataObject from method encryptAES error: ' + err);\n              }); //if not, just return the dataObject\n\n            } else {\n              // log.log('The dataObject is not encrypted');\n              return resolve(dataObject);\n            }\n          } else {\n            return reject('No dataObjectKey for this dataObjectURL:', dataObjectURL);\n          }\n        });\n      });\n    }\n  }, {\n    key: \"_doMutualAuthenticationPhase1\",\n    value: function _doMutualAuthenticationPhase1(message) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        var to = message.to.split('/'); //let subsIndex = to.indexOf('subscription');\n        //let isDataObjectSubscription = subsIndex !== -1;\n\n        to.pop();\n        var dataObjectURL = to[0] + '//' + to[2] + '/' + to[3];\n\n        _this._doMutualAuthenticationPhase2(dataObjectURL, message.body.subscriber).then(function () {\n          _this._registry.registerSubscriber(dataObjectURL, message.body.subscriber);\n\n          resolve();\n        }, function (error) {\n          reject(error);\n        });\n      });\n    }\n  }, {\n    key: \"_doMutualAuthenticationPhase2\",\n    value: function _doMutualAuthenticationPhase2(sender, receiver) {\n      CryptoManager_log.info('doMutualAuthentication:sender ', sender);\n      CryptoManager_log.info('doMutualAuthentication:receiver ', receiver);\n\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        var dataObjectURL; // check if the sender is a dataObject and if so stores that value\n\n        var reporterURL = _this._registry.getReporterURLSynchonous(sender);\n\n        if (reporterURL) {\n          dataObjectURL = sender;\n          sender = reporterURL;\n        }\n\n        var msg = {\n          to: receiver,\n          from: sender,\n          callback: undefined,\n          body: {\n            handshakePhase: 'startHandShake',\n            ignore: 'ignoreMessage'\n          }\n        };\n\n        if (!sender || !receiver) {\n          return reject('sender or receiver missing on doMutualAuthentication');\n        }\n\n        var chatKeys = _this.chatKeys[sender + '<->' + receiver];\n\n        var userURL = _this._registry.getHypertyOwner(sender);\n\n        if (userURL) {\n          if (!chatKeys) {\n            // callback to resolve when finish the mutual authentication\n            var resolved = function resolved(value) {\n              // log.log('callback value:', value);\n              resolve(value);\n            };\n\n            msg.callback = resolved;\n            msg.dataObjectURL = dataObjectURL;\n            chatKeys = _this._newChatCrypto(msg, userURL);\n            _this.chatKeys[sender + '<->' + receiver] = chatKeys;\n          }\n\n          if (chatKeys.authenticated) {\n            var startSessionKeyExchange = {\n              to: sender,\n              from: receiver\n            };\n            chatKeys.dataObjectURL = dataObjectURL;\n\n            _this._sendReporterSessionKey(startSessionKeyExchange, chatKeys).then(function (value) {\n              _this._messageBus.postMessage(value.message);\n\n              resolve('exchange of chat sessionKey initiated');\n            })[\"catch\"](function (err) {\n              reject('On doMutualAuthentication from method _sendReporterSessionKey error: ' + err);\n            });\n          } else {\n            _this._doHandShakePhase(msg, chatKeys);\n          }\n        } else {\n          reject('Mutual authentication error: Hyperty owner could not be resolved');\n        }\n      });\n    }\n    /**\n    * returns the reporter associated to the dataObject URL\n    * @param   {String}   dataObjectURL         dataObject url\n    * @return   {String}  reporter              dataObject url reporter\n    */\n\n    /*  _getHypertyFromDataObject(dataObjectURL) {\n      log.info('_getHypertyFromDataObject:dataObjectURL', dataObjectURL);\n      let _this = this;\n       return new Promise(function(resolve, reject) {\n         let splitedURL = divideURL(dataObjectURL);\n        let domain = splitedURL.domain;\n        let finalURL = _this._parseMessageURL(dataObjectURL);\n         // check if is the creator of the hyperty\n        let reporterURL = _this.registry.getReporterURLSynchonous(finalURL);\n        log.info('_getHypertyFromDataObject:reporterURL', reporterURL);\n         if (reporterURL) {\n          resolve(reporterURL);\n        } else {\n          // check if there is already an association from an hypertyURL to the dataObject\n          let storedReporterURL = _this.dataObjectsIdentity[finalURL];\n          log.info('_getHypertyFromDataObject:storedReporterURL', storedReporterURL);\n           if (storedReporterURL) {\n            resolve(storedReporterURL);\n          } else {\n            // check if there is any hyperty that subscribed the dataObjectURL\n            let subscriberHyperty = _this.registry.getDataObjectSubscriberHyperty(dataObjectURL);\n            log.info('_getHypertyFromDataObject:subscriberHyperty', subscriberHyperty);\n             if (subscriberHyperty) {\n              resolve(subscriberHyperty);\n            } else {\n              // search in domain registry for the hyperty associated to the dataObject\n              // search in case is a subscriber who wants to know the reporter\n              _this._coreDiscovery.discoverDataObjectPerURL(finalURL, domain).then(dataObject => {\n                log.info('_getHypertyFromDataObject:dataObject', dataObject);\n                _this.dataObjectsIdentity[finalURL] = dataObject.reporter;\n                log.info('_getHypertyFromDataObject:dataObject.reporter', dataObject.reporter);\n                resolve(dataObject.reporter);\n              }, err => {\n                reject(err);\n              });\n            }\n          }\n        }\n      });\n    }*/\n\n  }, {\n    key: \"_sendReporterSessionKey\",\n    value: function _sendReporterSessionKey(message, chatKeys) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        var sessionKeyBundle = _this.dataObjectSessionKeys[chatKeys.dataObjectURL];\n        var reporterSessionKeyMsg;\n        var valueToEncrypt;\n        var sessionKey;\n        var iv;\n        var value = {}; //if there is not yet a session Key, generates a new one\n\n        if (!sessionKeyBundle) {\n          sessionKey = _this.crypto.generateRandom();\n          _this.dataObjectSessionKeys[chatKeys.dataObjectURL] = {\n            sessionKey: sessionKey,\n            isToEncrypt: true\n          };\n          var dataObjectSessionKeysClone = chatkeysToStringCloner(_this.dataObjectSessionKeys);\n\n          _this.storageManager.set('dataObjectSessionKeys', 0, dataObjectSessionKeysClone)[\"catch\"](function (err) {\n            reject('On _sendReporterSessionKey from method storageManager.set(dataObjectSessionKeys...) error: ' + err);\n          });\n        } else {\n          sessionKey = sessionKeyBundle.sessionKey;\n        }\n\n        try {\n          valueToEncrypt = encode({\n            value: encode(sessionKey),\n            dataObjectURL: chatKeys.dataObjectURL\n          });\n        } catch (err) {\n          return reject('On _sendReporterSessionKey from method storageManager.set error valueToEncrypt: ' + err);\n        }\n\n        iv = _this.crypto.generateIV();\n        value.iv = encode(iv);\n\n        _this.crypto.encryptAES(chatKeys.keys.hypertyFromSessionKey, valueToEncrypt, iv).then(function (encryptedValue) {\n          reporterSessionKeyMsg = {\n            type: 'handshake',\n            to: message.from,\n            from: message.to,\n            body: {\n              handshakePhase: 'reporterSessionKey',\n              value: encode(encryptedValue)\n            }\n          };\n\n          var filteredMessage = _this._filterMessageToHash(reporterSessionKeyMsg, valueToEncrypt + iv, chatKeys.hypertyFrom.messageInfo);\n\n          return _this.crypto.hashHMAC(chatKeys.keys.hypertyFromHashKey, filteredMessage);\n        }).then(function (hashedMessage) {\n          var valueWithHash = encode({\n            value: reporterSessionKeyMsg.body.value,\n            hash: encode(hashedMessage),\n            iv: value.iv\n          });\n          reporterSessionKeyMsg.body.value = valueWithHash;\n          resolve({\n            message: reporterSessionKeyMsg,\n            chatKeys: chatKeys\n          });\n        })[\"catch\"](function (err) {\n          reject('On _sendReporterSessionKey from chained promises encryptAES error: ' + err);\n        });\n      });\n    }\n    /**\n    * Function that resolve and create the domainURL in case it is provided one. If not, resolve the default domainURL\n    * @param {String}     idpDomain     idpDomain (Optional)\n    */\n\n  }, {\n    key: \"_resolveDomain\",\n    value: function _resolveDomain(idpDomain) {\n      if (!idpDomain) {\n        return 'domain-idp://google.com';\n      } else {\n        return 'domain-idp://' + idpDomain;\n      }\n    }\n  }, {\n    key: \"_doHandShakePhase\",\n    value: function _doHandShakePhase(message, chatKeys) {\n      // log('_doHandShakePhase:dataObject', message);\n      //\tlog('_doHandShakePhase:chatKeys', chatKeys);\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        var handshakeType = message.body.handshakePhase;\n        var iv;\n        var hash;\n        var value = {};\n        var filteredMessage;\n        var privateKeyHolder;\n        CryptoManager_log.info('handshake phase: ', handshakeType);\n\n        switch (handshakeType) {\n          case 'startHandShake':\n            {\n              chatKeys.keys.fromRandom = _this.crypto.generateRandom();\n              var startHandShakeMsg = {\n                type: 'handshake',\n                to: message.to,\n                from: message.from,\n                body: {\n                  handshakePhase: 'senderHello',\n                  value: encode(chatKeys.keys.fromRandom)\n                }\n              };\n              chatKeys.handshakeHistory.senderHello = _this._filterMessageToHash(startHandShakeMsg, undefined, chatKeys.hypertyFrom.messageInfo); // check if was the encrypt function or the mutual authentication that request the\n              // start of the handShakePhase.\n\n              if (chatKeys.initialMessage) {\n                resolve({\n                  message: startHandShakeMsg,\n                  chatKeys: chatKeys\n                });\n              } else {\n                _this.chatKeys[message.from + '<->' + message.to] = chatKeys;\n\n                _this._messageBus.postMessage(startHandShakeMsg);\n              }\n\n              break;\n            }\n\n          case 'senderHello':\n            {\n              CryptoManager_log.log('senderHello');\n              chatKeys.handshakeHistory.senderHello = _this._filterMessageToHash(message);\n              chatKeys.keys.fromRandom = decodeToUint8Array(message.body.value);\n              chatKeys.keys.toRandom = _this.crypto.generateRandom();\n              var senderHelloMsg = {\n                type: 'handshake',\n                to: message.from,\n                from: message.to,\n                body: {\n                  handshakePhase: 'receiverHello',\n                  value: encode(chatKeys.keys.toRandom)\n                }\n              };\n              chatKeys.handshakeHistory.receiverHello = _this._filterMessageToHash(senderHelloMsg, undefined, chatKeys.hypertyFrom.messageInfo);\n              resolve({\n                message: senderHelloMsg,\n                chatKeys: chatKeys\n              });\n              break;\n            }\n\n          case 'receiverHello':\n            {\n              CryptoManager_log.log('receiverHello');\n\n              _this.getMyPrivateKey().then(function (privateKey) {\n                privateKeyHolder = privateKey;\n                chatKeys.handshakeHistory.receiverHello = _this._filterMessageToHash(message);\n                return _this._idm.validateAssertion(message.body.identity.assertion, undefined, message.body.identity.idp.domain);\n              }).then(function (value) {\n                //TODO remove later this verification as soon as all the IdP proxy are updated in the example\n                var encodedpublicKey = typeof value.contents === 'string' ? value.contents : value.contents.nonce;\n                var receiverPublicKey = parseToUint8Array(encodedpublicKey);\n\n                var premasterSecret = _this.crypto.generatePMS();\n\n                var toRandom = message.body.value;\n                chatKeys.hypertyTo.assertion = message.body.identity.assertion;\n                chatKeys.hypertyTo.publicKey = receiverPublicKey;\n                chatKeys.hypertyTo.userID = message.body.identity.userProfile.userURL;\n                chatKeys.keys.toRandom = decodeToUint8Array(toRandom);\n                chatKeys.keys.premasterKey = premasterSecret;\n\n                var concatKey = _this.crypto.concatPMSwithRandoms(premasterSecret, chatKeys.keys.toRandom, chatKeys.keys.fromRandom);\n\n                return _this.crypto.generateMasterSecret(concatKey, 'messageHistoric' + chatKeys.keys.toRandom + chatKeys.keys.fromRandom); //generate the master key\n              }).then(function (masterKey) {\n                chatKeys.keys.masterKey = masterKey;\n                return _this.crypto.generateKeys(masterKey, 'key expansion' + chatKeys.keys.toRandom + chatKeys.keys.fromRandom); //generate the symmetric and hash keys\n              }).then(function (keys) {\n                chatKeys.keys.hypertyToSessionKey = new Uint8Array(keys[0]);\n                chatKeys.keys.hypertyFromSessionKey = new Uint8Array(keys[1]);\n                chatKeys.keys.hypertyToHashKey = new Uint8Array(keys[2]);\n                chatKeys.keys.hypertyFromHashKey = new Uint8Array(keys[3]);\n                iv = _this.crypto.generateIV();\n                value.iv = encode(iv);\n                var messageStructure = {\n                  type: 'handshake',\n                  to: message.from,\n                  from: message.to,\n                  body: {\n                    handshakePhase: 'senderCertificate'\n                  }\n                }; // hash the value and the iv\n\n                filteredMessage = _this._filterMessageToHash(messageStructure, 'ok' + iv, chatKeys.hypertyFrom.messageInfo);\n                return _this.crypto.hashHMAC(chatKeys.keys.hypertyFromHashKey, filteredMessage);\n              }).then(function (hash) {\n                value.hash = encode(hash); //encrypt the data\n\n                return _this.crypto.encryptAES(chatKeys.keys.hypertyFromSessionKey, 'ok', iv);\n              }).then(function (encryptedData) {\n                value.symetricEncryption = encode(encryptedData);\n                return _this.crypto.encryptRSA(chatKeys.hypertyTo.publicKey, chatKeys.keys.premasterKey);\n              }).then(function (encryptedValue) {\n                value.assymetricEncryption = encode(encryptedValue);\n                var messageStructure = {\n                  type: 'handshake',\n                  to: message.from,\n                  from: message.to,\n                  body: {\n                    handshakePhase: 'senderCertificate'\n                  }\n                };\n\n                var messageToHash = _this._filterMessageToHash(messageStructure, chatKeys.keys.premasterKey, chatKeys.hypertyFrom.messageInfo);\n\n                return _this.crypto.signRSA(privateKeyHolder, encode(chatKeys.handshakeHistory) + encode(messageToHash));\n              }).then(function (signature) {\n                value.signature = encode(signature);\n                var receiverHelloMsg = {\n                  type: 'handshake',\n                  to: message.from,\n                  from: message.to,\n                  body: {\n                    handshakePhase: 'senderCertificate',\n                    value: encode(value)\n                  }\n                };\n                chatKeys.handshakeHistory.senderCertificate = _this._filterMessageToHash(receiverHelloMsg, 'ok' + iv, chatKeys.hypertyFrom.messageInfo);\n                resolve({\n                  message: receiverHelloMsg,\n                  chatKeys: chatKeys\n                });\n              }, function (error) {\n                return reject(error);\n              });\n\n              break;\n            }\n\n          case 'senderCertificate':\n            {\n              CryptoManager_log.log('senderCertificate');\n              var receivedValue = decode(message.body.value);\n\n              _this.getMyPrivateKey().then(function (privateKey) {\n                privateKeyHolder = privateKey;\n                return _this._idm.validateAssertion(message.body.identity.assertion, undefined, message.body.identity.idp.domain);\n              }).then(function (value) {\n                var encryptedPMS = decodeToUint8Array(receivedValue.assymetricEncryption); //TODO remove later this verification as soon as all the IdP proxy are updated in the example\n\n                var encodedpublicKey = typeof value.contents === 'string' ? value.contents : value.contents.nonce;\n                var senderPublicKey = parseToUint8Array(encodedpublicKey);\n                chatKeys.hypertyTo.assertion = message.body.identity.assertion;\n                chatKeys.hypertyTo.publicKey = senderPublicKey;\n                chatKeys.hypertyTo.userID = message.body.identity.userProfile.userURL;\n                return _this.crypto.decryptRSA(privateKeyHolder, encryptedPMS);\n              }, function (error) {\n                // log.log(error);\n                reject('Error during authentication of identity: ', error.message); //obtain the PremasterKey using the private key\n              }).then(function (pms) {\n                chatKeys.keys.premasterKey = new Uint8Array(pms);\n                var signature = decodeToUint8Array(receivedValue.signature);\n\n                var receivedmsgToHash = _this._filterMessageToHash(message, chatKeys.keys.premasterKey);\n\n                return _this.crypto.verifyRSA(chatKeys.hypertyTo.publicKey, encode(chatKeys.handshakeHistory) + encode(receivedmsgToHash), signature); // validates the signature received\n              }).then(function (signValidationResult) {\n                //log.log('SenderCertificate - signature validation result ', signValidationResult);\n                var concatKey = _this.crypto.concatPMSwithRandoms(chatKeys.keys.premasterKey, chatKeys.keys.toRandom, chatKeys.keys.fromRandom);\n\n                return _this.crypto.generateMasterSecret(concatKey, 'messageHistoric' + chatKeys.keys.toRandom + chatKeys.keys.fromRandom); // generates the master keys from the Premaster key and the randoms\n              }).then(function (masterKey) {\n                chatKeys.keys.masterKey = masterKey;\n                return _this.crypto.generateKeys(masterKey, 'key expansion' + chatKeys.keys.toRandom + chatKeys.keys.fromRandom); // generates the symmetric keys to be used in the symmetric encryption\n              }).then(function (keys) {\n                chatKeys.keys.hypertyFromSessionKey = new Uint8Array(keys[0]);\n                chatKeys.keys.hypertyToSessionKey = new Uint8Array(keys[1]);\n                chatKeys.keys.hypertyFromHashKey = new Uint8Array(keys[2]);\n                chatKeys.keys.hypertyToHashKey = new Uint8Array(keys[3]);\n                iv = decodeToUint8Array(receivedValue.iv);\n                var data = decodeToUint8Array(receivedValue.symetricEncryption);\n                return _this.crypto.decryptAES(chatKeys.keys.hypertyToSessionKey, data, iv);\n              }).then(function (decryptedData) {\n                // log.log('decryptedData', decryptedData);\n                chatKeys.handshakeHistory.senderCertificate = _this._filterMessageToHash(message, decryptedData + iv);\n                var hashReceived = decodeToUint8Array(receivedValue.hash);\n                filteredMessage = _this._filterMessageToHash(message, decryptedData + iv);\n                return _this.crypto.verifyHMAC(chatKeys.keys.hypertyToHashKey, filteredMessage, hashReceived);\n              }).then(function (verifiedHash) {\n                // log.log('result of hash verification ', verifiedHash);\n                var receiverFinishedMessage = {\n                  type: 'handshake',\n                  to: message.from,\n                  from: message.to,\n                  body: {\n                    handshakePhase: 'receiverFinishedMessage'\n                  }\n                };\n                iv = _this.crypto.generateIV();\n                value.iv = encode(iv);\n                filteredMessage = _this._filterMessageToHash(receiverFinishedMessage, 'ok!' + iv, chatKeys.hypertyFrom.messageInfo); //log.log('TIAGO: doHandShakePhase verifiedHash');\n\n                return _this.crypto.hashHMAC(chatKeys.keys.hypertyFromHashKey, filteredMessage);\n              }).then(function (hash) {\n                value.hash = encode(hash);\n                return _this.crypto.encryptAES(chatKeys.keys.hypertyFromSessionKey, 'ok!', iv);\n              }).then(function (encryptedValue) {\n                value.value = encode(encryptedValue);\n                var receiverFinishedMessage = {\n                  type: 'handshake',\n                  to: message.from,\n                  from: message.to,\n                  body: {\n                    handshakePhase: 'receiverFinishedMessage',\n                    value: encode(value)\n                  }\n                };\n                chatKeys.handshakeHistory.receiverFinishedMessage = _this._filterMessageToHash(receiverFinishedMessage, 'ok!' + iv, chatKeys.hypertyFrom.messageInfo);\n                chatKeys.authenticated = true;\n                resolve({\n                  message: receiverFinishedMessage,\n                  chatKeys: chatKeys\n                });\n              })[\"catch\"](function (err) {\n                reject('On _doHandShakePhase from senderCertificate error: ' + err);\n              });\n\n              break;\n            }\n\n          case 'receiverFinishedMessage':\n            {\n              chatKeys.authenticated = true;\n              value = decode(message.body.value);\n              iv = decodeToUint8Array(value.iv);\n              var data = decodeToUint8Array(value.value);\n              hash = decodeToUint8Array(value.hash);\n\n              _this.crypto.decryptAES(chatKeys.keys.hypertyToSessionKey, data, iv).then(function (decryptedData) {\n                // log.log('decryptedData', decryptedData);\n                chatKeys.handshakeHistory.receiverFinishedMessage = _this._filterMessageToHash(message, decryptedData + iv);\n\n                var filteredMessage = _this._filterMessageToHash(message, decryptedData + iv);\n\n                _this.crypto.verifyHMAC(chatKeys.keys.hypertyToHashKey, filteredMessage, hash).then(function (result) {\n                  // check if there was an initial message that was blocked and send it\n                  if (chatKeys.initialMessage) {\n                    var initialMessage = {\n                      type: 'create',\n                      to: message.from,\n                      from: message.to,\n                      body: {\n                        value: chatKeys.initialMessage.body.value\n                      }\n                    };\n                    resolve({\n                      message: initialMessage,\n                      chatKeys: chatKeys\n                    }); //sends the sessionKey to the subscriber hyperty\n                  } else {\n                    _this._sendReporterSessionKey(message, chatKeys).then(function (value) {\n                      resolve(value);\n                    })[\"catch\"](function (err) {\n                      reject('On _doHandShakePhase from receiverFinishedMessage error: ' + err);\n                    });\n                  }\n                });\n              });\n\n              break;\n            }\n\n          case 'reporterSessionKey':\n            {\n              CryptoManager_log.log('reporterSessionKey');\n              var valueIVandHash = decode(message.body.value);\n              hash = decodeToUint8Array(valueIVandHash.hash);\n              iv = decodeToUint8Array(valueIVandHash.iv);\n              var encryptedValue = decodeToUint8Array(valueIVandHash.value);\n              var parsedValue;\n              var sessionKey;\n              var dataObjectURL;\n              var receiverAcknowledgeMsg; //log.log('[IdentityModule reporterSessionKey] - decryptAES: ', chatKeys.keys.hypertyToSessionKey, encryptedValue, iv);\n\n              _this.crypto.decryptAES(chatKeys.keys.hypertyToSessionKey, encryptedValue, iv).then(function (decryptedValue) {\n                parsedValue = decode(decryptedValue);\n                sessionKey = decodeToUint8Array(parsedValue.value);\n                dataObjectURL = parsedValue.dataObjectURL;\n\n                var messageToHash = _this._filterMessageToHash(message, decryptedValue + iv);\n\n                return _this.crypto.verifyHMAC(chatKeys.keys.hypertyToHashKey, messageToHash, hash);\n              }).then(function (hashResult) {\n                // log.log('hash successfully validated ', hashResult);\n                _this.dataObjectSessionKeys[dataObjectURL] = {\n                  sessionKey: sessionKey,\n                  isToEncrypt: true\n                };\n                var dataObjectSessionKeysClone = chatkeysToStringCloner(_this.dataObjectSessionKeys);\n\n                _this.storageManager.set('dataObjectSessionKeys', 0, dataObjectSessionKeysClone)[\"catch\"](function (err) {\n                  reject('On _sendReporterSessionKey from method reporterSessionKey error: ' + err);\n                });\n\n                iv = _this.crypto.generateIV();\n                value.iv = encode(iv);\n                return _this.crypto.encryptAES(chatKeys.keys.hypertyFromSessionKey, 'ok!!', iv);\n              }).then(function (encryptedValue) {\n                receiverAcknowledgeMsg = {\n                  type: 'handshake',\n                  to: message.from,\n                  from: message.to,\n                  body: {\n                    handshakePhase: 'receiverAcknowledge'\n                  }\n                };\n                value.value = encode(encryptedValue);\n\n                var messageToHash = _this._filterMessageToHash(receiverAcknowledgeMsg, 'ok!!' + iv, chatKeys.hypertyFrom.messageInfo);\n\n                return _this.crypto.hashHMAC(chatKeys.keys.hypertyFromHashKey, messageToHash);\n              }).then(function (hashedMessage) {\n                var finalValue = encode({\n                  value: value.value,\n                  hash: encode(hashedMessage),\n                  iv: value.iv\n                });\n                receiverAcknowledgeMsg.body.value = finalValue;\n                resolve({\n                  message: receiverAcknowledgeMsg,\n                  chatKeys: chatKeys\n                });\n              })[\"catch\"](function (err) {\n                reject('On _doHandShakePhase from reporterSessionKey error: ' + err);\n              });\n\n              break;\n            }\n\n          case 'receiverAcknowledge':\n            {\n              CryptoManager_log.log('receiverAcknowledge');\n              var receivedvalueIVandHash = decode(message.body.value);\n              var receivedHash = decodeToUint8Array(receivedvalueIVandHash.hash);\n              iv = decodeToUint8Array(receivedvalueIVandHash.iv);\n              var receivedEncryptedValue = decodeToUint8Array(receivedvalueIVandHash.value);\n\n              _this.crypto.decryptAES(chatKeys.keys.hypertyToSessionKey, receivedEncryptedValue, iv).then(function (decryptedValue) {\n                var filteredMessage = _this._filterMessageToHash(message, decryptedValue + iv);\n\n                return _this.crypto.verifyHMAC(chatKeys.keys.hypertyToHashKey, filteredMessage, receivedHash);\n              }).then(function (hashResult) {\n                // log.log('hashResult ', hashResult);\n                var callback = chatKeys.callback;\n\n                if (callback) {\n                  callback('handShakeEnd');\n                }\n\n                resolve('handShakeEnd');\n              })[\"catch\"](function (err) {\n                reject('On _doHandShakePhase from receiverAcknowledge error: ' + err);\n              });\n\n              break;\n            }\n\n          default:\n            reject(message);\n        }\n      });\n    }\n    /**\n    * filter the messages to hash, by removing some fields not generated by the runtime core\n    * @param {Message}  message                     message\n    * @param {String}  decryptedValue (Optional)    value from body.value in case it originally comes encrypted\n    * @param {JSON}  identity(Optional)    add the hyperty identity associated in case is not added to the initial message\n    * @return {Message}  new message filtered\n    */\n\n  }, {\n    key: \"_filterMessageToHash\",\n    value: function _filterMessageToHash(message, decryptedValue, identity) {\n      return {\n        type: message.type,\n        from: message.from,\n        to: message.to,\n        body: {\n          identity: identity || message.body.identity,\n          value: decryptedValue || message.body.value,\n          handshakePhase: message.body.handshakePhase\n        }\n      };\n    }\n    /**\n    * generates the initial structure for the keys between two users\n    * @param {JSON}    message              initial message that triggers the mutual authentication\n    * @param {String}  userURL              userURL\n    * @param {boolean} receiver(Optional)  indicates if is the sender or the receiver that creates a new chat crypto\n    * @return {JSON} newChatCrypto  new JSON structure for the chat crypto\n    */\n\n  }, {\n    key: \"_newChatCrypto\",\n    value: function _newChatCrypto(message, userURL, receiver) {\n      var _this = this; //check whether is the sender or the receiver to create a new chatCrypto\n      //to mantain consistency on the keys if the receiver create a new chatCrypto,\n      //then invert the fields\n\n\n      var from = receiver ? message.to : message.from;\n      var to = receiver ? message.from : message.to;\n\n      var userInfo = _this._idm.getIdentity(userURL);\n\n      var newChatCrypto = {\n        hypertyFrom: {\n          hyperty: from,\n          userID: userInfo.userProfile.userURL,\n          //privateKey: \"getMyPublicKey\",\n          //publicKey: \"getMyPrivateKey\",\n          assertion: userInfo.assertion,\n          messageInfo: userInfo\n        },\n        hypertyTo: {\n          hyperty: to,\n          userID: undefined,\n          publicKey: undefined,\n          assertion: undefined\n        },\n        keys: {\n          hypertyToSessionKey: undefined,\n          hypertyFromSessionKey: undefined,\n          hypertyToHashKey: undefined,\n          hypertyFromHashKey: undefined,\n          toRandom: undefined,\n          fromRandom: undefined,\n          premasterKey: undefined,\n          masterKey: undefined\n        },\n        handshakeHistory: {\n          senderHello: undefined,\n          receiverHello: undefined,\n          senderCertificate: undefined,\n          receiverFinishedMessage: undefined\n        },\n        initialMessage: message.body.ignore ? undefined : message,\n        callback: message.callback,\n        authenticated: false,\n        dataObjectURL: message.dataObjectURL\n      };\n      return newChatCrypto;\n    }\n    /**\n    * Retrieves a public keys given a user refrence. If no key is found,\n    generates a new key asymmetric key and retrieves the public keys.\n    * @param   {userRef}    String    user reference for the key pair\n    * @return  {Array}   public key\n    */\n\n  }, {\n    key: \"getMyPublicKey\",\n    value: function getMyPublicKey() {\n      var userRef = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.userDefaultKeyRef;\n\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        _this.storageManager.get(userRef).then(function (storedKeyPair) {\n          if (storedKeyPair) {\n            return resolve(storedKeyPair[\"public\"]);\n          }\n\n          _this._generateAndStoreNewAsymetricKey(userRef).then(function (generatedKeyPair) {\n            resolve(generatedKeyPair[\"public\"]);\n          })[\"catch\"](function (err) {\n            CryptoManager_log.error('[getMyPublicKey:_generateAndStoreNewAsymetricKey:err]: ' + err.message);\n            reject(err);\n          });\n        })[\"catch\"](function (err) {\n          CryptoManager_log.error('[getMyPublicKey:storageManager:err]: ' + err.message);\n          reject(err);\n        });\n      });\n    }\n    /**\n    * Retrieves a private keys given a user refrence. If no key is found,\n    generates a new key asymmetric key and retrieves the private key.\n    * @param   {userRef}    String    user reference for the key pair\n    * @return  {Array}   private key\n    **/\n\n  }, {\n    key: \"getMyPrivateKey\",\n    value: function getMyPrivateKey() {\n      var userRef = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.userDefaultKeyRef;\n\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        _this.storageManager.get(userRef).then(function (storedKeyPair) {\n          if (storedKeyPair) {\n            return resolve(storedKeyPair[\"private\"]);\n          }\n\n          _this._generateAndStoreNewAsymetricKey(userRef).then(function (generatedKeyPair) {\n            resolve(generatedKeyPair[\"private\"]);\n          })[\"catch\"](function (err) {\n            CryptoManager_log.error('[getMyPrivateKey:_generateAndStoreNewAsymetricKey:err]: ' + err.message);\n            reject(err);\n          });\n        })[\"catch\"](function (err) {\n          CryptoManager_log.error('[getMyPrivateKey:storageManager:err]: ' + err.message);\n          reject(err);\n        });\n      });\n    }\n    /**\n    * Generates a new key pair, stores and retrives the key pair.\n    * @param   {userRef}    String    user reference for the key pair\n    * @return  {Array}   private key\n    **/\n\n  }, {\n    key: \"_generateAndStoreNewAsymetricKey\",\n    value: function _generateAndStoreNewAsymetricKey(userRef) {\n      var _this = this;\n\n      var keyPair = undefined;\n      return new Promise(function (resolve, reject) {\n        //      _this.crypto.generateRSAKeyPair().then(generatedKeyPair => {\n        var generatedKeyPair = {};\n        generatedKeyPair[\"private\"] = generateGUID();\n        generatedKeyPair[\"public\"] = generateGUID();\n        CryptoManager_log.log('_generateAndStoreNewAsymetricKey:userAsymmetricKeyGenerated', generatedKeyPair);\n        keyPair = generatedKeyPair;\n\n        _this.storageManager.set(userRef, 0, generatedKeyPair); //      }).then(storedReference => {\n        //        log.log('_generateAndStoreNewAsymetricKey:userAsymmetricKeySuccess', storedReference);\n\n\n        resolve(keyPair);\n      })[\"catch\"](function (err) {\n        CryptoManager_log.error('[_generateAndStoreNewAsymetricKey:err]: ' + err.message);\n        reject(err);\n      }); //    });\n    }\n  }, {\n    key: \"messageBus\",\n    get: function get() {\n      var _this = this;\n\n      return _this._messageBus;\n    }\n    /**\n    * Set the messageBus in this Registry\n    * @param {MessageBus}           messageBus\n    */\n    ,\n    set: function set(messageBus) {\n      var _this = this;\n\n      _this._messageBus = messageBus;\n\n      _this.addCryptoGUIListeners();\n    }\n    /**\n    * return the coreDiscovery component\n    */\n\n  }, {\n    key: \"coreDiscovery\",\n    get: function get() {\n      var _this = this;\n\n      return _this._coreDiscovery;\n    }\n    /**\n    * return user's public key\n    */\n\n    /*  getMyPublicKey() {\n      // to be implemented\n       return new Promise((resolve)=> {\n        resolve('mypublickey');\n       });\n    }\n    */\n\n    /**\n    * Set the coreDiscovery component\n    * @param {coreDiscovery} coreDiscovery\n    */\n    ,\n    set: function set(coreDiscovery) {\n      var _this = this;\n\n      _this._coreDiscovery = coreDiscovery;\n    }\n    /**\n    * return the registry in this idModule\n    * @param {registry}           registry\n    */\n\n  }, {\n    key: \"registry\",\n    get: function get() {\n      var _this = this;\n\n      return _this._registry;\n    }\n    /**\n    * Set the registry in this idModule\n    * @param {registry}     reg\n    */\n    ,\n    set: function set(registry) {\n      var _this = this;\n\n      _this._registry = registry;\n    }\n  }]);\n\n  return CryptoManager;\n}();\n/*\nconst nodeJSKeyPairPopulate = { public: [48, 130, 1, 34, 48, 13, 6, 9, 42, 134, 72, 134, 247, 13, 1, 1, 1, 5, 0, 3, 130, 1, 15, 0, 48, 130, 1, 10, 2, 130, 1, 1, 0, 228, 43, 101, 12, 121, 7, 157, 71, 81, 58, 219, 32, 10, 108, 193, 179, 212, 116, 255, 59, 217, 32, 161, 201, 53, 171, 226, 199, 137, 202, 171, 60, 82, 53, 125, 62, 177, 126, 165, 24, 141, 30, 15, 226, 59, 107, 34, 7, 13, 149, 112, 125, 10, 230, 191, 156, 164, 177, 10, 185, 13, 66, 3, 217, 166, 244, 90, 119, 111, 27, 145, 104, 71, 189, 166, 226, 255, 133, 83, 151, 231, 101, 151, 89, 22, 19, 65, 154, 10, 53, 208, 218, 252, 219, 37, 50, 212, 86, 145, 107, 132, 90, 233, 202, 227, 108, 114, 141, 29, 73, 187, 31, 13, 234, 0, 232, 24, 191, 35, 149, 179, 138, 214, 159, 245, 162, 148, 221, 118, 17, 105, 89, 151, 146, 209, 55, 236, 61, 143, 233, 228, 10, 115, 8, 81, 197, 45, 123, 187, 223, 176, 254, 165, 69, 143, 29, 100, 114, 17, 130, 226, 223, 33, 11, 240, 81, 61, 172, 191, 157, 246, 202, 87, 131, 221, 88, 48, 127, 159, 119, 160, 152, 117, 61, 253, 174, 65, 214, 203, 218, 63, 50, 78, 160, 181, 221, 211, 128, 70, 178, 191, 170, 0, 13, 122, 173, 12, 203, 252, 4, 184, 225, 252, 7, 62, 96, 116, 15, 216, 158, 55, 85, 48, 16, 9, 206, 119, 74, 112, 243, 136, 84, 184, 223, 254, 101, 91, 61, 10, 91, 85, 192, 147, 144, 57, 29, 66, 238, 199, 244, 193, 194, 150, 232, 200, 107, 2, 3, 1, 0, 1],\n  private: [48, 130, 4, 191, 2, 1, 0, 48, 13, 6, 9, 42, 134, 72, 134, 247, 13, 1, 1, 1, 5, 0, 4, 130, 4, 169, 48, 130, 4, 165, 2, 1, 0, 2, 130, 1, 1, 0, 228, 43, 101, 12, 121, 7, 157, 71, 81, 58, 219, 32, 10, 108, 193, 179, 212, 116, 255, 59, 217, 32, 161, 201, 53, 171, 226, 199, 137, 202, 171, 60, 82, 53, 125, 62, 177, 126, 165, 24, 141, 30, 15, 226, 59, 107, 34, 7, 13, 149, 112, 125, 10, 230, 191, 156, 164, 177, 10, 185, 13, 66, 3, 217, 166, 244, 90, 119, 111, 27, 145, 104, 71, 189, 166, 226, 255, 133, 83, 151, 231, 101, 151, 89, 22, 19, 65, 154, 10, 53, 208, 218, 252, 219, 37, 50, 212, 86, 145, 107, 132, 90, 233, 202, 227, 108, 114, 141, 29, 73, 187, 31, 13, 234, 0, 232, 24, 191, 35, 149, 179, 138, 214, 159, 245, 162, 148, 221, 118, 17, 105, 89, 151, 146, 209, 55, 236, 61, 143, 233, 228, 10, 115, 8, 81, 197, 45, 123, 187, 223, 176, 254, 165, 69, 143, 29, 100, 114, 17, 130, 226, 223, 33, 11, 240, 81, 61, 172, 191, 157, 246, 202, 87, 131, 221, 88, 48, 127, 159, 119, 160, 152, 117, 61, 253, 174, 65, 214, 203, 218, 63, 50, 78, 160, 181, 221, 211, 128, 70, 178, 191, 170, 0, 13, 122, 173, 12, 203, 252, 4, 184, 225, 252, 7, 62, 96, 116, 15, 216, 158, 55, 85, 48, 16, 9, 206, 119, 74, 112, 243, 136, 84, 184, 223, 254, 101, 91, 61, 10, 91, 85, 192, 147, 144, 57, 29, 66, 238, 199, 244, 193, 194, 150, 232, 200, 107, 2, 3, 1, 0, 1, 2, 130, 1, 0, 103, 244, 137, 118, 116, 82, 14, 203, 102, 107, 253, 88, 12, 199, 222, 60, 243, 136, 86, 157, 74, 224, 190, 53, 113, 57, 157, 250, 49, 130, 96, 31, 252, 136, 152, 70, 143, 17, 215, 96, 103, 51, 18, 35, 141, 212, 210, 205, 9, 216, 83, 70, 245, 71, 138, 119, 112, 229, 164, 176, 9, 37, 81, 161, 193, 154, 68, 249, 115, 106, 201, 6, 12, 225, 144, 126, 141, 210, 141, 242, 128, 159, 221, 163, 222, 21, 233, 230, 167, 206, 59, 24, 250, 233, 81, 122, 102, 26, 6, 233, 72, 133, 47, 77, 155, 238, 86, 6, 139, 24, 131, 163, 179, 112, 48, 247, 142, 6, 207, 204, 173, 223, 140, 199, 150, 95, 123, 152, 202, 155, 131, 238, 62, 96, 133, 4, 217, 51, 121, 30, 38, 178, 189, 216, 44, 35, 241, 93, 7, 62, 90, 111, 216, 66, 209, 243, 128, 234, 141, 84, 135, 181, 13, 38, 220, 114, 245, 240, 178, 95, 220, 206, 11, 186, 234, 213, 66, 121, 83, 68, 89, 75, 46, 183, 145, 183, 147, 160, 215, 118, 198, 125, 181, 146, 30, 251, 58, 87, 47, 209, 237, 97, 24, 47, 179, 6, 110, 242, 99, 150, 226, 148, 198, 174, 146, 101, 213, 87, 178, 10, 223, 105, 18, 56, 53, 22, 212, 158, 170, 176, 51, 86, 145, 125, 124, 44, 9, 85, 19, 144, 246, 170, 78, 124, 30, 32, 12, 166, 174, 139, 77, 63, 173, 82, 10, 153, 2, 129, 129, 0, 248, 18, 143, 246, 137, 136, 145, 219, 178, 39, 27, 94, 64, 90, 47, 163, 114, 60, 63, 187, 131, 143, 244, 16, 42, 128, 231, 117, 92, 98, 219, 155, 62, 107, 252, 17, 245, 45, 160, 225, 103, 142, 72, 36, 193, 150, 235, 214, 175, 62, 212, 56, 45, 9, 0, 60, 114, 107, 134, 228, 204, 131, 131, 214, 94, 201, 148, 159, 99, 139, 181, 13, 119, 38, 30, 107, 166, 165, 203, 43, 34, 20, 207, 171, 32, 58, 167, 62, 196, 153, 103, 204, 213, 247, 48, 111, 227, 59, 95, 97, 194, 187, 53, 10, 247, 108, 58, 86, 28, 29, 113, 8, 110, 171, 220, 245, 11, 82, 233, 223, 91, 68, 166, 117, 174, 187, 62, 77, 2, 129, 129, 0, 235, 118, 2, 105, 239, 212, 30, 104, 157, 41, 109, 11, 248, 152, 22, 236, 97, 40, 153, 131, 228, 5, 86, 187, 113, 126, 144, 76, 141, 79, 110, 250, 146, 152, 49, 58, 156, 201, 176, 92, 189, 209, 30, 112, 108, 175, 204, 204, 247, 164, 46, 129, 239, 98, 127, 49, 145, 218, 63, 193, 124, 174, 18, 98, 201, 99, 154, 162, 138, 78, 159, 253, 3, 248, 3, 209, 36, 239, 193, 155, 193, 5, 19, 236, 37, 78, 118, 135, 250, 199, 7, 141, 248, 120, 36, 136, 93, 98, 174, 60, 18, 215, 93, 174, 107, 141, 116, 145, 167, 221, 210, 169, 247, 67, 254, 222, 161, 134, 63, 221, 90, 87, 42, 99, 227, 81, 173, 151, 2, 129, 129, 0, 133, 23, 168, 103, 83, 232, 146, 160, 181, 23, 40, 38, 204, 13, 214, 203, 49, 41, 195, 227, 189, 181, 8, 243, 119, 106, 75, 67, 250, 250, 10, 234, 98, 118, 26, 250, 35, 121, 132, 124, 10, 76, 26, 198, 165, 154, 108, 19, 117, 88, 23, 17, 192, 143, 184, 177, 181, 141, 157, 4, 185, 248, 193, 77, 204, 243, 7, 170, 240, 4, 111, 113, 183, 0, 27, 136, 20, 19, 149, 74, 33, 241, 218, 108, 236, 80, 171, 148, 16, 116, 97, 109, 83, 74, 88, 145, 94, 239, 102, 192, 19, 114, 207, 5, 128, 51, 111, 164, 237, 86, 154, 99, 52, 197, 62, 57, 182, 6, 152, 245, 61, 137, 58, 105, 159, 2, 84, 109, 2, 129, 129, 0, 226, 67, 111, 132, 95, 91, 101, 177, 63, 189, 44, 53, 193, 184, 92, 230, 223, 98, 133, 74, 209, 86, 52, 7, 65, 195, 206, 100, 81, 178, 144, 65, 167, 151, 42, 79, 89, 149, 18, 173, 188, 21, 244, 251, 49, 230, 41, 150, 153, 46, 35, 38, 231, 99, 174, 56, 115, 32, 215, 253, 85, 147, 108, 197, 147, 34, 236, 216, 222, 177, 57, 90, 136, 114, 207, 48, 46, 31, 90, 220, 18, 58, 143, 239, 111, 214, 27, 95, 6, 36, 53, 229, 62, 108, 45, 39, 1, 30, 47, 178, 56, 164, 206, 56, 42, 208, 46, 193, 61, 31, 147, 45, 147, 23, 187, 22, 50, 255, 111, 229, 132, 199, 152, 75, 142, 136, 209, 151, 2, 129, 129, 0, 165, 56, 232, 76, 55, 57, 240, 159, 92, 207, 220, 143, 130, 30, 57, 234, 251, 172, 171, 180, 54, 159, 229, 96, 246, 73, 112, 146, 75, 157, 242, 201, 161, 218, 37, 176, 35, 170, 50, 90, 148, 102, 191, 199, 239, 174, 78, 72, 67, 85, 199, 45, 149, 145, 132, 161, 212, 33, 157, 75, 216, 79, 39, 233, 18, 210, 255, 26, 72, 229, 239, 44, 12, 147, 158, 176, 192, 95, 126, 32, 175, 23, 226, 131, 139, 197, 175, 193, 62, 8, 151, 252, 68, 154, 94, 89, 189, 125, 90, 30, 36, 175, 73, 230, 194, 13, 233, 247, 123, 60, 241, 47, 171, 51, 189, 112, 111, 213, 141, 89, 70, 249, 236, 63, 236, 110, 115, 208]};\n*/\n\n\n/* harmony default export */ var cryptoManager_CryptoManager = (new CryptoManager_CryptoManager());\n// EXTERNAL MODULE: ./node_modules/path-browserify/index.js\nvar path_browserify = __webpack_require__(311);\n\n// CONCATENATED MODULE: ./src/runtime/Loader.js\nfunction Loader_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction Loader_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Loader_createClass(Constructor, protoProps, staticProps) { if (protoProps) Loader_defineProperties(Constructor.prototype, protoProps); if (staticProps) Loader_defineProperties(Constructor, staticProps); return Constructor; }\n\n// Log System\n\nvar Loader_log = loglevel[\"getLogger\"]('Loader');\n\n\n\n\nvar Loader_Loader =\n/*#__PURE__*/\nfunction () {\n  function Loader(runtimeURL, runtimeConfiguration, runtimeDescriptorsInstance) {\n    Loader_classCallCheck(this, Loader);\n\n    if (!runtimeConfiguration) throw Error('[Runtime.Loader] The descriptor need to know the runtime configuration');\n    if (!runtimeDescriptorsInstance) throw Error('[Runtime.Loader] The descriptor need to know the runtime Descriptor instance');\n    this.log = Loader_log;\n    this.runtimeConfiguration = runtimeConfiguration;\n    this.descriptors = runtimeDescriptorsInstance;\n  }\n  /**\n   * Set runtime url\n   * @param  {string} value runtimeURL\n   */\n\n\n  Loader_createClass(Loader, [{\n    key: \"loadHyperty\",\n\n    /**\n     * Deploy Hyperty from Catalogue URL\n     *\n     * @see https://github.com/reTHINK-project/specs/tree/master/datamodel/core/address\n     *\n     * @param {URL.HypertyCatalogueURL} hypertyCatalogueURL - The Catalogue URL used to identify descriptors in the Catalogue.\n     * @param {boolean|URL.HypertyURL} [reuseURL=false] reuseURL - reuseURL is used to reuse the hypertyURL previously registred, by default the reuse is disabled;\n     * @param {URL} appURL - the app url origin address;\n     * @param {object} IdpConstraint - constraints to be used when selecting the identity to be associated with the Hyperty including origin, idp, and idHint.\n     * @returns {Promise<Boolean, Error>} this is Promise and returns true if all components are loaded with success or an error if someone fails.\n     *\n     * @memberOf Loader\n     */\n    value: function loadHyperty(hypertyClass) {\n      var _this = this;\n\n      var reuseURL = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var IdpConstraint = arguments.length > 2 ? arguments[2] : undefined;\n      var appURL = arguments.length > 3 ? arguments[3] : undefined;\n      if (!this._readyToUse()) return false;\n      if (!hypertyClass) throw new Error('[Runtime.Loader] hypertyClass parameter is needed');\n\n      var _hypertyURL;\n\n      var _hypertySandbox;\n\n      var _hypertySourcePackage;\n\n      var haveError = false;\n      var instance = new hypertyClass();\n      var hyperty = instance.name;\n      return new Promise(function (resolve, reject) {\n        var errorReason = function errorReason(reason) {\n          Loader_log.info('[Runtime.Loader] Something failed on the deploy hyperty: ', reason);\n          reject(reason);\n        };\n\n        var handleError = function handleError(reason) {\n          haveError = true;\n          reject(reason);\n        };\n\n        Loader_log.info('[Runtime.Loader.loadHyperty] ', hyperty);\n        var _hypertyDescriptor = instance.descriptor;\n        _hypertyDescriptor.dataObjects[0] = _hypertyDescriptor.dataObjects[0].replace('%domain%', _this._registry._domain); // at this point, we have completed \"step 2 and 3\" as shown in https://github.com/reTHINK-project/core-framework/blob/master/docs/specs/runtime/dynamic-view/basics/deploy-hyperty.md\n\n        Loader_log.info('[Runtime.Loader] 1: return hyperty descriptor: ', _hypertyDescriptor);\n        _hypertySandbox = _this.registry.getAppSandbox();\n        var numberOfAddresses = 1; //debugger;\n\n        _this._addressAllocation.create(_this._registry._domain, numberOfAddresses, _hypertyDescriptor, 'hyperty', reuseURL).then(function (addresses) {\n          if (haveError) return false;\n          Loader_log.info('[Runtime.Loader] 6: return the addresses for the hyperty', addresses); // Register hyperty\n\n          return _this.registry.registerHyperty(_hypertySandbox, hyperty, _hypertyDescriptor, addresses, IdpConstraint);\n        }, handleError).then(function (registrationResult) {\n          if (haveError) return false;\n          Loader_log.info('[Runtime.Loader] 7: registration result', registrationResult); // we have completed step 16 of https://github.com/reTHINK-project/core-framework/blob/master/docs/specs/runtime/dynamic-view/basics/deploy-hyperty.md right now.\n\n          _hypertyURL = registrationResult.url; // Extend original hyperty configuration;\n\n          var configuration = {};\n\n          if (!emptyObject(_hypertyDescriptor.configuration)) {\n            try {\n              configuration = Object.assign({}, JSON.parse(_hypertyDescriptor.configuration));\n            } catch (e) {\n              configuration = _hypertyDescriptor.configuration;\n            }\n          }\n\n          configuration.runtimeURL = _this._runtimeURL;\n\n          if (registrationResult.p2pHandler) {\n            configuration.p2pHandler = registrationResult.p2pHandler;\n            configuration.p2pRequester = registrationResult.p2pRequester;\n          } // We will deploy the component - step 17 of https://github.com/reTHINK-project/core-framework/blob/master/docs/specs/runtime/dynamic-view/basics/deploy-hyperty.md right now.\n\n\n          try {\n            //            return _hypertySandbox.deployComponent(_hypertySourcePackage.sourceCode, _hypertyURL, configuration);\n            return _hypertySandbox.deployComponent(instance, _hypertyURL, configuration);\n          } catch (e) {\n            Loader_log.info('[Runtime.Loader] Error on deploy component:', e);\n            reject(e);\n          }\n        }, handleError).then(function (deployComponentStatus) {\n          if (haveError) return false;\n          Loader_log.info('[Runtime.Loader] 8: Deploy component status for hyperty: ', deployComponentStatus); // we have completed step 19 https://github.com/reTHINK-project/core-framework/blob/master/docs/specs/runtime/dynamic-view/basics/deploy-hyperty.md right now.\n          // Add the message bus listener to the appSandbox or hypertSandbox;\n\n          _this.messageBus.addListener(_hypertyURL, function (msg) {\n            _hypertySandbox.postMessage(msg);\n          }); // Add the message bus listener to the appSandbox or hypertSandbox;\n\n\n          _this.messageBus.addListener(_this.runtimeURL + '/status', function (msg) {\n            _hypertySandbox.postMessage(msg);\n          }); // we have completed step 20 of https://github.com/reTHINK-project/core-framework/blob/master/docs/specs/runtime/dynamic-view/basics/deploy-hyperty.md right now.\n\n\n          var deployed = {\n            runtimeHypertyURL: _hypertyURL,\n            status: deployComponentStatus,\n            name: hyperty,\n            instance: instance\n          };\n          Loader_log.info('[Runtime.Loader] Hyperty deployed: ', deployed);\n          resolve(instance); // we have completed step 21 https://github.com/reTHINK-project/core-framework/blob/master/docs/specs/runtime/dynamic-view/basics/deploy-hyperty.md right now.\n\n          Loader_log.info('[Runtime.Loader] ------------------ END ------------------------');\n        }, handleError)[\"catch\"](errorReason);\n      });\n    }\n    /**\n    * Deploy Stub from Catalogue URL or domain url\n    * @param  {URL.URL}     protostubURL    Catalogue URL for the ProtoStub to be loaded or the domain to be target by the protostub\n    * @param  {Object}      p2pConfig       configuration of p2p\n    */\n\n  }, {\n    key: \"loadStub\",\n    value: function loadStub(protostubURL, p2pConfig) {\n      var _this2 = this;\n\n      if (!this._readyToUse()) return false;\n      if (!protostubURL) throw new Error('[Runtime.Loader.loadStub]ProtoStub descriptor url parameter is needed');\n      return new Promise(function (resolve, reject) {\n        // to analyse if domain for p2pHandlers should be something else and not the default domain itself\n        var domain = divideURL(protostubURL).domain;\n\n        if (!domain) {\n          domain = protostubURL;\n        }\n\n        var _stubSandbox;\n\n        var _stubDescriptor;\n\n        var _runtimeProtoStubURL;\n\n        var _stubSourcePackage;\n\n        var haveError = false;\n        var stubId;\n\n        var errorReason = function errorReason(reason) {\n          Loader_log.info('[Runtime.Loader.loadStub]Something failed on the deploy of protocolstub: ', reason);\n          reject(reason);\n        };\n\n        var handleError = function handleError(reason) {\n          haveError = true;\n          reject(reason);\n        }; // Discover Protocol Stub\n\n\n        var discoverStub;\n        var isP2PHandler = false;\n        var isP2PRequester = false;\n        var stubCapabilities = {};\n        Loader_log.info('[Runtime.Loader.loadStub] starting loading for ', protostubURL, ' with p2pconfig ', p2pConfig);\n        Loader_log.info('[Runtime.Loader.loadStub]Discover or Create a new ProtoStub for domain: ', domain); // step 2 https://github.com/reTHINK-project/core-framework/blob/master/docs/specs/runtime/dynamic-view/basics/deploy-protostub.md\n\n        try {\n          if (p2pConfig) {\n            if (p2pConfig.hasOwnProperty('isHandlerStub') && p2pConfig.isHandlerStub) {\n              // step 6 https://github.com/reTHINK-project/core-framework/blob/master/docs/specs/runtime/dynamic-view/basics/deploy-protostub.md\n              isP2PHandler = true;\n              stubId = _this2.runtimeURL;\n              discoverStub = _this2.registry.discoverP2PStub();\n            } else {\n              isP2PRequester = true;\n              var p2pHandlerRuntimeURL = p2pConfig.remoteRuntimeURL;\n              stubId = p2pHandlerRuntimeURL; // step 4 https://github.com/reTHINK-project/core-framework/blob/master/docs/specs/runtime/dynamic-view/basics/deploy-protostub.md\n              // step 5 https://github.com/reTHINK-project/core-framework/blob/master/docs/specs/runtime/dynamic-view/basics/deploy-protostub.md\n\n              discoverStub = _this2.registry.discoverP2PStub(p2pHandlerRuntimeURL);\n            }\n          } else {\n            // step 3 https://github.com/reTHINK-project/core-framework/blob/master/docs/specs/runtime/dynamic-view/basics/deploy-protostub.md\n            stubId = domain;\n            discoverStub = _this2.registry.discoverProtostub(domain);\n          } // Is registed?\n\n\n          Loader_log.info('[Runtime.Loader.loadStub]1. Proto Stub Discovered for ', protostubURL, ': ', discoverStub); // step 23 https://github.com/reTHINK-project/core-framework/blob/master/docs/specs/runtime/dynamic-view/basics/deploy-protostub.md\n\n          resolve(discoverStub);\n          Loader_log.info(' [Runtime.Loader]------------------- END ---------------------------\\n');\n        } catch (reason) {\n          // is not registed?\n          Loader_log.info('[Runtime.Loader.loadStub]1. Proto Stub not found ' + reason); // step 8 https://github.com/reTHINK-project/core-framework/blob/master/docs/specs/runtime/dynamic-view/basics/deploy-protostub.md\n\n          _this2.descriptors.getStubDescriptor(protostubURL).then(function (stubDescriptor) {\n            if (haveError) return false;\n            Loader_log.info('[Runtime.Loader.loadStub]2. return the ProtoStub descriptor'); // step 9 https://github.com/reTHINK-project/core-framework/blob/master/docs/specs/runtime/dynamic-view/basics/deploy-protostub.md\n\n            _stubDescriptor = stubDescriptor;\n            var sourcePackageURL = stubDescriptor.sourcePackageURL;\n\n            if (sourcePackageURL === '/sourcePackage') {\n              return stubDescriptor.sourcePackage;\n            } // step 10 https://github.com/reTHINK-project/core-framework/blob/master/docs/specs/runtime/dynamic-view/basics/deploy-protostub.md\n\n\n            return _this2.runtimeCatalogue.getSourcePackageFromURL(sourcePackageURL);\n          }, handleError)[\"catch\"](errorReason).then(function (stubSourcePackage) {\n            if (haveError) return false; // According to debug, it seems RuntimeCatalogue does not support yet constraints. It appears empty!!!!\n\n            if (_stubDescriptor && _stubDescriptor.constraints) {\n              stubCapabilities = _stubDescriptor.constraints;\n            } // step 11 https://github.com/reTHINK-project/core-framework/blob/master/docs/specs/runtime/dynamic-view/basics/deploy-protostub.md\n\n\n            Loader_log.info('[Runtime.Loader.loadStub]3. return the ProtoStub Source Code');\n            _stubSourcePackage = stubSourcePackage; // this will return the sandbox or one promise to getSandbox;\n            // step 12 https://github.com/reTHINK-project/core-framework/blob/master/docs/specs/runtime/dynamic-view/basics/deploy-protostub.md\n\n            return _this2.registry.getSandbox(domain, stubCapabilities);\n          }).then(function (stubSandbox) {\n            if (haveError) return false; // step 15 https://github.com/reTHINK-project/core-framework/blob/master/docs/specs/runtime/dynamic-view/basics/deploy-protostub.md\n\n            Loader_log.info('[Runtime.Loader.loadStub]4. if the sandbox is registered then return the sandbox ', stubSandbox);\n            _stubSandbox = stubSandbox;\n            return stubSandbox;\n          })[\"catch\"](function (reason) {\n            if (haveError) return false; // step 13 https://github.com/reTHINK-project/core-framework/blob/master/docs/specs/runtime/dynamic-view/basics/deploy-protostub.md\n\n            Loader_log.info('[Runtime.Loader.loadStub]5. Sandbox was not found, creating a new one ', reason); // check if the sandbox is registed for this stub descriptor url;\n            // step 14 https://github.com/reTHINK-project/core-framework/blob/master/docs/specs/runtime/dynamic-view/basics/deploy-protostub.md\n\n            return _this2._runtimeFactory.createSandbox(stubCapabilities).then(function (sandbox) {\n              sandbox.addListener('*', function (msg) {\n                _this2.messageBus.postMessage(msg);\n              });\n              return sandbox;\n            });\n          }).then(function (sandbox) {\n            if (haveError) return false; // step 16 https://github.com/reTHINK-project/core-framework/blob/master/docs/specs/runtime/dynamic-view/basics/deploy-protostub.md\n\n            Loader_log.info('[Runtime.Loader.loadStub]6. return the sandbox instance and register', sandbox, 'to domain ', domain);\n            _stubSandbox = sandbox; // we need register stub on registry - step xxx https://github.com/reTHINK-project/core-framework/blob/master/docs/specs/runtime/dynamic-view/basics/deploy-protostub.md\n\n            return _this2.registry.registerStub(_stubSandbox, stubId, p2pConfig, protostubURL, _stubDescriptor);\n          }, handleError).then(function (runtimeProtoStub) {\n            if (haveError) return false; // step 23 https://github.com/reTHINK-project/core-framework/blob/master/docs/specs/runtime/dynamic-view/basics/deploy-protostub.md\n\n            Loader_log.info('[Runtime.Loader.loadStub] 7. return the runtime protostub url: ', runtimeProtoStub);\n            _runtimeProtoStubURL = runtimeProtoStub.url; // Extend original hyperty configuration;\n\n            var configuration = {};\n\n            if (!emptyObject(_stubDescriptor.configuration)) {\n              try {\n                configuration = Object.assign({}, JSON.parse(_stubDescriptor.configuration));\n              } catch (e) {\n                configuration = _stubDescriptor.configuration;\n              }\n            }\n\n            if (p2pConfig) {\n              try {\n                configuration = Object.assign(configuration, JSON.parse(p2pConfig));\n              } catch (e) {\n                configuration = Object.assign(configuration, p2pConfig);\n              }\n            } // required for protostub session\n\n\n            configuration.runtimeURL = _this2._runtimeURL; // step 24 https://github.com/reTHINK-project/core-framework/blob/master/docs/specs/runtime/dynamic-view/basics/deploy-protostub.md\n\n            try {\n              // step 26 https://github.com/reTHINK-project/core-framework/blob/master/docs/specs/runtime/dynamic-view/basics/deploy-protostub.md\n              Loader_log.info('[Runtime.Loader.loadStub] 8: adding sandbox listener to protostubURL : ', _runtimeProtoStubURL); // step 27 https://github.com/reTHINK-project/core-framework/blob/master/docs/specs/runtime/dynamic-view/basics/deploy-protostub.md\n              // Add the message bus listener\n\n              _this2.messageBus.addListener(_runtimeProtoStubURL, function (msg) {\n                _stubSandbox.postMessage(msg);\n              });\n\n              return _stubSandbox.deployComponent(_stubSourcePackage.sourceCode, _runtimeProtoStubURL, configuration);\n            } catch (e) {\n              Loader_log.error('[Runtime.Loader.loadStub] Error on deploy component:', e);\n              reject(e);\n            }\n          }, handleError).then(function () {\n            if (haveError) return false; // step 28 https://github.com/reTHINK-project/core-framework/blob/master/docs/specs/runtime/dynamic-view/basics/deploy-protostub.md\n\n            var stub;\n\n            if (p2pConfig) {\n              Loader_log.log('[Runtime.Loader.loadStub] p2pConfig: ', p2pConfig);\n              if (p2pConfig.hasOwnProperty('isHandlerStub')) stub = _this2.registry.p2pHandlerStub[_this2._runtimeURL];\n              if (p2pConfig.hasOwnProperty('p2pRequesterStub')) stub = _this2.registry.p2pRequesterStub[p2pConfig.remoteRuntimeURL];\n            } else {\n              stub = _this2.registry.protostubsList[domain];\n            }\n\n            Loader_log.log('[Runtime.Loader.loadStub] Stub: ', stub);\n            resolve(stub);\n            Loader_log.info('[Runtime.Loader.loadStub]------------------- END ---------------------------\\n');\n          }, handleError)[\"catch\"](errorReason);\n        }\n      });\n    }\n    /**\n    * Deploy idpProxy from Catalogue URL or domain url\n    * @param  {URL.URL}     domain          domain\n    */\n\n  }, {\n    key: \"loadIdpProxy\",\n    value: function loadIdpProxy(idpProxyURL) {\n      var _this3 = this;\n\n      if (!this._readyToUse()) return false;\n      if (!idpProxyURL) throw new Error('[Runtime.Loader] IdpProxy descriptor url parameter is needed');\n      return new Promise(function (resolve, reject) {\n        var domain = divideURL(idpProxyURL).domain;\n\n        if (!domain) {\n          domain = idpProxyURL;\n        }\n\n        var _proxySandbox;\n\n        var _proxyDescriptor;\n\n        var _runtimeIdpProxyURL;\n\n        var _proxySourcePackage;\n\n        var haveError = false;\n\n        var errorReason = function errorReason(reason) {\n          Loader_log.info('[Runtime.Loader] Something failed on the deploy of IdpProxy: ', reason);\n          reject(reason);\n        };\n\n        var handleError = function handleError(reason) {\n          haveError = true;\n          reject(reason);\n        }; // Discover IDPProxy\n\n\n        Loader_log.info('[Runtime.Loader] ------------------- IDP Proxy Deploy ---------------------------\\n');\n        Loader_log.info('[Runtime.Loader] Discover or Create a new IdpProxy for domain/URL: ', domain);\n\n        try {\n          var runtimeIdpProxyURL = _this3.registry.discoverIdpProxy(domain); // Is registed?\n\n\n          Loader_log.info('[Runtime.Loader] 1. IDPProxy Discovered: ', runtimeIdpProxyURL); // we have completed step 2 https://github.com/reTHINK-project/core-framework/blob/master/docs/specs/runtime/dynamic-view/basics/deploy-protostub.md\n\n          var idpProxy = _this3.registry.idpProxyList[domain];\n          Loader_log.log('Deployed: ', idpProxy);\n          resolve(idpProxy);\n          Loader_log.info('[Runtime.Loader] ------------------- END ---------------------------\\n');\n        } catch (reason) {\n          // is not registed?\n          Loader_log.info('[Runtime.Loader] 1. IdpProxy not found:', reason); // we have completed step 3 https://github.com/reTHINK-project/core-framework/blob/master/docs/specs/runtime/dynamic-view/basics/deploy-protostub.md\n          // we need to get ProtoStub descriptor step 4 https://github.com/reTHINK-project/core-framework/blob/master/docs/specs/runtime/dynamic-view/basics/deploy-protostub.md\n\n          _this3.descriptors.getIdpProxyDescriptor(idpProxyURL).then(function (proxyDescriptor) {\n            Loader_log.info('[Runtime.Loader] 2. Return the IDPProxy descriptor'); // we have completed step 5 https://github.com/reTHINK-project/core-framework/blob/master/docs/specs/runtime/dynamic-view/basics/deploy-protostub.md\n\n            _proxyDescriptor = proxyDescriptor;\n            var sourcePackageURL = proxyDescriptor.sourcePackageURL;\n\n            if (sourcePackageURL === '/sourcePackage') {\n              return proxyDescriptor.sourcePackage;\n            } // we need to get ProtoStub Source code from descriptor - step 6 https://github.com/reTHINK-project/core-framework/blob/master/docs/specs/runtime/dynamic-view/basics/deploy-protostub.md\n\n\n            return _this3.runtimeCatalogue.getSourcePackageFromURL(sourcePackageURL);\n          }, handleError).then(function (sourcePackage) {\n            if (haveError) return false;\n            Loader_log.info('[Runtime.Loader] 3. return the IDPProxy source package'); // we have completed step 7 https://github.com/reTHINK-project/core-framework/blob/master/docs/specs/runtime/dynamic-view/basics/deploy-protostub.md\n\n            _proxySourcePackage = sourcePackage; // TODO: Check on PEP (policy Engine) if we need the sandbox and check if the Sandbox Factory have the context sandbox;\n\n            var policy = true;\n            return policy;\n          }, handleError).then(function (policy) {\n            if (haveError) return false; // this will return the sandbox or one promise to getSandbox;\n\n            return _this3.registry.getSandbox(domain);\n          }).then(function (proxySandbox) {\n            if (haveError) return false;\n            Loader_log.info('[Runtime.Loader] 4. if the sandbox is registered then return the sandbox', proxySandbox);\n            _proxySandbox = proxySandbox;\n            return proxySandbox;\n          })[\"catch\"](function (reason) {\n            if (haveError) return false;\n            Loader_log.info('[Runtime.Loader] 5. Sandbox was not found, creating a new one', reason);\n            var proxyCapabilities = {};\n\n            if (_proxyDescriptor && _proxyDescriptor.hasOwnProperty('capabilities')) {\n              _proxyDescriptor = _proxyDescriptor.stubCapabilities;\n            }\n\n            return _this3._runtimeFactory.createSandbox(proxyCapabilities).then(function (sandbox) {\n              sandbox.addListener('*', function (msg) {\n                _this3.messageBus.postMessage(msg);\n              });\n              return sandbox;\n            });\n          }).then(function (sandbox) {\n            if (haveError) return false;\n            Loader_log.info('[Runtime.Loader] 6. return the sandbox instance and register', sandbox, 'to domain ', domain);\n            _proxySandbox = sandbox; // we need register stub on registry - step xxx https://github.com/reTHINK-project/core-framework/blob/master/docs/specs/runtime/dynamic-view/basics/deploy-protostub.md\n\n            return _this3.registry.registerIdpProxy(sandbox, domain);\n          }, handleError).then(function (runtimeIdpProxyURL) {\n            if (haveError) return false;\n            Loader_log.info('[Runtime.Loader] 7. Return the runtime Idp Proxy URL: ', runtimeIdpProxyURL); // we have completed step xxx https://github.com/reTHINK-project/core-framework/blob/master/docs/specs/runtime/dynamic-view/basics/deploy-protostub.md\n\n            _runtimeIdpProxyURL = runtimeIdpProxyURL; // Extend original hyperty configuration;\n\n            var configuration = {};\n\n            if (!emptyObject(_proxyDescriptor.configuration)) {\n              try {\n                configuration = Object.assign({}, JSON.parse(_proxyDescriptor.configuration));\n              } catch (e) {\n                configuration = _proxyDescriptor.configuration;\n              }\n            }\n\n            configuration.runtimeURL = _this3._runtimeURL; // Deploy Component step xxx\n\n            try {\n              // we have completed step xxx https://github.com/reTHINK-project/core-framework/blob/master/docs/specs/runtime/dynamic-view/basics/deploy-protostub.md\n              // Add the message bus listener\n              _this3.messageBus.addListener(_runtimeIdpProxyURL, function (msg) {\n                _proxySandbox.postMessage(msg);\n              });\n\n              return _proxySandbox.deployComponent(_proxySourcePackage.sourceCode, runtimeIdpProxyURL, configuration);\n            } catch (e) {\n              Loader_log.info('[Runtime.Loader] Error on deploy component:', e);\n              reject(e);\n            }\n          }, handleError).then(function () {\n            if (haveError) return false; // we have completed step xxx https://github.com/reTHINK-project/core-framework/blob/master/docs/specs/runtime/dynamic-view/basics/deploy-protostub.md\n            // Load Stub function resolved with success;\n            // let idpProxy = {\n            //   runtimeIdpProxyURL: _runtimeIdpProxyURL,\n            //   status: deployComponentStatus\n            // };\n            //this.registry.idpProxyList[domain].status = 'deployed';\n\n            var idpProxy = _this3.registry.idpProxyList[domain];\n            Loader_log.log('[Runtime.Loader.loadIdpProxy] 8: loaded: ', idpProxy);\n            resolve(idpProxy);\n            Loader_log.info('[Runtime.Loader.loadIdpProxy] ------------------- END ---------------------------\\n');\n          }, handleError)[\"catch\"](errorReason);\n        }\n      });\n    } // Check if the loader is ready to load all components\n\n  }, {\n    key: \"_readyToUse\",\n    value: function _readyToUse() {\n      var status = false;\n      if (!this._runtimeURL) throw new Error('[Runtime.Loader] The loader need the runtime url address');\n      if (!this._messagesBus) throw new Error('[Runtime.Loader] The loader need the messageBus component');\n      if (!this._registry) throw new Error('[Runtime.Loader] The loader need the registry component');\n      if (!this._runtimeFactory) throw new Error('[Runtime.Loader] The loader need the runtime factory component');\n      status = true;\n      return status;\n    }\n  }, {\n    key: \"runtimeURL\",\n    set: function set(value) {\n      this._runtimeURL = value;\n    }\n    /**\n     * Get runtime url\n     * @return {string} value runtimeURL\n     */\n    ,\n    get: function get() {\n      return this._runtimeURL;\n    }\n    /**\n     * Set Registry component\n     * @param  {Registry} value Registry Component\n     */\n\n  }, {\n    key: \"registry\",\n    set: function set(value) {\n      this._registry = value; // Install AddressAllocation\n\n      var addressAllocation = allocation_AddressAllocation.instance;\n      this._addressAllocation = addressAllocation;\n      Loader_log.log('[Loader - AddressAllocation] - ', addressAllocation);\n    }\n    /**\n     * Get Registry component\n     * @return {Registry} Registry component\n     */\n    ,\n    get: function get() {\n      return this._registry;\n    }\n    /**\n     * Set Message Bus component\n     * @param  {MessageBus} value Message bus component\n     */\n\n  }, {\n    key: \"messageBus\",\n    set: function set(value) {\n      this._messagesBus = value;\n    }\n    /**\n     * Get Message Bus component\n     * @return {MessageBus} Message Bus component\n     */\n    ,\n    get: function get() {\n      return this._messagesBus;\n    }\n    /**\n     * Set Runtime Factory component\n     * @param  {runtimeFactory} value Factory includes the specific implementations for each environment\n     */\n\n  }, {\n    key: \"runtimeFactory\",\n    set: function set(value) {\n      this._runtimeFactory = value;\n    }\n    /**\n     * Get Runtime Factory component\n     * @return {runtimeFactory} Runtime Factory component\n     */\n    ,\n    get: function get() {\n      return this._runtimeFactory;\n    }\n  }]);\n\n  return Loader;\n}();\n\n/* harmony default export */ var runtime_Loader = (Loader_Loader);\n// CONCATENATED MODULE: ./src/runtime/Storage.js\n\nvar storages = {};\nfunction Storage_storage(runtimeFactory, runtimeStatusUpdate) {\n  if (!runtimeFactory) throw new Error('The runtime factory is a needed parameter');\n  console.log('[Storage.storage] storageSchemas ', runtimeConfiguration_runtimeConfiguration.storageSchemas);\n  Object.keys(runtimeConfiguration_runtimeConfiguration.storageSchemas).forEach(function (key) {\n    if (!storages.hasOwnProperty(key)) {\n      storages[key] = runtimeFactory.storageManager(key, runtimeConfiguration_runtimeConfiguration.storageSchemas[key], runtimeStatusUpdate);\n    }\n  });\n  return storages;\n}\nfunction createSyncDB(name, runtimeFactory) {\n  var url = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  if (!name) throw new Error('[Runtime.Storage.createSyncDB] name is a needed parameter');\n  if (!runtimeFactory) throw new Error('[Runtime.Storage.createSyncDB] The runtime factory is a needed parameter');\n  var remote = url ? url : runtimeConfiguration_runtimeConfiguration.remoteStorage;\n  return runtimeFactory.syncStorageManager(name, remote);\n}\n// CONCATENATED MODULE: ./src/runtime/Descriptors.js\nfunction Descriptors_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction Descriptors_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Descriptors_createClass(Constructor, protoProps, staticProps) { if (protoProps) Descriptors_defineProperties(Constructor.prototype, protoProps); if (staticProps) Descriptors_defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\nvar Descriptors_log = loglevel[\"getLogger\"]('Descriptors');\n\nvar Descriptors_Descriptors =\n/*#__PURE__*/\nfunction () {\n  function Descriptors(runtimeURL, catalogue, runtimeConfiguration) {\n    Descriptors_classCallCheck(this, Descriptors);\n\n    if (!runtimeURL) throw Error('The descriptor need to know the runtime url to be used');\n    if (!catalogue) throw Error('The descriptor needs the catalogue instance');\n    if (!runtimeConfiguration) throw Error('The descriptor needs the runtime configuration');\n    this.log = Descriptors_log;\n    this.runtimeConfiguration = runtimeConfiguration;\n    this.runtimeURL = runtimeURL;\n    this.catalogue = catalogue;\n    this.constraints = runtimeUtils.runtimeCapabilities;\n  }\n\n  Descriptors_createClass(Descriptors, [{\n    key: \"getHypertyDescriptor\",\n    value: function getHypertyDescriptor(hypertyURL) {\n      return this.catalogue.getHypertyDescriptor(hypertyURL, true, this.constraints);\n    }\n  }, {\n    key: \"getStubDescriptor\",\n    value: function getStubDescriptor(stubURL) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        var domain;\n        var protostub;\n        var protoStubURL;\n        var originDividedURL = divideURL(_this.runtimeURL);\n        var originDomain = originDividedURL.domain;\n\n        if (stubURL.includes('://')) {\n          var dividedURL = divideURL(stubURL);\n          domain = dividedURL.domain;\n          var path = dividedURL.identity;\n\n          if (path) {\n            protostub = path.substring(path.lastIndexOf('/') + 1);\n          } else {\n            protostub = 'default';\n          }\n        } else {\n          protostub = 'default';\n          domain = stubURL;\n        }\n\n        protoStubURL = buildURL(_this.runtimeConfiguration, 'catalogueURLs', 'protocolstub', protostub);\n\n        if (domain !== _this.runtimeConfiguration.domain) {\n          if (!stubURL.indexOf('https') || !stubURL.indexOf('hyperty-catalogue')) {\n            protoStubURL = stubURL;\n          } else {\n            // TODO: check how to load form different configuration domain\n            var resource = getConfigurationResources(_this.runtimeConfiguration, 'catalogueURLs', 'protocolstub');\n            protoStubURL = resource.prefix + domain + resource.suffix + protostub;\n          }\n        }\n\n        Descriptors_log.log('Load ProtocolStub for domain, ' + domain + ' : ', protoStubURL);\n        return _this.catalogue.getStubDescriptor(protoStubURL, true, _this.constraints).then(function (result) {\n          resolve(result);\n        })[\"catch\"](function (error) {\n          // log.log('Error: ', error);\n          protostub = domain;\n          domain = originDomain;\n          var resource = getConfigurationResources(_this.runtimeConfiguration, 'catalogueURLs', 'protocolstub');\n          protoStubURL = resource.prefix + domain + resource.suffix + protostub; // log.log('Fallback -> Load Protocolstub for domain, ' + domain + ' : ', protostub);\n\n          return _this.catalogue.getStubDescriptor(protoStubURL, true, _this.constraints);\n        }).then(function (result) {\n          resolve(result);\n        })[\"catch\"](function (reason) {\n          reject(reason);\n        });\n      });\n    }\n  }, {\n    key: \"getIdpProxyDescriptor\",\n    value: function getIdpProxyDescriptor(idpProxyURL) {\n      var _this2 = this;\n\n      return new Promise(function (resolve, reject) {\n        var domain;\n        var idpproxy;\n        var originDividedURL = divideURL(_this2.runtimeURL);\n        var originDomain = originDividedURL.domain;\n        var constraints = _this2.constraints;\n        constraints.constraints.onlyAccessToken = true;\n        constraints.constraints.onlyIdAssertionValidation = true;\n        console.log('LOG HERE', constraints);\n\n        if (idpProxyURL.includes('://')) {\n          var dividedURL = divideURL(idpProxyURL);\n          domain = dividedURL.domain;\n          var path = dividedURL.identity;\n\n          if (path) {\n            idpproxy = path.substring(path.lastIndexOf('/') + 1);\n          } else {\n            idpproxy = 'default';\n          }\n        } else {\n          idpproxy = 'default';\n          domain = idpProxyURL;\n        }\n\n        var resource = getConfigurationResources(_this2.runtimeConfiguration, 'catalogueURLs', 'idpProxy');\n        idpProxyURL = resource.prefix + domain + resource.suffix + idpproxy; // log.log('Load Idp Proxy for domain, ' + domain + ' : ', idpProxyURL);\n\n        return _this2.catalogue.getIdpProxyDescriptor(idpProxyURL, true, constraints).then(function (result) {\n          resolve(result);\n        })[\"catch\"](function () {\n          idpproxy = domain;\n          domain = originDomain;\n          idpProxyURL = buildURL(_this2.runtimeConfiguration, 'catalogueURLs', 'idpProxy', idpproxy); // log.log('Load Idp Proxy for domain, ' + domain + ' : ', idpProxyURL);\n\n          return _this2.catalogue.getIdpProxyDescriptor(idpProxyURL, true, constraints);\n        }).then(function (result) {\n          resolve(result);\n        })[\"catch\"](function (reason) {\n          reject(reason);\n        });\n      });\n    }\n  }]);\n\n  return Descriptors;\n}();\n\n/* harmony default export */ var runtime_Descriptors = (Descriptors_Descriptors);\n// CONCATENATED MODULE: ./src/runtime/MsgBusHandlers.js\nfunction MsgBusHandlers_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction MsgBusHandlers_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction MsgBusHandlers_createClass(Constructor, protoProps, staticProps) { if (protoProps) MsgBusHandlers_defineProperties(Constructor.prototype, protoProps); if (staticProps) MsgBusHandlers_defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n *  Class where message bus handlers are built. To be used by the RuntimeUA to initialise the runtime UA.\n */\n//import { log as logLevels } from '../logLevels';\n// Log System\n\nvar MsgBusHandlers_log = loglevel[\"getLogger\"]('RuntimeUA');\n\nvar MsgBusHandlers =\n/*#__PURE__*/\nfunction () {\n  function MsgBusHandlers(pep, idm, crypto) {\n    MsgBusHandlers_classCallCheck(this, MsgBusHandlers);\n\n    if (!pep) throw Error('[MsgBusHandlers] pep input paramenter is mandatory');\n    if (!idm) throw Error('[MsgBusHandlers] idm input paramente is mandatory');\n    if (!crypto) throw Error('[MsgBusHandlers] crypto input paramente is mandatory');\n    this.policyEngine = pep;\n    this.identityManager = idm;\n    this.cryptoManager = crypto;\n  } // Policy based access control for incoming messages\n\n\n  MsgBusHandlers_createClass(MsgBusHandlers, [{\n    key: \"pepInHandler\",\n    get: function get() {\n      var _this = this;\n\n      return function (ctx) {\n        _this.policyEngine.authorise(ctx.msg, true).then(function (changedMgs) {\n          ctx.msg = changedMgs;\n          ctx.next();\n        })[\"catch\"](function (reason) {\n          MsgBusHandlers_log.error(reason);\n          ctx.fail(reason);\n        });\n      };\n    } // Policy based access control for outgoing messages\n\n  }, {\n    key: \"pepOutHandler\",\n    get: function get() {\n      var _this = this;\n\n      return function (ctx) {\n        _this.policyEngine.authorise(ctx.msg, false).then(function (changedMgs) {\n          ctx.msg = changedMgs;\n          ctx.next();\n        })[\"catch\"](function (reason) {\n          MsgBusHandlers_log.error(reason);\n          ctx.fail(reason);\n        });\n      };\n    } // Add Identity info to messages\n\n  }, {\n    key: \"idmHandler\",\n    get: function get() {\n      var _this = this;\n\n      return function (ctx) {\n        _this.identityManager.processMessage(ctx.msg).then(function (changedMgs) {\n          ctx.msg = changedMgs;\n          ctx.next();\n        })[\"catch\"](function (reason) {\n          MsgBusHandlers_log.error(reason);\n          ctx.fail(reason);\n        });\n      };\n    } // encrypt messages\n\n  }, {\n    key: \"encryptHandler\",\n    get: function get() {\n      var _this = this;\n\n      return function (ctx) {\n        _this.cryptoManager.encryptMessage(ctx.msg).then(function (changedMgs) {\n          ctx.msg = changedMgs;\n          ctx.next();\n        })[\"catch\"](function (reason) {\n          MsgBusHandlers_log.error(reason);\n          ctx.fail(reason);\n        });\n      };\n    } // decrypt messages\n\n  }, {\n    key: \"decryptHandler\",\n    get: function get() {\n      var _this = this;\n\n      return function (ctx) {\n        _this.cryptoManager.decryptMessage(ctx.msg).then(function (changedMgs) {\n          ctx.msg = changedMgs;\n          ctx.next();\n        })[\"catch\"](function (reason) {\n          MsgBusHandlers_log.warn(reason);\n          ctx.fail(reason);\n        });\n      };\n    }\n  }]);\n\n  return MsgBusHandlers;\n}();\n\n/* harmony default export */ var runtime_MsgBusHandlers = (MsgBusHandlers);\n// CONCATENATED MODULE: ./src/discovery/CoreDiscovery.js\nfunction CoreDiscovery_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction CoreDiscovery_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction CoreDiscovery_createClass(Constructor, protoProps, staticProps) { if (protoProps) CoreDiscovery_defineProperties(Constructor.prototype, protoProps); if (staticProps) CoreDiscovery_defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n* Copyright 2016 PT Inovação e Sistemas SA\n* Copyright 2016 INESC-ID\n* Copyright 2016 QUOBIS NETWORKS SL\n* Copyright 2016 FRAUNHOFER-GESELLSCHAFT ZUR FOERDERUNG DER ANGEWANDTEN FORSCHUNG E.V\n* Copyright 2016 ORANGE SA\n* Copyright 2016 Deutsche Telekom AG\n* Copyright 2016 Apizee\n* Copyright 2016 TECHNISCHE UNIVERSITAT BERLIN\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n**/\n// Log System\n\nvar CoreDiscovery_log = loglevel[\"getLogger\"]('CoreDiscovery');\n\n/**\n* Core Discovery interface\n* Class to allow applications to search for hyperties and DataObjects using the message bus\n*/\n\nvar CoreDiscovery_CoreDiscovery =\n/*#__PURE__*/\nfunction () {\n  /**\n  * To initialise the Discovery, which will provide the support for hyperties to\n  * query users registered in outside the internal core.\n  * @param  {MessageBus}          msgbus                msgbus\n  * @param  {RuntimeURL}          runtimeURL            runtimeURL\n  * @param  {graphConnector}    graphConnector\n  */\n  function CoreDiscovery(runtimeURL, msgBus, graphConnector, runtimeFactory, registry) {\n    CoreDiscovery_classCallCheck(this, CoreDiscovery);\n\n    if (!runtimeFactory) throw Error('The catalogue needs the runtimeFactory');\n\n    var _this = this;\n\n    this._messageBus = msgBus;\n    _this.graphConnector = graphConnector;\n    _this.httpRequest = runtimeFactory.createHttpRequest();\n    _this.domain = divideURL(runtimeURL).domain;\n    _this.discoveryURL = runtimeURL + '/discovery/';\n    _this.registry = registry;\n\n    _this.messageBus.addListener(_this.discoveryURL, function (msg) {\n      _this.discoveryManager(msg).then(function (result) {\n        //FLOW-OUT: message response\n        _this.messageBus.postMessage({\n          id: msg.id,\n          type: 'response',\n          from: msg.to,\n          to: msg.from,\n          body: {\n            code: 200,\n            value: result\n          }\n        });\n      })[\"catch\"](function (err) {\n        var description;\n        var code;\n\n        if (err === 'GraphConnector') {\n          description = 'This search is not available at the moment. Try later.';\n          code = 500;\n        } else {\n          description = 'Not Found';\n          code = 404;\n        } //FLOW-OUT: error message response\n\n\n        _this.messageBus.postMessage({\n          id: msg.id,\n          type: 'response',\n          from: msg.to,\n          to: msg.from,\n          body: {\n            code: code,\n            description: description\n          }\n        });\n      });\n    });\n  }\n  /**\n   * Returns the MessageBus.\n   */\n\n\n  CoreDiscovery_createClass(CoreDiscovery, [{\n    key: \"discoveryManager\",\n\n    /* function to decide what discovery method to call and later return the response msg  */\n    value: function discoveryManager(msg) {\n      var _this = this;\n\n      var domain = divideURL(msg.from).domain;\n      var atributes = msg.body.resource.split('/').filter(Boolean);\n      var resources = [];\n      var dataSchemes = [];\n      CoreDiscovery_log.log('[CoreDiscovery.discoveryManager] received: ', msg);\n\n      if (msg.body.criteria) {\n        if (msg.body.criteria.resources) {\n          resources = msg.body.criteria.resources;\n        }\n\n        if (msg.body.criteria.dataSchemes) {\n          dataSchemes = msg.body.criteria.dataSchemes;\n        }\n      }\n\n      switch (atributes[1]) {\n        case 'user':\n          if (atributes[0] == 'hyperty') {\n            return _this.discoverHyperties(msg.body.resource.split('user/')[1], dataSchemes, resources, msg.body.criteria.domain);\n          } else {\n            return _this.discoverDataObjects(msg.body.resource.split('user/')[1], dataSchemes, resources, msg.body.criteria.domain);\n          }\n\n          break;\n\n        case 'url':\n          if (atributes[0] == 'hyperty') {\n            return _this.discoverHypertyPerURL(msg.body.resource.split('url/')[1], msg.body.criteria.domain);\n          } else {\n            return _this.discoverDataObjectPerURL(msg.body.resource.split('url/')[1], msg.body.criteria.domain);\n          }\n\n          break;\n\n        case 'name':\n          return _this.discoverDataObjectsPerName(msg.body.resource.split('name/')[1], dataSchemes, resources, msg.body.criteria.domain);\n          break;\n\n        case 'reporter':\n          return _this.discoverDataObjectsPerReporter(msg.body.resource.split('reporter/')[1], dataSchemes, resources, msg.body.criteria.domain);\n          break;\n\n        case 'guid':\n          if (typeof _this.graphConnector !== 'undefined' && _this.graphConnector !== null) {\n            if (atributes[0] == 'hyperty') {\n              return _this.discoverHypertiesPerGUID(msg.body.resource.split('user-guid://')[1], dataSchemes, resources);\n            } else {\n              return _this.discoverDataObjectsPerGUID(msg.body.resource.split('user-guid://')[1], dataSchemes, resources);\n            }\n\n            break;\n          } else {\n            return Promise.reject('GraphConnector');\n            break;\n          }\n\n        case 'userprofile':\n          if (typeof _this.graphConnector !== 'undefined' && _this.graphConnector !== null) {\n            if (atributes[0] == 'hyperty') {\n              return _this.discoverHypertiesPerUserProfileData(msg.body.resource.split('userprofile/')[1], dataSchemes, resources);\n            } else {\n              return _this.discoverDataObjectsPerUserProfileData(msg.body.resource.split('userprofile/')[1], dataSchemes, resources);\n            }\n\n            break;\n          } else {\n            return Promise.reject('GraphConnector');\n            break;\n          }\n\n      }\n    }\n    /**\n    * Advanced Search for Hyperties registered in domain registry associated with some user identifier (eg email, name ...)\n    * @param  {String}           userIdentifier\n    * @param  {Array<string>}    dataSchemes (Optional)     types of hyperties schemas\n    * @param  {Array<string>}    resources (Optional)  types of hyperties resources\n    */\n\n  }, {\n    key: \"discoverHypertiesPerUserProfileData\",\n    value: function discoverHypertiesPerUserProfileData(userIdentifier, dataSchemes, resources) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        //translate user identifier (e.g. email, name...) into the associated GUIDs\n        _this.discoverGUIDPerUserIdentifier(userIdentifier).then(function (guids) {\n          var hypertiesPromises = guids.map(function (guid) {\n            return new Promise(function (resolve, reject) {\n              _this.discoverHypertiesPerGUID(guid, dataSchemes, resources).then(function (hyperties) {\n                resolve(hyperties);\n              })[\"catch\"](function (err) {\n                resolve([]);\n              });\n            });\n          });\n          Promise.all(hypertiesPromises).then(function (hypertiesResult) {\n            var hyperties = [].concat.apply([], hypertiesResult);\n\n            if (hyperties.length === 0) {\n              return reject('No hyperties were found');\n            }\n\n            resolve(hyperties);\n          });\n        })[\"catch\"](function (err) {\n          return reject(err);\n        });\n      });\n    }\n    /**\n    * Advanced Search for DataObjects registered in domain registry associated with some user identifier (eg email, name ...)\n    * @param  {String}           userIdentifier\n    * @param  {Array<string>}    dataSchemes (Optional)     types of hyperties schemas\n    * @param  {Array<string>}    resources (Optional)  types of hyperties resources\n    */\n\n  }, {\n    key: \"discoverDataObjectsPerUserProfileData\",\n    value: function discoverDataObjectsPerUserProfileData(userIdentifier, dataSchemes, resources) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        //translate user identifier (e.g. email, name...) into the associated GUIDs\n        _this.discoverGUIDPerUserIdentifier(userIdentifier).then(function (guids) {\n          var dataObjectsPromises = guids.map(function (guid) {\n            return new Promise(function (resolve, reject) {\n              _this.discoverDataObjectsPerGUID(guid, dataSchemes, resources).then(function (dataObjects) {\n                resolve(dataObjects);\n              })[\"catch\"](function (err) {\n                resolve([]);\n              });\n            });\n          });\n          Promise.all(dataObjectsPromises).then(function (dataObjectsResult) {\n            var dataObjects = [].concat.apply([], dataObjectsResult);\n\n            if (dataObjects.length === 0) {\n              return reject('No dataObjects were found');\n            }\n\n            resolve(dataObjects);\n          });\n        })[\"catch\"](function (err) {\n          return reject(err);\n        });\n      });\n    }\n    /**\n    * Advanced Search for Hyperties registered in domain registry associated with some GUID\n    * @param  {String}             guid\n    * @param  {Array<string>}    dataSchemes (Optional)     types of hyperties schemas\n    * @param  {Array<string>}    resources (Optional)  types of hyperties resources\n    */\n\n  }, {\n    key: \"discoverHypertiesPerGUID\",\n    value: function discoverHypertiesPerGUID(guid, dataSchemes, resources) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        //translate GUID into the user IDs to query the domain registry\n        _this.discoverUserIdsPerGUID(guid).then(function (uids) {\n          //translate user IDs into the associated hyperties registered in some domain\n          var hypertiesPromises = uids.map(function (uid) {\n            return new Promise(function (resolve, reject) {\n              _this.discoverHyperties(uid.uID, dataSchemes, resources, uid.domain).then(function (hyperties) {\n                resolve(hyperties);\n              })[\"catch\"](function (err) {\n                resolve([]);\n              });\n            });\n          });\n          Promise.all(hypertiesPromises).then(function (hypertiesResult) {\n            var hyperties = [].concat.apply([], hypertiesResult);\n\n            if (hyperties.length === 0) {\n              return reject('No hyperties were found');\n            } // log.log('Hyperties : ', hyperties);\n\n\n            resolve(hyperties);\n          });\n        })[\"catch\"](function (err) {\n          return reject(err);\n        });\n      });\n    }\n    /**\n    * Advanced Search for DataObjects registered in domain registry associated with some GUID\n    * @param  {String}             guid\n    * @param  {Array<string>}    dataSchemes (Optional)     types of hyperties schemas\n    * @param  {Array<string>}    resources (Optional)  types of hyperties resources\n    */\n\n  }, {\n    key: \"discoverDataObjectsPerGUID\",\n    value: function discoverDataObjectsPerGUID(guid, dataSchemes, resources) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        //translate GUID into the user IDs to query the domain registry\n        _this.discoverUserIdsPerGUID(guid).then(function (uids) {\n          //translate user IDs into the associated dataObjects registered in some domain\n          var dataObjectPromises = uids.map(function (uid) {\n            return new Promise(function (resolve, reject) {\n              _this.discoverDataObjects(uid.uID, dataSchemes, resources, uid.domain).then(function (dataObjects) {\n                resolve(dataObjects);\n              })[\"catch\"](function (err) {\n                resolve([]);\n              });\n            });\n          });\n          Promise.all(dataObjectPromises).then(function (dataObjectsResult) {\n            var dataObjects = [].concat.apply([], dataObjectsResult);\n\n            if (dataObjects.length === 0) {\n              return reject('No dataObjects were found');\n            } // log.log('DataObjects : ', dataObjects);\n\n\n            resolve(dataObjects);\n          });\n        })[\"catch\"](function (err) {\n          return reject(err);\n        });\n      });\n    }\n    /** Advanced Search for Hyperties registered in domain registry and associated with some user ID\n    * @param  {String}           user                  user identifier, either in url or email format\n    * @param  {Array<string>}    dataSchemes (Optional)     types of hyperties schemas\n    * @param  {Array<string>}    resources (Optional)  types of hyperties resources\n    * @param  {String}           domain (Optional)     domain of the registry to search\n    */\n\n  }, {\n    key: \"discoverHyperties\",\n    value: function discoverHyperties(user, dataSchemes, resources, domain) {\n      var _this = this;\n\n      var activeDomain;\n      activeDomain = !domain ? _this.domain : domain;\n      var msg = {\n        type: 'read',\n        from: _this.discoveryURL,\n        to: 'domain://registry.' + activeDomain,\n        body: {}\n      };\n\n      if (user.indexOf('user://') > -1) {\n        msg.body.resource = user;\n      } else {\n        msg.body.resource = '/hyperty/idp-identifier/' + user;\n      }\n\n      if (dataSchemes.length > 0) {\n        if (!msg.body.criteria) {\n          msg.body.criteria = {};\n        }\n\n        msg.body.criteria.dataSchemes = dataSchemes;\n      }\n\n      if (resources.length > 0) {\n        if (!msg.body.criteria) {\n          msg.body.criteria = {};\n        }\n\n        msg.body.criteria.resources = resources;\n      }\n\n      return new Promise(function (resolve, reject) {\n        // log.log(\"[CoreDiscovery.discoverHyperties] sending msg \", msg);\n        _this.messageBus.postMessage(msg, function (reply) {\n          // log.log(\"[CoreDiscovery.discoverHyperties] rcved reply \", reply);\n          if (reply.body.code === 200 || reply.body.code === 500) {\n            var hyperties = reply.body.value;\n            var finalHyperties = [];\n\n            for (var key in hyperties) {\n              finalHyperties.push(hyperties[key]);\n            }\n\n            if (finalHyperties.length > 0) {\n              // log.log(\"[CoreDiscovery.discoverHyperties] Hyperties Found: \", finalHyperties);\n              resolve(finalHyperties);\n            } else {\n              return reject('No Hyperty was found');\n            }\n          } else {\n            return reject('No Hyperty was found');\n          }\n          /*_this.registry.isLegacy(user).then((legacy) => {\n                if (legacy) resolve([{hypertyID: user }])\n                else return reject('No Hyperty was found');\n            });*/\n\n        });\n      });\n    }\n    /** Advanced Search for DataObjects registered in domain registry and associated with some user ID\n    * @param  {String}           user                  user identifier, either in url or email format\n    * @param  {Array<string>}    dataSchemes (Optional)     types of dataObjects schemas\n    * @param  {Array<string>}    resources (Optional)  types of dataObjects resources\n    * @param  {String}           domain (Optional)     domain of the registry to search\n    */\n\n  }, {\n    key: \"discoverDataObjects\",\n    value: function discoverDataObjects(user, dataSchemes, resources, domain) {\n      var _this = this;\n\n      var activeDomain;\n      var dataObjectsArray = [];\n      activeDomain = !domain ? _this.domain : domain;\n      return new Promise(function (resolve, reject) {\n        //translate user identifier (e.g. email, name...) into the associated hyperties\n        _this.discoverHyperties(user, [], [], activeDomain).then(function (hyperties) {\n          var finalHyperties = [];\n\n          for (var key in hyperties) {\n            finalHyperties.push(hyperties[key]);\n          } //translate hyperties URLs into the associated dataObjects registered in some domain\n\n\n          var dataObjectsPromises = finalHyperties.map(function (hyperty) {\n            return new Promise(function (resolve, reject) {\n              _this.discoverDataObjectsPerReporter(hyperty.hypertyID, dataSchemes, resources, activeDomain).then(function (dataObject) {\n                resolve(dataObject);\n              })[\"catch\"](function (err) {\n                resolve([]);\n              });\n            });\n          });\n          Promise.all(dataObjectsPromises).then(function (dataObjectsResult) {\n            var dataObjects = [].concat.apply([], dataObjectsResult);\n            dataObjects.forEach(function (dataObject) {\n              dataObjectsArray.push(dataObject);\n            });\n            var finalDataObjects = [];\n\n            for (var key in dataObjectsArray) {\n              finalDataObjects.push(dataObjectsArray[key]);\n            }\n\n            if (finalDataObjects.length === 0) {\n              return reject('No dataObjects were found');\n            } // log.log('DataObjects Found: ', finalDataObjects);\n\n\n            resolve(finalDataObjects);\n          });\n        })[\"catch\"](function (err) {\n          return reject(err);\n        });\n      });\n    }\n    /**\n    * function to request about hyperties registered in domain registry, and\n    * return the hyperty information, if found.\n    * @param  {String}              url  dataObject URL\n    * @param  {String}            domain (Optional)\n    * @return {Promise}          Promise\n    */\n\n  }, {\n    key: \"discoverHypertyPerURL\",\n    value: function discoverHypertyPerURL(url, domain) {\n      var _this = this;\n\n      var activeDomain;\n      activeDomain = !domain ? _this.domain : domain;\n      var msg = {\n        type: 'read',\n        from: _this.discoveryURL,\n        to: 'domain://registry.' + activeDomain,\n        body: {\n          resource: url\n        }\n      };\n      return new Promise(function (resolve, reject) {\n        _this.messageBus.postMessage(msg, function (reply) {\n          if (reply.body.code !== 200 && reply.body.code !== 500) {\n            return reject('No Hyperty was found');\n          }\n\n          var hyperty = reply.body.value;\n\n          if (hyperty) {\n            // log.log('Hyperty found: ', hyperty);\n            resolve(hyperty);\n          } else {\n            return reject('No Hyperty was found');\n          }\n        });\n      });\n    }\n    /**\n    * function to request about dataObject registered in domain registry, and\n    * return the dataObject information, if found.\n    * @param  {String}              url  dataObject URL\n    * @param  {String}            domain (Optional)\n    * @return {Promise}          Promise\n    */\n\n  }, {\n    key: \"discoverDataObjectPerURL\",\n    value: function discoverDataObjectPerURL(url, domain) {\n      var _this = this;\n\n      var activeDomain;\n      activeDomain = !domain ? _this.domain : domain;\n      var msg = {\n        type: 'read',\n        from: _this.discoveryURL,\n        to: 'domain://registry.' + activeDomain,\n        body: {\n          resource: url\n        }\n      };\n      return new Promise(function (resolve, reject) {\n        _this.messageBus.postMessage(msg, function (reply) {\n          var dataObject = reply.body.value;\n\n          if (dataObject) {\n            // log.log('DataObject found: ', dataObject);\n            resolve(dataObject);\n          } else {\n            return reject('DataObject not found');\n          }\n        });\n      });\n    }\n    /** Advanced Search for dataObjects registered in domain registry\n    * @param  {String}           name                  name of the dataObject\n    * @param  {Array<string>}    dataSchemes (Optional)     types of dataObject schemas\n    * @param  {Array<string>}    resources (Optional)  types of dataObject resources\n    * @param  {String}           domain (Optional)     domain of the registry to search\n    */\n\n  }, {\n    key: \"discoverDataObjectsPerName\",\n    value: function discoverDataObjectsPerName(name, dataSchemes, resources, domain) {\n      var _this = this;\n\n      var activeDomain;\n      activeDomain = !domain ? _this.domain : domain;\n      var msg = {\n        type: 'read',\n        from: _this.discoveryURL,\n        to: 'domain://registry.' + activeDomain,\n        body: {\n          resource: name\n        }\n      };\n\n      if (dataSchemes.length > 0) {\n        if (!msg.body.criteria) {\n          msg.body.criteria = {};\n        }\n\n        msg.body.criteria.dataSchemes = dataSchemes;\n      }\n\n      if (resources.length > 0) {\n        if (!msg.body.criteria) {\n          msg.body.criteria = {};\n        }\n\n        msg.body.criteria.resources = resources;\n      }\n\n      return new Promise(function (resolve, reject) {\n        _this.messageBus.postMessage(msg, function (reply) {\n          var dataObjects = reply.body.value;\n          var finalDataObjects = [];\n\n          for (var key in dataObjects) {\n            finalDataObjects.push(dataObjects[key]);\n          }\n\n          if (finalDataObjects.length > 0) {\n            // log.log(\"DataObjects Found: \", finalDataObjects);\n            resolve(finalDataObjects);\n          } else {\n            return reject('No DataObject was found');\n          }\n        });\n      });\n    }\n    /**\n    * function to request about specific reporter dataObject registered in domain registry, and\n    * return the dataObjects from that reporter.\n    * @param  {String}           reporter                         dataObject reporter\n    * @param  {Array<string>}    scdataSchemeshema                (Optional)     types of dataObjects schemas\n    * @param  {Array<string>}    resources                        (Optional)  types of dataObjects resources\n    * @param  {String}           domain                           (Optional)\n    */\n\n  }, {\n    key: \"discoverDataObjectsPerReporter\",\n    value: function discoverDataObjectsPerReporter(reporter, dataSchemes, resources, domain) {\n      var _this = this;\n\n      var activeDomain;\n      activeDomain = !domain ? _this.domain : domain;\n      var msg = {\n        type: 'read',\n        from: _this.discoveryURL,\n        to: 'domain://registry.' + activeDomain,\n        body: {\n          resource: '/comm',\n          criteria: {\n            reporter: reporter\n          }\n        }\n      };\n\n      if (dataSchemes.length > 0) {\n        msg.body.criteria.dataSchemes = dataSchemes;\n      }\n\n      if (resources.length > 0) {\n        msg.body.criteria.resources = resources;\n      }\n\n      return new Promise(function (resolve, reject) {\n        _this.messageBus.postMessage(msg, function (reply) {\n          var dataObjects = reply.body.value;\n          var finalDataObjects = [];\n\n          for (var key in dataObjects) {\n            finalDataObjects.push(dataObjects[key]);\n          }\n\n          if (finalDataObjects.length > 0) {\n            // log.log(\"DataObjects Found: \", finalDataObjects);\n            resolve(finalDataObjects);\n          } else {\n            return reject('No DataObject was found');\n          }\n        });\n      });\n    }\n    /**\n    * function to request global registry about the user IDs associated with some GUID\n    * @param  {String}              guid\n    * @return {Promise}          Promise\n    */\n\n  }, {\n    key: \"discoverUserIdsPerGUID\",\n    value: function discoverUserIdsPerGUID(guid) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        // log.log(\"GO graphConnector:\", guid);\n        _this.graphConnector.queryGlobalRegistry(guid).then(function (graphConnectorContactData) {\n          // log.log('Information returned from Global Registry: ', graphConnectorContactData);\n          if (typeof graphConnectorContactData === 'string' || !graphConnectorContactData) {\n            return reject('Unsuccessful discover userIDs by GUID');\n          } else {\n            var userids = graphConnectorContactData.userIDs;\n\n            if (userids.length === 0) {\n              return reject('UserIDs not available');\n            }\n\n            resolve(userids);\n          }\n        })[\"catch\"](function (err) {\n          return reject(err);\n        });\n      });\n    }\n    /**\n    * function to request discovery service about the GUID associated with some user identifier (eg email, name ...)\n    * @param  {String}            userIdentifier\n    * @return {Promise}           Promise\n    */\n\n  }, {\n    key: \"discoverGUIDPerUserIdentifier\",\n    value: function discoverGUIDPerUserIdentifier(userIdentifier) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        var lookupURLDiscoveryService = 'https://rethink.tlabscloud.com/discovery/rest/discover/lookup?searchquery=';\n\n        _this.httpRequest.get(lookupURLDiscoveryService + userIdentifier).then(function (json) {\n          // log.log('discover GUID by user identifier', json);\n          var response = JSON.parse(json);\n          var filteredGuid = response.results.filter(function (x) {\n            return x.rethinkID != undefined;\n          });\n\n          if (filteredGuid.length === 0) {\n            return reject('Unsuccessful discover GUID by user identifier');\n          }\n\n          var guids = filteredGuid.map(function (x) {\n            return x.rethinkID;\n          });\n          return resolve(guids);\n        })[\"catch\"](function (err) {\n          // log.log(\"HTTP Request error: \", err);\n          return reject(err);\n        });\n      });\n    }\n  }, {\n    key: \"messageBus\",\n    get: function get() {\n      return this._messageBus;\n    }\n    /**\n     * Sets the MessageBus.\n     * @param {MessageBus}           messageBus    The Message Bus.\n     */\n    ,\n    set: function set(messageBus) {\n      this._messageBus = messageBus;\n    }\n  }]);\n\n  return CoreDiscovery;\n}();\n\n/* harmony default export */ var discovery_CoreDiscovery = (CoreDiscovery_CoreDiscovery);\n// CONCATENATED MODULE: ./src/store-objects/DataObjectsStorage.js\nfunction DataObjectsStorage_typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { DataObjectsStorage_typeof = function _typeof(obj) { return typeof obj; }; } else { DataObjectsStorage_typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return DataObjectsStorage_typeof(obj); }\n\nfunction DataObjectsStorage_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction DataObjectsStorage_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction DataObjectsStorage_createClass(Constructor, protoProps, staticProps) { if (protoProps) DataObjectsStorage_defineProperties(Constructor.prototype, protoProps); if (staticProps) DataObjectsStorage_defineProperties(Constructor, staticProps); return Constructor; }\n\n// Log System\n\nvar DataObjectsStorage_log = loglevel[\"getLogger\"]('DataObjectsStorage');\n\n\n\nvar DataObjectsStorage_DataObjectsStorage =\n/*#__PURE__*/\nfunction () {\n  function DataObjectsStorage(storageManager) {\n    var storedDataObjects = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var factory = arguments.length > 2 ? arguments[2] : undefined;\n    var runtimeUrl = arguments.length > 3 ? arguments[3] : undefined;\n\n    DataObjectsStorage_classCallCheck(this, DataObjectsStorage);\n\n    if (!storageManager) throw new Error('[Store Data Objects] - Needs the storageManager component');\n    this._storageManager = storageManager;\n    this._storeDataObject = storedDataObjects;\n    this._cache = {};\n    this._createSyncDB = createSyncDB; // to create Data Objects to be synched with remote storages\n\n    this._remotes = {}; // List of DO synched with remote storages\n\n    this._factory = factory;\n    this._table = 'syncherManager:ObjectURLs';\n    this._remoteStorageTable = 'dataObjectStorage';\n    this._remoteSchema = 'url';\n    this._runtimeUrl = runtimeUrl;\n  } // load Data Objects synched with remote Storages\n\n\n  DataObjectsStorage_createClass(DataObjectsStorage, [{\n    key: \"loadRemote\",\n    value: function loadRemote() {\n      var _this2 = this;\n\n      var resume = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        var loading = [];\n        var synching = [];\n\n        _this._storageManager.get(null, null, 'remotes').then(function (remotes) {\n          // in case we don't have any remotes locally stored\n          DataObjectsStorage_log.log('[StoreDataObjects.loadRemote] remotes: ', remotes);\n          if (!remotes) resolve();\n          if (!resume) _this._remotes = remotes;\n          DataObjectsStorage_log.log('[StoreDataObjects.loadRemote] loading: ', _this._remotes);\n          var remoteObjects = Object.keys(remotes); // in case we don't have any remotes locally stored\n\n          if (remoteObjects.length === 0) resolve();\n          remoteObjects.forEach(function (db) {\n            var table = 'do-' + db.split('/')[3];\n            _this._remotes[db] = createSyncDB(table, _this2._factory); //            _this._remotes[remote] = createSyncDB(remote, _this._factory, 'remoteDataObjectStorage' );\n\n            loading.push(_this._remotes[db].get());\n          });\n          Promise.all(loading).then(function (remotes) {\n            DataObjectsStorage_log.log('[StoreDataObjects.loadRemote] loaded: ', remotes); //TODO: init this._storeDataObject with loaded data objects\n\n            /*          Object.keys(remotes).forEach((remote) => {\n            \n                        synching.push(_this.sync(remote));\n                      });\n                      Promise.all(synching).then((dataObjs) => {*/\n\n            var dataObjs = remotes;\n            if (dataObjs.length === 0) resolve();\n            dataObjs.forEach(function (dO) {\n              var dataObj = _this._remoteDoc2dataObject(dO); //              Object.keys(dO).forEach((i) => {\n\n\n              DataObjectsStorage_log.log('[StoreDataObjects.loadRemote] loaded remote ', dataObj); //              if (dO[remote].isReporter) {\n\n              var type = _this2._getTypeOfObject(dataObj.isReporter);\n\n              if (!_this._storeDataObject) _this._storeDataObject = {};\n              if (!_this._storeDataObject.hasOwnProperty(type)) _this._storeDataObject[type] = {};\n              _this._storeDataObject[type][dataObj.url] = dataObj; //             });\n              //            });\n\n              resolve(_this._storeDataObject);\n            }, function (error) {\n              reject(error);\n            });\n          });\n        }, function (error) {\n          reject(error);\n        });\n\n        resolve();\n      });\n    } // delete Data Objects synched with remote Storages\n\n  }, {\n    key: \"deleteRemotes\",\n    value: function deleteRemotes() {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        var deleting = [];\n        var disconnecting = [];\n\n        _this._storageManager.get(null, null, 'remotes').then(function (remotes) {\n          // in case we don't have any remotes locally stored\n          DataObjectsStorage_log.info('[StoreDataObjects.deleteRemotes] remotes: ', remotes);\n          if (!remotes) resolve();\n          var remoteObjects = Object.keys(_this._remotes); // in case we don't have any remotes locally stored\n\n          if (remoteObjects.length === 0) resolve();\n          remoteObjects.forEach(function (db) {\n            deleting.push(_this._remotes[db].disconnect());\n            deleting.push(_this._remotes[db][\"delete\"]());\n          });\n          Promise.all(deleting).then(function () {\n            DataObjectsStorage_log.log('[StoreDataObjects.deleteRemotes] deleted.');\n            resolve();\n          }, function (error) {\n            resolve();\n          });\n        });\n\n        resolve();\n      });\n    }\n    /**\n     * @description should set the initial state of the dataObjectURL to be resumed if necessary;\n     *\n     * @param {DataObjectURL} url - dataObjectURL to be saved;\n     * @param {Boolean} isReporter - the object to be saved is a reporter\n     * @param {SchemaURL} schema - the schema url\n     * @param {String} status - the status of current dataObject\n     * @param {HypertyURL} reporter - the Reporter hypertyURL\n     * @param {Array<HypertyURL>} subscription - list of subscriptions\n     * @param {Array<DataObjectChild>} children - list of childs of dataObjectURL\n     * @param {Array<String>} childrens - list of childrens, like, 'chatmessage';\n     * @param {Array<UserURL} subscriberUser - list of subscribed users;\n     */\n\n  }, {\n    key: \"set\",\n    value: function set(metadata) {\n      var _this3 = this;\n\n      return new Promise(function (resolve, reject) {\n        var storeDataObject = _this3._storeDataObject ? _this3._storeDataObject : {};\n\n        var type = _this3._getTypeOfObject(metadata.isReporter);\n\n        if (!storeDataObject.hasOwnProperty(type)) storeDataObject[type] = {};\n\n        if (!storeDataObject[type].hasOwnProperty(metadata.url)) {\n          storeDataObject[type][metadata.url] = {};\n          storeDataObject[type][metadata.url].subscriptions = []; // TODO:do we need this?\n\n          storeDataObject[type][metadata.url].subscriberUsers = []; // TODO:do we need this?\n\n          storeDataObject[type][metadata.url].childrenObjects = {};\n          storeDataObject[type][metadata.url].data = {};\n        }\n\n        Object.assign(storeDataObject[type][metadata.url], metadata);\n        delete storeDataObject[type][metadata.url].subscriberUser;\n        delete storeDataObject[type][metadata.url].subscriberHyperty;\n        storeDataObject[type][metadata.url].backup = metadata.hasOwnProperty('backup') ? metadata.backup : false;\n        /*if (schema) storeDataObject[type][metadata.url].schema = schema;\n        if (status) storeDataObject[type][metadata.url].status = status;\n        if (childrenResources) storeDataObject[type][metadata.url].childrenResources = childrenResources;*/\n\n        if (metadata.subscriberHyperty && !metadata.isReporter) {\n          // TODO: do we need this?\n          _this3._updateToArray(storeDataObject[type], metadata.url, 'subscriptions', metadata.subscriberHyperty);\n        } //storeDataObject[type][metadata.url].owner = owner;\n\n\n        if (metadata.subscriberUser) {\n          // TODO: do we need this?\n          if (storeDataObject[type][metadata.url].subscriberUsers.indexOf(metadata.subscriberUser)) {\n            _this3._updateToArray(storeDataObject[type], metadata.url, 'subscriberUsers', metadata.subscriberUser);\n          }\n        }\n\n        _this3._storeDataObject = storeDataObject;\n        var backup = metadata.hasOwnProperty('backup') ? metadata.backup : false;\n        var table = backup ? metadata.url : _this3._table; //      let db = backup ? table.split('://')[1] : this._table;\n\n        var db = backup ? 'do-' + table.split('/')[3] : _this3._table;\n\n        if (backup && !_this3._remotes[metadata.url]) {\n          var schema = {};\n          schema[table] = _this3._remoteSchema;\n          _this3._remotes[metadata.url] = createSyncDB(db, _this3._factory);\n        } // Save Data Object URL at remotes table to support resumes\n\n\n        if (backup) _this3._storageManager.set(table, 0, db, 'remotes');\n        var storage = backup ? _this3._remotes[table] : _this3._storageManager;\n\n        if (backup) {\n          // lets connect to remote storage to enable sync\n          storage.set(table, storeDataObject[type][metadata.url]).then(function () {\n            if (metadata.isReporter) storage.connect();\n            resolve(storeDataObject[type][metadata.url]);\n          }, function (error) {\n            DataObjectsStorage_log.error('[DataObjectStorage.set] failed to save into remote storage: ', error);\n            reject(error);\n          });\n        } else {\n          console.log('[DataObjectStorage.set] _storeDataObject before filter ', _this3._storeDataObject);\n          storage.set(db, 1, _this3._filterRemotes(_this3._storeDataObject), table).then(function () {\n            resolve(storeDataObject[type][metadata.url]);\n          });\n        }\n      });\n    } // to filter Data Objects that are stored outside the ObjectURLs table\n\n  }, {\n    key: \"_filterRemotes\",\n    value: function _filterRemotes(storeDataObject) {\n      var remotes = Object.keys(this._remotes);\n      var filtered = deepClone(storeDataObject);\n      console.log('[DataObjectStorage._filterRemotes] starting filtering ', filtered);\n      remotes.forEach(function (remote) {\n        if (filtered['reporters'] && filtered['reporters'][remote]) {\n          delete filtered['reporters'][remote];\n          console.log('[DataObjectStorage._filterRemotes] filter updated ', filtered);\n        } else delete filtered['observers'][remote];\n      });\n      console.log('[DataObjectStorage._filterRemotes] ', filtered);\n      return filtered;\n    } // Initial Sync of Observer to avoid later mismatches with sync revisions\n    // OUtdated: not used anymore\n\n    /*\n      initialObserverSync(resource, backupRevision) {\n        // to be completed\n        let table = resource.split('/')[3];\n    \n        let _this = this;\n    \n        let options = {table: table, observer: true, baseRevision: backupRevision, syncedRevision: backupRevision};\n    \n        console.log('[DataObjectStorage.initialObserverSync] object: ', resource, ' revision ', backupRevision)\n    \n        _this._remotes[resource]options).then(()=> {\n    \n          console.log('[DataObjectStorage.initialObserverSync] connected ');\n    \n                setTimeout(function() {\n                  _this._remotes[resource].disconnect().then(()=>{\n                    console.log('[DataObjectStorage.initialObserverSync] disconnected ');\n                },(error)=> {\n                  log.error('[DataObjectStorage.initialObserverSync] Error disconnecting with remote storage');\n                  reject(error);\n                });\n                }, 15000)\n    \n        }, (error) => {\n          log.error('[DataObjectStorage.initialObserverSync] Error connecting to remote storage');\n          reject(error)\n        });\n    \n      }*/\n\n    /**\n     * @description should save and update the current dataObject data information\n     *\n     * @param {Boolean} isReporter - the object to be saved is a reporter\n     * @param {DataObjectURL} resource - dataObjectURL to be saved or updated;\n     * @param {String} attribute - attribute inside the data which will be saved\n     * @param {any} data - value will be saved inside the attribute;\n     */\n\n  }, {\n    key: \"saveData\",\n    value: function saveData(isReporter, resource, attribute, value, updateRuntimeStatus) {\n      var storeDataObject = this._storeDataObject;\n\n      var type = this._getTypeOfObject(isReporter);\n\n      if (!storeDataObject || !storeDataObject[type] || !storeDataObject[type][resource]) {\n        DataObjectsStorage_log.log('[StoreDataObjects - save data] - not saved');\n        return;\n      }\n\n      DataObjectsStorage_log.log('[StoreDataObjects - saveData] - ', isReporter, type, resource, attribute, value);\n\n      if (!storeDataObject[type][resource].hasOwnProperty('data')) {\n        storeDataObject[type][resource].data = {};\n      }\n\n      if (attribute) {\n        var data;\n        if (DataObjectsStorage_typeof(value) === 'object') data = deepClone(value);else data = value;\n        utils_assign(storeDataObject[type][resource].data, attribute, data);\n      } else {\n        storeDataObject[type][resource].data = deepClone(value) || {};\n      }\n\n      this._storeDataObject = storeDataObject;\n      var db = storeDataObject[type][resource].backup ? storeDataObject[type][resource].url : 'syncherManager:ObjectURLs';\n      var storage = storeDataObject[type][resource].backup ? this._remotes[db] : this._storageManager; //    let table = storeDataObject[type][resource].backup ? db.split('/')[3] : this._table;\n\n      if (storeDataObject[type][resource].backup) {\n        // should we remove childrens?\n        return storage.set(db, storeDataObject[type][resource]);\n      } else {\n        return storage.set('syncherManager:ObjectURLs', 1, this._filterRemotes(storeDataObject), this._table, updateRuntimeStatus);\n      }\n    }\n  }, {\n    key: \"saveChildrens\",\n    value: function saveChildrens(isReporter, resource, attribute, value) {\n      var _this4 = this;\n\n      var storeDataObject = this._storeDataObject;\n\n      var type = this._getTypeOfObject(isReporter);\n\n      if (!storeDataObject || !storeDataObject[type] || !storeDataObject[type][resource]) {\n        DataObjectsStorage_log.log('[StoreDataObjects - save childrens] - not saved');\n        return;\n      }\n\n      if (!storeDataObject[type][resource].hasOwnProperty('childrens')) {\n        storeDataObject[type][resource].childrenObjects = {};\n      }\n      /*    if (!storeDataObject[type][resource].childrenObjects.hasOwnProperty('resources')) {\n            storeDataObject[type][resource].childrenObjects.resources = {};\n          }*/\n\n\n      if (attribute) {\n        utils_assign(storeDataObject[type][resource].childrenObjects, attribute, deepClone(value));\n      } else {\n        storeDataObject[type][resource].childrenObjects = deepClone(value) || {};\n      }\n\n      this._storeDataObject = storeDataObject;\n      var db = storeDataObject[type][resource].backup ? storeDataObject[type][resource].url : 'syncherManager:ObjectURLs';\n      var storage = storeDataObject[type][resource].backup ? this._remotes[db] : this._storageManager;\n      /*   let table = storeDataObject[type][resource].backup ? db.split('/')[3] : this._table;\n         let data = storeDataObject[type][resource].backup ? storeDataObject[type][resource] : this._filterRemotes(storeDataObject);\n         storage.set(db, 1, data, table).then(() => {\n           return storeDataObject[type][resource];\n         });*/\n\n      if (storeDataObject[type][resource].backup) {\n        return storage.set(attribute, value).then(function () {\n          // backup child object if reporter is local\n          if (_this4._runtimeUrl === value.value.runtime) storage.backup(attribute);\n        });\n      } else {\n        return storage.set('syncherManager:ObjectURLs', 1, this._filterRemotes(storeDataObject), this._table, updateRuntimeStatus);\n      }\n    }\n    /**\n     * @description should save and update the current dataObject information\n     *\n     * @param {Boolean} isReporter - the object to be saved is a reporter\n     * @param {DataObjectURL} resource - dataObjectURL to be saved or updated;\n     * @param {String} attribute - attribute inside the data which will be saved\n     * @param {any} data - value will be saved inside the attribute;\n     */\n\n  }, {\n    key: \"update\",\n    value: function update(isReporter, resource, attribute, value, updateRuntimeStatus) {\n      var storeDataObject = this._storeDataObject;\n\n      var type = this._getTypeOfObject(isReporter);\n\n      if (!storeDataObject || !storeDataObject[type] || !storeDataObject[type][resource]) {\n        DataObjectsStorage_log.log('[StoreDataObjects - update] - not saved');\n        return;\n      }\n\n      DataObjectsStorage_log.log('[StoreDataObjects - update] - ', isReporter, type, resource, attribute, value);\n\n      if (storeDataObject[type] && storeDataObject[type][resource] && resource && attribute && value) {\n        if (attribute === 'subscriptions' || attribute === 'subscriberUsers') {\n          var update = true;\n\n          if (attribute === 'subscriptions') {\n            update = !this._isOwner(storeDataObject[type][resource], value);\n          }\n\n          if (update) this._updateToArray(storeDataObject[type], resource, attribute, value);\n        } else {\n          storeDataObject[type][resource][attribute] = value;\n        }\n\n        this._storeDataObject = storeDataObject;\n        var db = storeDataObject[type][resource].backup ? storeDataObject[type][resource].url : 'syncherManager:ObjectURLs';\n        var storage = storeDataObject[type][resource].backup ? this._remotes[db] : this._storageManager;\n        /*      let table = storeDataObject[type][resource].backup ? db.split('/')[3] : this._table;\n              let data = storeDataObject[type][resource].backup ? storeDataObject[type][resource] : this._filterRemotes(storeDataObject);\n              storage.set(db, 1, data, table, updateRuntimeStatus).then(() => {\n                return storeDataObject[type][resource];\n              });*/\n\n        if (storeDataObject[type][resource].backup) {\n          //just update the attribute that is changing\n          return storage.set(db, storeDataObject[type][resource]);\n        } else {\n          return storage.set('syncherManager:ObjectURLs', 1, this._filterRemotes(storeDataObject), this._table, updateRuntimeStatus);\n        }\n      }\n    }\n    /**\n     * @description should delete stored information from the dataObject\n     *\n     * @param {Boolean} isReporter - the object to be saved is a reporter\n     * @param {DataObjectURL} resource - dataObjectURL to be saved or updated;\n     * @param {String} attribute - attribute inside the data which will be saved\n     * @param {any} data - value will be saved inside the attribute;\n     */\n\n  }, {\n    key: \"delete\",\n    value: function _delete(isReporter, resource, attribute, value) {\n      var storeDataObject = this._storeDataObject;\n\n      var type = this._getTypeOfObject(isReporter);\n\n      if (!storeDataObject || !storeDataObject[type] || !storeDataObject[type][resource]) {\n        DataObjectsStorage_log.log('[StoreDataObjects - delete] - not saved');\n        return;\n      }\n\n      if (storeDataObject[type] && storeDataObject[type][resource] && resource && attribute && value) {\n        if (attribute === 'subscriptions' || attribute === 'subscriberUsers') {\n          this._removeFromArray(storeDataObject[type], resource, attribute, value);\n        } else {\n          delete storeDataObject[type][resource][attribute];\n        }\n\n        this._storeDataObject = storeDataObject;\n        var db = storeDataObject[type][resource].backup ? storeDataObject[type][resource].url : 'syncherManager:ObjectURLs';\n        var storage = storeDataObject[type][resource].backup ? this._remotes[db] : this._storageManager;\n        /*     let table = storeDataObject[type][resource].backup ? db.split('/')[3] : this._table;\n             let data = storeDataObject[type][resource].backup ? storeDataObject[type][resource] : this._filterRemotes(storeDataObject);\n             storage.set(db, 1, data, table);\n                   return storeDataObject[type][resource];*/\n\n        if (storeDataObject[type][resource].backup) {\n          return storage.set(db, storeDataObject[type][resource]);\n        } else {\n          return storage.set(db, 1, this._filterRemotes(storeDataObject), this._table, updateRuntimeStatus);\n        }\n      }\n    }\n    /**\n     * Delete Data Object from the storage\n     */\n\n  }, {\n    key: \"deleteResource\",\n    value: function deleteResource(resource) {\n      var _this5 = this;\n\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        if (resource) {\n          //        return this.getAll().then((storedDataObjects) => {\n          DataObjectsStorage_log.log('[DataObjectStorage.deleteResource] deleting: ', resource); //          let this._storeDataObject = Object.assign(this._storeDataObject || {});\n\n          var backup;\n          var db;\n          var storage;\n\n          if (_this._storeDataObject.hasOwnProperty('observers') && _this._storeDataObject.observers.hasOwnProperty(resource)) {\n            backup = _this._storeDataObject.observers[resource].backup ? _this._storeDataObject.observers[resource].backup : false;\n            db = backup ? _this._storeDataObject.observers[resource].url : 'syncherManager:ObjectURLs';\n            storage = backup ? _this._remotes[db] : _this._storageManager;\n            delete _this._storeDataObject.observers[resource];\n          }\n\n          if (_this._storeDataObject.hasOwnProperty('reporters') && _this._storeDataObject.reporters.hasOwnProperty(resource)) {\n            backup = _this._storeDataObject.reporters[resource].backup ? _this._storeDataObject.reporters[resource].backup : false;\n            db = backup ? _this._storeDataObject.reporters[resource].url : 'syncherManager:ObjectURLs';\n            storage = backup ? _this._remotes[db] : _this._storageManager;\n            delete _this._storeDataObject.reporters[resource];\n          } //          this._storeDataObject = this._storeDataObject;\n\n\n          if (backup && storage) {\n            storage[\"delete\"]().then(function () {\n              DataObjectsStorage_log.log('[DataObjectStorage.deleteResource] deleting sync db ', resource);\n              delete _this._remotes[db];\n              delete _this._factory.databases['do-' + db.split('/')[3]];\n              delete _this._factory.storeManager['do-' + db.split('/')[3]];\n\n              _this._storageManager[\"delete\"](resource, null, 'remotes');\n            });\n          } else {\n            delete _this._factory.databases[db];\n            delete _this._factory.storeManager[db];\n            storage.set(db, 1, _this5._filterRemotes(_this._storeDataObject));\n          }\n\n          return resolve(); //        });\n        } else {\n          reject(new Error('[StoreDataObjects] - Can\\'t delete this ' + resource));\n        }\n      });\n    }\n    /*  getAll() {\n    \n        let _this = this;\n    \n        return new Promise((resolve, reject) => {\n          _this._storeDataObject = this._storageManager.get('syncherManager:ObjectURLs').then((objects) => {\n            _this._storeDataObject = objects;\n            _this.loadRemote(true).then((storedObjects) => {\n              resolve(_this._storeDataObject);\n            });\n    \n          });\n    \n        });\n        //    return this._storageManager.get('syncherManager:ObjectURLs');\n      }*/\n    // To sync local storage with remote storage server\n\n  }, {\n    key: \"sync\",\n    value: function sync(resource) {\n      var _this = this;\n\n      console.log('[DataObjectStorage._sync] resource: ', resource);\n      return new Promise(function (resolve, reject) {\n        if (_this._remotes[resource]) {\n          _this._remotes[resource].get(resource, 'isReporter').then(function (isReporter) {\n            _this._remotes[resource].get(resource, 'subscriptions').then(function (subscriptions) {\n              _this._remotes[resource].sync().then(function () {\n                _this._remotes[resource].get().then(function (doc) {\n                  //          this._remotes[resource].get().then((dataObject)=>{\n                  DataObjectsStorage_log.info('[DataObjectStorage.sync] returning synched DO: ', doc); //          if (!isReporter) _this._remotes[resource].disconnect();\n                  // to ensure local data object as the right value for isReporter\n                  // remote data object should always have isReporter = true.\n                  //doc[0].isReporter = isReporter;\n\n                  var dO = _this._remoteDoc2dataObject(doc);\n\n                  dO.isReporter = isReporter;\n                  dO.subscriptions = subscriptions;\n\n                  if (_this._storeDataObject.hasOwnProperty('observers') && _this._storeDataObject.observers.hasOwnProperty(resource)) {\n                    _this._storeDataObject.observers[resource] = dO;\n                  }\n\n                  if (_this._storeDataObject.hasOwnProperty('reporters') && _this._storeDataObject.reporters.hasOwnProperty(resource)) {\n                    _this._storeDataObject.reporters[resource] = dO;\n                  }\n\n                  _this._remotes[resource].set(resource, dO).then(function () {\n                    resolve(dO);\n                  });\n                }, function (error) {\n                  DataObjectsStorage_log.error('[DataObjectStorage.sync] Error ', error);\n                  reject(error);\n                });\n              }, function (error) {\n                DataObjectsStorage_log.error('[DataObjectStorage.sync] Error ', error);\n                reject(error);\n              });\n            });\n          });\n        } else {\n          var warning = resource + ' not found in local storage.';\n          DataObjectsStorage_log.warn('[DataObjectStorage.sync] warning ', warning);\n          reject(warning);\n        }\n      });\n    }\n  }, {\n    key: \"_remoteDoc2dataObject\",\n    value: function _remoteDoc2dataObject(doc) {\n      if (doc.length > 1) {\n        //has childrens\n        var dataObject = doc[doc.length - 1];\n        dataObject.childrenObjects = {};\n        var i;\n\n        for (i = 0; i < doc.length - 1; i++) {\n          dataObject.childrenObjects[doc[i]._id] = doc[i];\n        }\n\n        return dataObject;\n      } else return doc[0];\n    }\n  }, {\n    key: \"stopSync\",\n    value: function stopSync(resource) {\n      if (this._remotes[resource]) this._remotes[resource].disconnect();\n    }\n    /**\n    * @description should look for a specific dataObjectURL\n    *\n    * @param {DataObjectURL} resource - the dataObjectURL will be searched\n    *\n    * @returns Promise<Object> object with the dataObject information;\n    */\n\n  }, {\n    key: \"getDataObject\",\n    value: function getDataObject(resource) {\n      var _this6 = this;\n\n      return new Promise(function (resolve, reject) {\n        /*      this._remotes[resource].get().then((dataObject)=> {\n                return resolve(dataObject);\n              } , () => {\n                this._storageManager.get('syncherManager:ObjectURLs').then((storedDataObject) => {*/\n        var storedDataObject = _this6._storeDataObject;\n        var observers = storedDataObject.hasOwnProperty('observers') ? storedDataObject.observers : {};\n        var reporters = storedDataObject.hasOwnProperty('reporters') ? storedDataObject.reporters : {};\n        var currentReporter = Object.keys(reporters).find(function (value) {\n          return value === resource;\n        });\n        var currentObserver = Object.keys(observers).find(function (value) {\n          return value === resource;\n        });\n        var dataObject;\n\n        if (currentObserver) {\n          dataObject = storedDataObject.observers[currentObserver];\n        }\n\n        if (currentReporter) {\n          dataObject = storedDataObject.reporters[currentReporter];\n        }\n\n        DataObjectsStorage_log.info('[StoreDataObjects - getDataObject] - for observer: ', currentObserver);\n        DataObjectsStorage_log.info('[StoreDataObjects - getDataObject] - for reporters: ', currentReporter);\n        DataObjectsStorage_log.info('[StoreDataObjects - getDataObject] - resolve: ', dataObject);\n        return dataObject ? resolve(dataObject) : reject('No dataObject was found'); //        });\n        //      });\n      });\n    }\n    /**\n     * @description should get the dataObject information by the message\n     *\n     * @param {Object} msg - message would be analised to get the current dataObject information\n     * @param {Boolean} isReporter - the object to be saved is a reporter\n     *\n     * @returns Promise<object> should retun an object with the dataObject or null\n     */\n\n  }, {\n    key: \"getResourcesByCriteria\",\n    value: function getResourcesByCriteria(msg, isReporter) {\n      var _this7 = this;\n\n      return new Promise(function (resolve) {\n        var type = _this7._getTypeOfObject(isReporter); //      this.getAll(isReporter).then((storedDataObjects) => {\n\n\n        var storedDataObjects = _this7._storeDataObject;\n\n        if (!storedDataObjects) {\n          DataObjectsStorage_log.log('[DataObjectsStorage.getResourcesByCriteria] don\\'t have stored data objects');\n          return resolve(null);\n        }\n\n        if (msg.body && msg.body.hasOwnProperty('resume') && !msg.body.resume) {\n          return resolve(null);\n        } // check if the message have other criteria\n        // if not search for on the 'from' of the message.\n\n\n        var result = [];\n\n        var hasSubscription = _this7._hasSubscription(storedDataObjects[type], msg.from);\n\n        var isOwner = _this7._searchOwner(storedDataObjects[type], msg.from);\n\n        var isToProtoStubResume = _this7._checkProtostubResume(storedDataObjects, msg);\n\n        DataObjectsStorage_log.log('[StoredDataObjects - getResourcesByCriteria]:', storedDataObjects, msg, hasSubscription, isOwner);\n\n        if (msg.hasOwnProperty('from') && hasSubscription || isOwner || isToProtoStubResume) {\n          var resource;\n\n          if (isOwner) {\n            resource = _this7._getResourcesByOwner(storedDataObjects[type], msg.from);\n          } else {\n            resource = _this7._getResourcesBySubscription(storedDataObjects[type], msg.from);\n          }\n\n          var identityFoundData = [];\n          if (msg.body && msg.body.identity) identityFoundData = _this7._getResourcesByIdentity(storedDataObjects[type], msg.body.identity); //TODO: remove schema since metadata already includes the schema?\n\n          var schemaFoundData = [];\n          if (msg.body && msg.body.schema) schemaFoundData = _this7._getResourcesBySchema(storedDataObjects[type], msg.body.schema);\n          var metadataFound = [];\n\n          if (msg.body && msg.body.value) {\n            var metadata = msg.body.value;\n            delete metadata.data;\n            metadataFound = _this7._getResourcesByMetadata(storedDataObjects[type], metadata);\n          }\n\n          var dataFound = [];\n          if (msg.body && msg.body.value && msg.body.value.data) dataFound = _this7._getResourcesByData(storedDataObjects[type], msg.body.value.data); // you can pass as arrays as you want.. it will be merged in on place\n          // removed duplicates;\n\n          result = _this7._intersection(resource, identityFoundData, schemaFoundData, dataFound, metadataFound);\n\n          if (result.length == 0 && isToProtoStubResume && type == 'observers' && msg.from.split('protostub').length > 0) {\n            var storedObservers = storedDataObjects[type];\n            var fromDomain = divideURL(msg.from).domain;\n\n            if (storedObservers) {\n              Object.keys(storedObservers).filter(function (objectURL) {\n                var subscriptions = storedObservers[objectURL].subscriptions;\n                var hasSubscription = false;\n                subscriptions.forEach(function (subscription) {\n                  var subscriptionDomain = divideURL(subscription).domain;\n\n                  if (subscriptionDomain == fromDomain) {\n                    result.push(objectURL);\n                  }\n                });\n              });\n            }\n          }\n        } else {\n          return resolve(null);\n        }\n\n        var init = {};\n        result.forEach(function (key) {\n          var currentIsReporter = storedDataObjects[type][key];\n          init[key] = currentIsReporter;\n          return init;\n        });\n        DataObjectsStorage_log.log('[Store Data Objects] - ', init);\n        resolve(init);\n      }); //    });\n    }\n    /**\n     * @private\n     * @todo documentation\n     */\n\n  }, {\n    key: \"_getResourcesByIdentity\",\n    value: function _getResourcesByIdentity(storedData, userURL) {\n      if (!storedData) return [];\n      return Object.keys(storedData).filter(function (objectURL) {\n        return storedData[objectURL].subscriberUsers.filter(function (current) {\n          return current === userURL;\n        }).length;\n      });\n    }\n    /**\n     * @private\n     * @todo documentation\n     */\n\n  }, {\n    key: \"_getResourcesByOwner\",\n    value: function _getResourcesByOwner(storedData, owner) {\n      if (!storedData) return [];\n      return Object.keys(storedData).filter(function (objectURL) {\n        return storedData[objectURL].reporter === owner;\n      });\n    }\n    /**\n     * @private\n     * @todo documentation\n     */\n\n  }, {\n    key: \"_getResourcesBySubscription\",\n    value: function _getResourcesBySubscription(storedData, subscription) {\n      if (!storedData) return [];\n      return Object.keys(storedData).filter(function (objectURL) {\n        return storedData[objectURL].subscriptions.filter(function (current) {\n          return current === subscription;\n        }).length;\n      });\n    }\n    /**\n     * @private\n     * @todo documentation\n     */\n\n  }, {\n    key: \"_getResourcesBySchema\",\n    value: function _getResourcesBySchema(storedData, schema) {\n      return Object.keys(storedData).filter(function (objectURL) {\n        var currentObject = storedData[objectURL];\n        return Object.keys(currentObject).filter(function (key) {\n          return key === 'schema' && currentObject[key] === schema;\n        }).length;\n      });\n    }\n    /**\n     * @private\n     * @todo documentation\n     */\n\n  }, {\n    key: \"_getResourcesByMetadata\",\n    value: function _getResourcesByMetadata(storedData, metadata) {\n      if (!metadata) return [];\n      return Object.keys(storedData).filter(function (objectURL) {\n        var currentObject = storedData[objectURL];\n        return Object.keys(currentObject).filter(function (key) {\n          // search on storeDataObjects for specific key provided from data;\n          return Object.keys(metadata).filter(function (searchFor) {\n            return key === searchFor && currentObject[key] === metadata[searchFor];\n          }).length;\n        }).length;\n      });\n    }\n    /**\n     * @private\n     * @todo documentation\n     */\n\n  }, {\n    key: \"_getResourcesByData\",\n    value: function _getResourcesByData(storedData, data) {\n      if (!data) return [];\n      return Object.keys(storedData).filter(function (objectURL) {\n        var currentObject = storedData[objectURL].hasOwnProperty('data') ? storedData[objectURL].data : {};\n        return Object.keys(currentObject).filter(function (key) {\n          // search on storeDataObjects for specific key provided from data;\n          return Object.keys(data).filter(function (searchFor) {\n            return key === searchFor && currentObject[key] === data[searchFor];\n          }).length;\n        }).length;\n      });\n    }\n    /**\n     * @private\n     * @todo documentation\n     */\n\n  }, {\n    key: \"_hasSubscription\",\n    value: function _hasSubscription(storedData, subscription) {\n      if (!storedData) return false;\n      return Object.keys(storedData).filter(function (objectURL) {\n        return storedData[objectURL].subscriptions.filter(function (current) {\n          return current === subscription;\n        }).length;\n      }).length > 0 ? true : false;\n    }\n    /**\n     * @private\n     * @todo documentation\n     */\n\n  }, {\n    key: \"_searchOwner\",\n    value: function _searchOwner(storedData, from) {\n      if (!storedData) return false;\n      return Object.keys(storedData).filter(function (objectURL) {\n        return storedData[objectURL].reporter === from;\n      }).length > 0 ? true : false;\n    }\n    /**\n     * @private\n     * @todo documentation\n     */\n\n  }, {\n    key: \"_checkProtostubResume\",\n    value: function _checkProtostubResume(storedDataObjects, msg) {\n      //return msg.from.includes('protostub');\n      if (!storedDataObjects) return false;\n\n      if (msg.hasOwnProperty('body') && msg.body.hasOwnProperty('value') && msg.body.value.hasOwnProperty('reporter')) {\n        var reporter = msg.body.value.reporter;\n\n        if (storedDataObjects.hasOwnProperty('reporters')) {\n          var reportersStored = storedDataObjects.reporters;\n          return Object.keys(reportersStored).filter(function (objectURL) {\n            return reportersStored[objectURL].reporter === reporter;\n          }).length > 0 ? true : false;\n        } else {\n          return false;\n        }\n      } else if (storedDataObjects.hasOwnProperty('observers')) {\n        var storedObservers = storedDataObjects.observers;\n        var fromDomain = divideURL(msg.from).domain;\n        return Object.keys(storedObservers).filter(function (objectURL) {\n          var subscriptions = storedObservers[objectURL].subscriptions;\n          var hasSubscription = false;\n          subscriptions.forEach(function (subscription) {\n            var subscriptionDomain = divideURL(subscription).domain;\n\n            if (subscriptionDomain == fromDomain) {\n              hasSubscription = true;\n            }\n          });\n\n          if (hasSubscription) {\n            return true;\n          }\n        }).length > 0 ? true : false;\n      }\n    }\n    /**\n     * @private\n     * @todo documentation\n     */\n\n  }, {\n    key: \"_isOwner\",\n    value: function _isOwner(value, url) {\n      if (!value) return false;\n      return value.reporter === url ? true : false;\n    }\n    /**\n     * @private\n     * @todo documentation\n     */\n\n  }, {\n    key: \"_intersection\",\n    value: function _intersection() {\n      var args = Array.from(arguments);\n      var result = args.reduce(function (first, second) {\n        return first.concat(second);\n      }).filter(function (value, index, self) {\n        return self.indexOf(value) === index;\n      });\n      DataObjectsStorage_log.log('DataObjectsStorage._intersection] Result an unique array of strings: ', result);\n      return result;\n    }\n    /**\n     * @private\n     * @todo documentation\n     */\n\n  }, {\n    key: \"_updateToArray\",\n    value: function _updateToArray(storeDataObject, resource, key, value) {\n      DataObjectsStorage_log.log('[DataObjectsStorage] - _updateToArray: ', storeDataObject, resource, key, value);\n      if (storeDataObject[resource][key].indexOf(value) === -1) storeDataObject[resource][key].push(value);\n    }\n    /**\n     * @private\n     * @todo documentation\n     */\n\n  }, {\n    key: \"_removeFromArray\",\n    value: function _removeFromArray(storeDataObject, resource, key, value) {\n      var indexOfValue = storeDataObject[resource][key].indexOf(value);\n      if (indexOfValue === -1) storeDataObject[resource][key].splice(indexOfValue, 1);\n    }\n    /**\n     * @private\n     * @todo documentation\n     */\n\n  }, {\n    key: \"_hasValue\",\n    value: function _hasValue(obj, key, value) {\n      return obj.hasOwnProperty(key) && obj[key] === value;\n    }\n    /**\n     * @private\n     * @todo documentation\n     */\n\n  }, {\n    key: \"_getTypeOfObject\",\n    value: function _getTypeOfObject(isReporter) {\n      return isReporter ? 'reporters' : 'observers';\n    }\n  }]);\n\n  return DataObjectsStorage;\n}();\n\n/* harmony default export */ var store_objects_DataObjectsStorage = (DataObjectsStorage_DataObjectsStorage);\n// CONCATENATED MODULE: ./src/utils/PromiseQueue.js\nfunction PromiseQueue_toConsumableArray(arr) { return PromiseQueue_arrayWithoutHoles(arr) || PromiseQueue_iterableToArray(arr) || PromiseQueue_nonIterableSpread(); }\n\nfunction PromiseQueue_nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction PromiseQueue_iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction PromiseQueue_arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction PromiseQueue_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction PromiseQueue_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction PromiseQueue_createClass(Constructor, protoProps, staticProps) { if (protoProps) PromiseQueue_defineProperties(Constructor.prototype, protoProps); if (staticProps) PromiseQueue_defineProperties(Constructor, staticProps); return Constructor; }\n\nvar PromiseQueue =\n/*#__PURE__*/\nfunction () {\n  // TODO: Improve this Queuing\n  function PromiseQueue(concurrency) {\n    PromiseQueue_classCallCheck(this, PromiseQueue);\n\n    this.flushing = false;\n    this.Promise = Promise;\n    this.concurrency = typeof concurrency !== 'number' ? 1 : concurrency;\n    this.promises = [];\n    this.queue = [];\n    this.isProcessing = false;\n  }\n\n  PromiseQueue_createClass(PromiseQueue, [{\n    key: \"done\",\n    value: function done(cb) {\n      this.callback = cb;\n    }\n  }, {\n    key: \"add\",\n    value: function add(promise) {\n      var _this = this;\n\n      this.queue.push(promise);\n\n      if (!this.isProcessing) {\n        return this.queue.reduce(function (promiseChain, currentTask) {\n          return promiseChain.then(function (chainResults) {\n            return currentTask.then(function (currentResult) {\n              return [].concat(PromiseQueue_toConsumableArray(chainResults), [currentResult]);\n            });\n          });\n        }, Promise.resolve([])).then(function (arrayOfResults) {\n          // Do something with all results\n          _this.isProcessing = false;\n        });\n      }\n    }\n  }]);\n\n  return PromiseQueue;\n}();\n\n/* harmony default export */ var utils_PromiseQueue = (PromiseQueue);\n// CONCATENATED MODULE: ./src/hyperty-resource/HypertyResourcesStorage.js\nfunction HypertyResourcesStorage_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction HypertyResourcesStorage_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction HypertyResourcesStorage_createClass(Constructor, protoProps, staticProps) { if (protoProps) HypertyResourcesStorage_defineProperties(Constructor.prototype, protoProps); if (staticProps) HypertyResourcesStorage_defineProperties(Constructor, staticProps); return Constructor; }\n\n// Log System\n\nvar HypertyResourcesStorage_log = loglevel[\"getLogger\"]('HypertyResourcesStorage');\n\n\n\nvar HypertyResourcesStorage_HypertyResourcesStorage =\n/*#__PURE__*/\nfunction () {\n  function HypertyResourcesStorage(runtimeURL, bus, storageManager, hypertyResources) {\n    HypertyResourcesStorage_classCallCheck(this, HypertyResourcesStorage);\n\n    if (!storageManager) throw new Error('[HypertyResourcesStorage constructor] mandatory storageManager parameter missing');\n    if (!runtimeURL) throw new Error('[HypertyResourcesStorage constructor] mandatory runtimeURL parameter missing');\n    if (!bus) throw new Error('[HypertyResourcesStorage constructor] mandatory bus parameter missing');\n\n    var _this = this;\n\n    _this._bus = bus;\n    _this._storageLimit = 0.9; // the save storageLimit;\n\n    _this._url = runtimeURL + '/storage';\n    _this._storageManager = storageManager;\n    _this.promiseQueue = new utils_PromiseQueue();\n    _this._hypertyResources = hypertyResources;\n    bus.addListener(_this._url, function (msg) {\n      HypertyResourcesStorage_log.info('[HypertyResourcesStorage] Message RCV: ', msg);\n\n      switch (msg.type) {\n        case 'create':\n          _this._onCreate(msg);\n\n          break;\n\n        case 'read':\n          _this._onRead(msg);\n\n          break;\n\n        case 'delete':\n          _this._onDelete(msg);\n\n          break;\n      }\n    });\n  }\n  /**\n   * check the available storage quota\n   *\n   * @memberof HypertyResourcesStorage\n   */\n\n\n  HypertyResourcesStorage_createClass(HypertyResourcesStorage, [{\n    key: \"checkStorageQuota\",\n    value: function checkStorageQuota() {\n      var _this2 = this;\n\n      return new Promise(function (resolve, reject) {\n        if (_this2._availableQuota && _this2._usage) {\n          return resolve(availableSpace(_this2._usage, _this2._availableQuota));\n        }\n\n        if (navigator) {\n          navigator.storage.estimate().then(function (estimate) {\n            _this2._availableQuota = estimate.quota;\n            _this2._usage = estimate.usage;\n            resolve(availableSpace(_this2._usage, _this2._availableQuota));\n          })[\"catch\"](function (reason) {\n            HypertyResourcesStorage_log.error('[HypertyResourcesStorage] CheckStorageQuota error: ', reason);\n            reject(reason);\n          });\n        }\n      });\n    }\n    /**\n     * @description should save an HypertyResource contained in the body of a create message request;\n     *\n     * @param {string} message - message containing the hyperty resource to be stored\n     */\n\n  }, {\n    key: \"_onCreate\",\n    value: function _onCreate(message) {\n      var _this = this;\n\n      if (!message.body || !message.body.value) throw new Error('[HypertyResourcesStorage._onCreate] mandatory message body value missing: ', message);\n      var content = message.body.value;\n      var contentURL = content.contentURL;\n      var resourceURL = '';\n\n      if (!contentURL) {\n        contentURL = [];\n        resourceURL = _this._url + '/' + generateGUID();\n      } else {\n        var currentURL = contentURL[0];\n        var resource = currentURL.substr(currentURL.lastIndexOf('/') + 1);\n        resourceURL = _this._url + '/' + resource;\n      }\n\n      if (!_this._hypertyResources.hasOwnProperty(resourceURL)) {\n        contentURL.push(resourceURL);\n        content.contentURL = contentURL;\n      }\n\n      this._hypertyResources[resourceURL] = content;\n      this.promiseQueue.add(this._toSave(resourceURL, message, content));\n    }\n  }, {\n    key: \"_toSave\",\n    value: function _toSave(resourceURL, message, content) {\n      var _this3 = this;\n\n      return new Promise(function (resolve, reject) {\n        var error = function error(reason) {\n          var response = {\n            from: message.to,\n            to: message.from,\n            id: message.id,\n            type: 'response',\n            body: {\n              value: resourceURL,\n              code: 500,\n              description: reason\n            }\n          };\n\n          _this3._bus.postMessage(response);\n\n          return reject(reason);\n        };\n\n        _this3.checkStorageQuota().then(function (result) {\n          if (content.size > result.quota) {\n            var msg = 'The storage do not have space to store that resource';\n            error(msg);\n            throw Error(msg);\n          }\n\n          var spaceAvailable = result.quota;\n          var allocated = result.usage + content.size;\n\n          if (result.percent >= _this3._storageLimit || allocated > spaceAvailable) {\n            return _this3._getOlderResources(content.size);\n          } else {\n            return true;\n          }\n        }).then(function () {\n          return _this3._storageManager.set(resourceURL, 1, content);\n        }).then(function () {\n          var response = {\n            from: message.to,\n            to: message.from,\n            id: message.id,\n            type: 'response',\n            body: {\n              value: resourceURL,\n              code: 200\n            }\n          };\n\n          _this3._bus.postMessage(response);\n\n          HypertyResourcesStorage_log.log('Success');\n          return resolve();\n        })[\"catch\"](error);\n      });\n    }\n  }, {\n    key: \"_getOlderResources\",\n    value: function _getOlderResources(size) {\n      var _this4 = this;\n\n      return new Promise(function (resolve, reject) {\n        _this4._storageManager.get().then(function (result) {\n          var resources = Object.keys(result);\n          var total = 0;\n          var reduced = resources.sort(function (a, b) {\n            return result[a].created < result[b].created;\n          }).reduce(function (previousResource, currentResource) {\n            var current = _this4._hypertyResources[currentResource];\n            HypertyResourcesStorage_log.log('[HypertyResourcesStorage] _getOlderResources: ', total, size, currentResource, _this4._availableQuota);\n\n            if (total <= size) {\n              total += current.size;\n              previousResource.push(currentResource);\n            }\n\n            return previousResource;\n          }, []);\n          var deleting = reduced.map(function (key) {\n            return _this4._storageManager[\"delete\"](key);\n          });\n          Promise.all(deleting).then(function () {\n            resolve(true);\n          })[\"catch\"](function (reason) {\n            reject(reason);\n          });\n        });\n      });\n    }\n    /**\n     * @description should return an HypertyResource stored in the Storage Manager identified by the content url contained in the body of a read message request;\n     *\n     * @param {string} message - message containing the hyperty resource to be stored\n     */\n\n  }, {\n    key: \"_onRead\",\n    value: function _onRead(message) {\n      var _this = this;\n\n      if (!message.body || !message.body.resource) throw new Error('[HypertyResourcesStorage._onRead] mandatory message body resource missing: ', message);\n      var contentUrl = message.body.resource;\n      var response = {\n        from: message.to,\n        to: message.from,\n        id: message.id,\n        type: 'response',\n        body: {}\n      }; // let content = _this._hypertyResources[contentUrl];\n\n      HypertyResourcesStorage_log.info('[HypertyResourcesStorage._onRead] get resourceURL:', contentUrl);\n\n      this._storageManager.get('resourceURL', contentUrl).then(function (content) {\n        HypertyResourcesStorage_log.info('[HypertyResourcesStorage._onRead] found content:', content);\n\n        if (content) {\n          if (content.resourceType === 'file') {\n            _this._onReadFile(response, content);\n          } else {\n            response.body.code = 200;\n            response.body.p2p = true;\n            response.body.value = content;\n\n            _this._bus.postMessage(response);\n          }\n        } else {\n          response.body.code = 404;\n          response.body.desc = 'Content Not Found for ' + contentUrl;\n\n          _this._bus.postMessage(response);\n        }\n      }); //response.body.code = 404;\n      //_this._hypertyResources[contentUrl] = message.body.value;\n\n    }\n  }, {\n    key: \"_onReadFile\",\n    value: function _onReadFile(response, resource) {\n      var _this = this;\n\n      var reader = new FileReader();\n\n      reader.onload = function (theFile) {\n        HypertyResourcesStorage_log.info('[FileHypertyResource.init] file loaded ', theFile);\n        response.body.code = 200;\n        response.body.p2p = true;\n        response.body.value = deepClone(resource);\n        response.body.value.content = theFile.target.result;\n\n        _this._bus.postMessage(response);\n      };\n\n      if (resource.mimetype.includes('text/')) {\n        reader.readAsText(resource.content);\n      } else {\n        var current = resource.content;\n        var blob;\n\n        if (Array.isArray(current)) {\n          blob = new Blob(current, {\n            type: resource.mimetype\n          });\n        } else {\n          blob = new Blob([current], {\n            type: resource.mimetype\n          });\n        }\n\n        reader.readAsArrayBuffer(blob);\n      }\n    }\n    /**\n     * @description should delete an HypertyResource from the storage;\n     *\n     * @param {string} message - message containing the content URL of the hyperty resource to be deleted\n     */\n\n  }, {\n    key: \"_onDelete\",\n    value: function _onDelete(message) {\n      var _this = this;\n\n      if (!message.body) throw new Error('[HypertyResourcesStorage._onDelete] mandatory message body missing: ', message);\n\n      if (message.body.resource) {\n        delete _this._hypertyResources[message.body.resource];\n      } else if (message.body.resources) {\n        message.body.resources.forEach(function (resource) {\n          delete _this._hypertyResources[resource];\n        });\n      } else {\n        throw new Error('[HypertyResourcesStorage._onDelete] mandatory resource missing: ', message);\n      }\n\n      _this._storageManager[\"delete\"]('resourceURL', message.body.resource).then(function () {\n        var response = {\n          from: message.to,\n          to: message.from,\n          id: message.id,\n          type: 'response',\n          body: {\n            code: 200\n          }\n        };\n\n        _this._bus.postMessage(response);\n      })[\"catch\"](function (reason) {\n        var response = {\n          from: message.to,\n          to: message.from,\n          id: message.id,\n          type: 'response',\n          body: {\n            code: 400,\n            description: reason\n          }\n        };\n\n        _this._bus.postMessage(response);\n      });\n    }\n  }]);\n\n  return HypertyResourcesStorage;\n}();\n\n/* harmony default export */ var hyperty_resource_HypertyResourcesStorage = (HypertyResourcesStorage_HypertyResourcesStorage);\n// CONCATENATED MODULE: ./src/syncher/Subscription.js\nfunction Subscription_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction Subscription_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Subscription_createClass(Constructor, protoProps, staticProps) { if (protoProps) Subscription_defineProperties(Constructor.prototype, protoProps); if (staticProps) Subscription_defineProperties(Constructor, staticProps); return Constructor; }\n\n// Log System\n\nvar Subscription_log = loglevel[\"getLogger\"]('SynSubscription');\n\nvar Subscription =\n/*#__PURE__*/\nfunction () {\n  function Subscription(bus, owner, url, isReporter) {\n    Subscription_classCallCheck(this, Subscription);\n\n    var _this = this;\n\n    var childBaseURL = url + '/children/';\n    var changeURL = url + '/changes'; //process delete message\n\n    _this._deleteListener = bus.addListener(changeURL, function (msg) {\n      if (msg.type === 'delete') {\n        Subscription_log.log('Subscription-DELETE: ', msg); //FLOW-OUT: message sent to all subscribers\n\n        var deleteMessageToHyperty = {\n          type: 'delete',\n          from: msg.from,\n          to: owner,\n          body: {\n            identity: msg.body.identity,\n            resource: url\n          }\n        }; //send delete to hyperty\n\n        bus.postMessage(deleteMessageToHyperty, function (reply) {\n          Subscription_log.log('Subscription-DELETE-REPLY: ', reply);\n\n          if (reply.body.code === 200) {\n            _this._releaseListeners();\n          }\n        });\n      }\n    }); //add change publish address or forward\n\n    if (isReporter) {\n      _this._changeListener = bus.addPublish(changeURL);\n    } else {\n      _this._changeListener = bus.addForward(changeURL, owner);\n    }\n\n    _this._childrenListeners = []; //    log.log('[Subscription] - childID', childrens);\n    //    childrens.forEach((child) => {\n    //    let childId = childBaseURL + child;\n    //      log.log('[Subscription] - childID', childBaseURL);\n    //add children publish address\n\n    var childrenForward = bus.addPublish(childBaseURL);\n\n    _this._childrenListeners.push(childrenForward); //add self forward if an observer\n\n\n    if (!isReporter) {\n      var selfForward = bus.addForward(childBaseURL, owner);\n\n      _this._childrenListeners.push(selfForward);\n    } //    });\n\n  }\n\n  Subscription_createClass(Subscription, [{\n    key: \"_releaseListeners\",\n    value: function _releaseListeners() {\n      var _this = this;\n\n      _this._deleteListener.remove();\n\n      _this._changeListener.remove();\n\n      _this._childrenListeners.forEach(function (forward) {\n        forward.remove();\n      });\n    }\n  }]);\n\n  return Subscription;\n}();\n\n/* harmony default export */ var syncher_Subscription = (Subscription);\n// CONCATENATED MODULE: ./src/syncher/ReporterObject.js\nfunction ReporterObject_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction ReporterObject_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction ReporterObject_createClass(Constructor, protoProps, staticProps) { if (protoProps) ReporterObject_defineProperties(Constructor.prototype, protoProps); if (staticProps) ReporterObject_defineProperties(Constructor, staticProps); return Constructor; }\n\n// Log System\n\nvar ReporterObject_log = loglevel[\"getLogger\"]('ReporterObject');\n\n\n\n\nvar ReporterObject_ReporterObject =\n/*#__PURE__*/\nfunction () {\n  function ReporterObject(parent, owner, url, childrens, offline) {\n    ReporterObject_classCallCheck(this, ReporterObject);\n\n    var _this = this;\n\n    _this._parent = parent;\n    _this._owner = owner;\n    _this._url = url;\n    _this._bus = parent._bus;\n    _this._domain = divideURL(url).domain;\n    _this._objSubscriptorURL = _this._url + '/subscription';\n    _this._subscriptions = {};\n    _this._childrens = childrens;\n    _this._childrenListeners = [];\n    _this._forwards = {};\n    _this._isToSaveData = false;\n\n    _this._allocateListeners();\n\n    _this._offline = offline ? offline : false;\n  }\n\n  ReporterObject_createClass(ReporterObject, [{\n    key: \"_allocateListeners\",\n    value: function _allocateListeners() {\n      var _this2 = this;\n\n      var _this = this; //add subscription listener...\n\n\n      _this._subscriptionListener = _this._bus.addListener(_this._objSubscriptorURL, function (msg) {\n        ReporterObject_log.info('[SyncherManager.ReporterObject received ]', msg);\n\n        switch (msg.type) {\n          case 'subscribe':\n            _this._onRemoteSubscribe(msg);\n\n            break;\n\n          case 'unsubscribe':\n            _this._onRemoteUnSubscribe(msg);\n\n            break;\n\n          case 'response':\n            _this._onRemoteResponse(msg);\n\n            break;\n\n          case 'forward':\n            _this._onForwardedRemoteSubscribe(msg);\n\n            break;\n        }\n      });\n      var changeURL = _this._url + '/changes';\n      _this._changeListener = _this._bus.addListener(changeURL, function (msg) {\n        ReporterObject_log.info('[SyncherManager.ReporterObject ] SyncherManager-' + changeURL + '-RCV: ', msg); //do not save changes to backupRevision to avoid infinite loops\n\n        if (_this2._isToSaveData && msg.body.attribute) {\n          var updateRuntimeStatus = msg.body.attribute !== 'backupRevision' ? true : false;\n          ReporterObject_log.log('[SyncherManager.ReporterObject ] SyncherManager - save data: ', msg);\n\n          _this._parent._dataObjectsStorage.update(true, _this._url, 'version', msg.body.version, updateRuntimeStatus);\n\n          _this._parent._dataObjectsStorage.update(true, _this._url, 'lastModified', msg.body.lastModified, updateRuntimeStatus);\n\n          _this._parent._dataObjectsStorage.saveData(true, _this._url, msg.body.attribute, msg.body.value, updateRuntimeStatus);\n        }\n      });\n    }\n  }, {\n    key: \"_onForwardedRemoteSubscribe\",\n    // To handle subscriptions sent while the reporter was offline ie forwarded by a Offline Subscription Manager service\n    value: function _onForwardedRemoteSubscribe(msg) {\n      this._onRemoteSubscribe(msg.body);\n    }\n  }, {\n    key: \"_releaseListeners\",\n    value: function _releaseListeners() {\n      var _this = this;\n\n      _this._subscriptionListener.remove();\n\n      _this._changeListener.remove();\n\n      _this._childrenListeners.forEach(function (cl) {\n        cl.remove();\n      });\n\n      Object.keys(_this._forwards).forEach(function (key) {\n        _this.forwardUnSubscribe(key);\n      }); //remove all subscriptions\n\n      Object.keys(_this._subscriptions).forEach(function (key) {\n        _this._subscriptions[key]._releaseListeners();\n      });\n    }\n  }, {\n    key: \"resumeSubscriptions\",\n    value: function resumeSubscriptions(subscriptions) {\n      var _this = this;\n\n      if (!subscriptions) return;\n      Object.keys(subscriptions).forEach(function (key) {\n        var hypertyURL = subscriptions[key];\n        ReporterObject_log.log('[SyncherManager.ReporterObject] - resume subscriptions', _this, hypertyURL, _this._childrens);\n\n        if (!_this._subscriptions[hypertyURL]) {\n          _this._subscriptions[hypertyURL] = new syncher_Subscription(_this._bus, _this._owner, _this._url, true);\n        }\n      });\n    }\n    /**\n     * Register a listener in the msg-node and in the local MessageBus, so that messages on this address are forwarded to the reporter object\n     * @param  {string} address - URL to register the listeners\n     * @return {Promise} Return Promise OK or error\n     */\n\n  }, {\n    key: \"forwardSubscribe\",\n    value: function forwardSubscribe(addresses) {\n      var _this = this; //FLOW-OUT: message sent to the msg-node SubscriptionManager component\n\n\n      var nodeSubscribeMsg = {\n        type: 'subscribe',\n        from: _this._parent._url,\n        to: 'domain://msg-node.' + _this._domain + '/sm',\n        body: {\n          resources: addresses,\n          source: _this._owner\n        }\n      };\n      return new Promise(function (resolve, reject) {\n        _this._bus.postMessage(nodeSubscribeMsg, function (reply) {\n          ReporterObject_log.log('[SyncherManager.ReporterObject ]forward-subscribe-response(reporter): ', reply);\n\n          if (reply.body.code === 200) {\n            var newForward = _this._bus.addForward(_this._url, _this._owner);\n\n            _this._forwards[addresses[0]] = newForward;\n            resolve();\n          } else {\n            reject('Error on msg-node subscription: ' + reply.body.desc);\n          }\n        });\n      });\n    }\n    /**\n     * UnRegister a listener in the msg-node and in the local MessageBus, so that messages on this address are removed from forward\n     * @param  {string} address - URL to un-register the listeners\n     */\n\n  }, {\n    key: \"forwardUnSubscribe\",\n    value: function forwardUnSubscribe(address) {\n      var _this = this;\n\n      _this._forwards[address].remove();\n\n      delete _this._forwards[address]; //FLOW-OUT: message sent to the msg-node SubscriptionManager component\n\n      var nodeUnSubscribeMsg = {\n        type: 'unsubscribe',\n        from: _this._parent._url,\n        to: 'domain://msg-node.' + _this._domain + '/sm',\n        body: {\n          resources: [address],\n          source: _this._owner\n        }\n      };\n\n      _this._bus.postMessage(nodeUnSubscribeMsg);\n    }\n    /**\n     * Register listeners for a list of childrens. Public channels used to transmit messages.\n     * @param  {string[]} childrens - channels to register\n     * @return {Promise} Return Promise OK or error\n     */\n\n  }, {\n    key: \"addChildrens\",\n    value: function addChildrens() {\n      var _this3 = this;\n\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        if (_this._childrens.length === 0) {\n          resolve();\n          return;\n        }\n\n        var childBaseURL = _this._url + '/children/';\n        ReporterObject_log.log('[SyncherManager.ReporterObject - addChildrens] - childrens: ', childBaseURL);\n        /*    childrens.forEach((child) => {\n              _this._childrens.push(child);\n            });*/\n\n        /*\n        _this._childrens.forEach((child) => {\n          let childId = childBaseURL + child;\n           let selfForward = _this._bus.addForward(childId, owner);\n          _this._childrenListeners.push(selfForward);\n        });*/\n\n        var subscriptions = []; //      childrens.forEach((child) => subscriptions.push(childBaseURL + child));\n\n        subscriptions.push(childBaseURL); //_this._storageSubscriptions[_this._objSubscriptorURL] = {url: _this._url, owner: _this._owner, childrens: _this._childrens};\n        //FLOW-OUT: message sent to the msg-node SubscriptionManager component\n\n        var nodeSubscribeMsg = {\n          type: 'subscribe',\n          from: _this._parent._url,\n          to: 'domain://msg-node.' + _this._domain + '/sm',\n          body: {\n            resources: subscriptions,\n            source: _this._owner\n          }\n        };\n\n        _this._bus.postMessage(nodeSubscribeMsg, function (reply) {\n          ReporterObject_log.log('[SyncherManager.ReporterObject ]node-subscribe-response(reporter):', reply);\n\n          if (reply.body.code === 200) {\n            //add children listeners on local ...\n            subscriptions.forEach(function (childURL) {\n              var childListener = _this._bus.addListener(childURL, function (msg) {\n                //TODO: what todo here? Save childrens?\n                ReporterObject_log.log('[SyncherManager.ReporterObject received]', msg);\n\n                if (msg.type === 'create' && msg.to.includes('children') && _this3._isToSaveData) {\n                  // if the value is not encrypted lets encrypt it\n                  // todo: should be subject to some policy\n                  var splitedReporterURL = splitObjectURL(msg.to);\n                  var url = splitedReporterURL.url;\n                  if (!msg.body.hasOwnProperty('mutual')) msg.body.mutual = true; //remove false when mutualAuthentication is enabled\n\n                  if (!(typeof msg.body.value === 'string') && msg.body.mutual) {\n                    ReporterObject_log.log('[SyncherManager.ReporterObject] encrypting received data ', msg.body.value);\n                    cryptoManager_CryptoManager.encryptDataObject(msg.body.value, url).then(function (encryptedValue) {\n                      ReporterObject_log.log('[SyncherManager.ReporterObject] encrypted data ', encryptedValue);\n\n                      _this._storeChildObject(msg, JSON.stringify(encryptedValue));\n                    })[\"catch\"](function (reason) {\n                      ReporterObject_log.warn('[SyncherManager._decryptChildrens] failed : ', reason, ' Storing unencrypted');\n\n                      _this._storeChildObject(msg, msg.body.value);\n                    });\n                  } else {\n                    _this._storeChildObject(msg, msg.body.value);\n                  }\n                }\n              });\n\n              _this._childrenListeners.push(childListener);\n\n              var selfForward = _this._bus.addForward(childURL, _this._owner);\n\n              _this._childrenListeners.push(selfForward);\n            });\n            resolve();\n          } else {\n            reject('Error on msg-node subscription: ' + reply.body.desc);\n          }\n        });\n      });\n    } // store childObject\n\n  }, {\n    key: \"_storeChildObject\",\n    value: function _storeChildObject(msg, data) {\n      var _this = this;\n\n      var splitedReporterURL = splitObjectURL(msg.to);\n      var url = splitedReporterURL.url;\n      var resource = splitedReporterURL.resource;\n      var value;\n      /*    if (msg.body.identity) {\n            value.identity = msg.body.identity;\n            delete value.identity.assertion;\n            delete value.identity.expires;\n          }*/\n\n      var objectURLResource = msg.body.resource;\n      var attribute = resource;\n      if (objectURLResource === 'heartbeat') value = data;else value = {\n        identity: msg.body.identity,\n        value: data\n      }; //    if (objectURLResource) attribute += '.' + objectURLResource;\n\n      if (objectURLResource) attribute = objectURLResource; // this identity data is not needed to be stored\n\n      console.log('[SyncherManager.ReporterObject._storeChildObject] : ', url, attribute, value);\n\n      _this._parent._dataObjectsStorage.saveChildrens(true, url, attribute, value);\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete() {\n      var _this = this;\n\n      var domain = divideURL(_this._owner).domain; //FLOW-OUT: message sent directly to all subscribers of the reporter\n\n      _this._bus.postMessage({\n        type: 'delete',\n        from: _this._objSubscriptorURL,\n        to: _this._url + '/changes'\n      }); //FLOW-OUT: message sent to the msg-node ObjectAllocationManager component\n\n\n      _this._bus.postMessage({\n        type: 'delete',\n        from: _this._parent._url,\n        to: 'domain://msg-node.' + domain + '/object-address-allocation',\n        body: {\n          resource: _this._url,\n          childrenResources: _this._childrens\n        }\n      });\n\n      _this._releaseListeners();\n\n      delete _this._parent._reporters[_this._url];\n    }\n  }, {\n    key: \"_onRemoteResponse\",\n    value: function _onRemoteResponse(msg) {\n      var _this = this;\n\n      _this._bus.postMessage({\n        id: msg.id,\n        type: 'response',\n        from: msg.to,\n        to: _this._url,\n        body: {\n          code: msg.body.code,\n          identity: msg.body.identity,\n          source: msg.from\n        }\n      });\n    } //FLOW-IN: message received from Syncher -> subscribe\n\n  }, {\n    key: \"_onRemoteSubscribe\",\n    value: function _onRemoteSubscribe(msg) {\n      var _this = this;\n\n      var hypertyURL = msg.body.subscriber; //validate if subscription already exists?\n\n      if (_this._subscriptions[hypertyURL]) {\n        // let errorMsg = {\n        //   id: msg.id, type: 'response', from: msg.to, to: hypertyURL,\n        //   body: { code: 500, desc: 'Subscription for (' + _this._url + ' : ' +  hypertyURL + ') already exists!' }\n        // };\n        //\n        // _this._bus.postMessage(errorMsg);\n        // return;\n        // new version because of reusage\n        _this._subscriptions[hypertyURL]._releaseListeners();\n      } //ask to subscribe to Syncher? (depends on the operation mode)\n      //TODO: get mode from object!\n\n\n      var mode = 'sub/pub';\n\n      if (mode === 'sub/pub') {\n        //FLOW-OUT: message sent to local hyperty address Syncher -> _onForward\n        var forwardMsg = {\n          type: 'forward',\n          from: _this._url,\n          to: _this._owner,\n          body: {\n            type: msg.type,\n            from: hypertyURL,\n            to: _this._url,\n            identity: msg.body.identity\n          }\n        }; //TODO: For Further Study\n\n        if (msg.body.hasOwnProperty('mutual')) forwardMsg.body.mutual = msg.body.mutual;\n\n        _this._bus.postMessage(forwardMsg, function (reply) {\n          ReporterObject_log.log('[SyncherManager.ReporterObject ]forward-reply: ', reply);\n\n          if (reply.body.code === 200) {\n            if (!_this._subscriptions[hypertyURL]) {\n              ReporterObject_log.log('[SyncherManager.ReporterObject] - _onRemoteSubscribe:', _this._childrens);\n              _this._subscriptions[hypertyURL] = new syncher_Subscription(_this._bus, _this._owner, _this._url, true);\n            }\n          } // Store for each reporter hyperty the dataObject\n\n\n          var userURL;\n\n          if (msg.body.identity && msg.body.identity.userProfile.userURL) {\n            userURL = msg.body.identity.userProfile.userURL;\n\n            _this._parent._dataObjectsStorage.update(true, _this._url, 'subscriberUsers', userURL);\n          } //TODO: mutual and sessionkeys updates were removed. FFS\n\n          /*        if (msg.body.hasOwnProperty('mutual')) {\n          //          _this._parent._identityModule.updateIsToEncryptForDataObjectSessionKey(_this._url, msg.body.mutual).then(()=>{\n              _this._parent._dataObjectsStorage.update(true, _this._url, 'mutual', msg.body.mutual);\n          //          });\n          }*/\n\n\n          _this._parent._dataObjectsStorage.update(true, _this._url, 'subscriptions', hypertyURL);\n\n          reply.body.owner = _this._owner; //FLOW-OUT: subscription response sent (forward from internal Hyperty)\n\n          _this._bus.postMessage({\n            id: msg.id,\n            type: 'response',\n            from: msg.to,\n            to: msg.from,\n            body: reply.body\n          });\n        });\n      }\n    } //FLOW-IN: message received from remote ObserverObject -> removeSubscription\n\n  }, {\n    key: \"_onRemoteUnSubscribe\",\n    value: function _onRemoteUnSubscribe(msg) {\n      var _this = this;\n\n      var unsubscriber = msg.body.source;\n      var subscription = _this._subscriptions[unsubscriber];\n\n      if (subscription) {\n        subscription._releaseListeners();\n\n        delete _this._subscriptions[unsubscriber];\n        var forwardMsg = {\n          type: 'forward',\n          from: _this._url,\n          to: _this._owner,\n          body: {\n            type: msg.type,\n            from: unsubscriber,\n            to: _this._url,\n            identity: msg.body.identity\n          }\n        };\n\n        _this._bus.postMessage(forwardMsg);\n      }\n    }\n  }, {\n    key: \"offline\",\n    get: function get() {\n      return this._offline;\n    }\n  }, {\n    key: \"isToSaveData\",\n    set: function set(value) {\n      this._isToSaveData = value;\n    }\n  }]);\n\n  return ReporterObject;\n}();\n\n/* harmony default export */ var syncher_ReporterObject = (ReporterObject_ReporterObject);\n// CONCATENATED MODULE: ./src/syncher/ObserverObject.js\nfunction ObserverObject_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction ObserverObject_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction ObserverObject_createClass(Constructor, protoProps, staticProps) { if (protoProps) ObserverObject_defineProperties(Constructor.prototype, protoProps); if (staticProps) ObserverObject_defineProperties(Constructor, staticProps); return Constructor; }\n\n// Log System\n\nvar ObserverObject_log = loglevel[\"getLogger\"]('ObserverObject');\n\n\n\n\nvar ObserverObject_ObserverObject =\n/*#__PURE__*/\nfunction () {\n  function ObserverObject(parent, url, childrens) {\n    var _this2 = this;\n\n    ObserverObject_classCallCheck(this, ObserverObject);\n\n    var _this = this;\n\n    _this._parent = parent;\n    _this._url = url;\n    _this._childrens = childrens;\n    _this._bus = parent._bus;\n    _this._subscriptions = {};\n    _this._storageSubscriptions = {};\n    _this._childrenListeners = [];\n    this._isToSaveData = false;\n    var changeURL = _this._url + '/changes';\n    _this._changeListener = _this._bus.addListener(changeURL, function (msg) {\n      ObserverObject_log.log('[SyncherManager.ObserverObject ] SyncherManager-' + changeURL + '-RCV: ', msg); //TODO: what todo here? Save changes?\n\n      if (_this2._isToSaveData && msg.body.attribute) {\n        ObserverObject_log.log('[SyncherManager.ObserverObject ] SyncherManager - save data: ', msg);\n\n        _this._parent._dataObjectsStorage.update(false, _this._url, 'version', msg.body.version);\n\n        _this._parent._dataObjectsStorage.update(false, _this._url, 'lastModified', msg.body.lastModified);\n\n        _this._parent._dataObjectsStorage.saveData(false, _this._url, msg.body.attribute, msg.body.value);\n      }\n    });\n  }\n\n  ObserverObject_createClass(ObserverObject, [{\n    key: \"_newSubscription\",\n    value: function _newSubscription(hyperty) {\n      var _this = this;\n\n      var subscription = _this._subscriptions[hyperty];\n      ObserverObject_log.log('[Observer Object - new subscription] - ', _this._subscriptions, hyperty, _this._subscriptions.hasOwnProperty(hyperty));\n\n      if (!subscription) {\n        _this._subscriptions[hyperty] = new syncher_Subscription(_this._bus, hyperty, _this._url, false);\n      }\n    }\n  }, {\n    key: \"addSubscription\",\n    value: function addSubscription(hyperty) {\n      var _this = this;\n\n      _this._newSubscription(hyperty);\n    }\n  }, {\n    key: \"addChildrens\",\n    value: function addChildrens() {\n      var _this3 = this;\n\n      var _this = this;\n\n      return new Promise(function (resolve) {\n        if (_this._childrens.length === 0) {\n          resolve();\n          return;\n        }\n\n        var childBaseURL = _this._url + '/children/';\n        ObserverObject_log.log('[SyncherManager.ObserverObject - addChildrens] - childrens: ', childBaseURL); //      childrens.forEach((child) => {\n\n        var childListener = _this._bus.addListener(childBaseURL, function (msg) {\n          //TODO: what todo here? Save childrens?\n          ObserverObject_log.log('[SyncherManager.ObserverObject received]', msg);\n\n          if (msg.type === 'create' && msg.to.includes('children') && _this3._isToSaveData) {\n            var splitedReporterURL = splitObjectURL(msg.to);\n            var url = splitedReporterURL.url;\n            if (!msg.body.hasOwnProperty('mutual')) msg.body.mutual = true; //remove false when mutualAuthentication is enabled\n\n            if (!(typeof msg.body.value === 'string') && msg.body.mutual) {\n              ObserverObject_log.log('[SyncherManager.ObserverObject] encrypting received data ', msg.body.value);\n              cryptoManager_CryptoManager.encryptDataObject(msg.body.value, url).then(function (encryptedValue) {\n                ObserverObject_log.log('[SyncherManager.ObserverObject] encrypted data ', encryptedValue);\n\n                _this._storeChildObject(msg, JSON.stringify(encryptedValue));\n              })[\"catch\"](function (reason) {\n                ObserverObject_log.warn('[SyncherManager.ObserverObject._encryptChild] failed, storing unencrypted ', reason);\n\n                _this._storeChildObject(msg, msg.body.value);\n              });\n            } else {\n              _this._storeChildObject(msg, msg.body.value);\n            }\n          }\n\n          ObserverObject_log.log('[SyncherManager.ObserverObject children Listeners]', _this._childrenListeners, childListener);\n\n          if (_this._childrenListeners.indexOf(childListener) === -1) {\n            _this._childrenListeners.push(childListener);\n          }\n        });\n      }); //    });\n    } // store childObject\n\n  }, {\n    key: \"_storeChildObject\",\n    value: function _storeChildObject(msg, data) {\n      var _this = this;\n\n      var splitedReporterURL = splitObjectURL(msg.to);\n      var url = splitedReporterURL.url;\n      var resource = splitedReporterURL.resource;\n      var value = {};\n      /*    let value = {\n            identity: msg.body.identity,\n            value: data\n          };*/\n      // this identity data is not needed to be stored\n\n      /*    delete value.identity.assertion;\n          delete value.identity.expires;*/\n\n      var objectURLResource = msg.body.resource;\n      var attribute = resource;\n\n      if (objectURLResource === 'heartbeat') {\n        value = data;\n      } else {\n        value.identity = msg.body.identity;\n        value.value = data;\n      } //    if (objectURLResource) attribute += '.' + objectURLResource;\n\n\n      if (objectURLResource) attribute = objectURLResource;\n      ObserverObject_log.log('[SyncherManager.ObserverObject._storeChildObject] : ', url, attribute, value);\n\n      _this._parent._dataObjectsStorage.saveChildrens(false, url, attribute, value);\n    }\n  }, {\n    key: \"removeSubscription\",\n    value: function removeSubscription(msg) {\n      var _this = this;\n\n      var hyperty = msg.from;\n      var domain = divideURL(hyperty).domain;\n      var objURLSubscription = _this._url + '/subscription';\n      var subscription = _this._subscriptions[hyperty];\n\n      if (subscription) {\n        //FLOW-OUT: message sent to remote ReporterObject -> _onRemoteUnSubscribe\n        _this._bus.postMessage({\n          type: 'unsubscribe',\n          from: _this._parent._url,\n          to: objURLSubscription,\n          body: {\n            source: hyperty,\n            identity: msg.body.identity\n          }\n        }); //TODO: should I wait for response before unsubscribe on msg-node\n        //FLOW-OUT: message sent to msg-node SubscriptionManager component\n\n\n        _this._bus.postMessage({\n          type: 'unsubscribe',\n          from: _this._parent._url,\n          to: 'domain://msg-node.' + domain + '/sm',\n          body: {\n            resource: _this._url,\n            resources: [_this._url + '/children/']\n          }\n        });\n\n        subscription._releaseListeners();\n\n        delete _this._subscriptions[hyperty];\n      }\n    }\n  }, {\n    key: \"isToSaveData\",\n    set: function set(value) {\n      this._isToSaveData = value;\n    }\n  }]);\n\n  return ObserverObject;\n}();\n\n/* harmony default export */ var syncher_ObserverObject = (ObserverObject_ObserverObject);\n// CONCATENATED MODULE: ./src/syncher/SyncherManager.js\nfunction SyncherManager_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction SyncherManager_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction SyncherManager_createClass(Constructor, protoProps, staticProps) { if (protoProps) SyncherManager_defineProperties(Constructor.prototype, protoProps); if (staticProps) SyncherManager_defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n* Copyright 2016 PT Inovação e Sistemas SA\n* Copyright 2016 INESC-ID\n* Copyright 2016 QUOBIS NETWORKS SL\n* Copyright 2016 FRAUNHOFER-GESELLSCHAFT ZUR FOERDERUNG DER ANGEWANDTEN FORSCHUNG E.V\n* Copyright 2016 ORANGE SA\n* Copyright 2016 Deutsche Telekom AG\n* Copyright 2016 Apizee\n* Copyright 2016 TECHNISCHE UNIVERSITAT BERLIN\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n**/\n// Log System\n\nvar SyncherManager_log = loglevel[\"getLogger\"]('SyncherManager');\n //import { schemaValidation } from '../utils/schemaValidation';\n\n\n\n\n\n/**\n * @author micaelpedrosa@gmail.com\n * Core Syncronization system.\n */\n\nvar SyncherManager_SyncherManager =\n/*#__PURE__*/\nfunction () {\n  /* private\n  _url: URL\n  _bus: MiniBus\n  _registry: Registry\n  _allocator: AddressAllocation\n   _reporters: { ObjectURL: ReporterObject }\n  _observers: { ObjectURL: ObserverObject }\n  */\n  function SyncherManager(runtimeURL, bus, registry, catalog, storageManager, allocator, storeDataObjects, identityModule) {\n    SyncherManager_classCallCheck(this, SyncherManager);\n\n    if (!runtimeURL) throw new Error('[Syncher Manager] - needs the runtimeURL parameter');\n    if (!bus) throw new Error('[Syncher Manager] - needs the MessageBus instance');\n    if (!registry) throw new Error('[Syncher Manager] - needs the Registry instance');\n    if (!catalog) throw new Error('[Syncher Manager] - needs the RuntimeCatalogue instance');\n    if (!storageManager) throw new Error('[Syncher Manager] - need the storageManager instance');\n\n    var _this = this;\n\n    _this._bus = bus;\n    _this._registry = registry;\n    _this._catalog = catalog;\n    _this._storageManager = storageManager;\n    _this._identityModule = identityModule; //TODO: these should be saved in persistence engine?\n\n    _this.runtimeURL = runtimeURL;\n    _this._url = runtimeURL + '/sm';\n    _this._objectURL = runtimeURL + '/object-allocation';\n    _this._reporters = {};\n    _this._observers = {};\n    _this._dataObjectsStorage = storeDataObjects;\n    console.log('[NOTSAVING] storeDataObjects', storeDataObjects); //TODO: this should not be hardcoded!\n\n    _this._domain = divideURL(runtimeURL).domain;\n\n    if (allocator) {\n      _this._allocator = allocator;\n    } else {\n      _this._allocator = allocation_AddressAllocation.instance;\n    }\n\n    SyncherManager_log.log('[SyncherManager - AddressAllocation] - ', _this._allocator);\n    bus.addListener(_this._url, function (msg) {\n      SyncherManager_log.info('[SyncherManager] RCV: ', msg);\n\n      switch (msg.type) {\n        case 'create':\n          _this._onCreate(msg);\n\n          break;\n\n        case 'delete':\n          _this._onDelete(msg);\n\n          break;\n\n        case 'subscribe':\n          _this._onLocalSubscribe(msg);\n\n          break;\n\n        case 'unsubscribe':\n          _this._onLocalUnSubscribe(msg);\n\n          break;\n\n        case 'read':\n          _this._onRead(msg);\n\n          break;\n\n        case 'execute':\n          _this._onExecute(msg);\n\n          break;\n      }\n    });\n  }\n\n  SyncherManager_createClass(SyncherManager, [{\n    key: \"_onExecute\",\n    //FLOW-IN: message received from Syncher -> read\n    value: function _onExecute(msg) {\n      var _this = this;\n\n      var reply = {\n        type: 'response',\n        from: msg.to,\n        to: msg.from,\n        id: msg.id\n      };\n      SyncherManager_log.info('[SyncherManager.onExecute] new message', msg);\n\n      if (msg.hasOwnProperty('body') && msg.body.hasOwnProperty('method') && msg.body.hasOwnProperty('params')) {\n        switch (msg.body.method) {\n          case 'sync':\n            _this._dataObjectsStorage.sync(msg.body.params[0], msg.body.params[1], false);\n\n            break;\n\n          case 'stopSync':\n            _this._dataObjectsStorage.stopSync(msg.body.params[0]);\n\n            break;\n        }\n\n        reply.body = {\n          code: 200\n        };\n\n        _this._bus.postMessage(reply);\n      } else {\n        reply.body = {\n          code: 400,\n          desc: 'missing body or body method / params mandatory fields'\n        };\n        SyncherManager_log.error('[SyncherManager.onExecute] error. Missing body or body method / params mandatory fields', msg);\n\n        _this._bus.postMessage(reply);\n      }\n    } //FLOW-IN: message received from Syncher -> read\n\n  }, {\n    key: \"_onRead\",\n    value: function _onRead(msg) {\n      var _this = this;\n\n      var reply = {\n        type: 'response',\n        from: msg.to,\n        to: msg.from,\n        id: msg.id\n      };\n      SyncherManager_log.info('[SyncherManager.onRead] new message', msg);\n\n      if (msg.hasOwnProperty('body') && msg.body.hasOwnProperty('resource')) {\n        _this._dataObjectsStorage.sync(msg.body.resource, true).then(function (dataObject) {\n          reply.body = {\n            code: 200,\n            value: dataObject\n          };\n          SyncherManager_log.info('[SyncherManager.onRead] found object: ', dataObject);\n\n          _this._bus.postMessage(reply);\n        }, function (error) {\n          reply.body = {\n            code: 404,\n            desc: error\n          };\n          SyncherManager_log.warn('[SyncherManager.onRead] warning: ', error);\n\n          _this._bus.postMessage(reply);\n        });\n      } else {\n        reply.body = {\n          code: 400,\n          desc: 'missing body or body resource mandatory fields'\n        };\n        SyncherManager_log.error('[SyncherManager.onRead] error. Missing body or body resource mandatory fields', msg);\n\n        _this._bus.postMessage(reply);\n      }\n    } //FLOW-IN: message received from Syncher -> create\n\n  }, {\n    key: \"_onCreate\",\n    value: function _onCreate(msg) {\n      var _this2 = this;\n\n      var from = msg.from;\n      var to = msg.to;\n\n      var _this = this; // check if message is to save new childrenObjects in the local storage\n      // TODO: check if message is to store new child in the local storage and call storeChild. How to distinguish from others?\n      //debugger;\n\n\n      if (msg.body.attribute) {\n        this._storeChildrens(msg);\n      } else {\n        if (!msg.body.hasOwnProperty('resume') || msg.body.hasOwnProperty('resume') && !msg.body.resume) {\n          // check if this is an invitation message\n          if (msg.body.authorise) {\n            this._authorise(msg);\n\n            SyncherManager_log.info('[SyncherManager.onCreate - invite observers]', msg);\n          } else {\n            // this is to create a new data object\n            SyncherManager_log.info('[SyncherManager.onCreate - Create New Object]', msg);\n\n            this._newCreate(msg);\n          }\n        } else {\n          // If from the hyperty side, call the resumeReporter we will have resume = true'\n          // so we will create an resumed object and will try to resume the object previously saved;\n          this._dataObjectsStorage.getResourcesByCriteria(msg, true).then(function (result) {\n            SyncherManager_log.info('[SyncherManager - Create Resumed] - ResourcesByCriteria | Message: ', msg, ' result: ', result);\n\n            if (result && Object.keys(result).length > 0) {\n              var listOfReporters = [];\n              Object.keys(result).forEach(function (objURL) {\n                listOfReporters.push(_this._resumeCreate(msg, result[objURL]));\n              });\n              Promise.all(listOfReporters).then(function (resumedReporters) {\n                SyncherManager_log.log('[SyncherManager - Create Resumed]', resumedReporters); // TODO: shoud send the information if some object was failing;\n\n                var successfullyResumed = Object.values(resumedReporters).filter(function (reporter) {\n                  return reporter !== false;\n                });\n                SyncherManager_log.info('[SyncherManager.onCreate] returning resumed objects : ', successfullyResumed); //FLOW-OUT: message response to Syncher -> create resume\n\n                _this2._bus.postMessage({\n                  id: msg.id,\n                  type: 'response',\n                  from: to,\n                  to: from,\n                  body: {\n                    code: 200,\n                    value: deepClone(successfullyResumed)\n                  }\n                });\n                /*successfullyResumed.forEach((reporter) => {\n                  if (reporter.backup) {\n                    this._dataObjectsStorage.sync(reporter.url);\n                  }\n                });*/\n\n              });\n            } else {\n              //forward to hyperty:\n              var reply = {};\n              reply.id = msg.id;\n              reply.from = msg.to;\n              reply.to = msg.from;\n              reply.type = 'response';\n              reply.body = {\n                code: 404,\n                desc: 'No data objects reporters to be resumed'\n              };\n\n              _this2._bus.postMessage(reply);\n            }\n          });\n        }\n      }\n    }\n  }, {\n    key: \"_storeChildrens\",\n    value: function _storeChildrens(msg) {\n      var _this = this;\n\n      var resource = msg.body.resource;\n      var attribute = msg.body.attribute;\n\n      if (attribute === 'childrenObjects') {\n        _this._dataObjectsStorage.saveChildrens(false, resource, undefined, msg.body.value);\n      } else {\n        _this._dataObjectsStorage.saveChildrens(true, resource, attribute, msg.body.value);\n      }\n    }\n  }, {\n    key: \"_newCreate\",\n    value: function _newCreate(msg) {\n      var _this3 = this;\n\n      var _this = this;\n\n      var owner = msg.from;\n      var domain = divideURL(msg.from).domain; // if reporter is in a Interworking Protostub the runtime domain backend services will be used\n\n      if (_this._registry.isInterworkingProtoStub(msg.from)) {\n        domain = divideURL(_this.runtimeURL).domain;\n      } //    let domainRegistration = msg.body.value.hasOwnProperty('domain_registration') ? msg.body.value.domain_registration : true;\n\n\n      var domainRouting = msg.body.value.hasOwnProperty('domain_routing') ? msg.body.value.domain_routing : true; // Process invitation message to observers\n\n      /*if (msg.body.authorise) {\n        _this._authorise(msg);\n        return;\n      }*/\n      //get schema from catalogue and parse -> (scheme, children)\n\n      _this._catalog.getDataSchemaDescriptor(msg.body.schema).then(function (descriptor) {\n        var properties = descriptor.sourcePackage.sourceCode.properties;\n        var scheme = properties.scheme ? properties.scheme : 'resource';\n        var childrens = properties.childrens ? properties.childrens : []; // Do schema validation\n        // TODO: check if is need to handle with the result of validation\n        //      schemaValidation(scheme, descriptor, msg.body.value);\n\n        var objectInfo = {\n          name: msg.body.value.name,\n          schema: msg.body.value.schema,\n          reporter: msg.body.value.reporter,\n          resources: msg.body.value.resources\n        }; // should resuse data object url if it passed\n\n        var reuseDataObject = msg.body.value.resource;\n        var numOfAddress = 1; //debugger;\n        //request address allocation of a new object from the msg-node\n        //_this._allocator.create(domain, numOfAddress, objectInfo, scheme, reuseDataObject).then((allocated) => {\n\n        _this._allocator.create(domain, numOfAddress, objectInfo, scheme, reuseDataObject).then(function (allocated) {\n          var objectRegistration = deepClone(msg.body.value);\n          objectRegistration.url = allocated.address[0];\n          objectRegistration.authorise = msg.body.authorise;\n          objectRegistration.childrens = childrens; //objectRegistration.expires = 30;//TODO: get it from data object configuration description when present\n\n          delete objectRegistration.data;\n          SyncherManager_log.log('[SyncherManager._newCreate] ALLOCATOR CREATE:', allocated);\n          var subscriptionURL = objectRegistration.url + '/subscription';\n          SyncherManager_log.log('[SyncherManager._newCreate] Subscription URL', subscriptionURL); //To register the dataObject in the runtimeRegistry\n\n          SyncherManager_log.info('[SyncherManager._newCreate] Register Object: ', objectRegistration); //_this._registry.registerDataObject(msg.body.value.name, msg.body.value.schema, objURL, msg.body.value.reporter, msg.body.value.resources, allocated, msg.body.authorise).then((resolve) => {\n\n          _this._registry.registerDataObject(objectRegistration).then(function (registeredObject) {\n            SyncherManager_log.log('[SyncherManager._newCreate] DataObject successfully registered', registeredObject); //all OK -> create reporter and register listeners\n\n            var reporter;\n\n            if (!_this3._reporters[objectRegistration.url]) {\n              var offline = objectRegistration.offline ? objectRegistration.offline : false;\n              reporter = new syncher_ReporterObject(_this, owner, objectRegistration.url, childrens, offline);\n            } else {\n              reporter = _this3._reporters[objectRegistration.url];\n            }\n\n            SyncherManager_log.log('[SyncherManager - new Create] - ', msg); // Store for each reporter hyperty the dataObject\n\n            var userURL; // let interworking = false;\n\n            if (msg.body.hasOwnProperty('identity') && msg.body.identity.userProfile && msg.body.identity.userProfile.userURL) {\n              userURL = msg.body.identity.userProfile.userURL; // if (!userURL.includes('user://')) {\n              //   interworking = true;\n              // }\n            } else {\n              userURL = _this._registry.getHypertyOwner(msg.from); // if (!userURL) {\n              //   interworking = true;\n              // }\n            } // should we use the msg.body.value instead?\n\n\n            var metadata = deepClone(objectRegistration);\n            metadata.subscriberUser = userURL;\n            metadata.isReporter = true; // Store the dataObject information\n            //if (!interworking) {\n\n            if (msg.body.hasOwnProperty('store') && msg.body.store) {\n              reporter.isToSaveData = true;\n              metadata.isToSaveData = true;\n\n              if (msg.body.value.data) {\n                metadata.data = deepClone(msg.body.value.data); //              _this._dataObjectsStorage.saveData(true, objectRegistration.url, null, msg.body.value.data); }\n                //            _this._dataObjectsStorage.update(true, objectRegistration.url, 'isToSaveData', true);\n                //            if (msg.body.value.data) { _this._dataObjectsStorage.saveData(true, objectRegistration.url, null, msg.body.value.data); }\n              }\n            }\n\n            _this._dataObjectsStorage.set(metadata).then(function (storeObject) {\n              if (metadata.offline) {\n                //register new DataObject at Offline Subscription Manager\n                msg.body.identity.guid = _this._identityModule._identities.guid;\n                var forward = {\n                  from: msg.to,\n                  to: metadata.offline + '/register',\n                  type: 'forward',\n                  body: msg\n                };\n                forward.body.body.resource = objectRegistration.url;\n                forward.body.body.value = metadata;\n                SyncherManager_log.log('[SyncherManager.newCreate] registering new object at offline manager ', forward);\n\n                _this._bus.postMessage(forward);\n              } //}\n\n\n              var responseMsg = {\n                id: msg.id,\n                type: 'response',\n                from: msg.to,\n                to: owner,\n                body: {\n                  code: 200,\n                  resource: objectRegistration.url,\n                  childrenResources: childrens\n                }\n              }; // adding listeners to forward to reporter\n\n              if (domainRouting) {\n                reporter.forwardSubscribe([objectRegistration.url, subscriptionURL]).then(function () {\n                  reporter.addChildrens().then(function () {\n                    _this._reporters[objectRegistration.url] = reporter; //FLOW-OUT: message response to Syncher -> create\n\n                    _this._bus.postMessage(responseMsg);\n                  });\n                });\n              } else {\n                reporter.addChildrens().then(function () {\n                  _this._reporters[objectRegistration.url] = reporter; //FLOW-OUT: message response to Syncher -> create\n\n                  _this._bus.postMessage(responseMsg);\n                });\n              }\n            }, function (error) {\n              SyncherManager_log.error(error);\n            });\n          }, function (error) {\n            SyncherManager_log.error(error);\n          });\n        });\n      })[\"catch\"](function (reason) {\n        //FLOW-OUT: error message response to Syncher -> create\n        var responseMsg = {\n          id: msg.id,\n          type: 'response',\n          from: msg.to,\n          to: owner,\n          body: {\n            code: 500,\n            desc: reason\n          }\n        };\n\n        _this._bus.postMessage(responseMsg);\n      });\n    }\n  }, {\n    key: \"_resumeCreate\",\n    value: function _resumeCreate(msg, storedObject) {\n      var _this4 = this;\n\n      var _this = this;\n\n      return new Promise(function (resolve) {\n        var owner = msg.from;\n        var schema = storedObject.schema;\n        var resource = storedObject.url;\n        var domainRegistration = storedObject.hasOwnProperty('domain_registration') ? storedObject.domain_registration : true;\n        var initialData = storedObject.data;\n        SyncherManager_log.log('[SyncherManager] - resume create', msg, storedObject); //get schema from catalogue and parse -> (scheme, children)\n\n        _this._catalog.getDataSchemaDescriptor(schema).then(function (descriptor) {\n          var properties = descriptor.sourcePackage.sourceCode.properties;\n          var scheme = properties.scheme ? properties.scheme.constant : 'resource';\n          var childrens = properties.childrens ? properties.childrens : [];\n          SyncherManager_log.log('[SyncherManager] - getDataSchemaDescriptor: ', descriptor, childrens); // Do schema validation\n          // TODO: check if is need to handle with the result of validation\n          //        schemaValidation(scheme, descriptor, initialData);\n          //all OK -> create reporter and register listeners\n\n          var reporter;\n          var offline;\n\n          if (!_this4._reporters[resource]) {\n            offline = storedObject.offline ? storedObject.offline : false;\n            reporter = new syncher_ReporterObject(_this, owner, resource, childrens, offline);\n          } else {\n            reporter = _this4._reporters[resource];\n          }\n\n          reporter.isToSaveData = storedObject.isToSaveData;\n\n          if (offline) {\n            //update new DataObject at Offline Subscription Manager\n            var _msg = {\n              from: _this._url,\n              to: offline + '/register',\n              type: 'update',\n              body: {}\n            };\n            SyncherManager_log.log('[SyncherManager._resumeCreate] update object at offline manager ', _msg);\n\n            _this._bus.postMessage(_msg);\n          }\n\n          if (domainRegistration) {\n            reporter.forwardSubscribe([storedObject.url]).then(function () {\n              SyncherManager_log.log('[SyncherManager._resumeCreate] resumingReporterSubscription ', storedObject);\n\n              _this._resumeReporterSubscriptions(msg, storedObject, reporter, childrens, domainRegistration).then(function (resumeObject) {\n                SyncherManager_log.log('[SyncherManager._resumeCreate] resolved resumed object ', resumeObject);\n                resolve(resumeObject);\n              });\n            });\n          } else resolve(_this._resumeReporterSubscriptions(msg, storedObject, reporter, childrens, domainRegistration)); //  resolve();\n\n        })[\"catch\"](function (reason) {\n          SyncherManager_log.error('[SyncherManager - resume create] - fail on getDataSchemaDescriptor: ', reason);\n          resolve(false);\n        });\n      });\n    }\n  }, {\n    key: \"_resumeReporterSubscriptions\",\n    value: function _resumeReporterSubscriptions(msg, storedObject, reporter, childrens, domainRegistration) {\n      var _this = this;\n\n      var resource = storedObject.url;\n      var objectRegistration = deepClone(msg.body.value);\n      objectRegistration.url = storedObject.url;\n      objectRegistration.expires = storedObject.expires;\n      objectRegistration.domain_registration = domainRegistration;\n      delete objectRegistration.data;\n      return new Promise(function (resolve) {\n        reporter.addChildrens().then(function () {\n          reporter.resumeSubscriptions(storedObject.subscriptions);\n          _this._reporters[resource] = reporter;\n          SyncherManager_log.info('[SyncherManager - resume create] - resolved resumed: ', storedObject);\n          return _this._decryptChildrens(storedObject, childrens);\n        }).then(function (decryptedObject) {\n          SyncherManager_log.info('[SyncherManager._resumeReporterSubscriptions] Register Object: ', objectRegistration);\n\n          _this._registry.registerDataObject(objectRegistration).then(function (registered) {\n            SyncherManager_log.log('[SyncherManager._resumeReporterSubscriptions] DataObject registration successfully updated', registered);\n            SyncherManager_log.log('[SyncherManager._resumeReporterSubscriptions] resolving object', decryptedObject);\n            resolve(decryptedObject);\n          }); // log.log('result of previous promise');\n\n        })[\"catch\"](function (reason) {\n          SyncherManager_log.error('[SyncherManager - resume create] - fail on addChildrens: ', reason);\n          resolve(false);\n        });\n      });\n    } // to decrypt DataChildObjects if they are encrypted\n\n  }, {\n    key: \"_decryptChildrens\",\n    value: function _decryptChildrens(encryptedObject, childrens) {\n      var _this = this;\n\n      var storedObject = deepClone(encryptedObject);\n      return new Promise(function (resolve) {\n        if (!childrens) {\n          resolve(storedObject);\n        } else {\n          var childrensObj = Object.keys(storedObject.childrenObjects);\n\n          if (childrensObj.length === 0) {\n            resolve(storedObject);\n          }\n\n          childrens.forEach(function (children) {\n            //          let childObjects = storedObject.childrenObjects[children];\n            var childObjects = storedObject.childrenObjects;\n            SyncherManager_log.log('[SyncherManager._decryptChildrens] dataObjectChilds to decrypt ', childObjects);\n            var listOfDecryptedObjects = [];\n            Object.keys(childObjects).forEach(function (childId) {\n              var child = childObjects[childId];\n              var owner = childId.split('#')[0];\n\n              if (typeof child.value === 'string') {\n                SyncherManager_log.log('[SyncherManager._decryptChildrens] createdBy ', owner, ' object: ', child.value);\n                var decrypted = cryptoManager_CryptoManager.decryptDataObject(JSON.parse(child.value), storedObject.url);\n                listOfDecryptedObjects.push(decrypted);\n              }\n            });\n            Promise.all(listOfDecryptedObjects).then(function (decryptedObjects) {\n              SyncherManager_log.log('[SyncherManager._decryptChildrens] returning decrypted ', decryptedObjects);\n              decryptedObjects.forEach(function (decryptedObject) {\n                var childId = decryptedObject.value.url;\n                storedObject.childrenObjects[childId].value = decryptedObject.value;\n              });\n              SyncherManager_log.log('[SyncherManager._decryptChildrens] storedObject ', storedObject);\n              resolve(storedObject);\n            })[\"catch\"](function (reason) {\n              SyncherManager_log.warn('[SyncherManager._decryptChildrens] failed : ', reason);\n            });\n          });\n        }\n      });\n    } // Process invitations to observers\n\n  }, {\n    key: \"_authorise\",\n    value: function _authorise(msg) {\n      var _this = this;\n\n      if (!msg.body.resource) {\n        throw new Error('[SyncherManager._authorise] invitation request without data object url:', msg);\n      }\n\n      var objSubscriptorURL = msg.body.resource + '/subscription';\n      var p2p = msg.body.p2p ? msg.body.p2p : false;\n      SyncherManager_log.log('[SyncherManager -  authorise] - ', msg);\n\n      if (msg.body.authorise) {\n        msg.body.authorise.forEach(function (hypertyURL) {\n          //FLOW-OUT: send invites to list of remote Syncher -> _onRemoteCreate -> onNotification\n          _this._bus.postMessage({\n            type: 'create',\n            from: objSubscriptorURL,\n            to: hypertyURL,\n            body: {\n              p2p: p2p,\n              identity: msg.body.identity,\n              source: msg.from,\n              value: msg.body.value,\n              schema: msg.body.schema\n            }\n          }, function (reply) {\n            // lets forward the invitation response\n            var response = {\n              from: msg.to,\n              to: msg.from,\n              id: msg.id,\n              type: reply.type,\n              body: reply.body\n            };\n\n            _this._bus.postMessage(response);\n          });\n        });\n      }\n    } //FLOW-IN: message received from DataObjectReporter -> delete\n\n  }, {\n    key: \"_onDelete\",\n    value: function _onDelete(msg) {\n      var _this = this;\n\n      var objURL = msg.body.resource;\n      var object = _this._reporters[objURL];\n\n      if (object) {\n        //TODO: is there any policy verification before delete?\n        if (object.offline) {\n          //register new DataObject at Offline Subscription Manager\n          var forward = {\n            from: msg.to,\n            to: object.offline + '/register',\n            type: 'forward',\n            body: msg\n          };\n          SyncherManager_log.log('[SyncherManager._onDelete] unregistering object from offline manager ', forward);\n\n          _this._bus.postMessage(forward);\n        }\n\n        object[\"delete\"]();\n\n        this._dataObjectsStorage.deleteResource(objURL).then(function (result) {\n          SyncherManager_log.log('[SyncherManager - onDelete] - deleteResource: ', result);\n\n          _this._registry.unregisterDataObject(objURL); //TODO: unregister object?\n\n\n          _this._bus.postMessage({\n            id: msg.id,\n            type: 'response',\n            from: msg.to,\n            to: msg.from,\n            body: {\n              code: 200\n            }\n          });\n        });\n      }\n    } //FLOW-IN: message received from local Syncher -> subscribe\n\n  }, {\n    key: \"_onLocalSubscribe\",\n    value: function _onLocalSubscribe(msg) {\n      var _this5 = this;\n\n      //debugger;\n      if (msg.body.hasOwnProperty('resume') && msg.body.resume) {\n        this._dataObjectsStorage.getResourcesByCriteria(msg, false).then(function (result) {\n          SyncherManager_log.info('[SyncherManager.onLocalSubscribe. resume]: ', msg, ' result: ', result);\n\n          if (result && Object.keys(result).length > 0) {\n            var listOfObservers = []; // TODO: should reuse the stored information\n\n            Object.keys(result).forEach(function (objURL) {\n              SyncherManager_log.log('[SyncherManager - resume Subscribe] - reuse current object url: ', result[objURL]);\n              listOfObservers.push(_this5._resumeSubscription(msg, result[objURL]));\n            });\n            Promise.all(listOfObservers).then(function (resumedObservers) {\n              SyncherManager_log.log('[SyncherManager - Observers Resumed]', resumedObservers); // TODO: shoud send the information if some object is failing;\n\n              var successfullyResumed = Object.values(resumedObservers).filter(function (observer) {\n                return observer !== false;\n              });\n              var response = {\n                id: msg.id,\n                type: 'response',\n                from: msg.to,\n                to: msg.from,\n                body: {\n                  code: 200,\n                  value: successfullyResumed\n                }\n              };\n              SyncherManager_log.log('[SyncherManager - Observers Resumed] replying ', response); //FLOW-OUT: message response to Syncher -> create\n\n              _this5._bus.postMessage(response);\n            });\n          } else {\n            //forward to hyperty:\n            var reply = {};\n            reply.id = msg.id;\n            reply.from = msg.to;\n            reply.to = msg.from;\n            reply.type = 'response';\n            reply.body = {\n              code: 404,\n              desc: 'No data objects observers to be resumed'\n            };\n\n            _this5._bus.postMessage(reply);\n          }\n        });\n      } else {\n        SyncherManager_log.log('[SyncherManager.onLocalSubscribe - new Subscribe] - ', msg.body.schema, msg.body.resource);\n\n        this._newSubscription(msg);\n      }\n    }\n  }, {\n    key: \"_newSubscription\",\n    value: function _newSubscription(msg) {\n      var _this = this;\n\n      var objURL = msg.body.resource;\n      var hypertyURL = msg.from;\n      var domain = divideURL(objURL).domain;\n      var domainSubscription = msg.body.hasOwnProperty('domain_subscription') ? msg.body.domain_subscription : true;\n      var childBaseURL = objURL + '/children/'; //get schema from catalogue and parse -> (children)\n\n      _this._catalog.getDataSchemaDescriptor(msg.body.schema).then(function (descriptor) {\n        var properties = descriptor.sourcePackage.sourceCode.properties;\n        var childrens = properties.childrens ? properties.childrens : [];\n        var subscriptions = [];\n        subscriptions.push(objURL + '/changes'); //      childrens.forEach((child) => subscriptions.push(childBaseURL + child));\n\n        subscriptions.push(childBaseURL); //children addresses\n\n        if (domainSubscription) {\n          //FLOW-OUT: subscribe message to the msg-node, registering listeners on the broker\n          var nodeSubscribeMsg = {\n            type: 'subscribe',\n            from: _this._url,\n            to: 'domain://msg-node.' + domain + '/sm',\n            body: {\n              identity: msg.body.identity,\n              resources: subscriptions,\n              source: hypertyURL\n            }\n          }; //subscribe in msg-node\n\n          _this._bus.postMessage(nodeSubscribeMsg, function (reply) {\n            SyncherManager_log.log('node-subscribe-response(observer): ', reply);\n            console.log('REUSETEST SyncherManager - node-subscribe-response(observer): ', reply);\n\n            if (reply.body.code === 200) {\n              _this._newReporterSubscribe(msg, hypertyURL, objURL, childrens);\n            } else {\n              //listener rejected\n              _this._bus.postMessage({\n                id: msg.id,\n                type: 'response',\n                from: msg.to,\n                to: hypertyURL,\n                body: reply.body\n              });\n            }\n          });\n        } else _this._newReporterSubscribe(msg, hypertyURL, objURL, childrens);\n      });\n    }\n  }, {\n    key: \"_newReporterSubscribe\",\n    value: function _newReporterSubscribe(msg, hypertyURL, objURL, childrens) {\n      var _this = this;\n\n      var objURLSubscription = objURL + '/subscription'; //FLOW-OUT: reply with provisional response\n\n      _this._bus.postMessage({\n        id: msg.id,\n        type: 'response',\n        from: msg.to,\n        to: hypertyURL,\n        body: {\n          code: 100,\n          childrenResources: childrens,\n          schema: msg.body.schema,\n          resource: msg.body.resource\n        }\n      }); //FLOW-OUT: subscribe message to remote ReporterObject -> _onRemoteSubscribe\n\n\n      var objSubscribeMsg = {\n        type: 'subscribe',\n        from: _this._url,\n        to: objURLSubscription,\n        body: {\n          identity: msg.body.identity,\n          subscriber: hypertyURL\n        }\n      }; //TODO: For Further Study\n\n      if (msg.body.hasOwnProperty('mutual')) objSubscribeMsg.body.mutual = msg.body.mutual;\n      SyncherManager_log.log('[SyncherManager._newSubscription]', objSubscribeMsg, msg);\n      console.log('REUSETEST SyncherManager - [SyncherManager._newSubscription]', objSubscribeMsg, msg); //subscribe to reporter SM\n\n      _this._bus.postMessage(objSubscribeMsg, function (reply) {\n        SyncherManager_log.log('reporter-subscribe-response-new: ', reply);\n        console.log('REUSETEST SyncherManager - reporter-subscribe-response-new: ', reply);\n        if (reply.body.code === 200) _this._processSuccessfullSubscription(reply, hypertyURL, objURL, childrens, msg);else if (msg.body.offline) _this._processOfflineSubscription(objSubscribeMsg, msg.body.offline, hypertyURL, objURL, childrens, msg);else {//TODO: send response back to Hyperty with error message received in the reply\n        }\n      });\n    }\n  }, {\n    key: \"_processOfflineSubscription\",\n    value: function _processOfflineSubscription(subscription, redirectTo, hypertyURL, objURL, childrens, msg) {\n      var _this = this;\n\n      var forward = {\n        from: subscription.from,\n        type: 'forward',\n        to: redirectTo,\n        body: subscription\n      };\n      console.log('[SyncherManager._processOfflineSubscription] forwading ', forward);\n\n      _this._bus.postMessage(forward, function (reply) {\n        SyncherManager_log.log('[SyncherManager._processOfflineSubscription] reply ', reply);\n        if (reply.body.code === 200) _this._processSuccessfullSubscription(reply, hypertyURL, objURL, childrens, msg);else {//TODO: send response back to Hyperty with error message received in the reply\n        }\n      });\n    }\n  }, {\n    key: \"_processSuccessfullSubscription\",\n    value: function _processSuccessfullSubscription(reply, hypertyURL, objURL, childrens, msg) {\n      var _this = this;\n\n      SyncherManager_log.log('[SyncherManager._newSubscription] - observers: ', _this._observers, objURL, _this._observers[objURL]);\n      console.log('REUSETEST SyncherManager - 200 code[SyncherManager._newSubscription] - observers: ', _this._observers, objURL, _this._observers[objURL]);\n      var observer = _this._observers[objURL];\n\n      if (!observer) {\n        observer = new syncher_ObserverObject(_this, objURL, childrens);\n        SyncherManager_log.log('[SyncherManager._newSubscription] - observers: create new ObserverObject: ', observer);\n        _this._observers[objURL] = observer; // register new hyperty subscription\n\n        observer.addSubscription(hypertyURL); // add childrens and listeners to save data if necessary\n\n        observer.addChildrens();\n      }\n\n      var interworking = false; //debugger;\n      // Store for each reporter hyperty the dataObject\n\n      var userURL;\n\n      if (msg.body.hasOwnProperty('identity') && msg.body.identity.userProfile && msg.body.identity.userProfile.userURL) {\n        userURL = msg.body.identity.userProfile.userURL;\n\n        if (!userURL.includes('user://')) {\n          interworking = true;\n        }\n      } else {\n        userURL = _this._registry.getHypertyOwner(msg.from);\n        if (!userURL) interworking = true;\n      }\n\n      var metadata = deepClone(reply.body.value); // let childrenObjects = metadata.childrenObjects || {};\n\n      delete metadata.data;\n      delete metadata.childrenObjects;\n      metadata.childrens = childrens;\n      metadata.subscriberUser = userURL;\n      metadata.isReporter = false;\n      metadata.subscriberHyperty = hypertyURL;\n\n      if (!interworking) {\n        //_this._dataObjectsStorage.set(objURL, false, msg.body.schema, 'on', reply.body.owner, hypertyURL, childrens, userURL);\n        _this._dataObjectsStorage.set(metadata);\n\n        if (metadata.hasOwnProperty('store') && metadata.store || metadata.hasOwnProperty('isToSaveData') && metadata.isToSaveData) {\n          observer.isToSaveData = true;\n\n          _this._dataObjectsStorage.update(false, objURL, 'isToSaveData', true);\n\n          _this._dataObjectsStorage.saveData(false, objURL, null, reply.body.value.data); //                  if (childrens) _this._dataObjectsStorage.initialObserverSync(objURL, reply.body.value.data.backupRevision);\n\n        }\n      } //forward to hyperty:\n\n\n      reply.id = msg.id;\n      reply.from = _this._url;\n      reply.to = hypertyURL;\n      reply.body.schema = msg.body.schema;\n      reply.body.resource = msg.body.resource; //TODO: For Further Study\n\n      if (msg.body.hasOwnProperty('mutual')) reply.body.mutual = msg.body.mutual;\n      SyncherManager_log.log('[subscribe] - new subscription: ', msg, reply, observer);\n\n      this._bus.postMessage(reply);\n    }\n  }, {\n    key: \"_resumeSubscription\",\n    value: function _resumeSubscription(msg, storedObject) {\n      var _this6 = this;\n\n      return new Promise(function (resolve) {\n        var objURL = storedObject.url;\n        var schema = storedObject.schema;\n        var hypertyURL = msg.from; // let objURLSubscription = objURL + '/subscription';\n\n        var childBaseURL = objURL + '/children/';\n        SyncherManager_log.log('[SyncherManager - ReuseSubscription] - objURL: ', objURL, ' - schema:', schema); //get schema from catalogue and parse -> (children)\n        // TODO: remove this since children resources should be available in the DataObjectsStorage\n\n        _this6._catalog.getDataSchemaDescriptor(schema).then(function (descriptor) {\n          var properties = descriptor.sourcePackage.sourceCode.properties;\n          var childrens = properties.childrens ? properties.childrens : []; //children addresses\n\n          var subscriptions = [];\n          subscriptions.push(objURL + '/changes'); //        childrens.forEach((child) => subscriptions.push(childBaseURL + child));\n\n          subscriptions.push(childBaseURL); //FLOW-OUT: reply with provisional response\n\n          _this6._bus.postMessage({\n            id: msg.id,\n            type: 'response',\n            from: msg.to,\n            to: hypertyURL,\n            body: {\n              code: 100,\n              childrenResources: childrens,\n              schema: schema,\n              resource: objURL\n            }\n          }); //FLOW-OUT: subscribe message to remote ReporterObject -> _onRemoteSubscribe\n\n          /*let objSubscribeMsg = {\n            type: 'subscribe', from: this._url, to: objURLSubscription,\n            body: { subscriber: hypertyURL, identity: msg.body.identity }\n          };\n           //subscribe to reporter SM\n          this._bus.postMessage(objSubscribeMsg, (reply) => {*/\n\n\n          var observer = _this6._observers[objURL];\n\n          if (!observer) {\n            observer = new syncher_ObserverObject(_this6, objURL, childrens);\n            observer.isToSaveData = storedObject.isToSaveData;\n            _this6._observers[objURL] = observer;\n          } //register new hyperty subscription\n\n\n          observer.addSubscription(hypertyURL);\n          observer.addChildrens(); // Object.assign(storedObject.data, reply.body.value.data);\n          // Object.assign(storedObject.childrens, reply.body.value.childrens);\n          //log.log('[subscribe] - resume subscription: ', msg, reply, storedObject, observer);\n\n          return _this6._decryptChildrens(storedObject, childrens);\n        }).then(function (decryptedObject) {\n          // log.log('result of previous promise');\n          resolve(decryptedObject);\n        })[\"catch\"](function (reason) {\n          SyncherManager_log.error('[SyncherManager - resume subscription] - fail on getDataSchemaDescriptor: ', reason);\n          resolve(false);\n        });\n      });\n    } //FLOW-IN: message received from local DataObjectObserver -> unsubscribe\n\n  }, {\n    key: \"_onLocalUnSubscribe\",\n    value: function _onLocalUnSubscribe(msg) {\n      var _this = this;\n\n      var hypertyURL = msg.from;\n      var objURL = msg.body.resource;\n      var observer = _this._observers[objURL];\n\n      if (observer) {\n        //TODO: is there any policy verification before delete?\n        observer.removeSubscription(msg); //TODO: destroy object in the registry?\n\n        _this._bus.postMessage({\n          id: msg.id,\n          type: 'response',\n          from: msg.to,\n          to: msg.from,\n          body: {\n            code: 200\n          }\n        });\n\n        this._dataObjectsStorage.deleteResource(objURL); //TODO: remove Object if no more subscription?\n\n\n        delete _this._observers[objURL];\n      }\n    }\n  }, {\n    key: \"url\",\n    get: function get() {\n      return this._url;\n    }\n  }]);\n\n  return SyncherManager;\n}();\n\n/* harmony default export */ var syncher_SyncherManager = (SyncherManager_SyncherManager);\n// CONCATENATED MODULE: ./src/subscriptionManager/Subscription.js\nfunction subscriptionManager_Subscription_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction subscriptionManager_Subscription_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction subscriptionManager_Subscription_createClass(Constructor, protoProps, staticProps) { if (protoProps) subscriptionManager_Subscription_defineProperties(Constructor.prototype, protoProps); if (staticProps) subscriptionManager_Subscription_defineProperties(Constructor, staticProps); return Constructor; }\n\n// Log System\n\nvar subscriptionManager_Subscription_log = loglevel[\"getLogger\"]('Subscription');\n\nvar Subscription_Subscription =\n/*#__PURE__*/\nfunction () {\n  function Subscription(bus, subscriber, resource) {\n    subscriptionManager_Subscription_classCallCheck(this, Subscription);\n\n    var _this = this;\n\n    _this._subscriber = subscriber;\n    _this.resource = resource;\n    subscriptionManager_Subscription_log.log('[SubscriptionManager.Subscription] new: ', subscriber, resource); //add forward\n\n    _this._listener = bus.addForward(resource, subscriber);\n  }\n\n  subscriptionManager_Subscription_createClass(Subscription, [{\n    key: \"_releaseListeners\",\n    value: function _releaseListeners() {\n      var _this = this;\n\n      _this._listener.remove();\n    }\n  }]);\n\n  return Subscription;\n}();\n\n/* harmony default export */ var subscriptionManager_Subscription = (Subscription_Subscription);\n// CONCATENATED MODULE: ./src/subscriptionManager/SubscriptionManager.js\nfunction SubscriptionManager_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction SubscriptionManager_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction SubscriptionManager_createClass(Constructor, protoProps, staticProps) { if (protoProps) SubscriptionManager_defineProperties(Constructor.prototype, protoProps); if (staticProps) SubscriptionManager_defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n* Copyright 2016 PT Inovação e Sistemas SA\n* Copyright 2016 INESC-ID\n* Copyright 2016 QUOBIS NETWORKS SL\n* Copyright 2016 FRAUNHOFER-GESELLSCHAFT ZUR FOERDERUNG DER ANGEWANDTEN FORSCHUNG E.V\n* Copyright 2016 ORANGE SA\n* Copyright 2016 Deutsche Telekom AG\n* Copyright 2016 Apizee\n* Copyright 2016 TECHNISCHE UNIVERSITAT BERLIN\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n**/\n// Log System\n\nvar SubscriptionManager_log = loglevel[\"getLogger\"]('SubscriptionManager');\n\n\n/**\n * @author paulo-g-chainho@alticelabs.com\n * Subscription Manager used to manage routing paths at the runtime.\n */\n\nvar SubscriptionManager_SubscriptionManager =\n/*#__PURE__*/\nfunction () {\n  function SubscriptionManager(runtimeURL, bus, storage) {\n    SubscriptionManager_classCallCheck(this, SubscriptionManager);\n\n    if (!runtimeURL) throw new Error('[SubscriptionManager] - needs the runtimeURL parameter');\n    if (!bus) throw new Error('[SubscriptionManager] - needs the MessageBus instance');\n\n    var _this = this;\n\n    _this._bus = bus;\n    _this._storage = storage;\n    _this._subscriptions = {};\n    _this._subscriptionsStorage = {}; //TODO: these should be saved in persistence engine?\n\n    _this.runtimeURL = runtimeURL;\n    _this._url = runtimeURL + '/subscriptions'; //TODO: this should not be hardcoded!\n\n    _this._domain = divideURL(runtimeURL).domain;\n    bus.addListener(_this._url, function (msg) {\n      SubscriptionManager_log.info('[SubscriptionManager] RCV: ', msg);\n\n      switch (msg.type) {\n        case 'subscribe':\n          _this._onSubscribe(msg);\n\n          break;\n\n        case 'unsubscribe':\n          _this._onUnSubscribe(msg);\n\n          break;\n\n        case 'read':\n          _this._onRead(msg);\n\n          break;\n      }\n    });\n  }\n\n  SubscriptionManager_createClass(SubscriptionManager, [{\n    key: \"init\",\n    value: function init() {\n      var _this = this;\n\n      return new Promise(function (resolve) {\n        _this._storage.get('subscriptions').then(function (subscriptions) {\n          SubscriptionManager_log.log('[SubscriptionManager.init] resume subscriptions: ', subscriptions);\n\n          if (subscriptions) {\n            _this._subscriptionsStorage = subscriptions;\n            Object.values(subscriptions).forEach(function (subscription) {\n              _this.createSubscription(subscription.domain, subscription.resources, subscription.subscriber, subscription.identity);\n            });\n          }\n\n          resolve();\n        });\n      });\n    }\n  }, {\n    key: \"_onSubscribe\",\n    //message received to set a routing path\n    value: function _onSubscribe(msg) {\n      var _this = this;\n\n      var resources = msg.body.resources;\n      var subscriber = msg.from;\n      var domain = divideURL(resources[0]).domain; //we are assuming resources are all from the same domain\n\n      var identity = msg.body.identity;\n\n      _this.createSubscription(domain, resources, subscriber, identity).then(function (reply) {\n        //forward to hyperty:\n        reply.id = msg.id;\n        reply.from = _this._url;\n        reply.to = subscriber;\n        reply.body = msg.body;\n        reply.body.code = 200;\n        SubscriptionManager_log.log('[SubscriptionManager] - craeteSubscription: ', msg, reply, subscriber);\n\n        _this._bus.postMessage(reply);\n\n        if (!_this._subscriptionsStorage[subscriber]) {\n          _this._subscriptionsStorage[subscriber] = {\n            domain: domain,\n            resources: resources,\n            subscriber: subscriber,\n            identity: identity\n          };\n        } else {\n          resources.forEach(function (resource) {\n            if (!_this._subscriptionsStorage[subscriber].resources.includes(resource)) {\n              _this._subscriptionsStorage[subscriber].resources.push(resource);\n            }\n          });\n        }\n\n        _this._storage.set('subscriptions', 1, _this._subscriptionsStorage);\n      });\n    }\n  }, {\n    key: \"createSubscription\",\n    value: function createSubscription(domain, resources, subscriber, identity) {\n      var _this = this; //debugger;\n\n\n      return new Promise(function (resolve) {\n        //FLOW-OUT: subscribe message to the msg-node, registering listeners on the broker\n        var nodeSubscribeMsg = {\n          type: 'subscribe',\n          from: _this._url,\n          to: 'domain://msg-node.' + domain + '/sm',\n          body: {\n            identity: identity,\n            resources: resources,\n            source: subscriber\n          }\n        }; //subscribe in msg-node\n\n        _this._bus.postMessage(nodeSubscribeMsg, function (reply) {\n          SubscriptionManager_log.log('[SubscriptionManager] node-subscribe-response: ', reply); //if (reply.body.code === 200) {//TODO: uncomment when  MN replies with correct response body code\n          //TODO: support multiple routes for multiple resources\n\n          var subscription = _this._subscriptions[subscriber];\n          SubscriptionManager_log.log('[SubscriptionManager] - ', _this._subscriptions, resources, _this._subscriptions.hasOwnProperty(subscriber));\n\n          if (!subscription) {\n            _this._subscriptions[subscriber] = {};\n          }\n\n          resources.forEach(function (resource) {\n            _this._subscriptions[subscriber][resource] = new subscriptionManager_Subscription(_this._bus, subscriber, resource);\n          });\n          resolve(reply);\n        });\n      });\n    } // message received to remove routing path\n\n  }, {\n    key: \"_onUnSubscribe\",\n    value: function _onUnSubscribe(msg) {\n      var _this = this;\n\n      var unsubscriber = msg.from;\n      var resource = msg.body.resource;\n\n      if (_this._subscriptions[unsubscriber] && _this._subscriptions[unsubscriber][resource]) {\n        var domain = divideURL(resource).domain;\n        var subscription = _this._subscriptions[unsubscriber][resource]; //FLOW-OUT: message sent to msg-node SubscriptionManager component\n\n        _this._bus.postMessage({\n          type: 'unsubscribe',\n          from: _this._url,\n          to: 'domain://msg-node.' + domain + '/sm',\n          body: {\n            resources: [resource],\n            source: unsubscriber\n          }\n        });\n\n        subscription._releaseListeners();\n\n        delete _this._subscriptions[unsubscriber][resource];\n\n        if (_this._subscriptionsStorage[unsubscriber]) {\n          var i = _this._subscriptionsStorage[unsubscriber].resources.indexOf(resource);\n\n          if (i != -1) {\n            _this._subscriptionsStorage[unsubscriber].resources.splice(i, 1);\n          }\n\n          _this._storage.set('subscriptions', 1, _this._subscriptionsStorage);\n        }\n      }\n\n      _this._bus.postMessage({\n        id: msg.id,\n        type: 'response',\n        from: msg.to,\n        to: msg.from,\n        body: {\n          code: 200\n        }\n      });\n    } //message received to read existing routing paths. At this point limited to read all existing routing paths set for one listener\n\n  }, {\n    key: \"_onRead\",\n    value: function _onRead(msg) {\n      var _this = this;\n\n      var listenerAddress = msg.body.resource;\n      var reply;\n      SubscriptionManager_log.log('[SubscriptionManager] - request to read Subscriptions: ', msg);\n\n      _this._storage.get('subscriptions').then(function (subscriptions) {\n        if (subscriptions && subscriptions[listenerAddress]) {\n          var resources = subscriptions[listenerAddress].resources;\n          reply = {\n            id: msg.id,\n            type: 'response',\n            from: msg.to,\n            to: msg.from,\n            body: {\n              code: 200,\n              value: resources\n            }\n          };\n        } else {\n          reply = {\n            id: msg.id,\n            type: 'response',\n            from: msg.to,\n            to: msg.from,\n            body: {\n              code: 404,\n              description: 'Not Found'\n            }\n          };\n        }\n\n        _this._bus.postMessage(reply);\n      });\n    }\n  }, {\n    key: \"url\",\n    get: function get() {\n      return this._url;\n    }\n  }]);\n\n  return SubscriptionManager;\n}();\n\n/* harmony default export */ var subscriptionManager_SubscriptionManager = (SubscriptionManager_SubscriptionManager);\n// CONCATENATED MODULE: ./src/policy/ReThinkCtx.js\nfunction ReThinkCtx_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction ReThinkCtx_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction ReThinkCtx_createClass(Constructor, protoProps, staticProps) { if (protoProps) ReThinkCtx_defineProperties(Constructor.prototype, protoProps); if (staticProps) ReThinkCtx_defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\nvar ReThinkCtx_ReThinkCtx =\n/*#__PURE__*/\nfunction () {\n  function ReThinkCtx() {\n    ReThinkCtx_classCallCheck(this, ReThinkCtx);\n\n    this.defaultBehaviour = true;\n    this.groups = {};\n  }\n\n  ReThinkCtx_createClass(ReThinkCtx, [{\n    key: \"scheme\",\n    get: function get() {\n      return this._scheme;\n    },\n    set: function set(params) {\n      var from = params.message.from;\n\n      if (isDataObjectURL(from)) {\n        this._scheme = divideURL(from).type;\n      } else {\n        this._scheme = undefined;\n      }\n    }\n  }, {\n    key: \"date\",\n    get: function get() {\n      return this._date;\n    },\n    set: function set(now) {\n      var date = new Date();\n      var day = String(date.getDate());\n\n      if (day.length === 1) {\n        day = '0' + day;\n      }\n\n      var month = String(date.getMonth() + 1);\n\n      if (month.length === 1) {\n        month = '0' + month;\n      }\n\n      this._date = day + '/' + month + '/' + date.getFullYear();\n    }\n  }, {\n    key: \"domain\",\n    get: function get() {\n      return this._domain;\n    },\n    set: function set(params) {\n      if (params.message.body.identity !== undefined) {\n        this._domain = divideEmail(params.message.body.identity.userProfile.username).domain;\n      }\n    }\n  }, {\n    key: \"type\",\n    get: function get() {\n      return this._type;\n    },\n    set: function set(params) {\n      var message = params.message;\n\n      if (message.body.value !== undefined) {\n        this._type = message.body.value.resourceType;\n      }\n    }\n  }, {\n    key: \"source\",\n    get: function get() {\n      return this._source;\n    },\n    set: function set(params) {\n      if (params.message.body.identity !== undefined) {\n        this._source = params.message.body.identity.userProfile.username;\n      }\n    }\n  }, {\n    key: \"time\",\n    get: function get() {\n      return this._time;\n    },\n    set: function set(now) {\n      now = new Date();\n      var minutes = String(now.getMinutes());\n\n      if (minutes.length === 1) {\n        minutes = '0' + minutes;\n      }\n\n      this._time = parseInt(String(now.getHours()) + minutes);\n    }\n  }, {\n    key: \"weekday\",\n    get: function get() {\n      return this._weekday;\n    },\n    set: function set(now) {\n      this._weekday = String(new Date().getDay());\n    }\n  }]);\n\n  return ReThinkCtx;\n}();\n\n/* harmony default export */ var policy_ReThinkCtx = (ReThinkCtx_ReThinkCtx);\n// CONCATENATED MODULE: ./src/policy/context/RuntimeCoreCtx.js\nfunction RuntimeCoreCtx_typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { RuntimeCoreCtx_typeof = function _typeof(obj) { return typeof obj; }; } else { RuntimeCoreCtx_typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return RuntimeCoreCtx_typeof(obj); }\n\nfunction RuntimeCoreCtx_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction RuntimeCoreCtx_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction RuntimeCoreCtx_createClass(Constructor, protoProps, staticProps) { if (protoProps) RuntimeCoreCtx_defineProperties(Constructor.prototype, protoProps); if (staticProps) RuntimeCoreCtx_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction RuntimeCoreCtx_possibleConstructorReturn(self, call) { if (call && (RuntimeCoreCtx_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return RuntimeCoreCtx_assertThisInitialized(self); }\n\nfunction RuntimeCoreCtx_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction RuntimeCoreCtx_getPrototypeOf(o) { RuntimeCoreCtx_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return RuntimeCoreCtx_getPrototypeOf(o); }\n\nfunction RuntimeCoreCtx_inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) RuntimeCoreCtx_setPrototypeOf(subClass, superClass); }\n\nfunction RuntimeCoreCtx_setPrototypeOf(o, p) { RuntimeCoreCtx_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return RuntimeCoreCtx_setPrototypeOf(o, p); }\n\n\nvar RuntimeCoreCtx_log = loglevel[\"getLogger\"]('PEP');\n\n\n\n\n\n\nvar RuntimeCoreCtx_RuntimeCoreCtx =\n/*#__PURE__*/\nfunction (_ReThinkCtx) {\n  RuntimeCoreCtx_inherits(RuntimeCoreCtx, _ReThinkCtx);\n\n  function RuntimeCoreCtx(runtimeURL, idModule, runtimeRegistry, storageManager, runtimeCapabilities) {\n    var _this2;\n\n    RuntimeCoreCtx_classCallCheck(this, RuntimeCoreCtx);\n\n    _this2 = RuntimeCoreCtx_possibleConstructorReturn(this, RuntimeCoreCtx_getPrototypeOf(RuntimeCoreCtx).call(this));\n    _this2._runtimeURL = runtimeURL;\n    _this2._pepURL = _this2._runtimeURL + '/pep';\n    _this2._guiURL = _this2._runtimeURL + '/policy-gui';\n    _this2.idModule = idModule;\n    _this2.runtimeRegistry = runtimeRegistry;\n    _this2.activeUserPolicy = undefined;\n    _this2.serviceProviderPolicy = {};\n    _this2.userPolicies = {};\n    _this2.storageManager = storageManager;\n    _this2.runtimeCapabilities = runtimeCapabilities;\n    return _this2;\n  }\n\n  RuntimeCoreCtx_createClass(RuntimeCoreCtx, [{\n    key: \"loadConfigurations\",\n    value: function loadConfigurations() {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        console.log(_this.storageManager);\n\n        _this.storageManager.get('rethink:activePolicy').then(function (value) {\n          _this.activeUserPolicy = value;\n          return _this.storageManager.get('rethink:groups');\n        }).then(function (groupInfo) {\n          var groups = groupInfo;\n          _this.groups = groups === undefined ? {} : groups;\n          return _this.storageManager.get('rethink:spPolicies');\n        }).then(function (policiesInfo) {\n          var spPolicies = policiesInfo;\n          _this.serviceProviderPolicy = spPolicies === undefined ? {} : spPolicies;\n\n          _this._loadUserPolicies().then(function () {\n            resolve();\n          });\n        });\n      });\n    }\n  }, {\n    key: \"getPolicies\",\n    value: function getPolicies(message, isIncomingMessage) {\n      var policies = {};\n\n      if (this.activeUserPolicy !== undefined) {\n        policies.userPolicy = this.userPolicies[this.activeUserPolicy];\n      }\n\n      policies.serviceProviderPolicy = this.getServiceProviderPolicy(message, isIncomingMessage);\n      return policies;\n    }\n  }, {\n    key: \"_isValidUpdate\",\n    value: function _isValidUpdate(message) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        if (message.from.split('://').length > 1) {\n          _this.idModule._getHypertyFromDataObject(message.from).then(function (hypertyURL) {\n            if (hypertyURL === message.body.source) {\n              resolve(message);\n            } else {\n              reject('The source of the message is not valid.');\n            }\n          }, function (error) {\n            reject(error);\n          });\n        } else {\n          resolve(message);\n        }\n      });\n    }\n  }, {\n    key: \"getMyEmails\",\n    value: function getMyEmails() {\n      var identities = this.idModule.getIdentities();\n      var emails = [];\n\n      for (var i in identities) {\n        emails.push(getUserEmailFromURL(identities[i].identity));\n      }\n\n      return emails;\n    }\n  }, {\n    key: \"getMyHyperties\",\n    value: function getMyHyperties() {\n      var hyperties = this.runtimeRegistry.hypertiesList;\n      var hypertiesNames = [];\n\n      for (var i in hyperties) {\n        var hypertyName = hyperties[i].objectName;\n\n        if (hypertiesNames.indexOf(hypertyName) === -1) {\n          hypertiesNames.push(hypertyName);\n        }\n      }\n\n      return hypertiesNames;\n    }\n  }, {\n    key: \"getServiceProviderPolicy\",\n    value: function getServiceProviderPolicy(message, isIncoming) {\n      var policy;\n\n      if (isIncoming) {\n        var toHyperty = this.runtimeRegistry.getHypertyName(message.to);\n        policy = this.serviceProviderPolicy[toHyperty];\n      } else {\n        var fromHyperty = this.runtimeRegistry.getHypertyName(message.from);\n        policy = this.serviceProviderPolicy[fromHyperty];\n      }\n\n      return policy;\n    }\n  }, {\n    key: \"getURL\",\n    value: function getURL(url) {\n      var splitURL = url.split('/');\n      return splitURL[0] + '//' + splitURL[2] + '/' + splitURL[3];\n    }\n    /**\n    * Creates a group with the given name.\n    * @param  {String}  groupName\n    */\n\n  }, {\n    key: \"_loadUserPolicies\",\n    value: function _loadUserPolicies() {\n      var _this3 = this;\n\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        _this.storageManager.get('rethink:userPolicies').then(function (value) {\n          var policies = value;\n\n          if (policies !== undefined) {\n            for (var i in policies) {\n              _this3.pep.addPolicy('USER', i, policies[i]);\n            }\n          }\n\n          resolve();\n        });\n      });\n    }\n  }, {\n    key: \"_getLastComponentOfURL\",\n    value: function _getLastComponentOfURL(url) {\n      var split = url.split('/');\n      return split[split.length - 1];\n    }\n  }, {\n    key: \"_getPoliciesJSON\",\n    value: function _getPoliciesJSON(policies) {\n      for (var i in policies) {\n        var combiningAlgorithm = policies[i].combiningAlgorithm;\n\n        if (combiningAlgorithm instanceof combiningAlgorithms_BlockOverrides) {\n          policies[i].combiningAlgorithm = 'blockOverrides';\n        } else {\n          if (combiningAlgorithm instanceof combiningAlgorithms_AllowOverrides) {\n            policies[i].combiningAlgorithm = 'allowOverrides';\n          } else {\n            if (combiningAlgorithm instanceof combiningAlgorithms_FirstApplicable) {\n              policies[i].combiningAlgorithm = 'firstApplicable';\n            } else {\n              policies[i].combiningAlgorithm = undefined;\n            }\n          }\n        }\n      }\n\n      return policies;\n    }\n  }, {\n    key: \"saveActivePolicy\",\n    value: function saveActivePolicy() {\n      var _this4 = this;\n\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        _this.storageManager.set('rethink:activePolicy', 0, _this4.activeUserPolicy).then(function () {\n          resolve();\n        });\n      });\n    }\n  }, {\n    key: \"saveGroups\",\n    value: function saveGroups() {\n      var _this5 = this;\n\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        _this.storageManager.set('rethink:groups', 0, _this5.groups).then(function () {\n          resolve();\n        });\n      });\n    }\n  }, {\n    key: \"savePolicies\",\n    value: function savePolicies(source, policy, key) {\n      var policiesJson;\n\n      switch (source) {\n        case 'USER':\n          policiesJson = JSON.stringify(this.userPolicies);\n          policiesJson = this._getPoliciesJSON(JSON.parse(policiesJson));\n          this.storageManager.set('rethink:userPolicies', 0, policiesJson);\n          break;\n\n        case 'SERVICE_PROVIDER':\n          if (policy !== undefined & key !== undefined) {\n            this.serviceProviderPolicy[key] = policy;\n          }\n\n          policiesJson = JSON.stringify(this.serviceProviderPolicy);\n          policiesJson = this._getPoliciesJSON(JSON.parse(policiesJson));\n          this.storageManager.set('rethink:spPolicies', 0, policiesJson);\n          break;\n\n        default:\n          throw Error('Unknown policy source: ' + source);\n      }\n    }\n  }, {\n    key: \"getGroupsNames\",\n    value: function getGroupsNames() {\n      var myGroups = this.groups;\n      var groupsNames = [];\n\n      if (myGroups !== undefined) {\n        for (var groupName in myGroups) {\n          groupsNames.push(groupName);\n        }\n      }\n\n      return groupsNames;\n    }\n  }, {\n    key: \"getGroup\",\n    value: function getGroup(groupName, destination) {\n      var members = [];\n\n      if (groupName === 'preauthorised') {\n        var dataObjectURL = destination.split('/');\n        dataObjectURL.pop();\n        dataObjectURL = dataObjectURL[0] + '//' + dataObjectURL[2];\n        members = this.runtimeRegistry.getPreAuthSubscribers(dataObjectURL);\n      } else {\n        if (this.groups[groupName] !== undefined) {\n          members = this.groups[groupName];\n        }\n      }\n\n      return members;\n    }\n    /**\n    * Creates a group with the given name.\n    * @param  {String}  groupName\n    */\n\n  }, {\n    key: \"createGroup\",\n    value: function createGroup(groupName) {\n      this.groups[groupName] = [];\n      this.saveGroups();\n    }\n  }, {\n    key: \"deleteGroup\",\n    value: function deleteGroup(groupName) {\n      delete this.groups[groupName];\n      this.saveGroups();\n    }\n    /**\n    * Adds the given user email to the group with the given name.\n    * @param  {String}  userEmail\n    * @param  {String}  groupName\n    */\n\n  }, {\n    key: \"addToGroup\",\n    value: function addToGroup(groupName, userEmail) {\n      var myGroups = this.groups;\n\n      if (myGroups[groupName] !== undefined) {\n        if (myGroups[groupName].indexOf(userEmail) === -1) {\n          myGroups[groupName].push(userEmail);\n          this.saveGroups();\n        }\n      } else {\n        throw Error('Group \"' + groupName + '\" does not exist!');\n      }\n    }\n  }, {\n    key: \"removeFromGroup\",\n    value: function removeFromGroup(groupName, userEmail) {\n      var group = this.groups[groupName];\n      group.splice(group.indexOf(userEmail), 1);\n      this.saveGroups();\n    }\n  }, {\n    key: \"pepURL\",\n    get: function get() {\n      var _this = this;\n\n      return _this._pepURL;\n    }\n  }, {\n    key: \"guiURL\",\n    get: function get() {\n      var _this = this;\n\n      return _this._guiURL;\n    }\n  }, {\n    key: \"runtimeURL\",\n    get: function get() {\n      var _this = this;\n\n      return _this._runtimeURL;\n    }\n    /**\n    * return the messageBus in this Registry\n    * @param {MessageBus}           messageBus\n    */\n\n  }, {\n    key: \"messageBus\",\n    get: function get() {\n      var _this = this;\n\n      return _this._messageBus;\n    }\n    /**\n    * Set the messageBus in this Registry\n    * @param {MessageBus}           messageBus\n    */\n    ,\n    set: function set(messageBus) {\n      var _this = this;\n\n      _this._messageBus = messageBus;\n    }\n  }, {\n    key: \"subscription\",\n    get: function get() {\n      return this._subscription;\n    },\n    set: function set(params) {\n      this._subscription = params.message.body.subscriber;\n    }\n  }]);\n\n  return RuntimeCoreCtx;\n}(policy_ReThinkCtx);\n\n/* harmony default export */ var context_RuntimeCoreCtx = (RuntimeCoreCtx_RuntimeCoreCtx);\n// EXTERNAL MODULE: ./node_modules/tv4/tv4.js\nvar tv4 = __webpack_require__(90);\nvar tv4_default = /*#__PURE__*/__webpack_require__.n(tv4);\n\n// CONCATENATED MODULE: ./src/runtime-catalogue/RethinkObject.js\nfunction RethinkObject_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction RethinkObject_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction RethinkObject_createClass(Constructor, protoProps, staticProps) { if (protoProps) RethinkObject_defineProperties(Constructor.prototype, protoProps); if (staticProps) RethinkObject_defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * Copyright 2016 PT Inovação e Sistemas SA\n * Copyright 2016 INESC-ID\n * Copyright 2016 QUOBIS NETWORKS SL\n * Copyright 2016 FRAUNHOFER-GESELLSCHAFT ZUR FOERDERUNG DER ANGEWANDTEN FORSCHUNG E.V\n * Copyright 2016 ORANGE SA\n * Copyright 2016 Deutsche Telekom AG\n * Copyright 2016 Apizee\n * Copyright 2016 TECHNISCHE UNIVERSITAT BERLIN\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n **/\n\nvar RethinkObject_RethinkObject =\n/*#__PURE__*/\nfunction () {\n  function RethinkObject() {\n    RethinkObject_classCallCheck(this, RethinkObject);\n  }\n\n  RethinkObject_createClass(RethinkObject, [{\n    key: \"validate\",\n\n    /**\n     * Validates this RethinkObject against the provided schema.\n     *\n     * LIMITATIONS: The provided schema cannot contain references to other schemas, since they can't be resolved.\n     * @param schema - schema to validate against\n     * @returns {boolean} true if valid, false otherwise\n     */\n    value: function validate(schema) {\n      // add schema itself so local references work\n      tv4_default.a.addSchema(schema.id, schema); // JSON stringify -> parse needed to have proper validation\n\n      var result = tv4_default.a.validateMultiple(JSON.parse(JSON.stringify(this)), schema); // delete error stacks to improve logging\n\n      result.errors.forEach(function (error) {\n        delete error.stack;\n      }); // print more details about validation if it fails or schema contains $refs\n\n      if (!result.valid || result.missing.length > 0) {\n        console.warn(\"Object validation \" + (result.valid ? \"succeeded, but schema contained references:\" : \"failed:\"), JSON.stringify(result, null, 2));\n        console.log(\"Object:\", JSON.stringify(this, null, 2));\n      }\n\n      return result.valid;\n    }\n  }]);\n\n  return RethinkObject;\n}();\n/* harmony default export */ var runtime_catalogue_RethinkObject = (RethinkObject_RethinkObject);\n// CONCATENATED MODULE: ./src/runtime-catalogue/CatalogueDataObject.js\nfunction CatalogueDataObject_typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { CatalogueDataObject_typeof = function _typeof(obj) { return typeof obj; }; } else { CatalogueDataObject_typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return CatalogueDataObject_typeof(obj); }\n\nfunction CatalogueDataObject_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction CatalogueDataObject_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction CatalogueDataObject_createClass(Constructor, protoProps, staticProps) { if (protoProps) CatalogueDataObject_defineProperties(Constructor.prototype, protoProps); if (staticProps) CatalogueDataObject_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction CatalogueDataObject_possibleConstructorReturn(self, call) { if (call && (CatalogueDataObject_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return CatalogueDataObject_assertThisInitialized(self); }\n\nfunction CatalogueDataObject_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction CatalogueDataObject_getPrototypeOf(o) { CatalogueDataObject_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return CatalogueDataObject_getPrototypeOf(o); }\n\nfunction CatalogueDataObject_inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) CatalogueDataObject_setPrototypeOf(subClass, superClass); }\n\nfunction CatalogueDataObject_setPrototypeOf(o, p) { CatalogueDataObject_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return CatalogueDataObject_setPrototypeOf(o, p); }\n\n/**\n * Copyright 2016 PT Inovação e Sistemas SA\n * Copyright 2016 INESC-ID\n * Copyright 2016 QUOBIS NETWORKS SL\n * Copyright 2016 FRAUNHOFER-GESELLSCHAFT ZUR FOERDERUNG DER ANGEWANDTEN FORSCHUNG E.V\n * Copyright 2016 ORANGE SA\n * Copyright 2016 Deutsche Telekom AG\n * Copyright 2016 Apizee\n * Copyright 2016 TECHNISCHE UNIVERSITAT BERLIN\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n **/\n\n/**\n * @author alice.cheambe[at]fokus.fraunhofer.de\n * The CatalogueDataObject class is the representation of the reTHINK Catalogue Data Model\n */\n\nvar CatalogueDataObject =\n/*#__PURE__*/\nfunction (_RethinkObject) {\n  CatalogueDataObject_inherits(CatalogueDataObject, _RethinkObject);\n\n  /**\n   * Creates the Catalogue Data Object\n   * @param guid - Global Unique identifier of the Catalogue Object (e.g. Hyperty descriptor, ProtocolStub descriptor,\n   * etc) enabling the same object to be stored and discovered in different Catalogues. That means, guid corresponds to\n   * [resource-type-id] per BNF of Resource Path. Couldn't we have problems with too long URL paths?\n   * @param type - indicates the type of Catalogue Data Object e.g. Hyperty, ProtocolStub, etc\n   * @param {string} version - Indicates the version of Catalogue Data\n   * @param objectName - human-understandable name of the catalogue object e.g. \"My Awesome Hyperty\"\n   * @param description - description of the source package\n   * @param language - the programming language used in the SourcePackage.SourceCode\n   * @param sourcePackageURL - A string containing the URL from where the source code package of the corresponding\n   * catalogue object, e.g. deployable packages containing executable code for Hyperties or ProtoStubs, can be downloaded\n   */\n  function CatalogueDataObject(guid, type, version, objectName, description, language, sourcePackageURL) {\n    var _this;\n\n    CatalogueDataObject_classCallCheck(this, CatalogueDataObject);\n\n    _this = CatalogueDataObject_possibleConstructorReturn(this, CatalogueDataObject_getPrototypeOf(CatalogueDataObject).call(this));\n    _this._guid = guid;\n    _this._type = type;\n    _this._version = version;\n    _this._objectName = objectName;\n    _this._description = description;\n    _this._language = language;\n    _this._sourcePackageURL = sourcePackageURL;\n    _this._signature = null;\n    _this._sourcePackage = null;\n    return _this;\n  } // Getters\n\n\n  CatalogueDataObject_createClass(CatalogueDataObject, [{\n    key: \"guid\",\n    get: function get() {\n      return this._guid;\n    },\n    set: function set(guid) {\n      if (guid) this._guid = guid;\n    }\n  }, {\n    key: \"type\",\n    get: function get() {\n      return this._type;\n    },\n    set: function set(type) {\n      if (type) this._type = type;\n    }\n  }, {\n    key: \"version\",\n    get: function get() {\n      return this._version;\n    },\n    set: function set(version) {\n      if (version) {\n        this._version = version;\n      }\n    }\n  }, {\n    key: \"objectName\",\n    get: function get() {\n      return this._objectName;\n    },\n    set: function set(objectName) {\n      if (objectName) this._objectName = objectName;\n    }\n  }, {\n    key: \"description\",\n    get: function get() {\n      return this._description;\n    },\n    set: function set(description) {\n      if (description) this._description = description;\n    }\n  }, {\n    key: \"language\",\n    get: function get() {\n      return this._language;\n    },\n    set: function set(language) {\n      if (language) this._language = language;\n    }\n  }, {\n    key: \"signature\",\n    get: function get() {\n      return this._signature;\n    },\n    // Setters\n\n    /**\n     * Set the signature to enables integrity and authenticity verification\n     * @param signature\n     */\n    set: function set(signature) {\n      if (signature) this._signature = signature;\n    }\n  }, {\n    key: \"sourcePackage\",\n    get: function get() {\n      return this._sourcePackage;\n    },\n    set: function set(sourcePackage) {\n      if (sourcePackage) this._sourcePackage = sourcePackage;\n    }\n  }, {\n    key: \"sourcePackageURL\",\n    get: function get() {\n      return this._sourcePackageURL;\n    },\n    set: function set(sourcePackageURL) {\n      if (sourcePackageURL) this._sourcePackageURL = sourcePackageURL;\n    }\n  }]);\n\n  return CatalogueDataObject;\n}(runtime_catalogue_RethinkObject); //Alice: removed POLICY_ENFORCER: 'policy_enforcer', DATA_SCHEMA: 'data_schema' from the list\n//wrt: https://github.com/reTHINK-project/dev-service-framework/blob/develop/docs/datamodel/core/hyperty-catalogue/readme.md#data-object-schema\n\n\nvar CatalogueObjectType = {\n  HYPERTY: 'hyperty',\n  PROTOSTUB: 'protostub',\n  HYPERTY_RUNTIME: 'hyperty_runtime',\n  HYPERTY_INTERCEPTOR: 'hyperty_inspector',\n  HYPERTY_DATA_OBJECT: 'hyperty_data_object'\n};\nvar DataObjectSourceLanguage = {\n  JAVASCRIPT_ECMA6: 'javascript_ecma6',\n  JAVASCRIPT_ECMA5: 'javascript_ecma5',\n  JSON_SCHEMA_V4: 'json_schema_v4',\n  PYTHON: 'python',\n  TYPESCRIPT: 'typescript'\n};\n/* harmony default export */ var runtime_catalogue_CatalogueDataObject = (CatalogueDataObject);\n// CONCATENATED MODULE: ./src/runtime-catalogue/SourcePackage.js\nfunction SourcePackage_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction SourcePackage_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction SourcePackage_createClass(Constructor, protoProps, staticProps) { if (protoProps) SourcePackage_defineProperties(Constructor.prototype, protoProps); if (staticProps) SourcePackage_defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n* Copyright 2016 PT Inovação e Sistemas SA\n* Copyright 2016 INESC-ID\n* Copyright 2016 QUOBIS NETWORKS SL\n* Copyright 2016 FRAUNHOFER-GESELLSCHAFT ZUR FOERDERUNG DER ANGEWANDTEN FORSCHUNG E.V\n* Copyright 2016 ORANGE SA\n* Copyright 2016 Deutsche Telekom AG\n* Copyright 2016 Apizee\n* Copyright 2016 TECHNISCHE UNIVERSITAT BERLIN\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n**/\n\n/**\n * Created by amo on 14/11/2015.\n */\nvar SourcePackage =\n/*#__PURE__*/\nfunction () {\n  function SourcePackage(sourceCodeClassname, sourceCode) {\n    SourcePackage_classCallCheck(this, SourcePackage);\n\n    this._sourceCode = sourceCode;\n    this._sourceCodeClassname = sourceCodeClassname;\n    this._encoding = null;\n    this._signature = null;\n  }\n\n  SourcePackage_createClass(SourcePackage, [{\n    key: \"sourceCode\",\n    get: function get() {\n      return this._sourceCode;\n    },\n    set: function set(sourceCode) {\n      if (sourceCode) this._sourceCode = sourceCode;\n    }\n  }, {\n    key: \"sourceCodeClassname\",\n    get: function get() {\n      return this._sourceCodeClassname;\n    },\n    set: function set(sourceCodeClassname) {\n      if (sourceCodeClassname) this._sourceCodeClassname = sourceCodeClassname;\n    }\n  }, {\n    key: \"encoding\",\n    get: function get() {\n      return this._encoding;\n    },\n    set: function set(encoding) {\n      if (encoding) this._encoding = encoding;\n    }\n  }, {\n    key: \"signature\",\n    get: function get() {\n      return this._signature;\n    },\n    set: function set(sign) {\n      if (sign) this._signature = sign;\n    }\n  }]);\n\n  return SourcePackage;\n}();\n\n/* harmony default export */ var runtime_catalogue_SourcePackage = (SourcePackage);\n// CONCATENATED MODULE: ./src/runtime-catalogue/HypertyDescriptor.js\nfunction HypertyDescriptor_typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { HypertyDescriptor_typeof = function _typeof(obj) { return typeof obj; }; } else { HypertyDescriptor_typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return HypertyDescriptor_typeof(obj); }\n\nfunction HypertyDescriptor_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction HypertyDescriptor_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction HypertyDescriptor_createClass(Constructor, protoProps, staticProps) { if (protoProps) HypertyDescriptor_defineProperties(Constructor.prototype, protoProps); if (staticProps) HypertyDescriptor_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction HypertyDescriptor_possibleConstructorReturn(self, call) { if (call && (HypertyDescriptor_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return HypertyDescriptor_assertThisInitialized(self); }\n\nfunction HypertyDescriptor_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction HypertyDescriptor_getPrototypeOf(o) { HypertyDescriptor_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return HypertyDescriptor_getPrototypeOf(o); }\n\nfunction HypertyDescriptor_inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) HypertyDescriptor_setPrototypeOf(subClass, superClass); }\n\nfunction HypertyDescriptor_setPrototypeOf(o, p) { HypertyDescriptor_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return HypertyDescriptor_setPrototypeOf(o, p); }\n\n/**\n* Copyright 2016 PT Inovação e Sistemas SA\n* Copyright 2016 INESC-ID\n* Copyright 2016 QUOBIS NETWORKS SL\n* Copyright 2016 FRAUNHOFER-GESELLSCHAFT ZUR FOERDERUNG DER ANGEWANDTEN FORSCHUNG E.V\n* Copyright 2016 ORANGE SA\n* Copyright 2016 Deutsche Telekom AG\n* Copyright 2016 Apizee\n* Copyright 2016 TECHNISCHE UNIVERSITAT BERLIN\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n**/\n\n/**\n * Created by amo on 14/11/2015.\n */\n\n\nvar HypertyDescriptor =\n/*#__PURE__*/\nfunction (_CatalogueDataObject) {\n  HypertyDescriptor_inherits(HypertyDescriptor, _CatalogueDataObject);\n\n  /**\n   *\n   * @param {string} guid - Catalogue Global Unique identifier of the Catalogue Object enabling the same object to be\n   * stored and discovered in different Catalogues. Guid corresponds to <resource-type-id> per BNF of Resource Path.\n   * @param {CatalogueObjectType} catalogueType - \tIndicates the type of Catalogue Data Object\n   * @param {string} version\n   * @param {string} objectName\n   * @param {string} description\n   * @param {string} language\n   * @param {string} sourcePackageURL\n   * @param {HypertyResourceType[]} hypertyType A tag that identifies what type of hyperty is described in the object.\n   * @param {URL.HypertyCatalogueURLList} dataObjectUrls - It defines the Data Object Schemas supported by the Hyperty\n   * through a list of Catalogue URLs from where these schemas can be reached\n   */\n  function HypertyDescriptor(guid, catalogueType, version, objectName, description, language, sourcePackageURL, hypertyType, dataObjectUrls) {\n    var _this;\n\n    HypertyDescriptor_classCallCheck(this, HypertyDescriptor);\n\n    _this = HypertyDescriptor_possibleConstructorReturn(this, HypertyDescriptor_getPrototypeOf(HypertyDescriptor).call(this, guid, catalogueType, version, objectName, description, language, sourcePackageURL));\n    _this._configuration = {};\n    _this._constraints = {};\n    _this._policies = {};\n    _this._messageSchema = null;\n    _this._hypertyType = hypertyType;\n    _this._dataObjects = dataObjectUrls;\n    return _this;\n  }\n\n  HypertyDescriptor_createClass(HypertyDescriptor, [{\n    key: \"hypertyType\",\n    get: function get() {\n      return this._hypertyType;\n    },\n    set: function set(hType) {\n      if (hType) this._hypertyType = hType;\n    }\n  }, {\n    key: \"dataObjects\",\n    get: function get() {\n      return this._dataObjects;\n    },\n    set: function set(dataObjects) {\n      if (dataObjects) this._dataObjects = dataObjects;\n    }\n  }, {\n    key: \"configuration\",\n    get: function get() {\n      return this._configuration;\n    },\n    set: function set(configuration) {\n      if (configuration) this._configuration = configuration;\n    }\n  }, {\n    key: \"constraints\",\n    get: function get() {\n      return this._constraints;\n    },\n    set: function set(constraints) {\n      if (constraints) this._constraints = constraints;\n    }\n  }, {\n    key: \"messageSchema\",\n    get: function get() {\n      return this._messageSchema;\n    },\n    set: function set(messageSchema) {\n      if (messageSchema) this._messageSchema = messageSchema;\n    }\n  }, {\n    key: \"policies\",\n    get: function get() {\n      return this._policies;\n    },\n    set: function set(policies) {\n      if (policies) this._policies = policies;\n    }\n  }]);\n\n  return HypertyDescriptor;\n}(runtime_catalogue_CatalogueDataObject);\n\nvar RuntimeHypertyCapabilityType = {};\nvar HypertyType = {\n  COMMUNICATOR: 'communicator',\n  IDENTITY: 'identity',\n  CONTEXT: 'context'\n};\nvar HypertyResourceType = {\n  chat: 'CHAT',\n  audio: 'Audio',\n  video: 'Video',\n  av: 'AV',\n  screen: 'SCREEN',\n  file: 'FILe',\n  midi: 'MIDI'\n};\n/* harmony default export */ var runtime_catalogue_HypertyDescriptor = (HypertyDescriptor);\n// CONCATENATED MODULE: ./src/runtime-catalogue/ProtocolStubDescriptor.js\nfunction ProtocolStubDescriptor_typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { ProtocolStubDescriptor_typeof = function _typeof(obj) { return typeof obj; }; } else { ProtocolStubDescriptor_typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return ProtocolStubDescriptor_typeof(obj); }\n\nfunction ProtocolStubDescriptor_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction ProtocolStubDescriptor_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction ProtocolStubDescriptor_createClass(Constructor, protoProps, staticProps) { if (protoProps) ProtocolStubDescriptor_defineProperties(Constructor.prototype, protoProps); if (staticProps) ProtocolStubDescriptor_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction ProtocolStubDescriptor_possibleConstructorReturn(self, call) { if (call && (ProtocolStubDescriptor_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return ProtocolStubDescriptor_assertThisInitialized(self); }\n\nfunction ProtocolStubDescriptor_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction ProtocolStubDescriptor_getPrototypeOf(o) { ProtocolStubDescriptor_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return ProtocolStubDescriptor_getPrototypeOf(o); }\n\nfunction ProtocolStubDescriptor_inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) ProtocolStubDescriptor_setPrototypeOf(subClass, superClass); }\n\nfunction ProtocolStubDescriptor_setPrototypeOf(o, p) { ProtocolStubDescriptor_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return ProtocolStubDescriptor_setPrototypeOf(o, p); }\n\n/**\n * Copyright 2016 PT Inovação e Sistemas SA\n * Copyright 2016 INESC-ID\n * Copyright 2016 QUOBIS NETWORKS SL\n * Copyright 2016 FRAUNHOFER-GESELLSCHAFT ZUR FOERDERUNG DER ANGEWANDTEN FORSCHUNG E.V\n * Copyright 2016 ORANGE SA\n * Copyright 2016 Deutsche Telekom AG\n * Copyright 2016 Apizee\n * Copyright 2016 TECHNISCHE UNIVERSITAT BERLIN\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n **/\n\n/**\n * Created by amo on 14/11/2015.\n */\n\n\nvar ProtocolStubDescriptor =\n/*#__PURE__*/\nfunction (_CatalogueDataObject) {\n  ProtocolStubDescriptor_inherits(ProtocolStubDescriptor, _CatalogueDataObject);\n\n  function ProtocolStubDescriptor(guid, type, version, objectName, description, language, sourcePackageURL, messageSchemas, configuration, constraints, hypertyType, dataObjects, interworking, idpProxy, mutualAuthentication) {\n    var _this;\n\n    ProtocolStubDescriptor_classCallCheck(this, ProtocolStubDescriptor);\n\n    _this = ProtocolStubDescriptor_possibleConstructorReturn(this, ProtocolStubDescriptor_getPrototypeOf(ProtocolStubDescriptor).call(this, guid, type, version, objectName, description, language, sourcePackageURL));\n    _this._messageSchemas = messageSchemas;\n    if (configuration) _this._configuration = configuration;else _this._configuration = {};\n    if (constraints) _this._constraints = constraints;else _this._constraints = {};\n    _this._hypertyType = hypertyType;\n    if (dataObjects) _this._dataObjects = dataObjects;else _this._dataObjects = [];\n    _this._interworking = interworking;\n    _this._idpProxy = idpProxy;\n    _this._mutualAuthentication = mutualAuthentication;\n    return _this;\n  }\n\n  ProtocolStubDescriptor_createClass(ProtocolStubDescriptor, [{\n    key: \"messageSchemas\",\n    get: function get() {\n      return this._messageSchemas;\n    },\n    set: function set(messageSchemas) {\n      if (messageSchemas) this._messageSchemas = messageSchemas;\n    }\n  }, {\n    key: \"constraints\",\n    get: function get() {\n      return this._constraints;\n    },\n    set: function set(constraints) {\n      if (constraints) this._constraints = constraints;\n    }\n  }, {\n    key: \"configuration\",\n    get: function get() {\n      return this._configuration;\n    },\n    set: function set(configuration) {\n      if (configuration) this._configuration = configuration;\n    }\n  }, {\n    key: \"hypertyType\",\n    get: function get() {\n      return this._hypertyType;\n    },\n    set: function set(value) {\n      this._hypertyType = value;\n    }\n  }, {\n    key: \"dataObjects\",\n    get: function get() {\n      return this._dataObjects;\n    },\n    set: function set(value) {\n      this._dataObjects = value;\n    }\n  }, {\n    key: \"interworking\",\n    get: function get() {\n      return this._interworking;\n    },\n    set: function set(value) {\n      this._interworking = value;\n    }\n  }, {\n    key: \"idpProxy\",\n    get: function get() {\n      return this._idpProxy;\n    },\n    set: function set(value) {\n      this._idpProxy = value;\n    }\n  }, {\n    key: \"mutualAuthentication\",\n    get: function get() {\n      return this._mutualAuthentication;\n    },\n    set: function set(value) {\n      this._mutualAuthentication = value;\n    }\n  }]);\n\n  return ProtocolStubDescriptor;\n}(runtime_catalogue_CatalogueDataObject);\n\n/* harmony default export */ var runtime_catalogue_ProtocolStubDescriptor = (ProtocolStubDescriptor);\n// CONCATENATED MODULE: ./src/runtime-catalogue/HypertyRuntimeDescriptor.js\nfunction HypertyRuntimeDescriptor_typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { HypertyRuntimeDescriptor_typeof = function _typeof(obj) { return typeof obj; }; } else { HypertyRuntimeDescriptor_typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return HypertyRuntimeDescriptor_typeof(obj); }\n\nfunction HypertyRuntimeDescriptor_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction HypertyRuntimeDescriptor_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction HypertyRuntimeDescriptor_createClass(Constructor, protoProps, staticProps) { if (protoProps) HypertyRuntimeDescriptor_defineProperties(Constructor.prototype, protoProps); if (staticProps) HypertyRuntimeDescriptor_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction HypertyRuntimeDescriptor_possibleConstructorReturn(self, call) { if (call && (HypertyRuntimeDescriptor_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return HypertyRuntimeDescriptor_assertThisInitialized(self); }\n\nfunction HypertyRuntimeDescriptor_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction HypertyRuntimeDescriptor_getPrototypeOf(o) { HypertyRuntimeDescriptor_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return HypertyRuntimeDescriptor_getPrototypeOf(o); }\n\nfunction HypertyRuntimeDescriptor_inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) HypertyRuntimeDescriptor_setPrototypeOf(subClass, superClass); }\n\nfunction HypertyRuntimeDescriptor_setPrototypeOf(o, p) { HypertyRuntimeDescriptor_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return HypertyRuntimeDescriptor_setPrototypeOf(o, p); }\n\n/**\n * Copyright 2016 PT Inovação e Sistemas SA\n * Copyright 2016 INESC-ID\n * Copyright 2016 QUOBIS NETWORKS SL\n * Copyright 2016 FRAUNHOFER-GESELLSCHAFT ZUR FOERDERUNG DER ANGEWANDTEN FORSCHUNG E.V\n * Copyright 2016 ORANGE SA\n * Copyright 2016 Deutsche Telekom AG\n * Copyright 2016 Apizee\n * Copyright 2016 TECHNISCHE UNIVERSITAT BERLIN\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n **/\n\n/**\n * Created by amo on 14/11/2015.\n */\n\n\nvar HypertyRuntimeDescriptor =\n/*#__PURE__*/\nfunction (_CatalogueDataObject) {\n  HypertyRuntimeDescriptor_inherits(HypertyRuntimeDescriptor, _CatalogueDataObject);\n\n  function HypertyRuntimeDescriptor(guid, catalogueType, version, objectName, description, language, sourcePackageURL, runtimeType, hypertyCapabilities, protocolCapabilities, p2pHandlerStub, p2pRequesterStub) {\n    var _this;\n\n    HypertyRuntimeDescriptor_classCallCheck(this, HypertyRuntimeDescriptor);\n\n    _this = HypertyRuntimeDescriptor_possibleConstructorReturn(this, HypertyRuntimeDescriptor_getPrototypeOf(HypertyRuntimeDescriptor).call(this, guid, catalogueType, version, objectName, description, language, sourcePackageURL));\n    _this._runtimeType = runtimeType;\n    if (hypertyCapabilities) _this._hypertyCapabilities = hypertyCapabilities;else _this._hypertyCapabilities = new RuntimeHypertyCapability(true, false, false, false, false);\n    if (protocolCapabilities) _this._protocolCapabilities = protocolCapabilities;else _this._protocolCapabilities = new RuntimeProtocolCapability(true, false, true, false, false, false);\n    _this._p2pHandlerStub = p2pHandlerStub;\n    _this._p2pRequesterStub = p2pRequesterStub;\n    return _this;\n  }\n\n  HypertyRuntimeDescriptor_createClass(HypertyRuntimeDescriptor, [{\n    key: \"runtimeType\",\n    get: function get() {\n      return this._runtimeType;\n    },\n    set: function set(runtimeType) {\n      if (runtimeType) this._runtimeType = runtimeType;\n    }\n  }, {\n    key: \"hypertyCapabilities\",\n    get: function get() {\n      return this._hypertyCapabilities;\n    },\n    set: function set(hypertyCapabilities) {\n      if (hypertyCapabilities) this._hypertyCapabilities = hypertyCapabilities;\n    }\n  }, {\n    key: \"protocolCapabilities\",\n    get: function get() {\n      return this._hypertyCapabilities;\n    },\n    set: function set(protocolCapabilities) {\n      if (protocolCapabilities) this._protocolCapabilities = protocolCapabilities;\n    }\n  }, {\n    key: \"p2pHandlerStub\",\n    get: function get() {\n      return this._p2pHandlerStub;\n    },\n    set: function set(value) {\n      this._p2pHandlerStub = value;\n    }\n  }, {\n    key: \"p2pRequesterStub\",\n    get: function get() {\n      return this._p2pRequesterStub;\n    },\n    set: function set(value) {\n      this._p2pRequesterStub = value;\n    }\n  }]);\n\n  return HypertyRuntimeDescriptor;\n}(runtime_catalogue_CatalogueDataObject);\n/**\n * A class representation of the capability set of the Runtime Hyperty\n */\n\n\nvar RuntimeHypertyCapability =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an object of the Runtime Hyperty capability set\n   * @param {boolean} isWebRTCSupported\n   * @param {boolean} isMicSupported\n   * @param {boolean} isCameraSupported\n   * @param {boolean} isSensorSupported\n   * @param {boolean} isORTCSupported\n   */\n  function RuntimeHypertyCapability(isWebRTCSupported, isMicSupported, isCameraSupported, isSensorSupported, isORTCSupported) {\n    HypertyRuntimeDescriptor_classCallCheck(this, RuntimeHypertyCapability);\n\n    this._isWebRTC = isWebRTCSupported;\n    this._isMic = isMicSupported;\n    this._isCamera = isCameraSupported;\n    this._isSensor = isSensorSupported;\n    this._isORTC = isORTCSupported;\n  }\n\n  HypertyRuntimeDescriptor_createClass(RuntimeHypertyCapability, [{\n    key: \"getCapabilitySet\",\n    value: function getCapabilitySet() {\n      return JSON.stringify(this);\n    }\n  }, {\n    key: \"isMic\",\n    get: function get() {\n      return this._isMic;\n    }\n  }, {\n    key: \"isCamera\",\n    get: function get() {\n      return this._isCamera;\n    }\n  }, {\n    key: \"isSensor\",\n    get: function get() {\n      return this._isSensor;\n    }\n  }, {\n    key: \"isWebRTC\",\n    get: function get() {\n      return this._isWebRTC;\n    }\n  }, {\n    key: \"isORTCS\",\n    get: function get() {\n      return this._isORTC;\n    }\n  }]);\n\n  return RuntimeHypertyCapability;\n}();\n/**\n * A class representation of the protocol capability set of the Runtime Hyperty\n */\n\nvar RuntimeProtocolCapability =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an object of the runtime protocol capability\n   * @param {boolean} isHttp\n   * @param {boolean} isHttps\n   * @param {boolean} isWS\n   * @param {boolean} isWSS\n   * @param {boolean} isCoap\n   * @param {boolean} isDataChannel\n   */\n  function RuntimeProtocolCapability(isHttp, isHttps, isWS, isWSS, isCoap, isDataChannel) {\n    HypertyRuntimeDescriptor_classCallCheck(this, RuntimeProtocolCapability);\n\n    this._isHttp = isHttp;\n    this._isHttps = isHttps;\n    this._isWS = isWS;\n    this._isWSS = isWSS;\n    this._isCoap = isCoap;\n    this._isDataChannel = isDataChannel;\n  }\n\n  HypertyRuntimeDescriptor_createClass(RuntimeProtocolCapability, [{\n    key: \"isHttp\",\n    value: function isHttp() {\n      return this._isHttp;\n    }\n  }, {\n    key: \"isHttps\",\n    value: function isHttps() {\n      return this._isHttps;\n    }\n  }, {\n    key: \"isWS\",\n    value: function isWS() {\n      return this._isWS;\n    }\n  }, {\n    key: \"isSensorSupported\",\n    value: function isSensorSupported() {\n      return this._isSensor;\n    }\n  }, {\n    key: \"isWSS\",\n    value: function isWSS() {\n      return this._isWSS;\n    }\n  }, {\n    key: \"isCoap\",\n    value: function isCoap() {\n      return this._isCoap;\n    }\n  }, {\n    key: \"isDataChannel\",\n    value: function isDataChannel() {\n      return this._isDataChannel;\n    }\n  }, {\n    key: \"getCapabilitySet\",\n    value: function getCapabilitySet() {\n      return JSON.stringify(this);\n    }\n  }]);\n\n  return RuntimeProtocolCapability;\n}();\nvar RuntimeType = {\n  BROWSER: 'browser',\n  STANDALONE: 'standalone',\n  SERVER: 'server',\n  GATEWAY: 'gateway'\n};\n/* harmony default export */ var runtime_catalogue_HypertyRuntimeDescriptor = (HypertyRuntimeDescriptor);\n// CONCATENATED MODULE: ./src/runtime-catalogue/HypertyInterceptorDescriptor.js\nfunction HypertyInterceptorDescriptor_typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { HypertyInterceptorDescriptor_typeof = function _typeof(obj) { return typeof obj; }; } else { HypertyInterceptorDescriptor_typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return HypertyInterceptorDescriptor_typeof(obj); }\n\nfunction HypertyInterceptorDescriptor_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction HypertyInterceptorDescriptor_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction HypertyInterceptorDescriptor_createClass(Constructor, protoProps, staticProps) { if (protoProps) HypertyInterceptorDescriptor_defineProperties(Constructor.prototype, protoProps); if (staticProps) HypertyInterceptorDescriptor_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction HypertyInterceptorDescriptor_possibleConstructorReturn(self, call) { if (call && (HypertyInterceptorDescriptor_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return HypertyInterceptorDescriptor_assertThisInitialized(self); }\n\nfunction HypertyInterceptorDescriptor_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction HypertyInterceptorDescriptor_getPrototypeOf(o) { HypertyInterceptorDescriptor_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return HypertyInterceptorDescriptor_getPrototypeOf(o); }\n\nfunction HypertyInterceptorDescriptor_inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) HypertyInterceptorDescriptor_setPrototypeOf(subClass, superClass); }\n\nfunction HypertyInterceptorDescriptor_setPrototypeOf(o, p) { HypertyInterceptorDescriptor_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return HypertyInterceptorDescriptor_setPrototypeOf(o, p); }\n\n/**\n* Copyright 2016 PT Inovação e Sistemas SA\n* Copyright 2016 INESC-ID\n* Copyright 2016 QUOBIS NETWORKS SL\n* Copyright 2016 FRAUNHOFER-GESELLSCHAFT ZUR FOERDERUNG DER ANGEWANDTEN FORSCHUNG E.V\n* Copyright 2016 ORANGE SA\n* Copyright 2016 Deutsche Telekom AG\n* Copyright 2016 Apizee\n* Copyright 2016 TECHNISCHE UNIVERSITAT BERLIN\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n**/\n\n/**\n * Created by pzu on 19.11.15.\n */\n\n\nvar PolicyEnforcerDescriptor =\n/*#__PURE__*/\nfunction (_CatalogueDataObject) {\n  HypertyInterceptorDescriptor_inherits(PolicyEnforcerDescriptor, _CatalogueDataObject);\n\n  function PolicyEnforcerDescriptor(guid, type, version, objectName, description, language, sourcePackageURL, configuration, policies) {\n    var _this;\n\n    HypertyInterceptorDescriptor_classCallCheck(this, PolicyEnforcerDescriptor);\n\n    _this = HypertyInterceptorDescriptor_possibleConstructorReturn(this, HypertyInterceptorDescriptor_getPrototypeOf(PolicyEnforcerDescriptor).call(this, guid, type, version, objectName, description, language, sourcePackageURL));\n    _this._configuration = configuration;\n    _this._policies = policies;\n    return _this;\n  }\n\n  HypertyInterceptorDescriptor_createClass(PolicyEnforcerDescriptor, [{\n    key: \"configuration\",\n    get: function get() {\n      return this._configuration;\n    },\n    set: function set(configuration) {\n      this._configuration = configuration;\n    }\n  }, {\n    key: \"policies\",\n    get: function get() {\n      return this._policies;\n    },\n    set: function set(policies) {\n      this._policies = policies;\n    }\n  }]);\n\n  return PolicyEnforcerDescriptor;\n}(runtime_catalogue_CatalogueDataObject);\n\n/* harmony default export */ var HypertyInterceptorDescriptor = (PolicyEnforcerDescriptor);\n// CONCATENATED MODULE: ./src/runtime-catalogue/DataObjectSchema.js\nfunction DataObjectSchema_typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { DataObjectSchema_typeof = function _typeof(obj) { return typeof obj; }; } else { DataObjectSchema_typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return DataObjectSchema_typeof(obj); }\n\nfunction DataObjectSchema_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction DataObjectSchema_possibleConstructorReturn(self, call) { if (call && (DataObjectSchema_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return DataObjectSchema_assertThisInitialized(self); }\n\nfunction DataObjectSchema_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction DataObjectSchema_getPrototypeOf(o) { DataObjectSchema_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return DataObjectSchema_getPrototypeOf(o); }\n\nfunction DataObjectSchema_inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) DataObjectSchema_setPrototypeOf(subClass, superClass); }\n\nfunction DataObjectSchema_setPrototypeOf(o, p) { DataObjectSchema_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return DataObjectSchema_setPrototypeOf(o, p); }\n\n/**\n* Copyright 2016 PT Inovação e Sistemas SA\n* Copyright 2016 INESC-ID\n* Copyright 2016 QUOBIS NETWORKS SL\n* Copyright 2016 FRAUNHOFER-GESELLSCHAFT ZUR FOERDERUNG DER ANGEWANDTEN FORSCHUNG E.V\n* Copyright 2016 ORANGE SA\n* Copyright 2016 Deutsche Telekom AG\n* Copyright 2016 Apizee\n* Copyright 2016 TECHNISCHE UNIVERSITAT BERLIN\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n**/\n\n/**\n * Created by pzu on 19.11.15.\n */\n\nvar DataObjectSchema =\n/*#__PURE__*/\nfunction (_CatalogueDataObject) {\n  DataObjectSchema_inherits(DataObjectSchema, _CatalogueDataObject);\n\n  function DataObjectSchema(guid, type, version, objectName, description, language, sourcePackageURL) {\n    DataObjectSchema_classCallCheck(this, DataObjectSchema);\n\n    return DataObjectSchema_possibleConstructorReturn(this, DataObjectSchema_getPrototypeOf(DataObjectSchema).call(this, guid, type, version, objectName, description, language, sourcePackageURL));\n  }\n\n  return DataObjectSchema;\n}(runtime_catalogue_CatalogueDataObject); //Children\n\nvar MessageDataObjectSchema =\n/*#__PURE__*/\nfunction (_DataObjectSchema) {\n  DataObjectSchema_inherits(MessageDataObjectSchema, _DataObjectSchema);\n\n  function MessageDataObjectSchema(guid, type, version, objectName, description, language, sourcePackageURL) {\n    DataObjectSchema_classCallCheck(this, MessageDataObjectSchema);\n\n    return DataObjectSchema_possibleConstructorReturn(this, DataObjectSchema_getPrototypeOf(MessageDataObjectSchema).call(this, guid, type, version, objectName, description, language, sourcePackageURL));\n  }\n\n  return MessageDataObjectSchema;\n}(DataObjectSchema);\nvar HypertyDataObjectSchema =\n/*#__PURE__*/\nfunction (_DataObjectSchema2) {\n  DataObjectSchema_inherits(HypertyDataObjectSchema, _DataObjectSchema2);\n\n  function HypertyDataObjectSchema(guid, type, version, objectName, description, language, sourcePackageURL, accessControlPolicy, dataUrlScheme) {\n    var _this;\n\n    DataObjectSchema_classCallCheck(this, HypertyDataObjectSchema);\n\n    _this = DataObjectSchema_possibleConstructorReturn(this, DataObjectSchema_getPrototypeOf(HypertyDataObjectSchema).call(this, guid, type, version, objectName, description, language, sourcePackageURL));\n    _this._accessControlPolicy = accessControlPolicy;\n    _this._scheme = dataUrlScheme;\n    return _this;\n  }\n\n  return HypertyDataObjectSchema;\n}(DataObjectSchema); //Children\n\nvar CommunicationDataObjectSchema =\n/*#__PURE__*/\nfunction (_HypertyDataObjectSch) {\n  DataObjectSchema_inherits(CommunicationDataObjectSchema, _HypertyDataObjectSch);\n\n  function CommunicationDataObjectSchema(guid, type, version, objectName, description, language, sourcePackageURL, accessControlPolicy) {\n    DataObjectSchema_classCallCheck(this, CommunicationDataObjectSchema);\n\n    return DataObjectSchema_possibleConstructorReturn(this, DataObjectSchema_getPrototypeOf(CommunicationDataObjectSchema).call(this, guid, type, version, objectName, description, language, sourcePackageURL, accessControlPolicy));\n  }\n\n  return CommunicationDataObjectSchema;\n}(HypertyDataObjectSchema);\nvar ConnectionDataObjectSchema =\n/*#__PURE__*/\nfunction (_HypertyDataObjectSch2) {\n  DataObjectSchema_inherits(ConnectionDataObjectSchema, _HypertyDataObjectSch2);\n\n  function ConnectionDataObjectSchema(guid, type, version, objectName, description, language, sourcePackageURL, accessControlPolicy) {\n    DataObjectSchema_classCallCheck(this, ConnectionDataObjectSchema);\n\n    return DataObjectSchema_possibleConstructorReturn(this, DataObjectSchema_getPrototypeOf(ConnectionDataObjectSchema).call(this, guid, type, version, objectName, description, language, sourcePackageURL, accessControlPolicy));\n  }\n\n  return ConnectionDataObjectSchema;\n}(HypertyDataObjectSchema);\nvar IdentityDataObjectSchema =\n/*#__PURE__*/\nfunction (_HypertyDataObjectSch3) {\n  DataObjectSchema_inherits(IdentityDataObjectSchema, _HypertyDataObjectSch3);\n\n  function IdentityDataObjectSchema(guid, type, version, objectName, description, language, sourcePackageURL, accessControlPolicy) {\n    DataObjectSchema_classCallCheck(this, IdentityDataObjectSchema);\n\n    return DataObjectSchema_possibleConstructorReturn(this, DataObjectSchema_getPrototypeOf(IdentityDataObjectSchema).call(this, guid, type, version, objectName, description, language, sourcePackageURL, accessControlPolicy));\n  }\n\n  return IdentityDataObjectSchema;\n}(HypertyDataObjectSchema);\nvar ContextDataObjectSchema =\n/*#__PURE__*/\nfunction (_HypertyDataObjectSch4) {\n  DataObjectSchema_inherits(ContextDataObjectSchema, _HypertyDataObjectSch4);\n\n  function ContextDataObjectSchema(guid, type, version, objectName, description, language, sourcePackageURL, accessControlPolicy) {\n    DataObjectSchema_classCallCheck(this, ContextDataObjectSchema);\n\n    return DataObjectSchema_possibleConstructorReturn(this, DataObjectSchema_getPrototypeOf(ContextDataObjectSchema).call(this, guid, type, version, objectName, description, language, sourcePackageURL, accessControlPolicy));\n  }\n\n  return ContextDataObjectSchema;\n}(HypertyDataObjectSchema);\nvar DataUrlScheme = {\n  COMM: 'COMM',\n  CONNECTION: 'CONNECTION',\n  CTXT: 'CTXT',\n  IDENTITY: 'IDENTITY'\n};\n/* harmony default export */ var runtime_catalogue_DataObjectSchema = (DataObjectSchema);\n// CONCATENATED MODULE: ./src/runtime-catalogue/CatalogueDataObjectFactory.js\nfunction CatalogueDataObjectFactory_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction CatalogueDataObjectFactory_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction CatalogueDataObjectFactory_createClass(Constructor, protoProps, staticProps) { if (protoProps) CatalogueDataObjectFactory_defineProperties(Constructor.prototype, protoProps); if (staticProps) CatalogueDataObjectFactory_defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * Copyright 2016 PT Inovação e Sistemas SA\n * Copyright 2016 INESC-ID\n * Copyright 2016 QUOBIS NETWORKS SL\n * Copyright 2016 FRAUNHOFER-GESELLSCHAFT ZUR FOERDERUNG DER ANGEWANDTEN FORSCHUNG E.V\n * Copyright 2016 ORANGE SA\n * Copyright 2016 Deutsche Telekom AG\n * Copyright 2016 Apizee\n * Copyright 2016 TECHNISCHE UNIVERSITAT BERLIN\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n **/\n\n\n\n\n\n\n\n\nvar CatalogueDataObjectFactory_CatalogueDataObjectFactory =\n/*#__PURE__*/\nfunction () {\n  function CatalogueDataObjectFactory() {\n    CatalogueDataObjectFactory_classCallCheck(this, CatalogueDataObjectFactory);\n  }\n\n  CatalogueDataObjectFactory_createClass(CatalogueDataObjectFactory, [{\n    key: \"createCatalogueDataObject\",\n\n    /**\n     * Create CatalogueDataObject\n     * @param {string} guid - Catalogue Global Unique identifier of the Catalogue Object\n     * @param {CatalogueObjectType} type - Indicates the type of Catalogue Data Object\n     * @param {string} version - Indicates the version of Catalogue Data\n     * @param {string} objectName - Human-understandable name of the catalogue object\n     * @param {string} description\n     * @param {DataObjectSourceLanguage} language - Programming language used in the SourcePackage\n     * @param {string} sourcePackageURL - URL from where the source code package of the corresponding catalogue object can be downloaded.\n     * @returns {CatalogueDataObject}\n     */\n    value: function createCatalogueDataObject(guid, type, version, objectName, description, language, sourcePackageURL) {\n      if (typeof guid === \"undefined\" || typeof type === \"undefined\" || typeof version === \"undefined\" || typeof objectName === \"undefined\" || typeof description === \"undefined\" || typeof language === \"undefined\" || typeof sourcePackageURL === \"undefined\") throw new Error(\"Invalid parameters!\");\n      return new runtime_catalogue_CatalogueDataObject(guid, type, version, objectName, description, language, sourcePackageURL);\n    }\n    /**\n     * Create HypertyDescriptor\n     * @param {string} guid - Catalogue Global Unique identifier of the Catalogue Object\n     * @param {string} version - Indicates the version of Catalogue Data\n     * @param {string} objectName - Human-understandable name of the catalogue object\n     * @param {string} description\n     * @param {DataObjectSourceLanguage} language - Programming language used in the SourcePackage\n     * @param {string} sourcePackageURL - URL from where the source code package of the corresponding catalogue object\n     * can be downloaded.\n     * @param {HypertyResourceType[]} hypertyType - An array of HypertyResourceType that identifies what type of hyperty\n     * resources are handled by the object.\n     * @param {URL.URLList} dataObjects - Defines the Data Object Schemas supported by the Hyperty through a list of Catalogue URLs from where these schemas can be reached.\n     * @returns {HypertyDescriptor}\n     */\n\n  }, {\n    key: \"createHypertyDescriptorObject\",\n    value: function createHypertyDescriptorObject(guid, version, objectName, description, language, sourcePackageURL, hypertyType, dataObjects) {\n      if (typeof guid === \"undefined\" || typeof version === \"undefined\" || typeof objectName === \"undefined\" || typeof description === \"undefined\" || typeof language === \"undefined\" || typeof sourcePackageURL === \"undefined\" || typeof hypertyType === \"undefined\" || typeof dataObjects === \"undefined\") throw new Error(\"Invalid parameters!\");\n      return new runtime_catalogue_HypertyDescriptor(guid, CatalogueObjectType.HYPERTY, version, objectName, description, language, sourcePackageURL, hypertyType, dataObjects);\n    }\n    /**\n     * Create ProtocolStubDescriptor\n     * @param {string} guid - Catalogue Global Unique identifier of the Catalogue Object\n     * @param {string} version - Indicates the version of Catalogue Data\n     * @param {string} objectName - Human-understandable name of the catalogue object\n     * @param {string} description\n     * @param {DataObjectSourceLanguage} language - Programming language used in the SourcePackage\n     * @param {string} sourcePackageURL - URL from where the source code package of the corresponding catalogue object can be downloaded.\n     * @param {URL.URL} messageSchemas - Defines the Schema describing the Message Data Model used by the Hyperty through the Catalogue URL from where the Message schema can be reached. If not defined, by default it is assumed the standard Message Model is used.\n     * @param configuration - Data required to configure the ProtocolStub\n     * @param constraints - Describes capabilities required from the Hyperty Runtime in order to be able to execute the ProtocolStub\n     * @param hypertyType\n     * @param dataObjects\n     * @param interworking\n     * @param idpProxy\n     * @param mutualAuthentication\n     * @returns {ProtocolStubDescriptor}\n     */\n\n  }, {\n    key: \"createProtoStubDescriptorObject\",\n    value: function createProtoStubDescriptorObject(guid, version, objectName, description, language, sourcePackageURL, messageSchemas, configuration, constraints, hypertyType, dataObjects, interworking, idpProxy, mutualAuthentication) {\n      if (typeof guid === \"undefined\" || typeof version === \"undefined\" || typeof objectName === \"undefined\" || typeof description === \"undefined\" || typeof language === \"undefined\" || typeof sourcePackageURL === \"undefined\" || typeof messageSchemas === \"undefined\" || typeof configuration === \"undefined\" || typeof constraints === \"undefined\") throw new Error(\"Invalid parameters!\");\n      return new runtime_catalogue_ProtocolStubDescriptor(guid, CatalogueObjectType.PROTOSTUB, version, objectName, description, language, sourcePackageURL, messageSchemas, configuration, constraints, hypertyType, dataObjects, interworking, idpProxy, mutualAuthentication);\n    }\n    /**\n     * Create HypertyRuntimeDescriptor\n     * @param {string} guid - Catalogue Global Unique identifier of the Catalogue Object\n     * @param {string} version - Indicates the version of Catalogue Data\n     * @param {string} objectName - Human-understandable name of the catalogue object\n     * @param {string} description\n     * @param {DataObjectSourceLanguage} language - Programming language used in the SourcePackage\n     * @param {string} sourcePackageURL - URL from where the source code package of the corresponding catalogue object can be downloaded.\n     * @param {RuntimeType}runtimeType\n     * @param {RuntimeHypertyCapabilities} hypertyCapabilities - Supported capabilities to execute Hyperties\n     * @param {RuntimeProtocolCapabilities} protocolCapabilities - Supported capabilities to execute Protocol Stubs\n     * @param p2pHandlerStub\n     * @param p2pRequesterStub\n     * @returns {HypertyRuntimeDescriptor} the data object of the Hyperty Runtime Descriptor\n     */\n\n  }, {\n    key: \"createHypertyRuntimeDescriptorObject\",\n    value: function createHypertyRuntimeDescriptorObject(guid, version, objectName, description, language, sourcePackageURL, runtimeType, hypertyCapabilities, protocolCapabilities, p2pHandlerStub, p2pRequesterStub) {\n      if (typeof guid === \"undefined\" || typeof version === \"undefined\" || typeof objectName === \"undefined\" || typeof description === \"undefined\" || typeof language === \"undefined\" || typeof sourcePackageURL === \"undefined\" || typeof runtimeType === \"undefined\") throw new Error(\"Invalid parameters!\");\n      return new runtime_catalogue_HypertyRuntimeDescriptor(guid, CatalogueObjectType.HYPERTY_RUNTIME, version, objectName, description, language, sourcePackageURL, runtimeType, hypertyCapabilities, protocolCapabilities, p2pHandlerStub, p2pRequesterStub);\n    }\n    /**\n     * Create Hyperty Interceptor Descriptor\n     * @param {string} guid - Catalogue Global Unique identifier of the Catalogue Object\n     * @param {string} version - Indicates the version of Catalogue Data\n     * @param {string} objectName - Human-understandable name of the catalogue object\n     * @param {string} description\n     * @param {DataObjectSourceLanguage} language - Programming language used in the SourcePackage\n     * @param {string} sourcePackageURL - URL from where the source code package of the corresponding catalogue object can be downloaded.\n     * @param configuration\n     * @param policies\n     * @returns {PolicyEnforcerDescriptor}\n     */\n\n  }, {\n    key: \"createHypertyInterceptorDescriptorObject\",\n    value: function createHypertyInterceptorDescriptorObject(guid, version, objectName, description, language, sourcePackageURL, configuration, policies) {\n      if (typeof guid === \"undefined\" || typeof version === \"undefined\" || typeof objectName === \"undefined\" || typeof description === \"undefined\" || typeof language === \"undefined\" || typeof sourcePackageURL === \"undefined\") throw new Error(\"Invalid parameters!\");\n      return new HypertyInterceptorDescriptor(guid, CatalogueObjectType.HYPERTY_INTERCEPTOR, version, objectName, description, language, sourcePackageURL, configuration, policies);\n    }\n    /**\n     * Create DataObjectSchema which in effect is the MessageDataObjectSchema\n     * @deprecated Use either createMessageDataObjectSchema or createHypertyDataObjectSchema instead\n     * @param {string} guid - Catalogue Global Unique identifier of the Catalogue Object\n     * @param {string} version - Indicates the version of Catalogue Data\n     * @param {string} objectName - Human-understandable name of the catalogue object\n     * @param {string} description\n     * @param {DataObjectSourceLanguage} language - Programming language used in the SourcePackage\n     * @param {string} sourcePackageURL - URL from where the source code package of the corresponding catalogue object can be downloaded.\n     * @returns {DataObjectSchema}\n     */\n\n  }, {\n    key: \"createDataObjectSchema\",\n    value: function createDataObjectSchema(guid, version, objectName, description, language, sourcePackageURL) {\n      if (typeof guid === \"undefined\" || typeof version === \"undefined\" || typeof objectName === \"undefined\" || typeof description === \"undefined\" || typeof language === \"undefined\" || typeof sourcePackageURL === \"undefined\") throw new Error(\"Invalid parameters!\");\n      return new DataObjectSchema(guid, CatalogueObjectType.HYPERTY_DATA_OBJECT, version, objectName, description, language, sourcePackageURL);\n    }\n    /**\n     * Create DataObjectSchema which in effect is the MessageDataObjectSchema\n     * @param {string} guid - Catalogue Global Unique identifier of the Catalogue Object\n     * @param {string} version - Indicates the version of Catalogue Data\n     * @param {string} objectName - Human-understandable name of the catalogue object\n     * @param {string} description\n     * @param {DataObjectSourceLanguage} language - Programming language used in the SourcePackage\n     * @param {string} sourcePackageURL - URL from where the source code package of the corresponding catalogue object can be downloaded.\n     * @returns {DataObjectSchema}\n     */\n\n  }, {\n    key: \"createMessageDataObjectSchema\",\n    value: function createMessageDataObjectSchema(guid, version, objectName, description, language, sourcePackageURL) {\n      if (typeof guid === \"undefined\" || typeof version === \"undefined\" || typeof objectName === \"undefined\" || typeof description === \"undefined\" || typeof language === \"undefined\" || typeof sourcePackageURL === \"undefined\") throw new Error(\"Invalid parameters!\");\n      return new DataObjectSchema(guid, CatalogueObjectType.HYPERTY_DATA_OBJECT, version, objectName, description, language, sourcePackageURL);\n    }\n    /**\n     * Create HypertyDataObjectSchema\n     * @param {string} guid - Catalogue Global Unique identifier of the Catalogue Object\n     * @param {string} version - Indicates the version of Catalogue Data\n     * @param {string} objectName - Human-understandable name of the catalogue object\n     * @param {string} description\n     * @param {DataObjectSourceLanguage} language - Programming language used in the SourcePackage\n     * @param {string} sourcePackageURL - URL from where the source code package of the corresponding catalogue object can be downloaded.\n     * @param {string} accessControlPolicy - policy rule to access object (see Reporter-Observer Comm pattern)\n     * @param {DataUrlScheme} scheme - identifies the data scheme (COMM, CONNECTION, CTXT or IDENTITY)\n     * @returns {DataObjectSchema}\n     */\n\n  }, {\n    key: \"createHypertyDataObjectSchema\",\n    value: function createHypertyDataObjectSchema(guid, version, objectName, description, language, sourcePackageURL, accessControlPolicy, scheme) {\n      if (typeof guid === \"undefined\" || typeof version === \"undefined\" || typeof objectName === \"undefined\" || typeof description === \"undefined\" || typeof language === \"undefined\" || typeof sourcePackageURL === \"undefined\" || typeof scheme === \"undefined\" || typeof accessControlPolicy === \"undefined\") throw new Error(\"Invalid parameters!\");\n      if (scheme === DataUrlScheme.COMM) return new CommunicationDataObjectSchema(guid, CatalogueObjectType.HYPERTY_DATA_OBJECT, version, objectName, description, language, sourcePackageURL, scheme, accessControlPolicy);else if (scheme === DataUrlScheme.CONNECTION) return new ConnectionDataObjectSchema(guid, CatalogueObjectType.HYPERTY_DATA_OBJECT, version, objectName, description, language, sourcePackageURL, scheme, accessControlPolicy);else if (scheme === DataUrlScheme.CTXT) return new ContextDataObjectSchema(guid, CatalogueObjectType.HYPERTY_DATA_OBJECT, version, objectName, description, language, sourcePackageURL, scheme, accessControlPolicy);else if (scheme === DataUrlScheme.IDENTITY) return new IdentityDataObjectSchema(guid, CatalogueObjectType.HYPERTY_DATA_OBJECT, version, objectName, description, language, sourcePackageURL, scheme, accessControlPolicy);\n    }\n    /**\n     * Create SourcePackage\n     * @param sourceCodeClassname - The Class-name of the SourceCode\n     * @param sourceCode - The source code of the catalogue object\n     * @returns {SourcePackage}\n     */\n\n  }, {\n    key: \"createSourcePackage\",\n    value: function createSourcePackage(sourceCodeClassname, sourceCode) {\n      if (typeof sourceCode === \"undefined\" || typeof sourceCodeClassname === \"undefined\") throw new Error(\"Invalid parameters!\");\n      return new runtime_catalogue_SourcePackage(sourceCodeClassname, sourceCode);\n    }\n  }]);\n\n  return CatalogueDataObjectFactory;\n}();\n\n/* harmony default export */ var runtime_catalogue_CatalogueDataObjectFactory = (CatalogueDataObjectFactory_CatalogueDataObjectFactory);\n// CONCATENATED MODULE: ./src/runtime-catalogue/RuntimeCatalogue.js\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction RuntimeCatalogue_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction RuntimeCatalogue_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction RuntimeCatalogue_createClass(Constructor, protoProps, staticProps) { if (protoProps) RuntimeCatalogue_defineProperties(Constructor.prototype, protoProps); if (staticProps) RuntimeCatalogue_defineProperties(Constructor, staticProps); return Constructor; }\n\n// Log System\n\nvar RuntimeCatalogue_log = loglevel[\"getLogger\"]('RuntimeCatalogue');\n\n\nvar RuntimeCatalogue_RuntimeCatalogue =\n/*#__PURE__*/\nfunction () {\n  function RuntimeCatalogue(runtimeFactory, name, schema) {\n    RuntimeCatalogue_classCallCheck(this, RuntimeCatalogue);\n\n    if (!runtimeFactory) throw Error('The catalogue needs the runtimeFactory');\n    this._runtimeFactory = runtimeFactory;\n    this._factory = new runtime_catalogue_CatalogueDataObjectFactory();\n    this.httpRequest = runtimeFactory.createHttpRequest();\n    this.atob = runtimeFactory.atob ? runtimeFactory.atob : atob;\n    var storageName = name ? name : 'runtimeCatalogue';\n    var storageSchema = schema ? schema : '&cguid, accessControlPolicy, constraints, dataObjects, type, objectName, sourcePackage, version, url';\n    var schemas = {};\n    schemas[storageName] = storageSchema;\n    this.storageManager = runtimeFactory.storageManager(storageName, schemas);\n  }\n  /**\n     * Get a Catalogue Data Object (Descriptor) from a URL, and construct it using the provided function\n     * @param {String} descriptorURL - e.g. mydomain.com/.well-known/hyperty/MyHyperty\n     * @param {function} createFunc - e.g. createHyperty\n     * @param {boolean} [getFull] - whether or not to get descriptor with sourcePackage, or only the descriptor part\n     * @param {JSON} constraints - constraints object\n     * @returns {Promise} - Promise that fulfills with the requested descriptor in the appropriate type.\n     * If constraints were provided, a descriptor is only returned if it meets the constraints, otherwise the promise will be rejected.\n     */\n\n\n  RuntimeCatalogue_createClass(RuntimeCatalogue, [{\n    key: \"getDescriptor\",\n    value: function getDescriptor(descriptorURL, createFunc) {\n      var _this = this;\n\n      var getFull = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var constraints = arguments.length > 3 ? arguments[3] : undefined;\n      RuntimeCatalogue_log.info('[RuntimeCatalogue] - getting descriptor from: ', descriptorURL, ' with constraints: ', constraints);\n      return new Promise(function (resolve, reject) {\n        if (_this._runtimeFactory.isOnline()) {\n          resolve(_this._getDescriptor(descriptorURL, createFunc, getFull, constraints));\n        } else {\n          _this.storageManager.get('url', descriptorURL).then(function (descriptor) {\n            console.log('[RuntimeCatalogue] saved offline descriptor ', descriptor);\n            if (descriptor) resolve(createFunc.apply(_this, [descriptor, constraints]));else resolve(_this._getDescriptor(descriptorURL, createFunc, getFull, constraints));\n          });\n        }\n      });\n    }\n  }, {\n    key: \"_getDescriptor\",\n    value: function _getDescriptor(descriptorURL, createFunc) {\n      var _this2 = this;\n\n      var getFull = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var constraints = arguments.length > 3 ? arguments[3] : undefined;\n      // some flags for optimization\n      // (later the descriptor will not be saved in case both of these booleans are true)\n      var isSavedDescriptor = false;\n      var isCompleteDescriptor = false; // get raw descriptor\n      // first checks if descriptor is already in localStorage (based on cguid and version)\n\n      var descriptorPromise;\n\n      if (constraints != undefined) {\n        descriptorPromise = Promise.all([this.httpRequest.post(descriptorURL + '/version', {\n          body: JSON.stringify(constraints)\n        }), this.httpRequest.post(descriptorURL + '/cguid', {\n          body: JSON.stringify(constraints)\n        })]);\n      } else {\n        descriptorPromise = Promise.all([this.httpRequest.get(descriptorURL + '/version'), this.httpRequest.get(descriptorURL + '/cguid')]);\n      }\n\n      descriptorPromise = descriptorPromise.then(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            version = _ref2[0],\n            cguid = _ref2[1];\n\n        RuntimeCatalogue_log.log('[RuntimeCatalogue.getDescriptor] - got version (' + version + ') and cguid (' + cguid + ') for descriptor ' + descriptorURL); // check if same version is contained in localStorage\n\n        return _this2.storageManager.getVersion('cguid', cguid).then(function (dbVersion) {\n          if (dbVersion >= version) {\n            RuntimeCatalogue_log.log('[RuntimeCatalogue.getDescriptor] local version is updated for ', descriptorURL);\n            isSavedDescriptor = true;\n            return _this2.storageManager.get('cguid', cguid);\n          } else {\n            RuntimeCatalogue_log.log('[RuntimeCatalogue.getDescriptor] local version not updated for ', descriptorURL, ' retrieving from remote catalogue ...'); // no saved copy, proceed with retrieving descriptor\n\n            var retrievePromise = constraints != undefined ? _this2.httpRequest.post(descriptorURL, {\n              body: JSON.stringify(constraints)\n            }) : _this2.httpRequest.get(descriptorURL);\n            return retrievePromise.then(function (descriptor) {\n              descriptor = JSON.parse(descriptor); //log.log(\"got descriptor:\", JSON.stringify(descriptor, null, 2));\n\n              if (descriptor['ERROR']) {\n                // TODO handle error properly\n                throw new Error(descriptor);\n              } else {\n                return descriptor;\n              }\n            });\n          }\n        });\n      })[\"catch\"](function (error) {\n        var errorString = 'Unable to get descriptor for ' + descriptorURL + (constraints != undefined ? ' with constraints ' + constraints : '') + ': ' + error;\n        RuntimeCatalogue_log.error(errorString);\n        throw new Error(errorString);\n      });\n      var returnPromise = descriptorPromise; // if getFull, attach sourcePackage\n\n      if (getFull) {\n        RuntimeCatalogue_log.log('adding promise to attach sourcePackage');\n        returnPromise = descriptorPromise.then(function (descriptor) {\n          if (descriptor.sourcePackage) {\n            isCompleteDescriptor = true;\n            return descriptor;\n          } else {\n            isCompleteDescriptor = false;\n            return _this2.attachRawSourcePackage(descriptor);\n          }\n        });\n      } // finally create object\n\n\n      returnPromise = returnPromise.then(function (descriptor) {\n        // store if not saved before, or if full descriptor was requested and only partial descriptor was stored.\n        if (!isSavedDescriptor || isSavedDescriptor && !isCompleteDescriptor && getFull) {\n          descriptor.url = descriptorURL;\n\n          _this2.storageManager.set(descriptor.cguid, descriptor.version, descriptor);\n        }\n\n        return createFunc.apply(_this2, [descriptor, constraints]);\n      });\n      return returnPromise;\n    }\n    /**\n       * Uses the sourcePackageURL from the descriptor, requests the sourcePackage and attaches it to the descriptor.\n       * @param {CatalogueDataObject} descriptor\n       * @param {JSON} constraints - constraints object\n       * @returns {Promise} - fulfills with complete descriptor\n       */\n\n  }, {\n    key: \"attachRawSourcePackage\",\n    value: function attachRawSourcePackage(descriptor, constraints) {\n      var _this3 = this;\n\n      RuntimeCatalogue_log.log('attaching raw sourcePackage from:', descriptor.sourcePackageURL);\n      return new Promise(function (resolve, reject) {\n        var retrievePromise = constraints != undefined ? _this3.httpRequest.post(descriptor.sourcePackageURL, {\n          body: JSON.stringify(constraints)\n        }) : _this3.httpRequest.get(descriptor.sourcePackageURL);\n        retrievePromise.then(function (sourcePackage) {\n          sourcePackage = JSON.parse(sourcePackage); //delete descriptor.sourcePackageURL;\n          //log.log(\"attaching sourcePackage:\", sourcePackage);\n\n          descriptor.sourcePackage = sourcePackage;\n          resolve(descriptor);\n        })[\"catch\"](function (reason) {\n          reject(reason);\n        });\n      });\n    }\n    /**\n       * Get HypertyDescriptor\n       * @param hypertyURL - e.g. mydomain.com/.well-known/hyperty/MyHyperty\n       * @param {boolean} [getFull] - boolean to decide to get the descriptor with the sourcePackage or (potentially) without\n       * @param {JSON} constraints - constraints object\n       * @returns {Promise}\n       */\n\n  }, {\n    key: \"getHypertyDescriptor\",\n    value: function getHypertyDescriptor(hypertyURL) {\n      var getFull = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var constraints = arguments.length > 2 ? arguments[2] : undefined;\n      return this.getDescriptor(hypertyURL, this.createHyperty, getFull, constraints);\n    }\n    /**\n       * Get StubDescriptor\n       * @param stubURL - e.g. mydomain.com/.well-known/protostub/MyProtostub\n       * @param {boolean} [getFull] - boolean to decide to get the descriptor with the sourcePackage or (potentially) without\n       * @param {JSON} constraints - constraints object\n       * @returns {Promise}\n       */\n\n  }, {\n    key: \"getStubDescriptor\",\n    value: function getStubDescriptor(stubURL) {\n      var getFull = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var constraints = arguments.length > 2 ? arguments[2] : undefined;\n      return this.getDescriptor(stubURL, this.createStub, getFull, constraints);\n    }\n    /**\n       * Get RuntimeDescriptor\n       * @param runtimeURL - e.g. mydomain.com/.well-known/runtime/MyRuntime\n       * @param {boolean} [getFull] - boolean to decide to get the descriptor with the sourcePackage or (potentially) without\n       * @param {JSON} constraints - constraints object\n       * @returns {Promise}\n       */\n\n  }, {\n    key: \"getRuntimeDescriptor\",\n    value: function getRuntimeDescriptor(runtimeURL) {\n      var getFull = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var constraints = arguments.length > 2 ? arguments[2] : undefined;\n      return this.getDescriptor(runtimeURL, this.createRuntimeDescriptor, getFull, constraints);\n    }\n    /**\n       * Get DataSchemaDescriptor\n       * @param dataSchemaURL - e.g. mydomain.com/.well-known/dataschema/MyDataSchema\n       * @param {boolean} [getFull] - boolean to decide to get the descriptor with the sourcePackage or (potentially) without\n       * @param {JSON} constraints - constraints object\n       * @returns {Promise}\n       */\n\n  }, {\n    key: \"getDataSchemaDescriptor\",\n    value: function getDataSchemaDescriptor(dataSchemaURL) {\n      var getFull = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var constraints = arguments.length > 2 ? arguments[2] : undefined;\n      //    return this.getDescriptor(dataSchemaURL, this.createDataSchema, getFull, constraints)\n      return new Promise(function (resolve) {\n        var schema = dataSchemaURL.split('/dataschema/')[1];\n        RuntimeCatalogue_log.log('[RuntimeCatalogue.getDataSchemaDescriptor] schema ', schema);\n        var descriptor = {\n          sourcePackage: {\n            sourceCode: {\n              properties: {}\n            }\n          }\n        }; //      let scheme = properties.scheme ? properties.scheme.co : [];\n\n        switch (schema) {\n          case 'Context':\n          case 'ContextReporter':\n          case 'ContextObserver':\n            descriptor.sourcePackage.sourceCode.properties.scheme = 'context';\n            break;\n\n          case 'Connection':\n            descriptor.sourcePackage.sourceCode.properties.scheme = 'connection';\n            break;\n\n          case 'WalletData':\n            descriptor.sourcePackage.sourceCode.properties.scheme = 'walletData';\n            break;\n\n          case 'Communication':\n            descriptor.sourcePackage.sourceCode.properties.scheme = 'comm';\n            descriptor.sourcePackage.sourceCode.properties.childrens = ['resources'];\n            break;\n\n          case 'HelloWorldDataSchema':\n            descriptor.sourcePackage.sourceCode.properties.scheme = 'hello';\n            break;\n\n          default:\n            descriptor.sourcePackage.sourceCode.properties.scheme = 'resource';\n            descriptor.sourcePackage.sourceCode.properties.childrens = [];\n            break;\n        }\n\n        resolve(descriptor);\n      });\n    }\n    /**\n       * Get IDPProxyDescriptor\n       * @param idpProxyURL - e.g. mydomain.com/.well-known/idp-proxy/MyProxy\n       * @param {boolean} [getFull] - boolean to decide to get the descriptor with the sourcePackage or (potentially) without\n       * @param {JSON} constraints - constraints object\n       * @returns {Promise}\n       */\n\n  }, {\n    key: \"getIdpProxyDescriptor\",\n    value: function getIdpProxyDescriptor(idpProxyURL) {\n      var getFull = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var constraints = arguments.length > 2 ? arguments[2] : undefined;\n      return this.getDescriptor(idpProxyURL, this.createIdpProxy, getFull, constraints);\n    }\n    /**\n       * Create HypertyDescriptor based on raw object that contains its attributes\n       * @param {JSON} rawHyperty\n       * @returns {HypertyDescriptor}\n       */\n\n  }, {\n    key: \"createHyperty\",\n    value: function createHyperty(rawHyperty) {\n      //log.log(\"createHyperty:\", rawHyperty);\n      // create the descriptor\n      var hyperty = this._factory.createHypertyDescriptorObject(rawHyperty['cguid'], rawHyperty['version'], rawHyperty['objectName'], rawHyperty['description'], rawHyperty['language'], rawHyperty['sourcePackageURL'], rawHyperty['type'] || rawHyperty['hypertyType'], rawHyperty['dataObjects']); //log.log(\"factory returned:\", hyperty);\n      // optional fields\n\n\n      hyperty.configuration = rawHyperty['configuration'];\n      hyperty.constraints = rawHyperty['constraints'];\n      hyperty.messageSchema = rawHyperty['messageSchema'];\n      hyperty.policies = rawHyperty['policies'];\n      hyperty.signature = rawHyperty['signature']; // parse and attach sourcePackage\n\n      var sourcePackage = rawHyperty['sourcePackage'];\n\n      if (sourcePackage) {\n        hyperty.sourcePackage = this.createSourcePackage(sourcePackage);\n      }\n\n      return hyperty;\n    }\n    /**\n       * Create ProtocolStubDescriptor based on raw object that contains its attributes\n       * @param rawStub\n       * @returns {ProtocolStubDescriptor}\n       */\n\n  }, {\n    key: \"createStub\",\n    value: function createStub(rawStub) {\n      // log.log(\"creating stub descriptor based on: \", rawStub);\n      // create the descriptor\n      var stub = this._factory.createProtoStubDescriptorObject(rawStub['cguid'], rawStub['version'], rawStub['objectName'], rawStub['description'], rawStub['language'], rawStub['sourcePackageURL'], rawStub['messageSchemas'], rawStub['configuration'], rawStub['constraints'], rawStub['hypertyType'], rawStub['dataObjects'], rawStub['interworking'], rawStub['idpProxy'], rawStub['mutualAuthentication']); // optional fields\n\n\n      stub.signature = rawStub['signature']; // parse and attach the sourcePackage\n\n      var sourcePackage = rawStub['sourcePackage'];\n\n      if (sourcePackage) {\n        stub.sourcePackage = this.createSourcePackage(sourcePackage);\n      }\n\n      return stub;\n    }\n    /**\n       * Create HypertyRuntimeDescriptor based on raw object that contains its attributes\n       * @param rawRuntime\n       * @returns {HypertyRuntimeDescriptor}\n       */\n\n  }, {\n    key: \"createRuntimeDescriptor\",\n    value: function createRuntimeDescriptor(rawRuntime) {\n      // parse capabilities first\n      try {\n        rawRuntime['hypertyCapabilities'] = JSON.parse(rawRuntime['hypertyCapabilities']);\n        rawRuntime['protocolCapabilities'] = JSON.parse(rawRuntime['protocolCapabilities']);\n      } catch (e) {} // already json object\n      //log.log(\"creating runtime descriptor based on: \", rawRuntime);\n      // create the descriptor\n\n\n      var runtime = this._factory.createHypertyRuntimeDescriptorObject(rawRuntime['cguid'], rawRuntime['version'], rawRuntime['objectName'], rawRuntime['description'], rawRuntime['language'], rawRuntime['sourcePackageURL'], rawRuntime['type'] || rawRuntime['runtimeType'], rawRuntime['hypertyCapabilities'], rawRuntime['protocolCapabilities'], rawRuntime['p2pHandlerStub'], rawRuntime['p2pRequesterStub']); // optional fields\n\n\n      runtime.signature = rawRuntime['signature']; // parse and attach sourcePackage\n\n      var sourcePackage = rawRuntime['sourcePackage'];\n\n      if (sourcePackage) {\n        // log.log(\"runtime has sourcePackage:\", sourcePackage);\n        runtime.sourcePackage = this.createSourcePackage(sourcePackage);\n      }\n\n      return runtime;\n    }\n    /**\n       * Create DataObjectSchema based on raw object that contains its attributes\n       * @param rawSchema\n       * @returns {DataObjectSchema}\n       */\n\n  }, {\n    key: \"createDataSchema\",\n    value: function createDataSchema(rawSchema) {\n      //log.log(\"creating dataSchema based on: \", rawSchema);\n      var dataSchema; //log.log('1. createMessageDataObjectSchema: ', rawSchema[\"accessControlPolicy\"]);\n      //log.log('2. createMessageDataObjectSchema: ', rawSchema[\"scheme\"]);\n\n      if (rawSchema['accessControlPolicy'] && rawSchema['scheme']) {\n        dataSchema = this._factory.createHypertyDataObjectSchema(rawSchema['cguid'], rawSchema['version'], rawSchema['objectName'], rawSchema['description'], rawSchema['language'], rawSchema['sourcePackageURL'], rawSchema['accessControlPolicy'], rawSchema['scheme']);\n      } else {\n        //log.log('3. createMessageDataObjectSchema: ', rawSchema);\n        dataSchema = this._factory.createMessageDataObjectSchema(rawSchema['cguid'], rawSchema['version'], rawSchema['objectName'], rawSchema['description'], rawSchema['language'], rawSchema['sourcePackageURL']);\n      } // optional fields\n\n\n      dataSchema.signature = rawSchema['signature']; // parse and attach sourcePackage\n\n      var sourcePackage = rawSchema['sourcePackage'];\n\n      if (sourcePackage) {\n        //log.log(\"dataSchema has sourcePackage:\", sourcePackage);\n        dataSchema.sourcePackage = this.createSourcePackage(sourcePackage);\n\n        try {\n          dataSchema.sourcePackage.sourceCode = JSON.parse(dataSchema.sourcePackage.sourceCode);\n        } catch (e) {\n          RuntimeCatalogue_log.log('DataSchema Source code is already parsed');\n        }\n\n        return dataSchema;\n      } //log.log(\"created dataSchema descriptor object:\", dataSchema);\n\n\n      return dataSchema;\n    }\n    /**\n       * Create ProtocolStubDescriptor based on raw object that contains its attributes\n       * @param rawProxy\n       * @returns {ProtocolStubDescriptor}\n       */\n\n  }, {\n    key: \"createIdpProxy\",\n    value: function createIdpProxy(rawProxy) {\n      // log.log(\"creating idpproxy descriptor based on: \", rawProxy);\n      // create the descriptor\n      var idpproxy = this._factory.createProtoStubDescriptorObject(rawProxy['cguid'], rawProxy['version'], rawProxy['objectName'], rawProxy['description'], rawProxy['language'], rawProxy['sourcePackageURL'], rawProxy['messageSchemas'], rawProxy['configuration'], rawProxy['constraints'], rawProxy['hypertyType'], rawProxy['dataObjects'], rawProxy['interworking'], rawProxy['idpProxy'], rawProxy['mutualAuthentication']); // optional fields\n\n\n      idpproxy.signature = rawProxy['signature']; // parse and attach the sourcePackage\n\n      var sourcePackage = rawProxy['sourcePackage'];\n\n      if (sourcePackage) {\n        sourcePackage = this.createSourcePackage(sourcePackage);\n        idpproxy.sourcePackage = sourcePackage;\n      }\n\n      return idpproxy;\n    }\n  }, {\n    key: \"createSourcePackage\",\n    value: function createSourcePackage(sp) {\n      //log.log(\"createSourcePackage:\", sp);\n      // check encoding\n      if (sp['encoding'] === 'base64') {\n        sp['sourceCode'] = this.atob(sp['sourceCode']);\n        sp['encoding'] = 'utf-8';\n      }\n\n      var sourcePackage = this._factory.createSourcePackage(sp['sourceCodeClassname'], sp['sourceCode']);\n\n      if (sp['encoding']) sourcePackage.encoding = sp['encoding'];\n      if (sp['signature']) sourcePackage.signature = sp['signature'];\n      return sourcePackage;\n    }\n    /**\n       * Get source Package from a URL\n       * @param sourcePackageURL - e.g. mydomain.com/.well-known/hyperty/MyHyperty/sourcePackage\n       * @returns {Promise}\n       */\n\n  }, {\n    key: \"getSourcePackageFromURL\",\n    value: function getSourcePackageFromURL(sourcePackageURL) {\n      var _this4 = this;\n\n      RuntimeCatalogue_log.log('getting sourcePackage from:', sourcePackageURL);\n      return new Promise(function (resolve, reject) {\n        _this4.httpRequest.get(sourcePackageURL).then(function (result) {\n          //log.log(\"got raw sourcePackage:\", result);\n          if (result['ERROR']) {\n            // TODO handle error properly\n            reject(result);\n          } else {\n            result = JSON.parse(result);\n\n            var sourcePackage = _this4.createSourcePackage(result);\n\n            resolve(sourcePackage);\n          }\n        })[\"catch\"](function (reason) {\n          reject(reason);\n        });\n      });\n    }\n    /**\n       * Returns the sourceCode of a given descriptor\n       * @param {CatalogueDataObject} descriptor - Catalogue Object that was retrieved using e.g. getHypertyDescriptor()\n       * @returns {Promise}\n       */\n\n  }, {\n    key: \"getSourceCodeFromDescriptor\",\n    value: function getSourceCodeFromDescriptor(descriptor) {\n      var _this5 = this;\n\n      return new Promise(function (resolve, reject) {\n        if (descriptor.sourcePackage) {\n          //log.log(\"descriptor has sourcePackage\");\n          //log.log(\"returning sourceCode:\", descriptor.sourcePackage.sourceCode);\n          resolve(descriptor.sourcePackage.sourceCode);\n        } else {\n          _this5.storageManager.getVersion(descriptor.sourcePackageURL + '/sourceCode').then(function (dbVersion) {\n            if (dbVersion >= descriptor.version) {\n              RuntimeCatalogue_log.log('returning cached version from storageManager');\n\n              _this5.storageManager.get(descriptor.sourcePackageURL + '/sourceCode').then(function (sourceCode) {\n                resolve(sourceCode);\n              })[\"catch\"](function (reason) {\n                reject(reason);\n              });\n            } else {\n              _this5.httpRequest.get(descriptor.sourcePackageURL + '/sourceCode').then(function (sourceCode) {\n                if (sourceCode['ERROR']) {\n                  // TODO handle error properly\n                  reject(sourceCode);\n                } else {\n                  _this5.storageManager.set(descriptor.sourcePackageURL + '/sourceCode', descriptor.version, sourceCode);\n\n                  resolve(sourceCode);\n                }\n              })[\"catch\"](function (reason) {\n                reject(reason);\n              });\n            }\n          })[\"catch\"](function (reason) {\n            reject(reason);\n          });\n        }\n      });\n    }\n    /**\n       * Returns the list of available catalogue objects for the given \"type URL\",\n       * i.e. a catalogue URL that specifies a type, but no catalogue object name.\n       * @param typeURL - URL pointing to the catalogue object type you want a list of available objects for,\n       * e.g. hyperty-catalogue://catalogue.fokus.fraunhofer.de/.well-known/idp-proxy\n       * @param {JSON} constraints - constraints object\n       * @returns {Promise} typeListPromise - Promise that fulfills with the list of available catalogue object names for the requested type,\n       * rejects on HTTP error or if the HTTP response is not in JSON.\n       * If constraints were provided, then the list only contains those objects that meet the constraints\n       */\n\n  }, {\n    key: \"getTypeList\",\n    value: function getTypeList(typeURL, constraints) {\n      var _this6 = this;\n\n      return new Promise(function (resolve, reject) {\n        var requestPromise = constraints != undefined ? _this6.httpRequest.post(typeURL, {\n          body: JSON.stringify(constraints)\n        }) : _this6.httpRequest.get(typeURL);\n        requestPromise.then(function (typeList) {\n          typeList = JSON.parse(typeList);\n          resolve(typeList);\n        })[\"catch\"](function (reason) {\n          reject(reason);\n        });\n      });\n    }\n  }, {\n    key: \"deleteFromPM\",\n    value: function deleteFromPM(url) {\n      return this.storageManager[\"delete\"](url);\n    }\n  }, {\n    key: \"runtimeURL\",\n    set: function set(runtimeURL) {\n      this._runtimeURL = runtimeURL;\n    },\n    get: function get() {\n      return this._runtimeURL;\n    }\n  }]);\n\n  return RuntimeCatalogue;\n}();\n\n/* harmony default export */ var runtime_catalogue_RuntimeCatalogue = (RuntimeCatalogue_RuntimeCatalogue);\n// CONCATENATED MODULE: ./src/runtime/RuntimeUA.js\nfunction RuntimeUA_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction RuntimeUA_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction RuntimeUA_createClass(Constructor, protoProps, staticProps) { if (protoProps) RuntimeUA_defineProperties(Constructor.prototype, protoProps); if (staticProps) RuntimeUA_defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n* Copyright 2016 PT Inovação e Sistemas SA\n* Copyright 2016 INESC-ID\n* Copyright 2016 QUOBIS NETWORKS SL\n* Copyright 2016 FRAUNHOFER-GESELLSCHAFT ZUR FOERDERUNG DER ANGEWANDTEN FORSCHUNG E.V\n* Copyright 2016 ORANGE SA\n* Copyright 2016 Deutsche Telekom AG\n* Copyright 2016 Apizee\n* Copyright 2016 TECHNISCHE UNIVERSITAT BERLIN\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n**/\n // Log System\n\n\nvar RuntimeUA_log = loglevel[\"getLogger\"]('RuntimeUA'); //Main dependecies\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n //import GraphConnector from '../graphconnector/GraphConnector';\n\n\n\n\n\n\n\n\n/**\n * Runtime User Agent Interface will process all the dependecies of the core runtime;\n * @author Vitor Silva [vitor-t-silva@telecom.pt]\n * @version 0.4.0\n *\n * @property {runtimeFactory} runtimeFactory - Specific implementation for all environments;\n * @property {RuntimeCatalogue} runtimeCatalogue - Catalogue of components can be installed;\n * @property {runtimeURL} runtimeURL - This identify the core runtime, should be unique;\n * @property {IdentityModule} identityModule - Identity Module;\n * @property {PEP} policyEngine - Policy Engine Module;\n * @property {Registry} registry - Registry Module;\n * @property {MessageBus} messageBus - Message Bus is used like a router to redirect the messages from one component to other(s)\n * @property {GraphConnector} graphConnector - Graph Connector handling GUID and contacts\n * @property {CoreDiscovery} coreDiscovery - Discovery for discovery hyperties/dataObjects\n */\n\nvar RuntimeUA_RuntimeUA =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Create a new instance of Runtime User Agent\n   * @param {descriptor} runtimeDescriptor - pass all the hyperty runtime descriptor\n   * @param {runtimeFactory} runtimeFactory - Specific implementation for the environment where the core runtime will run;\n   * @param {domain} domainURL - specify the domain base for the runtime;\n   */\n  function RuntimeUA(runtimeDescriptor, runtimeFactory, domain) {\n    RuntimeUA_classCallCheck(this, RuntimeUA);\n\n    if (!runtimeDescriptor) throw new Error('The runtime descriptor is a needed parameter');\n    if (!runtimeFactory) throw new Error('The sandbox factory is a needed parameter');\n    if (!domain) throw new Error('You need the domain of runtime'); // Configuration object with information related with servers\n\n    this.runtimeConfiguration = Object.assign({\n      domain: domain\n    }, runtimeConfiguration_runtimeConfiguration);\n    this.runtimeFactory = runtimeFactory;\n    this.log = RuntimeUA_log;\n    this.logLevels = loglevel_default.a;\n\n    if (runtimeDescriptor.p2pHandlerStub && typeof runtimeDescriptor.p2pHandlerStub === 'string' && runtimeDescriptor.p2pHandlerStub.includes('://')) {\n      this.p2p = true;\n    } else {\n      this.p2p = false;\n    }\n\n    runtimeUtils.runtimeDescriptor = runtimeDescriptor;\n    this.runtimeUtils = runtimeUtils;\n    this.storages = {};\n    /*    if (typeof runtimeFactory.createRuntimeCatalogue === 'function') {\n          this.runtimeCatalogue = runtimeFactory.createRuntimeCatalogue();\n        } else {\n          throw new Error('Check your Runtime Factory because it needs the Runtime Catalogue implementation');\n        }*/\n\n    this.runtimeCatalogue = new runtime_catalogue_RuntimeCatalogue(runtimeFactory);\n    /*    if (typeof runtimeFactory.persistenceManager === 'function') {\n          this.persistenceManager = runtimeFactory.persistenceManager();\n        } else {\n          throw new Error('Check your Runtime Factory because it needs the Persistence Manager implementation');\n        }*/\n\n    if (typeof runtimeFactory.storageManager === 'function') {\n      this.storages = Storage_storage(runtimeFactory, this);\n    } else {\n      throw new Error('Check your Runtime Factory because it needs the Storage Manager implementation');\n    }\n\n    if (typeof runtimeFactory.runtimeCapabilities === 'function') {\n      this.runtimeCapabilities = runtimeFactory.runtimeCapabilities(this.storages.capabilities);\n    } else {\n      RuntimeUA_log.info('Check your RuntimeFactory because it needs the Runtime Capabilities implementation');\n    }\n  }\n  /**\n   * Intialize the installation of runtime\n   *\n   * @access public\n   * @return {Promise<Boolean, Error>} this is Promise and if the installation process happened without any problems returns true otherwise the error.\n   *\n   * @memberOf RuntimeUA\n   */\n\n\n  RuntimeUA_createClass(RuntimeUA, [{\n    key: \"init\",\n    value: function init(guid) {\n      var _this2 = this;\n\n      return new Promise(function (resolve, reject) {\n        _this2.domain = _this2.runtimeConfiguration.domain;\n        RuntimeUA_log.info('[RuntimeUA - init] Starting ');\n\n        try {\n          var getCapabilities = _this2.runtimeCapabilities.getRuntimeCapabilities();\n\n          var getRuntimeURL = _this2.storages.runtime.get('runtime:URL');\n\n          var getStoredDataObjects = _this2.storages.syncherManager.get('syncherManager:ObjectURLs');\n\n          var getHypertyStorageObjects = _this2.storages.hypertyResources.get();\n\n          var getP2PHandlerURL = _this2.storages.runtime.get('p2pHandler:URL'); //        let getRemotes = this.storages.syncherManager.get('remotes');\n\n\n          Promise.all([getRuntimeURL, getCapabilities, getStoredDataObjects, getHypertyStorageObjects, getP2PHandlerURL]).then(function (results) {\n            _this2.runtimeURL = results[0] ? results[0].runtimeURL : results[0];\n\n            if (!_this2.runtimeURL) {\n              _this2.runtimeURL = 'runtime://' + _this2.domain + '/' + generateGUID();\n\n              _this2.storages.runtime.set('runtime:URL', 1, {\n                runtimeURL: _this2.runtimeURL\n              });\n            }\n\n            _this2.capabilities = results[1];\n            Object.assign(runtimeUtils.runtimeCapabilities.constraints, results[1]);\n            _this2._dataObjectsStorage = new store_objects_DataObjectsStorage(_this2.storages.syncherManager, results[2] || {}, _this2.runtimeFactory, _this2.runtimeURL);\n            _this2._hypertyResources = results[3] || {};\n            _this2.p2pHandlerURL = results[4] ? results[4].p2pHandlerURL : results[4];\n\n            if (!_this2.p2pHandlerURL) {\n              _this2.p2pHandlerURL = _this2.runtimeURL + '/p2phandler/' + generateGUID();\n              RuntimeUA_log.info('[RuntimeUA - init] P2PHandlerURL: ', _this2.p2pHandlerURL);\n\n              _this2.storages.runtime.set('p2pHandler:URL', 1, {\n                p2pHandlerURL: _this2.p2pHandlerURL\n              });\n            }\n            /*          log.info('[RuntimeUA - init] dataObjectsStorage remote load starting');\n                      this._dataObjectsStorage.loadRemote().then(()=> {\n                        log.info('[RuntimeUA - init] dataObjectsStorage remote load concluded');*/\n\n\n            return _this2._loadComponents(guid); //          });\n          }).then(function (status) {\n            _this2._setNetworkStatusListeners();\n\n            _this2._hypertyResourcesStorage = new hyperty_resource_HypertyResourcesStorage(_this2.runtimeURL, _this2.messageBus, _this2.storages.hypertyResources, _this2._hypertyResources);\n\n            if (_this2.p2p) {\n              RuntimeUA_log.info('[RuntimeUA - init] load p2pHandler: ', status);\n              return _this2._loadP2PHandler();\n            } else {\n              RuntimeUA_log.info('[RuntimeUA - init] P2P not supported');\n              return 'P2P Not Supported';\n            }\n          }).then(function (result) {\n            RuntimeUA_log.info('[runtime ua - init] - status: ', result);\n            resolve(true);\n          }, function (reason) {\n            RuntimeUA_log.error('ERROR: ', reason);\n            resolve(true);\n          });\n        } catch (e) {\n          reject(e);\n        }\n      });\n    }\n  }, {\n    key: \"_setNetworkStatusListeners\",\n    value: function _setNetworkStatusListeners() {\n      this.runtimeFactory.listenOnline(this._updateRuntimeStatus('online'));\n      this.runtimeFactory.listenOffline(this._updateRuntimeStatus('offline'));\n    }\n  }, {\n    key: \"_updateRuntimeStatus\",\n    value: function _updateRuntimeStatus(event) {\n      var _this = this;\n\n      _this.messageBus.postMessage({\n        from: this.runtimeURL,\n        to: this.runtimeURL + '/status',\n        type: 'update',\n        body: event\n      });\n    }\n  }, {\n    key: \"_loadP2PHandler\",\n    value: function _loadP2PHandler() {\n      var _this3 = this;\n\n      return new Promise(function (resolve) {\n        var runtimeDescriptor = runtimeUtils.runtimeDescriptor;\n        var p2pStubHandler = runtimeDescriptor.p2pHandlerStub;\n        var p2pConfig = {\n          isHandlerStub: true,\n          runtimeURL: _this3.runtimeURL\n        };\n        RuntimeUA_log.log('[RuntimeUA loadP2PHandler] P2PStubHandler: ', p2pStubHandler);\n\n        _this3.loader.loadStub(p2pStubHandler, p2pConfig).then(function (result) {\n          var runtimeUAURL = _this3.runtimeURL + '/ua';\n          var msg = {\n            type: 'subscribe',\n            from: runtimeUAURL,\n            to: 'domain://msg-node.' + _this3.domain + '/sm',\n            body: {\n              subscribe: [result.url],\n              source: _this3.runtimeURL\n            }\n          };\n\n          _this3.messageBus.addListener(runtimeUAURL, function (msg) {\n            RuntimeUA_log.log('[runtime ua - listener] - receive msg: ', msg);\n          });\n\n          _this3.messageBus.postMessage(msg, function (reply) {\n            RuntimeUA_log.log('[runtime ua - postMessage] - reply: ', reply);\n          });\n\n          RuntimeUA_log.info('[runtime ua - p2p installation] - success: ', result);\n          resolve(true);\n        })[\"catch\"](function (reason) {\n          RuntimeUA_log.info('[runtime ua - p2p installation] - fail: ', reason);\n          resolve(false);\n        });\n      });\n    }\n    /**\n     *\n     * @access private\n     * @return {Promise<Boolean, Error>} this is Promise and returns true if all components are loaded with success or an error if someone fails.\n     *\n     * @memberOf RuntimeUA\n     */\n\n  }, {\n    key: \"_loadComponents\",\n    value: function _loadComponents(guid) {\n      var _this4 = this;\n\n      return new Promise(function (resolve, reject) {\n        try {\n          // Prepare the on instance to handle with the fallbacks and runtimeCatalogue;\n          _this4.descriptorInstance = new runtime_Descriptors(_this4.runtimeURL, _this4.runtimeCatalogue, _this4.runtimeConfiguration); // Prepare the loader to load the hyperties, protostubs and idpproxy;\n\n          _this4.loader = new runtime_Loader(_this4.runtimeURL, _this4.runtimeConfiguration, _this4.descriptorInstance); // Instantiate the identity Module\n\n          _this4.identityModule = new identity_IdentityModule(_this4.runtimeURL, _this4.runtimeCapabilities, _this4.storages.identity, _this4._dataObjectsStorage, cryptoManager_CryptoManager, _this4.runtimeCatalogue); // Use the sandbox factory to create an AppSandbox;\n          // In the future can be decided by policyEngine if we need\n          // create a AppSandbox or not;\n\n          var appSandbox = _this4.runtimeFactory.createAppSandbox(); // Instantiate the Registry Module\n\n\n          _this4.registry = new registry_Registry(_this4.runtimeURL, appSandbox, _this4.identityModule, _this4.runtimeCatalogue, _this4.runtimeCapabilities, _this4.storages.registry, _this4.p2pHandlerURL); // Set the loader to load Hyperties, Stubs and IdpProxies\n\n          _this4.registry.loader = _this4.loader; // Instantiate the Message Bus\n\n          _this4.messageBus = new bus_MessageBus(_this4.registry); // Instanciate the SubscriptionManager;\n\n          _this4.subscriptionManager = new subscriptionManager_SubscriptionManager(_this4.runtimeURL, _this4.messageBus, _this4.storages.subscriptions); // Prepare the address allocation instance;\n\n          _this4.addressAllocation = new allocation_AddressAllocation(_this4.runtimeURL, _this4.messageBus, _this4.registry, _this4.subscriptionManager); // Instantiate the Policy Engine\n\n          _this4.policyEngine = new policy_PEP(new context_RuntimeCoreCtx(_this4.runtimeURL, _this4.identityModule, _this4.registry, _this4.storages.policy, _this4.runtimeCapabilities)); // Instantiate Discovery\n\n          _this4.coreDiscovery = new discovery_CoreDiscovery(_this4.runtimeURL, _this4.messageBus, _this4.graphConnector, _this4.runtimeFactory, _this4.registry); // Instantiate the identityHandler\n\n          _this4.identityHandler = new identity_IdentityHandler(_this4.identityModule); // initialise the CryptoManager\n\n          cryptoManager_CryptoManager.init(_this4.runtimeURL, _this4.runtimeCapabilities, _this4.storages.cryptoManager, _this4._dataObjectsStorage, _this4.registry, _this4.coreDiscovery, _this4.identityModule, _this4.runtimeFactory); // Instantiate the Graph Connector\n          //        this.graphConnector = process.env.MODE !== 'light' ? new GraphConnector(this.runtimeURL, this.messageBus, this.storageManager) : null;\n\n          _this4.handlers = new runtime_MsgBusHandlers(_this4.policyEngine, _this4.identityHandler, cryptoManager_CryptoManager); // (un)comment bellow to not encrypt messages\n\n          _this4.messageBus.pipelineOut.handlers = [_this4.handlers.idmHandler, _this4.handlers.pepOutHandler];\n          _this4.messageBus.pipelineIn.handlers = [_this4.handlers.pepInHandler]; // (un)comment bellow to encrypt messages\n          //      this.messageBus.pipelineOut.handlers = [this.handlers.idmHandler, this.handlers.pepOutHandler, this.handlers.encryptHandler];\n          //      this.messageBus.pipelineIn.handlers = [this.handlers.decryptHandler, this.handlers.pepInHandler];\n          // Add to App Sandbox the listener;\n\n          appSandbox.addListener('*', function (msg) {\n            _this4.messageBus.postMessage(msg);\n          });\n          cryptoManager_CryptoManager.messageBus = _this4.messageBus; // Register messageBus on Registry\n\n          _this4.registry.messageBus = _this4.messageBus; // Policy Engine\n\n          _this4.policyEngine.messageBus = _this4.messageBus; // Register messageBus on IDM\n\n          _this4.identityModule.messageBus = _this4.messageBus; // Register registry on IdentityModule\n\n          _this4.identityModule.registry = _this4.registry; // Register coreDiscovery on IdentityModule\n\n          _this4.identityModule.coreDiscovery = _this4.coreDiscovery; // Use sandbox factory to use specific methods\n          // and set the message bus to the factory\n\n          _this4.runtimeFactory.messageBus = _this4.messageBus; // Instanciate the SyncherManager;\n\n          _this4.syncherManager = new syncher_SyncherManager(_this4.runtimeURL, _this4.messageBus, _this4.registry, _this4.runtimeCatalogue, _this4.storages.syncherManager, null, _this4._dataObjectsStorage, _this4.identityModule); // Set into loader the needed components;\n\n          _this4.loader.runtimeURL = _this4.runtimeURL;\n          _this4.loader.messageBus = _this4.messageBus;\n          _this4.loader.registry = _this4.registry;\n          _this4.loader.runtimeCatalogue = _this4.runtimeCatalogue;\n          _this4.loader.runtimeFactory = _this4.runtimeFactory; //Instantiate Discovery Lib for notification testing\n          // this.discovery = new Discovery(\"hyperty://localhost/test\", this.runtimeURL, this.messageBus);\n          // this.loadStub(\"localhost\");\n          // setTimeout(() => {\n          //   this.discovery.discoverHypertiesDO(\"user://google.com/openidtest20@gmail.com\")\n          //   .then(hyperties => {\n          //     hyperties.forEach(hyperty =>{\n          //       hyperty.onLive(() => log.log(`Notification from ${hyperty.data.hypertyID} changed to live`));\n          //       hyperty.onDisconnected(() => log.log(`Notification from ${hyperty.data.hypertyID} changed to disconnected`));\n          //     });\n          //   });\n          // }, 2000);\n          // this.subscriptionManager.init().then(()=>{\n          //   resolve(true);\n          // });\n\n          var prepareComponents = [];\n          prepareComponents.push(_this4.subscriptionManager.init());\n          prepareComponents.push(_this4.identityModule.init(guid));\n          prepareComponents.push(cryptoManager_CryptoManager.loadSessionKeys());\n          prepareComponents.push(_this4.registry.loadRegistry());\n          prepareComponents.push(_this4._dataObjectsStorage.loadRemote());\n          Promise.all(prepareComponents).then(function (result) {\n            if (result.length === 5) {\n              resolve(true);\n            } else {\n              reject('[RuntimeUA._loadComponents] Error ] ', result);\n            }\n          })[\"catch\"](function (reason) {\n            throw Error(reason);\n          });\n        } catch (e) {\n          reject(e);\n        }\n      });\n    }\n    /**\n     * Deploy Hyperty from Catalogue URL\n     *\n     * @see https://github.com/reTHINK-project/specs/tree/master/datamodel/core/address\n     *\n     * @param {URL.HypertyCatalogueURL} hypertyCatalogueURL - The Catalogue URL used to identify descriptors in the Catalogue.\n     * @param {boolean|URL.HypertyURL} [reuseURL=false] reuseURL - reuseURL is used to reuse the hypertyURL previously registred, by default the reuse is disabled;\n     * @param {URL} appURL - the app url address; // TODO: improve this description;\n     * @returns {Promise<Boolean, Error>} this is Promise and returns true if all components are loaded with success or an error if someone fails.\n     *\n     * @memberOf RuntimeUA\n     */\n\n  }, {\n    key: \"loadHyperty\",\n    value: function loadHyperty(hypertyCatalogueURL) {\n      var reuseURL = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var appURL = arguments.length > 2 ? arguments[2] : undefined;\n      if (!hypertyCatalogueURL) throw new Error('Hyperty descriptor url parameter is needed');\n      return this.loader.loadHyperty(hypertyCatalogueURL, reuseURL, appURL);\n    }\n    /**\n    * Deploy Stub from Catalogue URL or domain url\n    * @param  {URL.URL}     domain          domain\n    */\n\n  }, {\n    key: \"loadStub\",\n    value: function loadStub(protocolstubCatalogueURL) {\n      if (!protocolstubCatalogueURL) throw new Error('ProtoStub descriptor url parameter is needed');\n      return this.loader.loadStub(protocolstubCatalogueURL);\n    }\n    /**\n    * Deploy idpProxy from Catalogue URL or domain url\n    * @param  {URL.URL}     domain          domain\n    */\n\n  }, {\n    key: \"loadIdpProxy\",\n    value: function loadIdpProxy(ipdProxyCatalogueURL) {\n      RuntimeUA_log.log('ipdProxyCatalogueURL', ipdProxyCatalogueURL);\n      if (!ipdProxyCatalogueURL) throw new Error('The IDP Proxy URL is a needed parameter, could be a DOMAIN or a URL');\n      return this.loader.loadIdpProxy(ipdProxyCatalogueURL);\n    }\n    /**\n     * Used to close all the runtime; Unregister all hyperties;\n     * @return {Promise<Boolean>} result of the close method, with true or false to the operation success;\n     */\n\n  }, {\n    key: \"close\",\n    value: function close(logOut) {\n      console.log('Runtime core logout: ', logOut);\n\n      var _this = this;\n\n      if (logOut === true) {\n        this.identityHandler.reset();\n      }\n\n      RuntimeUA_log.info('Unregister all hyperties');\n      return new Promise(function (resolve, reject) {\n        _this.registry.unregisterAllHyperties().then(function (result) {\n          RuntimeUA_log.info('All the hyperties are unregisted with Success:', result);\n          resolve(true);\n        })[\"catch\"](function (reason) {\n          RuntimeUA_log.error('Failed to unregister the hyperties', reason);\n          reject(false);\n        });\n      });\n    }\n    /**\n     * Used to reset the runtime by deleting all data from the storage manager;\n     * @return {Promise<Boolean>} result of the reset method, with true or false to the operation success;\n     */\n\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      var _this5 = this;\n\n      console.log('RuntimeUA.Runtime core reset: ');\n      var reseting = [];\n\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        //TODO: delegate db reset operation to each component\n        //    this.identityManager.reset();\n        _this5._dataObjectsStorage.deleteRemotes().then(function () {\n          return resolve();\n        }).then(function () {\n          _this5.storages.identity.get(false, false, 'identities').then(function (identities) {\n            var identitiesKeys = Object.keys(identities);\n            identitiesKeys.forEach(function (key) {\n              reseting.push(_this5.storages.identity[\"delete\"](key, false, 'identities'));\n            });\n            reseting.push(_this5.storages.capabilities[\"delete\"]('capabilities'));\n            reseting.push(_this5.storages.cryptoManager[\"delete\"]('userAsymmetricKey'));\n            reseting.push(_this5.storages.hypertyResources[\"delete\"]('hypertyResources'));\n            reseting.push(_this5.storages.identity[\"delete\"]('accessTokens'));\n            reseting.push(_this5.storages.registry[\"delete\"]('registry:DataObjectURLs'));\n            reseting.push(_this5.storages.registry[\"delete\"]('registry:HypertyURLs'));\n            reseting.push(_this5.storages.runtime[\"delete\"]('p2pHandler:URL'));\n            reseting.push(_this5.storages.runtime[\"delete\"]('runtime:URL')); //    reseting.push(this.storages.runtimeCatalogue.delete('runtimeCatalogue'));\n\n            reseting.push(_this5.storages.subscriptions[\"delete\"]('subscriptions'));\n            reseting.push(_this5.storages.syncherManager[\"delete\"]('syncherManager:ObjectURLs'));\n            reseting.push(_this5.storages.syncherManager[\"delete\"]('remotes'));\n            Promise.all(reseting).then(function (result) {\n              RuntimeUA_log.info('[RuntimeUA.reset] reset with Success:', result);\n              return resolve(true);\n            })[\"catch\"](function (reason) {\n              RuntimeUA_log.error('Failed to reset all DBs', reason);\n              resolve(false);\n            });\n          });\n        });\n      });\n    }\n  }]);\n\n  return RuntimeUA;\n}();\n\n/* harmony default export */ var runtime_RuntimeUA = __webpack_exports__[\"default\"] = (RuntimeUA_RuntimeUA);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///313\n")}])});